import { ViewContainerRef } from '@angular/core';
import { ComplexBase, ArrayBase } from '@syncfusion/ej2-angular-base';
/**
 * Level Directive
 * ```html
 * <e-levels>
 * <e-level></e-level>
 * </e-levels>
 * ```
 */
export declare class LevelDirective extends ComplexBase<LevelDirective> {
    private viewContainerRef;
    /**
     * Items rendering with random colors.
     * @default false
     */
    autoFill: any;
    /**
     * Specifies the border
     */
    border: any;
    /**
     * Specifies the colorMapping
     */
    colorMapping: any;
    /**
     * Specifies the background of level.
     * @default null
     */
    fill: any;
    /**
     * Specifies the padding.
     * @default 0
     */
    groupGap: any;
    /**
     * Specifies the padding.
     * @default 10
     */
    groupPadding: any;
    /**
     * Specifies the field name from the dataSource.
     * @default null
     */
    groupPath: any;
    /**
     * Customize the text alignment
     * @default 'Near'
     */
    headerAlignment: any;
    /**
     * Specifies the header format.
     * @default null
     */
    headerFormat: any;
    /**
     * To specifies the height of header.
     * @default 20
     */
    headerHeight: any;
    /**
     * Customize the header style.
     */
    headerStyle: any;
    /**
     * Specifies the opacity for color.
     * @default 1
     */
    opacity: any;
    /**
     * To Show or hide the header in level.
     * @default true
     */
    showHeader: any;
    /**
     * Specifies the label position in level.
     * @default 'TopLeft'
     */
    templatePosition: any;
    /**
     * Specifies the template for header rendering.
     * @default null
     */
    headerTemplate: any;
    constructor(viewContainerRef: ViewContainerRef);
}
/**
 * Level Array Directive
 * @private
 */
export declare class LevelsDirective extends ArrayBase<LevelsDirective> {
    constructor();
}
