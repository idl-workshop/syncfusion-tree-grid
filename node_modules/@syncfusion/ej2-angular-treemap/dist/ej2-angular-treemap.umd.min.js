/*!
*  filename: ej2-angular-treemap.umd.min.js
*  version : 17.1.48
*  Copyright Syncfusion Inc. 2001 - 2019. All rights reserved.
*  Use of this code is subject to the terms of our license.
*  A copy of the current license can be obtained at any time by e-mailing
*  licensing@syncfusion.com. Any infringement will be prosecuted under
*  applicable laws. 
*/
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@syncfusion/ej2-angular-base"),require("@syncfusion/ej2-treemap"),require("@angular/common")):"function"==typeof define&&define.amd?define(["exports","@angular/core","@syncfusion/ej2-angular-base","@syncfusion/ej2-treemap","@angular/common"],t):t(e["ej2-angular-treemap"]={},e.ng.core,e.ej2.angular.base,e.ej2.treemap,e.ng.common)}(this,function(e,t,o,r,n){"use strict";var i=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)t.hasOwnProperty(o)&&(e[o]=t[o])};return function(t,o){function r(){this.constructor=t}e(t,o),t.prototype=null===o?Object.create(o):(r.prototype=o.prototype,new r)}}(),a=this&&this.__decorate||function(e,t,o,r){var n,i=arguments.length,a=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,o):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,o,r);else for(var l=e.length-1;l>=0;l--)(n=e[l])&&(a=(i<3?n(a):i>3?n(t,o,a):n(t,o))||a);return i>3&&a&&Object.defineProperty(t,o,a),a},l=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},c=[],p=function(e){function t(t){var r=e.call(this)||this;return r.viewContainerRef=t,o.setValue("currentInstance",r,r.viewContainerRef),r.registerEvents(c),r}return i(t,e),t}(o.ComplexBase);p.decorators=[{type:t.Directive,args:[{selector:"e-levels>e-level",inputs:["autoFill","border","colorMapping","fill","groupGap","groupPadding","groupPath","headerAlignment","headerFormat","headerHeight","headerStyle","headerTemplate","opacity","showHeader","templatePosition"],outputs:c,queries:{}}]}],p.ctorParameters=function(){return[{type:t.ViewContainerRef}]},p.propDecorators={headerTemplate:[{type:t.ContentChild,args:["headerTemplate"]}]},a([o.Template(),l("design:type",Object)],p.prototype,"headerTemplate",void 0);var s=function(e){function t(){return e.call(this,"levels")||this}return i(t,e),t}(o.ArrayBase);s.decorators=[{type:t.Directive,args:[{selector:"ej-treemap>e-levels",queries:{children:new t.ContentChildren(p)}}]}],s.ctorParameters=function(){return[]};var d=this&&this.__decorate||function(e,t,o,r){var n,i=arguments.length,a=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,o):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,o,r);else for(var l=e.length-1;l>=0;l--)(n=e[l])&&(a=(i<3?n(a):i>3?n(t,o,a):n(t,o))||a);return i>3&&a&&Object.defineProperty(t,o,a),a},g=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},u=["background","border","breadcrumbConnector","colorValuePath","dataSource","description","drillDownView","enableBreadcrumb","enableDrillDown","enablePersistence","enableRtl","equalColorValuePath","format","height","highlightSettings","initialDrillDown","layoutType","leafItemSettings","legendSettings","levels","locale","margin","palette","query","rangeColorValuePath","renderDirection","selectionSettings","tabIndex","theme","titleSettings","tooltipSettings","useGroupingSeparator","weightValuePath","width"],m=["beforePrint","click","doubleClick","drillEnd","drillStart","itemClick","itemHighlight","itemMove","itemRendering","itemSelected","legendItemRendering","legendRendering","load","loaded","mouseMove","resize","rightClick","tooltipRendering"],h=[""];e.TreeMapComponent=function(e){function t(t,r,n,i){var a=e.call(this)||this;a.ngEle=t,a.srenderer=r,a.viewContainerRef=n,a.injector=i,a.tags=["levels"],a.element=a.ngEle.nativeElement,a.injectedModules=a.injectedModules||[];try{var l=a.injector.get("TreeMapTreeMapTooltip");-1===a.injectedModules.indexOf(l)&&a.injectedModules.push(l)}catch(c){}try{l=a.injector.get("TreeMapTreeMapLegend");-1===a.injectedModules.indexOf(l)&&a.injectedModules.push(l)}catch(p){}try{l=a.injector.get("TreeMapTreeMapHighlight");-1===a.injectedModules.indexOf(l)&&a.injectedModules.push(l)}catch(s){}try{l=a.injector.get("TreeMapTreeMapSelection");-1===a.injectedModules.indexOf(l)&&a.injectedModules.push(l)}catch(d){}return a.registerEvents(m),a.addTwoWay.call(a,h),o.setValue("currentInstance",a,a.viewContainerRef),a}return i(t,e),t.prototype.ngOnInit=function(){},t.prototype.ngAfterViewInit=function(){},t.prototype.ngOnDestroy=function(){},t.prototype.ngAfterContentChecked=function(){},t}(r.TreeMap),e.TreeMapComponent.decorators=[{type:t.Component,args:[{selector:"ejs-treemap",inputs:u,outputs:m,template:"",changeDetection:t.ChangeDetectionStrategy.OnPush,queries:{childLevels:new t.ContentChild(s)}}]}],e.TreeMapComponent.ctorParameters=function(){return[{type:t.ElementRef},{type:t.Renderer2},{type:t.ViewContainerRef},{type:t.Injector}]},e.TreeMapComponent.propDecorators={tooltipSettings_template:[{type:t.ContentChild,args:["tooltipSettingsTemplate"]}],leafItemSettings_labelTemplate:[{type:t.ContentChild,args:["leafItemSettingsLabelTemplate"]}]},d([o.Template(),g("design:type",Object)],e.TreeMapComponent.prototype,"tooltipSettings_template",void 0),d([o.Template(),g("design:type",Object)],e.TreeMapComponent.prototype,"leafItemSettings_labelTemplate",void 0),e.TreeMapComponent=d([o.ComponentMixins([o.ComponentBase]),g("design:paramtypes",[t.ElementRef,t.Renderer2,t.ViewContainerRef,t.Injector])],e.TreeMapComponent);var f=function(){return function(){}}();f.decorators=[{type:t.NgModule,args:[{imports:[n.CommonModule],declarations:[e.TreeMapComponent,p,s],exports:[e.TreeMapComponent,p,s]}]}],f.ctorParameters=function(){return[]};var T={provide:"TreeMapTreeMapTooltip",useValue:r.TreeMapTooltip},M={provide:"TreeMapTreeMapLegend",useValue:r.TreeMapLegend},C={provide:"TreeMapTreeMapHighlight",useValue:r.TreeMapHighlight},y={provide:"TreeMapTreeMapSelection",useValue:r.TreeMapSelection},S=function(){return function(){}}();S.decorators=[{type:t.NgModule,args:[{imports:[n.CommonModule,f],exports:[f],providers:[T,M,C,y]}]}],S.ctorParameters=function(){return[]},e.LevelDirective=p,e.LevelsDirective=s,e.TreeMapModule=f,e.TreeMapAllModule=S,e.TreeMapTooltipService=T,e.TreeMapLegendService=M,e.TreeMapHighlightService=C,e.TreeMapSelectionService=y,e.ɵa=u,e.ɵb=m,e.TreeMap=r.TreeMap,e.Border=r.Border,e.Margin=r.Margin,e.Font=r.Font,e.CommonTitleSettings=r.CommonTitleSettings,e.SubTitleSettings=r.SubTitleSettings,e.TitleSettings=r.TitleSettings,e.ColorMapping=r.ColorMapping,e.LegendSettings=r.LegendSettings,e.InitialDrillSettings=r.InitialDrillSettings,e.LeafItemSettings=r.LeafItemSettings,e.TooltipSettings=r.TooltipSettings,e.SelectionSettings=r.SelectionSettings,e.HighlightSettings=r.HighlightSettings,e.LevelSettings=r.LevelSettings,e.load=r.load,e.loaded=r.loaded,e.beforePrint=r.beforePrint,e.itemRendering=r.itemRendering,e.drillStart=r.drillStart,e.drillEnd=r.drillEnd,e.itemSelected=r.itemSelected,e.itemHighlight=r.itemHighlight,e.tooltipRendering=r.tooltipRendering,e.itemClick=r.itemClick,e.itemMove=r.itemMove,e.click=r.click,e.doubleClick=r.doubleClick,e.rightClick=r.rightClick,e.mouseMove=r.mouseMove,e.legendItemRendering=r.legendItemRendering,e.legendRendering=r.legendRendering,e.resize=r.resize,e.defaultFont=r.defaultFont,e.Theme=r.Theme,e.getThemeStyle=r.getThemeStyle,e.Size=r.Size,e.stringToNumber=r.stringToNumber,e.Rect=r.Rect,e.RectOption=r.RectOption,e.PathOption=r.PathOption,e.measureText=r.measureText,e.TextOption=r.TextOption,e.textTrim=r.textTrim,e.Location=r.Location,e.findPosition=r.findPosition,e.createTextStyle=r.createTextStyle,e.renderTextElement=r.renderTextElement,e.getElement=r.getElement,e.itemsToOrder=r.itemsToOrder,e.isContainsData=r.isContainsData,e.findChildren=r.findChildren,e.findHightLightItems=r.findHightLightItems,e.getTemplateFunction=r.getTemplateFunction,e.convertElement=r.convertElement,e.findLabelLocation=r.findLabelLocation,e.measureElement=r.measureElement,e.getArea=r.getArea,e.getShortestEdge=r.getShortestEdge,e.convertToContainer=r.convertToContainer,e.convertToRect=r.convertToRect,e.getMousePosition=r.getMousePosition,e.colorMap=r.colorMap,e.deSaturationColor=r.deSaturationColor,e.colorCollections=r.colorCollections,e.rgbToHex=r.rgbToHex,e.getColorByValue=r.getColorByValue,e.getGradientColor=r.getGradientColor,e.getPercentageColor=r.getPercentageColor,e.getPercentage=r.getPercentage,e.wordWrap=r.wordWrap,e.textWrap=r.textWrap,e.hide=r.hide,e.orderByArea=r.orderByArea,e.removeClassNames=r.removeClassNames,e.applyOptions=r.applyOptions,e.textFormatter=r.textFormatter,e.formatValue=r.formatValue,e.ColorValue=r.ColorValue,e.convertToHexCode=r.convertToHexCode,e.componentToHex=r.componentToHex,e.convertHexToColor=r.convertHexToColor,e.colorNameToHex=r.colorNameToHex,e.drawSymbol=r.drawSymbol,e.renderLegendShape=r.renderLegendShape,e.isParentItem=r.isParentItem,e.TreeMapAjax=r.TreeMapAjax,e.removeShape=r.removeShape,e.removeLegend=r.removeLegend,e.setColor=r.setColor,e.removeSelectionWithHighlight=r.removeSelectionWithHighlight,e.getLegendIndex=r.getLegendIndex,e.pushCollection=r.pushCollection,e.ExportUtils=r.ExportUtils,e.TreeMapLegend=r.TreeMapLegend,e.LayoutPanel=r.LayoutPanel,e.TreeMapHighlight=r.TreeMapHighlight,e.TreeMapSelection=r.TreeMapSelection,e.TreeMapTooltip=r.TreeMapTooltip,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ej2-angular-treemap.umd.min.js.map
