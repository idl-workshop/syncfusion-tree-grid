{"version":3,"file":"ej2-layouts.min.js","sources":["../../src/splitter/splitter.js","../../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed() : this.collapsedOnchange(index);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.allPanes[index].style.flexBasis = newValSize;\n                                            this.allPanes[index].classList.add(STATIC_PANE);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        this.setRTL(this.enableRtl);\n        this.isCollapsed();\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (className) {\n        if (className) {\n            addClass([this.element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        if (!isNullOrUndefined(index)) {\n            this.updateIsCollapsed(index, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n        }\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && !this.paneSettings[index].collapsed) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var seaprator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + seaprator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            this.allBars[index].removeAttribute('aria-orientation');\n            this.allBars[index].setAttribute('aria-orientation', orientation.toLowerCase());\n            this.allBars[index].classList.remove(isVertical ? SPLIT_H_BAR : SPLIT_V_BAR);\n            this.allBars[index].classList.add(isVertical ? SPLIT_V_BAR : SPLIT_H_BAR);\n        }\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        var elementIndex = (order - 1) / (2);\n        return currentBar.parentElement.getElementsByClassName('e-pane')[elementIndex];\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        var elementIndex = ((order - 1) / 2) + 1;\n        return currentBar.parentElement.getElementsByClassName('e-pane')[elementIndex];\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        var size;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                this.wireClickEvents();\n                if (this.isResizable()) {\n                    EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                    var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                    EventHandler.add(separator, eventName, this.onMouseDown, this);\n                    separator.classList.add(RESIZABLE_BAR);\n                    this.updateResizablePanes(i);\n                }\n                else {\n                    addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                }\n            }\n            else {\n                this.updateResizablePanes(i);\n                addClass([separator], LAST_BAR);\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        // tslint:disable-next-line\n        var sTout;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n        });\n        separator.addEventListener('mouseout', function () {\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return ((target.classList.contains(RESIZE_BAR) || target.classList.contains(SPLIT_BAR)) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n            if (!beforeExpandArgs.cancel) {\n                _this.previousPane.style.flexGrow = '1';\n                _this.nextPane.style.flexGrow = '0';\n                if (!_this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                    removeClass([_this.nextPane], EXPAND_PANE);\n                    removeClass([_this.previousPane], collapseClass);\n                    addClass([_this.previousPane], EXPAND_PANE);\n                    addClass([_this.nextPane], collapseClass);\n                }\n                else {\n                    (_this.currentBarIndex !== 0) ?\n                        _this.previousPane.previousElementSibling.style.flexGrow = '' : _this.nextPane.style.flexGrow = '';\n                    removeClass([_this.previousPane], collapseClass);\n                    removeClass([_this.nextPane], EXPAND_PANE);\n                }\n                _this.updateIconsOnExpand(e);\n                _this.previousPane.setAttribute('aria-expanded', 'true');\n                _this.nextPane.setAttribute('aria-expanded', 'false');\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            }\n        });\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.splitInstance.prevPaneCollapsed && this.splitInstance.nextPaneExpanded) {\n            addClass([e.target], HIDE_ICON);\n            this.showCurrentBarIcon();\n            this.resizableModel(this.currentBarIndex, false);\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n                // first pane collapsible false\n                this.showTargetBarIcon(this.prevBar, this.leftArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            this.resizableModel(this.currentBarIndex, true);\n            if (!this.splitInstance.nextPaneNextEle.classList.contains('e-collapsed')) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            this.showCurrentBarIcon();\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                if (!this.paneSettings[this.currentBarIndex].collapsible && this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        this.previousPane.style.flexGrow = '0';\n        this.nextPane.style.flexGrow = '1';\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n            if (!beforeCollapseArgs.cancel) {\n                if (_this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                    removeClass([_this.previousPane], EXPAND_PANE);\n                    removeClass([_this.nextPane], collapseClass);\n                }\n                else {\n                    removeClass([_this.previousPane], EXPAND_PANE);\n                    removeClass([_this.nextPane], collapseClass);\n                    addClass([_this.nextPane], EXPAND_PANE);\n                    addClass([_this.previousPane], collapseClass);\n                }\n                _this.updateIconsOnCollapse(e);\n                _this.previousPane.setAttribute('aria-expanded', 'false');\n                _this.nextPane.setAttribute('aria-expanded', 'true');\n                var collapseEventArgs = _this.afterAction(e);\n                _this.trigger('collapsed', collapseEventArgs);\n            }\n        });\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            this.showCurrentBarIcon();\n            removeClass([e.target], HIDE_ICON);\n            this.resizableModel(this.currentBarIndex, true);\n            if (!isNullOrUndefined(this.prevBar) && !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                this.resizableModel(this.currentBarIndex - 1, true);\n                this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.paneSettings[this.currentBarIndex].collapsible && !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                else {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            this.showCurrentBarIcon();\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n                // only when middle pane collapsible to true\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                if (_this.previousPane.style.flexBasis.indexOf('%') > 0 || _this.nextPane.style.flexBasis.indexOf('%') > 0) {\n                    var previousFlexBasis = _this.updatePaneFlexBasis(_this.previousPane);\n                    var nextFlexBasis = _this.updatePaneFlexBasis(_this.nextPane);\n                    _this.totalPercent = previousFlexBasis + nextFlexBasis;\n                    _this.totalWidth = _this.convertPercentageToPixel(_this.totalPercent + '%');\n                }\n                else {\n                    _this.totalWidth = (_this.orientation === 'Horizontal') ? _this.previousPane.offsetWidth + _this.nextPane.offsetWidth :\n                        _this.previousPane.offsetHeight + _this.nextPane.offsetHeight;\n                }\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth + this.currentSeparator.offsetWidth) :\n                    (pane.offsetHeight + this.currentSeparator.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        this.previousPane = this.getPrevPane(this.currentSeparator, this.order);\n        this.nextPane = this.getNextPane(this.currentSeparator, this.order);\n        this.prevPaneIndex = this.getPreviousPaneIndex();\n        this.nextPaneIndex = this.getNextPaneIndex();\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        this.templateCompile(toElement, template);\n    };\n    // tslint:disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && cnt.indexOf('<div>Blazor') === 0) {\n                updateBlazorTemplate(this.element.id + 'content' + this.allPanes.length.toString(), 'ContentTemplate', this.paneSettings[this.allPanes.length - 1]);\n            }\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            val = (val).trim();\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && val.indexOf('<div>Blazor') === 0) {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), this.isStringTemplate);\n            }\n            else {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n            }\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 1) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i])) {\n                        this.paneCollapsible(child[i], i);\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            _super.prototype.destroy.call(this);\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            detach(this.element);\n            this.element = this.wrapper;\n            this.wrapperParent.appendChild(this.wrapper);\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar resize = 'e-resize';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass) {\n            addClass([ele], [cssClass]);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        this.setEnableRtl();\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                Math.floor((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function () {\n        var maxRow = 1;\n        if (this.rows > 1) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass) {\n            addClass([element], [cssClass]);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                return compile(template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        for (var _i = 0, _a = templateFn({}, null, null, type, isStringTemplate); _i < _a.length; _i++) {\n            var item = _a[_i];\n            templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        addClass([cellElement], [panel, panelTransition]);\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(panelModel.cssClass, cellElement.id + '_content', panelContainer);\n        cellElement.appendChild(this.panelContent);\n        if (!panelModel.enabled) {\n            this.disablePanel(cellElement);\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement('', cellElement.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            if (!cellElement.querySelector('.e-panel-header')) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate);\n                this.panelContent.appendChild(headerTemplateElement);\n                updateBlazorTemplate(id, 'HeaderTemplate', panelModel);\n            }\n        }\n        if (panelModel.content) {\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(panelModel.cssClass, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content')) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate);\n                this.panelContent.appendChild(this.panelBody);\n                updateBlazorTemplate(id, 'ContentTemplate', panelModel);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            for (var i = 0; i < document.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(document.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(document.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.refresh.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    ;\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.elementX = parseInt(el.style.left, 10);\n        this.elementY = parseInt(el.style.top, 10);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [parseInt((this.cellSize[0]), 10), parseInt(this.cellSize[1], 10)];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                currentY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                currentX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStop', args);\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'mise') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (col + 1) * this.cellSpacing[0], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            sizeY = this.pixelsToRows(this.elementHeight - (row + 1) * this.cellSpacing[0], true);\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.ceil(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.floor(pixels / this.cellSize[1]);\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.refresh = function () {\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel = this.sortPanels();\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + (this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) + 'px';\n                this.cellSize[1] = this.element.parentElement\n                    && (this.element.parentElement.offsetWidth / this.cellAspectRatio);\n                this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate) {\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        var cellElement = this.createPanelElement(panel.cssClass, panel.id);\n        cellElement.style.zIndex = '' + panel.zIndex;\n        this.element.appendChild(cellElement);\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        this.setXYAttributes(cellElement, panel);\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                this.setMinMaxValues(cells[j]);\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false);\n                if (this.enableRtl) {\n                    addClass([cell], 'e-rtl');\n                }\n                this.element.appendChild(cell);\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (sizeY > 1 ? rowValue === endRow - sizeY - 1 : rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0) {\n                            collisionItems.splice(collisionItems.indexOf(item), 1);\n                        }\n                    });\n                }\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + 1 });\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [draggable]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString(),\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseInt(args.element.style.top, 10);\n        var elementLeft = parseInt(args.element.style.left, 10);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: '.e-resize',\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        var changedPanels = [];\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateCloneArrayObject();\n                        for (var i_3 = 0; i_3 < _this.panels.length; i_3++) {\n                            if (_this.panels[i_3].row !== _this.panelsInitialModel[i_3].row ||\n                                _this.panels[i_3].col !== _this.panelsInitialModel[i_3].col) {\n                                changedPanels.push(_this.panels[i_3]);\n                            }\n                        }\n                        if (changedPanels.length > 0) {\n                            var changedArgs = { changedPanels: changedPanels };\n                            _this.trigger('change', changedArgs);\n                        }\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        this.dragStartArgs = { event: args.event, element: args.element, cancel: false };\n        this.trigger('dragStart', this.dragStartArgs);\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        if (eleRowValue + eleSizeY === this.rows) {\n            this.rows = this.rows + eleSizeY;\n            this.setHeightWidth();\n            // tslint:disable-next-line\n            this.dragobj.setDragArea();\n        }\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel);\n        this.panels.push(panelProp);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp, true);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        var container = cell.querySelector('.e-panel-container');\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.addPanelCalled = true;\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            this.updatePanelLayout(cell, panelProp);\n            this.addPanelCalled = false;\n        }\n        if (this.allowResizing &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.setResizingClass(cell, container);\n        }\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(panelInstance.cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement('', cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true);\n            this.panelContent.appendChild(headerTemplateElement);\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(panelInstance.cssClass, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true);\n            this.panelContent.appendChild(this.panelBody);\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n        }\n        this.element.innerHTML = '';\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        this.panels = [];\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                this.panels.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        var panelInstance = this.getCellInstance(id);\n        if (col < 1) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - 1;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.movePanelCalled = false;\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n    };\n    /**\n     * Destroys the DashboardLayout component\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.element.innerHTML = '';\n        _super.prototype.destroy.call(this);\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    DashboardLayout.prototype.getDragInstance = function (id) {\n        var draggableInstance;\n        var ele = document.getElementById(id);\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            draggableInstance = this.dragCollection[i].element === ele ? this.dragCollection[i] : null;\n            if (draggableInstance) {\n                return draggableInstance;\n            }\n        }\n        return draggableInstance;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.checkDragging(this.dragCollection);\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        for (var i = 0; i < document.querySelectorAll('.e-resize').length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = document.querySelectorAll('.e-resize')[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'mise') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                        var ele = this.element.querySelectorAll('.e-panel')[i];\n                        var draggableInstance = this.getDragInstance(ele.id);\n                        draggableInstance.handle = this.draggableHandle;\n                    }\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    this.isRenderComplete = false;\n                    this.removeAll();\n                    this.setProperties({ panels: newProp.panels }, true);\n                    this.setOldRowCol();\n                    this.initialize();\n                    if (this.showGridLines) {\n                        this.initGridLines();\n                    }\n                    this.isRenderComplete = true;\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_H_BAR","SPLIT_V_BAR","STATIC_PANE","RESIZE_BAR","ARROW_LEFT","ARROW_UP","HIDE_ICON","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","style","flexBasis","add","preRender","wrapper","cloneNode","wrapperParent","parentElement","removeClass","addClass","Browser","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","e","currentSeparator","remove","api","value","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","size","min","max","content","resizable","collapsible","paneAPI","slice","forEach","el","detach","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","indexOf","hideResizer","select","showResizer","previousPane","nextPane","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","splitterProperty","sizeValue","seaprator","splitBar","resizeBar","isVertical","removeAttribute","setAttribute","toLowerCase","getPrevPane","currentBar","order","elementIndex","getElementsByClassName","getNextPane","addResizeHandler","resizeHanlder","createElement","appendChild","createSeparator","separator","leftArrow","rightArrow","addMouseActions","getPaneDetails","clonedEle","parentNode","wireClickEvents","eventName","info","name","getPreviousPaneIndex","getNextPaneIndex","sTout","addEventListener","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","type","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","wireResizeEvents","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","collapseClass","eventArgs","beforeAction","trigger","beforeExpandArgs","cancel","flexGrow","currentBarIndex","previousElementSibling","updateIconsOnExpand","expandEventArgs","afterAction","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","splitInstance","prevPaneCollapsed","nextPaneExpanded","showCurrentBarIcon","prevBar","nextPaneNextEle","nextBar","nextPaneIndex","beforeCollapseArgs","collapseEventArgs","event","pane","prevPaneIndex","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","nextElementSibling","prevPanePreEle","currentIndex","getSeparatorIndex","getPrevBar","getNextBar","updateBars","preventDefault","resizeStartArgs","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","offsetWidth","offsetHeight","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","selection","defaultVal","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","prePaneDimenson","nextPaneDimension","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","paneSize","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","addStaticPaneClass","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","ele","cnt","blazorContain","window","tempEle","compileElement","childNodes","childEle","isStringTemplate","updateBlazorTemplate","id","val","prop","trim","templateFn","outerHTML","compile","templateFUN","childElement","nodeName","expand","collapse","destroy","isDestroyed","addPaneClass","removePaneOrders","paneClass","panes","querySelectorAll","removeProperty","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","panels","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","matchMedia","matches","mainElement","updatePanelLayout","setClasses","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","floor","cellAspectRatio","cellSpacing","updateOldRowColumn","getElementById","createSubElement","templateParser","error","renderTemplate","appendElement","templateElements","item","append","cellElement","panelModel","panelId","panelContent","disablePanel","header","headerTemplateElement","panelBody","contentHeightValue","getComputedStyle","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refresh","bind","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","moveResizeHandler","isMouseUpBound","upResizeHandler","closest","args","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","attributes","upTarget","undefined","allowFloating","moveItemsUpwards","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","this_1","filter","panel","updatedPanel","updatedRows","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","xValue","checkMinMaxValues","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","sort","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","this_2","updatedModels","adjust","resetLayout","addPanelCalled","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","this_3","rowVal","colValue_1","collisionModels1","proxy","resizerElements","i_2","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","collections","dragobj","Draggable","dragArea","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","changedPanels","panelInstance","i_3","panelsInitialModel","changedArgs","dragStopEventArgs","drag","draggedEventArgs","onDragStart","dragStartArgs","cloneModels","JSON","parse","stringify","eleRowValue","startCol","setDragArea","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","serialize","cloneModel","customObject","removeAll","removePanel","movePanel","resizePanel","getDragInstance","draggableInstance","updateCellSizeAndSpacing","keyEntity"],"mappings":"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"}