{"version":3,"file":"ej2-layouts.umd.min.js","sources":["../src/splitter/splitter.js","../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed() : this.collapsedOnchange(index);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.allPanes[index].style.flexBasis = newValSize;\n                                            this.allPanes[index].classList.add(STATIC_PANE);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        this.setRTL(this.enableRtl);\n        this.isCollapsed();\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (className) {\n        if (className) {\n            addClass([this.element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        if (!isNullOrUndefined(index)) {\n            this.updateIsCollapsed(index, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n        }\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && !this.paneSettings[index].collapsed) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var seaprator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + seaprator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            this.allBars[index].removeAttribute('aria-orientation');\n            this.allBars[index].setAttribute('aria-orientation', orientation.toLowerCase());\n            this.allBars[index].classList.remove(isVertical ? SPLIT_H_BAR : SPLIT_V_BAR);\n            this.allBars[index].classList.add(isVertical ? SPLIT_V_BAR : SPLIT_H_BAR);\n        }\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        var elementIndex = (order - 1) / (2);\n        return currentBar.parentElement.getElementsByClassName('e-pane')[elementIndex];\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        var elementIndex = ((order - 1) / 2) + 1;\n        return currentBar.parentElement.getElementsByClassName('e-pane')[elementIndex];\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        var size;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                this.wireClickEvents();\n                if (this.isResizable()) {\n                    EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                    var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                    EventHandler.add(separator, eventName, this.onMouseDown, this);\n                    separator.classList.add(RESIZABLE_BAR);\n                    this.updateResizablePanes(i);\n                }\n                else {\n                    addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                }\n            }\n            else {\n                this.updateResizablePanes(i);\n                addClass([separator], LAST_BAR);\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        // tslint:disable-next-line\n        var sTout;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n        });\n        separator.addEventListener('mouseout', function () {\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return ((target.classList.contains(RESIZE_BAR) || target.classList.contains(SPLIT_BAR)) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n            if (!beforeExpandArgs.cancel) {\n                _this.previousPane.style.flexGrow = '1';\n                _this.nextPane.style.flexGrow = '0';\n                if (!_this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                    removeClass([_this.nextPane], EXPAND_PANE);\n                    removeClass([_this.previousPane], collapseClass);\n                    addClass([_this.previousPane], EXPAND_PANE);\n                    addClass([_this.nextPane], collapseClass);\n                }\n                else {\n                    (_this.currentBarIndex !== 0) ?\n                        _this.previousPane.previousElementSibling.style.flexGrow = '' : _this.nextPane.style.flexGrow = '';\n                    removeClass([_this.previousPane], collapseClass);\n                    removeClass([_this.nextPane], EXPAND_PANE);\n                }\n                _this.updateIconsOnExpand(e);\n                _this.previousPane.setAttribute('aria-expanded', 'true');\n                _this.nextPane.setAttribute('aria-expanded', 'false');\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            }\n        });\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.splitInstance.prevPaneCollapsed && this.splitInstance.nextPaneExpanded) {\n            addClass([e.target], HIDE_ICON);\n            this.showCurrentBarIcon();\n            this.resizableModel(this.currentBarIndex, false);\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n                // first pane collapsible false\n                this.showTargetBarIcon(this.prevBar, this.leftArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            this.resizableModel(this.currentBarIndex, true);\n            if (!this.splitInstance.nextPaneNextEle.classList.contains('e-collapsed')) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            this.showCurrentBarIcon();\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                if (!this.paneSettings[this.currentBarIndex].collapsible && this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        this.previousPane.style.flexGrow = '0';\n        this.nextPane.style.flexGrow = '1';\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n            if (!beforeCollapseArgs.cancel) {\n                if (_this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                    removeClass([_this.previousPane], EXPAND_PANE);\n                    removeClass([_this.nextPane], collapseClass);\n                }\n                else {\n                    removeClass([_this.previousPane], EXPAND_PANE);\n                    removeClass([_this.nextPane], collapseClass);\n                    addClass([_this.nextPane], EXPAND_PANE);\n                    addClass([_this.previousPane], collapseClass);\n                }\n                _this.updateIconsOnCollapse(e);\n                _this.previousPane.setAttribute('aria-expanded', 'false');\n                _this.nextPane.setAttribute('aria-expanded', 'true');\n                var collapseEventArgs = _this.afterAction(e);\n                _this.trigger('collapsed', collapseEventArgs);\n            }\n        });\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            this.showCurrentBarIcon();\n            removeClass([e.target], HIDE_ICON);\n            this.resizableModel(this.currentBarIndex, true);\n            if (!isNullOrUndefined(this.prevBar) && !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                this.resizableModel(this.currentBarIndex - 1, true);\n                this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.paneSettings[this.currentBarIndex].collapsible && !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                else {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            this.showCurrentBarIcon();\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n                // only when middle pane collapsible to true\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                if (_this.previousPane.style.flexBasis.indexOf('%') > 0 || _this.nextPane.style.flexBasis.indexOf('%') > 0) {\n                    var previousFlexBasis = _this.updatePaneFlexBasis(_this.previousPane);\n                    var nextFlexBasis = _this.updatePaneFlexBasis(_this.nextPane);\n                    _this.totalPercent = previousFlexBasis + nextFlexBasis;\n                    _this.totalWidth = _this.convertPercentageToPixel(_this.totalPercent + '%');\n                }\n                else {\n                    _this.totalWidth = (_this.orientation === 'Horizontal') ? _this.previousPane.offsetWidth + _this.nextPane.offsetWidth :\n                        _this.previousPane.offsetHeight + _this.nextPane.offsetHeight;\n                }\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth + this.currentSeparator.offsetWidth) :\n                    (pane.offsetHeight + this.currentSeparator.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        this.previousPane = this.getPrevPane(this.currentSeparator, this.order);\n        this.nextPane = this.getNextPane(this.currentSeparator, this.order);\n        this.prevPaneIndex = this.getPreviousPaneIndex();\n        this.nextPaneIndex = this.getNextPaneIndex();\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        this.templateCompile(toElement, template);\n    };\n    // tslint:disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && cnt.indexOf('<div>Blazor') === 0) {\n                updateBlazorTemplate(this.element.id + 'content' + this.allPanes.length.toString(), 'ContentTemplate', this.paneSettings[this.allPanes.length - 1]);\n            }\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            val = (val).trim();\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && val.indexOf('<div>Blazor') === 0) {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), this.isStringTemplate);\n            }\n            else {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n            }\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 1) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i])) {\n                        this.paneCollapsible(child[i], i);\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            _super.prototype.destroy.call(this);\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            detach(this.element);\n            this.element = this.wrapper;\n            this.wrapperParent.appendChild(this.wrapper);\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar resize = 'e-resize';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass) {\n            addClass([ele], [cssClass]);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        this.setEnableRtl();\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                Math.floor((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function () {\n        var maxRow = 1;\n        if (this.rows > 1) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass) {\n            addClass([element], [cssClass]);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                return compile(template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        for (var _i = 0, _a = templateFn({}, null, null, type, isStringTemplate); _i < _a.length; _i++) {\n            var item = _a[_i];\n            templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        addClass([cellElement], [panel, panelTransition]);\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(panelModel.cssClass, cellElement.id + '_content', panelContainer);\n        cellElement.appendChild(this.panelContent);\n        if (!panelModel.enabled) {\n            this.disablePanel(cellElement);\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement('', cellElement.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            if (!cellElement.querySelector('.e-panel-header')) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate);\n                this.panelContent.appendChild(headerTemplateElement);\n                updateBlazorTemplate(id, 'HeaderTemplate', panelModel);\n            }\n        }\n        if (panelModel.content) {\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(panelModel.cssClass, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content')) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate);\n                this.panelContent.appendChild(this.panelBody);\n                updateBlazorTemplate(id, 'ContentTemplate', panelModel);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            for (var i = 0; i < document.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(document.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(document.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.refresh.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    ;\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.elementX = parseInt(el.style.left, 10);\n        this.elementY = parseInt(el.style.top, 10);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [parseInt((this.cellSize[0]), 10), parseInt(this.cellSize[1], 10)];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                currentY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                currentX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStop', args);\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'mise') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (col + 1) * this.cellSpacing[0], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            sizeY = this.pixelsToRows(this.elementHeight - (row + 1) * this.cellSpacing[0], true);\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.ceil(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.floor(pixels / this.cellSize[1]);\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.refresh = function () {\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel = this.sortPanels();\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + (this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) + 'px';\n                this.cellSize[1] = this.element.parentElement\n                    && (this.element.parentElement.offsetWidth / this.cellAspectRatio);\n                this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate) {\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        var cellElement = this.createPanelElement(panel.cssClass, panel.id);\n        cellElement.style.zIndex = '' + panel.zIndex;\n        this.element.appendChild(cellElement);\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        this.setXYAttributes(cellElement, panel);\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                this.setMinMaxValues(cells[j]);\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false);\n                if (this.enableRtl) {\n                    addClass([cell], 'e-rtl');\n                }\n                this.element.appendChild(cell);\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (sizeY > 1 ? rowValue === endRow - sizeY - 1 : rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0) {\n                            collisionItems.splice(collisionItems.indexOf(item), 1);\n                        }\n                    });\n                }\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + 1 });\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [draggable]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString(),\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseInt(args.element.style.top, 10);\n        var elementLeft = parseInt(args.element.style.left, 10);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: '.e-resize',\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        var changedPanels = [];\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateCloneArrayObject();\n                        for (var i_3 = 0; i_3 < _this.panels.length; i_3++) {\n                            if (_this.panels[i_3].row !== _this.panelsInitialModel[i_3].row ||\n                                _this.panels[i_3].col !== _this.panelsInitialModel[i_3].col) {\n                                changedPanels.push(_this.panels[i_3]);\n                            }\n                        }\n                        if (changedPanels.length > 0) {\n                            var changedArgs = { changedPanels: changedPanels };\n                            _this.trigger('change', changedArgs);\n                        }\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        this.dragStartArgs = { event: args.event, element: args.element, cancel: false };\n        this.trigger('dragStart', this.dragStartArgs);\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        if (eleRowValue + eleSizeY === this.rows) {\n            this.rows = this.rows + eleSizeY;\n            this.setHeightWidth();\n            // tslint:disable-next-line\n            this.dragobj.setDragArea();\n        }\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel);\n        this.panels.push(panelProp);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp, true);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        var container = cell.querySelector('.e-panel-container');\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.addPanelCalled = true;\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            this.updatePanelLayout(cell, panelProp);\n            this.addPanelCalled = false;\n        }\n        if (this.allowResizing &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.setResizingClass(cell, container);\n        }\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(panelInstance.cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement('', cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true);\n            this.panelContent.appendChild(headerTemplateElement);\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(panelInstance.cssClass, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true);\n            this.panelContent.appendChild(this.panelBody);\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n        }\n        this.element.innerHTML = '';\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        this.panels = [];\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                this.panels.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        var panelInstance = this.getCellInstance(id);\n        if (col < 1) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - 1;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.movePanelCalled = false;\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n    };\n    /**\n     * Destroys the DashboardLayout component\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.element.innerHTML = '';\n        _super.prototype.destroy.call(this);\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    DashboardLayout.prototype.getDragInstance = function (id) {\n        var draggableInstance;\n        var ele = document.getElementById(id);\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            draggableInstance = this.dragCollection[i].element === ele ? this.dragCollection[i] : null;\n            if (draggableInstance) {\n                return draggableInstance;\n            }\n        }\n        return draggableInstance;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.checkDragging(this.dragCollection);\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        for (var i = 0; i < document.querySelectorAll('.e-resize').length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = document.querySelectorAll('.e-resize')[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'mise') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                        var ele = this.element.querySelectorAll('.e-panel')[i];\n                        var draggableInstance = this.getDragInstance(ele.id);\n                        draggableInstance.handle = this.draggableHandle;\n                    }\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    this.isRenderComplete = false;\n                    this.removeAll();\n                    this.setProperties({ panels: newProp.panels }, true);\n                    this.setOldRowCol();\n                    this.initialize();\n                    if (this.showGridLines) {\n                        this.initGridLines();\n                    }\n                    this.isRenderComplete = true;\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","HORIZONTAL_PANE","VERTICAL_PANE","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_BAR","SPLIT_H_BAR","SPLIT_V_BAR","STATIC_PANE","SCROLL_PANE","RESIZE_BAR","RESIZABLE_BAR","SPLIT_BAR_HOVER","SPLIT_BAR_ACTIVE","HIDE_HANDLER","DISABLED","COLLAPSIBLE","NAVIGATE_ARROW","ARROW_RIGHT","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","EXPAND_PANE","COLLAPSE_PANE","PANE_HIDDEN","RESIZABLE_PANE","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","style","flexBasis","add","preRender","wrapper","cloneNode","wrapperParent","parentElement","removeClass","addClass","Browser","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","e","currentSeparator","remove","api","value","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","size","min","max","content","resizable","collapsible","paneAPI","slice","forEach","el","detach","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","indexOf","hideResizer","select","showResizer","previousPane","nextPane","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","splitterProperty","sizeValue","seaprator","splitBar","resizeBar","isVertical","removeAttribute","setAttribute","toLowerCase","getPrevPane","currentBar","order","elementIndex","getElementsByClassName","getNextPane","addResizeHandler","resizeHanlder","createElement","appendChild","createSeparator","separator","leftArrow","rightArrow","addMouseActions","getPaneDetails","clonedEle","parentNode","wireClickEvents","eventName","info","name","getPreviousPaneIndex","getNextPaneIndex","sTout","addEventListener","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","type","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","wireResizeEvents","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","collapseClass","eventArgs","beforeAction","trigger","beforeExpandArgs","cancel","flexGrow","currentBarIndex","previousElementSibling","updateIconsOnExpand","expandEventArgs","afterAction","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","splitInstance","prevPaneCollapsed","nextPaneExpanded","showCurrentBarIcon","prevBar","nextPaneNextEle","nextBar","nextPaneIndex","beforeCollapseArgs","collapseEventArgs","event","pane","prevPaneIndex","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","nextElementSibling","prevPanePreEle","currentIndex","getSeparatorIndex","getPrevBar","getNextBar","updateBars","preventDefault","resizeStartArgs","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","offsetWidth","offsetHeight","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","selection","defaultVal","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","prePaneDimenson","nextPaneDimension","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","paneSize","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","addStaticPaneClass","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","ele","cnt","blazorContain","window","tempEle","compileElement","childNodes","childEle","isStringTemplate","updateBlazorTemplate","id","val","prop","trim","templateFn","outerHTML","compile","templateFUN","childElement","nodeName","expand","collapse","destroy","isDestroyed","addPaneClass","removePaneOrders","paneClass","panes","querySelectorAll","removeProperty","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","preventSelect","dragging","responsive","panelContent","panelContainer","header","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","panels","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","matchMedia","matches","mainElement","updatePanelLayout","setClasses","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","floor","cellAspectRatio","cellSpacing","updateOldRowColumn","getElementById","createSubElement","templateParser","error","renderTemplate","appendElement","templateElements","item","append","cellElement","panelModel","panelId","disablePanel","headerTemplateElement","panelBody","contentHeightValue","getComputedStyle","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refresh","bind","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","moveResizeHandler","isMouseUpBound","upResizeHandler","closest","args","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","attributes","upTarget","undefined","allowFloating","moveItemsUpwards","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","_loop_1","_loop_2","this_1","filter","panel","updatedPanel","updatedRows","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","xValue","checkMinMaxValues","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","sort","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","_loop_3","_loop_4","this_2","updatedModels","adjust","resetLayout","addPanelCalled","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","_loop_5","rowVal","this_3","colValue_1","collisionModels1","proxy","resizerElements","i_2","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","collections","dragobj","Draggable","dragArea","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","changedPanels","panelInstance","i_3","panelsInitialModel","changedArgs","dragStopEventArgs","drag","draggedEventArgs","onDragStart","dragStartArgs","cloneModels","JSON","parse","stringify","eleRowValue","startCol","setDragArea","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","serialize","cloneModel","customObject","removeAll","removePanel","movePanel","resizePanel","getDragInstance","draggableInstance","updateCellSizeAndSpacing"],"mappings":"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"}