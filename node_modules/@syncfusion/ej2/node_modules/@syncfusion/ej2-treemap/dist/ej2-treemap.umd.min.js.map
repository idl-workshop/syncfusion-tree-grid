{"version":3,"file":"ej2-treemap.umd.min.js","sources":["../src/treemap/utils/helper.js","../src/treemap/model/theme.js","../src/treemap/model/constants.js","../src/treemap/model/base.js","../src/treemap/layout/render-panel.js","../src/treemap/utils/export.js","../src/treemap/treemap.js","../src/treemap/layout/legend.js","../src/treemap/user-interaction/highlight-selection.js","../src/treemap/user-interaction/tooltip.js"],"sourcesContent":["import { createElement, compile, merge, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Create the class for size\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Internal use of type rect\n * @private\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/**\n * Internal use of rectangle options\n * @private\n */\nvar RectOption = /** @class */ (function () {\n    function RectOption(id, fill, border, opacity, rect, dashArray) {\n        this.y = rect.y;\n        this.x = rect.x;\n        this.height = rect.height;\n        this.width = rect.width;\n        this.id = id;\n        this.fill = fill;\n        this.opacity = opacity;\n        this.stroke = border.color;\n        this['stroke-width'] = border.width;\n        this['stroke-dasharray'] = dashArray;\n    }\n    return RectOption;\n}());\nexport { RectOption };\nvar PathOption = /** @class */ (function () {\n    function PathOption(id, fill, width, color, opacity, dashArray, d) {\n        this.id = id;\n        this.opacity = opacity;\n        this.fill = fill;\n        this.stroke = color;\n        this['stroke-width'] = width;\n        this['stroke-dasharray'] = dashArray;\n        this.d = d;\n    }\n    return PathOption;\n}());\nexport { PathOption };\n/**\n * Function to measure the height and width of the text.\n * @param  {string} text\n * @param  {FontModel} font\n * @param  {string} id\n * @returns no\n * @private\n */\nexport function measureText(text, font) {\n    var measureObject = document.getElementById('treeMapMeasureText');\n    if (measureObject === null) {\n        measureObject = createElement('text', { id: 'treeMapMeasureText' });\n        document.body.appendChild(measureObject);\n    }\n    measureObject.innerHTML = text;\n    measureObject.style.position = 'absolute';\n    measureObject.style.fontSize = font.size;\n    measureObject.style.fontWeight = font.fontWeight;\n    measureObject.style.fontStyle = font.fontStyle;\n    measureObject.style.fontFamily = font.fontFamily;\n    measureObject.style.visibility = 'hidden';\n    measureObject.style.top = '-100';\n    measureObject.style.left = '0';\n    measureObject.style.whiteSpace = 'nowrap';\n    // For bootstrap line height issue\n    measureObject.style.lineHeight = 'normal';\n    return new Size(measureObject.clientWidth, measureObject.clientHeight);\n}\n/**\n * Internal use of text options\n * @private\n */\nvar TextOption = /** @class */ (function () {\n    function TextOption(id, x, y, anchor, text, transform, baseLine, connectorText) {\n        if (transform === void 0) { transform = ''; }\n        this.transform = '';\n        this.baseLine = 'auto';\n        this.id = id;\n        this.text = text;\n        this.transform = transform;\n        this.anchor = anchor;\n        this.x = x;\n        this.y = y;\n        this.baseLine = baseLine;\n        this.connectorText = connectorText;\n    }\n    return TextOption;\n}());\nexport { TextOption };\n/**\n * @private\n * Trim the title text\n */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth || label.length < 4) {\n                if (label.length < 4) {\n                    label = ' ';\n                }\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/**\n * Map internal class for Point\n */\nvar Location = /** @class */ (function () {\n    function Location(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return Location;\n}());\nexport { Location };\n/**\n * Method to calculate x position of title\n */\nexport function findPosition(location, alignment, textSize, type) {\n    var x;\n    var y;\n    switch (alignment) {\n        case 'Near':\n            x = location.x;\n            break;\n        case 'Center':\n            x = (type === 'title') ? (location.width / 2 - textSize.width / 2) :\n                ((location.x + (location.width / 2)) - textSize.width / 2);\n            break;\n        case 'Far':\n            x = (type === 'title') ? (location.width - location.y - textSize.width) :\n                ((location.x + location.width) - textSize.width);\n            break;\n    }\n    y = (type === 'title') ? location.y + (textSize.height / 2) : ((location.y + location.height / 2) + textSize.height / 2);\n    return new Location(x, y);\n}\nexport function createTextStyle(renderer, renderOptions, text) {\n    var htmlObject;\n    htmlObject = renderer.createText(renderOptions, text);\n    htmlObject.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n    htmlObject.style['user-select'] = 'none';\n    htmlObject.style['-moz-user-select'] = 'none';\n    htmlObject.style['-webkit-touch-callout'] = 'none';\n    htmlObject.style['-webkit-user-select'] = 'none';\n    htmlObject.style['-khtml-user-select'] = 'none';\n    htmlObject.style['-ms-user-select'] = 'none';\n    htmlObject.style['-o-user-select'] = 'none';\n    return htmlObject;\n}\n/**\n * Internal rendering of text\n * @private\n */\n/* tslint:disable:no-string-literal */\nexport function renderTextElement(options, font, color, parent, isMinus) {\n    if (isMinus === void 0) { isMinus = false; }\n    var renderOptions = {\n        'font-size': font.size,\n        'font-style': font.fontStyle,\n        'font-family': font.fontFamily,\n        'font-weight': font.fontWeight,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color\n    };\n    var text = typeof options.text === 'string' ? options.text : isMinus ? options.text[options.text.length - 1] : options.text[0];\n    var tspanElement;\n    var renderer = new SvgRenderer('');\n    var height;\n    var htmlObject;\n    var breadCrumbText = !isNullOrUndefined(text) && !isNullOrUndefined(options.connectorText) ?\n        (text.search(options.connectorText[1]) >= 0) : false;\n    if (breadCrumbText) {\n        var drilledLabel = text;\n        var drillLevelText = void 0;\n        var spacing = 5;\n        drillLevelText = drilledLabel.split('#');\n        for (var z = 0; z < drillLevelText.length; z++) {\n            var drillText = (drillLevelText[z].search(options.connectorText) !== -1 && !isNullOrUndefined(options.connectorText)) ?\n                options.connectorText : drillLevelText[z];\n            renderOptions['id'] = options.id + '_' + z;\n            htmlObject = createTextStyle(renderer, renderOptions, drillText);\n            if (z % 2 === 0 && z !== 0) {\n                var re = /\\s+/g;\n                drillText = drillText.replace(re, '&nbsp');\n            }\n            var size = measureText(drillText, font);\n            renderOptions['x'] = z !== 0 ? renderOptions['x'] + size.width : renderOptions['x'] + size.width + spacing;\n            parent.appendChild(htmlObject);\n        }\n    }\n    else {\n        htmlObject = createTextStyle(renderer, renderOptions, text);\n        parent.appendChild(htmlObject);\n    }\n    if (typeof options.text !== 'string' && options.text.length > 1) {\n        for (var i = 1, len = options.text.length; i < len; i++) {\n            height = (measureText(options.text[i], font).height);\n            tspanElement = renderer.createTSpan({\n                'x': options.x, 'id': options.id,\n                'y': (options.y) + (i * height)\n            }, options.text[i]);\n            htmlObject.appendChild(tspanElement);\n        }\n        parent.appendChild(htmlObject);\n    }\n    return htmlObject;\n}\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/* tslint:disable:no-string-literal */\nexport function itemsToOrder(a, b) {\n    return a['weight'] === b['weight'] ? 0 : a['weight'] < b['weight'] ? 1 : -1;\n}\nexport function isContainsData(source, pathName, processData, treemap) {\n    var isExist = false;\n    var name = '';\n    var path;\n    var leaf = treemap.leafItemSettings;\n    for (var i = 0; i < source.length; i++) {\n        path = treemap.levels[i] ? treemap.levels[i].groupPath : leaf.labelPath ? leaf.labelPath : treemap.weightValuePath;\n        if (source[i] === processData[path]) {\n            name += (processData[path]) + (i === source.length - 1 ? '' : '#');\n            if (name === pathName) {\n                isExist = true;\n                break;\n            }\n        }\n    }\n    return isExist;\n}\nexport function findChildren(data) {\n    var children;\n    if (data) {\n        var keys = Object.keys(data);\n        children = new Object();\n        for (var i = 0; i < keys.length; i++) {\n            if (data[keys[i]] instanceof Array) {\n                children['values'] = data[keys[i]];\n                children['key'] = keys[i];\n                break;\n            }\n        }\n    }\n    return children;\n}\nexport function findHightLightItems(data, items, mode, treeMap) {\n    if (mode === 'Child') {\n        items.push(data['levelOrderName']);\n        var children = findChildren(data)['values'];\n        if (children && children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                if (items.indexOf(children[i]['levelOrderName']) === -1) {\n                    items.push(children[i]['levelOrderName']);\n                }\n            }\n            for (var j = 0; j < children.length; j++) {\n                findHightLightItems(children[j], items, mode, treeMap);\n            }\n        }\n    }\n    else if (mode === 'Parent') {\n        if (typeof data['levelOrderName'] === 'string' && items.indexOf(data['levelOrderName']) === -1) {\n            items.push(data['levelOrderName']);\n            findHightLightItems(data['parent'], items, mode, treeMap);\n        }\n    }\n    else if (mode === 'All') {\n        var parentName = data['levelOrderName'].split('#')[0];\n        var currentItem = void 0;\n        for (var i = 0; i < treeMap.layout.renderItems.length; i++) {\n            currentItem = treeMap.layout.renderItems[i];\n            if ((currentItem['levelOrderName']).indexOf(parentName) > -1 && items.indexOf(currentItem['levelOrderName']) === -1) {\n                items.push(currentItem['levelOrderName']);\n            }\n        }\n    }\n    else {\n        items.push(data['levelOrderName']);\n    }\n    return items;\n}\n/**\n * Function to compile the template function for maps.\n * @returns Function\n * @private\n */\nexport function getTemplateFunction(template) {\n    var templateFn = null;\n    var e;\n    try {\n        if (document.querySelectorAll(template).length) {\n            templateFn = compile(document.querySelector(template).innerHTML.trim());\n        }\n    }\n    catch (e) {\n        templateFn = compile(template);\n    }\n    return templateFn;\n}\n/**\n * @private\n */\nexport function convertElement(element, labelId, data) {\n    var childElement = createElement('div', {\n        id: labelId,\n        styles: 'position: absolute;pointer-events: auto;'\n    });\n    while (element.length > 0) {\n        childElement.appendChild(element[0]);\n    }\n    var templateHtml = childElement.innerHTML;\n    var keys = Object.keys(data);\n    for (var i = 0; i < keys.length; i++) {\n        templateHtml = templateHtml.replace(new RegExp('{{:' + keys[i] + '}}', 'g'), data[keys[i].toString()]);\n    }\n    childElement.innerHTML = templateHtml;\n    return childElement;\n}\nexport function findLabelLocation(rect, position, labelSize, type, treemap) {\n    var location = new Location(0, 0);\n    var padding = 5;\n    var paddings = 2;\n    var elementRect = treemap.element.getBoundingClientRect();\n    var x = (type === 'Template') ? treemap.areaRect.x : 0;\n    var y = (type === 'Template') ? treemap.areaRect.y : 0;\n    location.x = (Math.abs(x - ((position.indexOf('Left') > -1) ? rect.x + padding : !(position.indexOf('Right') > -1) ?\n        rect.x + ((rect.width / 2) - (labelSize.width / 2)) : (rect.x + rect.width) - labelSize.width))) - paddings;\n    if (treemap.enableDrillDown && (treemap.renderDirection === 'BottomLeftTopRight'\n        || treemap.renderDirection === 'BottomRightTopLeft')) {\n        location.y = Math.abs((rect.y + rect.height) - labelSize.height + padding);\n    }\n    else {\n        location.y = Math.abs(y - ((position.indexOf('Top') > -1) ? (type === 'Template' ? rect.y : rect.y + labelSize.height) :\n            !(position.indexOf('Bottom') > -1) ? type === 'Template' ? (rect.y + ((rect.height / 2) - (labelSize.height / 2))) :\n                (rect.y + (rect.height / 2) + labelSize.height / 4) : (rect.y + rect.height) - labelSize.height));\n    }\n    return location;\n}\nexport function measureElement(element, parentElement) {\n    var size = new Size(0, 0);\n    parentElement.appendChild(element);\n    size.height = element.offsetHeight;\n    size.width = element.offsetWidth;\n    document.getElementById(element.id).remove();\n    return size;\n}\nexport function getArea(rect) {\n    return (rect.width - rect.x) * (rect.height - rect.y);\n}\nexport function getShortestEdge(input) {\n    var container = convertToContainer(input);\n    var width = container.width;\n    var height = container.height;\n    var result = Math.min(width, height);\n    return result;\n}\nexport function convertToContainer(rect) {\n    var x = rect.x;\n    var y = rect.y;\n    var width = rect.width;\n    var height = rect.height;\n    return {\n        x: x,\n        y: y,\n        width: width - x,\n        height: height - y\n    };\n}\nexport function convertToRect(container) {\n    var xOffset = container.x;\n    var yOffset = container.y;\n    var width = container.width;\n    var height = container.height;\n    return {\n        x: xOffset,\n        y: yOffset,\n        width: xOffset + width,\n        height: yOffset + height,\n    };\n}\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new Location((pageX - positionX), (pageY - positionY));\n}\nexport function colorMap(colorMapping, equalValue, value, weightValuePath) {\n    var fill;\n    var paths = [];\n    var opacity;\n    if (isNullOrUndefined(equalValue) && (isNullOrUndefined(value) && isNaN(value))) {\n        return null;\n    }\n    for (var i = 0; i < colorMapping.length; i++) {\n        var isEqualColor = false;\n        var dataValue = value;\n        if (!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to)\n            && !isNullOrUndefined(colorMapping[i].value)) {\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) && (colorMapping[i].value === equalValue)) {\n                isEqualColor = true;\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        else if ((!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to))\n            || !isNullOrUndefined((colorMapping[i].value))) {\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) || (colorMapping[i].value === equalValue)) {\n                if (colorMapping[i].value === equalValue) {\n                    isEqualColor = true;\n                }\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        if (((value >= colorMapping[i].from && value <= colorMapping[i].to) || (colorMapping[i].value === equalValue))\n            && !isNullOrUndefined(colorMapping[i].minOpacity) && !isNullOrUndefined(colorMapping[i].maxOpacity) && fill) {\n            opacity = deSaturationColor(weightValuePath, colorMapping[i], fill, value);\n        }\n        if ((fill === '' || isNullOrUndefined(fill))\n            && isNullOrUndefined(colorMapping[i].from) && isNullOrUndefined(colorMapping[i].to)\n            && isNullOrUndefined(colorMapping[i].minOpacity) && isNullOrUndefined(colorMapping[i].maxOpacity)\n            && isNullOrUndefined(colorMapping[i].value)) {\n            fill = (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') ?\n                colorMapping[i].color[0] : colorMapping[i].color;\n        }\n        opacity = !isNullOrUndefined(opacity) ? opacity : '1';\n        paths.push(fill);\n    }\n    for (var j = paths.length - 1; j >= 0; j--) {\n        fill = paths[j];\n        j = (fill) ? -1 : j;\n    }\n    return { fill: fill, opacity: opacity };\n}\nexport function deSaturationColor(weightValuePath, colorMapping, color, rangeValue) {\n    var opacity = 1;\n    if ((rangeValue >= colorMapping.from && rangeValue <= colorMapping.to)) {\n        var ratio = (rangeValue - colorMapping.from) / (colorMapping.to - colorMapping.from);\n        opacity = (ratio * (colorMapping.maxOpacity - colorMapping.minOpacity)) + colorMapping.minOpacity;\n    }\n    return opacity.toString();\n}\nexport function colorCollections(colorMap, value) {\n    var gradientFill = getColorByValue(colorMap, value);\n    return gradientFill;\n}\nexport function rgbToHex(r, g, b) {\n    return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\nexport function getColorByValue(colorMap, value) {\n    var color = '';\n    var rbg;\n    if (Number(value) === colorMap.from) {\n        color = colorMap.color[0];\n    }\n    else if (Number(value) === colorMap.to) {\n        color = colorMap.color[colorMap.color.length - 1];\n    }\n    else {\n        rbg = getGradientColor(Number(value), colorMap);\n        color = rgbToHex(rbg.r, rbg.g, rbg.b);\n    }\n    return color;\n}\n/* tslint:disable-next-line:max-func-body-length */\nexport function getGradientColor(value, colorMap) {\n    var previousOffset = colorMap.from;\n    var nextOffset = colorMap.to;\n    var percent = 0;\n    var prev1;\n    var full = nextOffset - previousOffset;\n    var midColor;\n    var midreturn;\n    percent = (value - previousOffset) / full;\n    var previousColor;\n    var nextColor;\n    if (colorMap.color.length <= 2) {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n    }\n    else {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n        var a = full / (colorMap.color.length - 1);\n        var b = void 0;\n        var c = void 0;\n        var length_1 = colorMap.color.length - 1;\n        var splitColorValueOffset = [];\n        var splitColor = {};\n        for (var j = 1; j < length_1; j++) {\n            c = j * a;\n            b = previousOffset + c;\n            splitColor = { b: b, color: colorMap.color[j] };\n            splitColorValueOffset.push(splitColor);\n        }\n        for (var i = 0; i < splitColorValueOffset.length; i++) {\n            if (previousOffset <= value && value <= splitColorValueOffset[i]['b'] && i === 0) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                nextColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ? 1 - Math.abs((value - splitColorValueOffset[i]['b']) / a)\n                    : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            else if (splitColorValueOffset[i]['b'] <= value && value <= nextOffset && i === (splitColorValueOffset.length - 1)) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                previousColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ?\n                    1 - Math.abs((value - splitColorValueOffset[i]['b']) / a) : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            if (i !== splitColorValueOffset.length - 1 && i < splitColorValueOffset.length) {\n                if (splitColorValueOffset[i]['b'] <= value && value <= splitColorValueOffset[i + 1]['b']) {\n                    midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                    previousColor = midColor;\n                    nextColor = splitColorValueOffset[i + 1]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i + 1]['color'] : colorNameToHex(splitColorValueOffset[i + 1]['color']);\n                    percent = Math.abs((value - splitColorValueOffset[i + 1]['b'])) / a;\n                }\n            }\n        }\n    }\n    return getPercentageColor(percent, previousColor, nextColor);\n}\nexport function getPercentageColor(percent, previous, next) {\n    var nextColor = next.split('#')[1];\n    var prevColor = previous.split('#')[1];\n    var r = getPercentage(percent, parseInt(prevColor.substr(0, 2), 16), parseInt(nextColor.substr(0, 2), 16));\n    var g = getPercentage(percent, parseInt(prevColor.substr(2, 2), 16), parseInt(nextColor.substr(2, 2), 16));\n    var b = getPercentage(percent, parseInt(prevColor.substr(4, 2), 16), parseInt(nextColor.substr(4, 2), 16));\n    return new ColorValue(r, g, b);\n}\nexport function getPercentage(percent, previous, next) {\n    var full = next - previous;\n    return Math.round((previous + (full * percent)));\n}\nexport function wordWrap(maximumWidth, dataLabel, font) {\n    var textCollection = dataLabel.split(' ');\n    var label = '';\n    var labelCollection = [];\n    var text;\n    for (var i = 0, len = textCollection.length; i < len; i++) {\n        text = textCollection[i];\n        if (measureText(label.concat(text), font).width < maximumWidth) {\n            label = label.concat((label === '' ? '' : ' ') + text);\n        }\n        else {\n            if (label !== '') {\n                labelCollection.push(textTrim(maximumWidth, label, font));\n                label = text;\n            }\n            else {\n                labelCollection.push(textTrim(maximumWidth, text, font));\n                text = '';\n            }\n        }\n        if (label && i === len - 1) {\n            labelCollection.push(textTrim(maximumWidth, label, font));\n        }\n    }\n    return labelCollection;\n}\nexport function textWrap(maxWidth, label, font) {\n    var text = label;\n    var resultText = [];\n    var currentLength = 0;\n    var totalWidth = measureText(label, font).width;\n    var totalLength = label.length;\n    if (maxWidth >= totalWidth) {\n        resultText.push(label);\n        return resultText;\n    }\n    else {\n        for (var i = label.length; i > currentLength; i--) {\n            var sliceString = label.slice(currentLength, i);\n            totalWidth = measureText(sliceString, font).width;\n            if (totalWidth <= maxWidth) {\n                resultText.push(sliceString);\n                currentLength += sliceString.length;\n                if (totalLength === currentLength) {\n                    return resultText;\n                }\n                i = totalLength + 1;\n            }\n        }\n    }\n    return resultText;\n}\n/**\n * hide function\n */\nexport function hide(maxWidth, maxHeight, text, font) {\n    var hideText = text;\n    var textSize = measureText(text, font);\n    hideText = (textSize.width > maxWidth || textSize.height > maxHeight) ? ' ' : text;\n    return hideText;\n}\nexport function orderByArea(a, b) {\n    if (a['itemArea'] === b['itemArea']) {\n        return 0;\n    }\n    else if (a['itemArea'] < b['itemArea']) {\n        return 1;\n    }\n    return -1;\n}\nexport function removeClassNames(elements, type, treemap) {\n    var opacity;\n    var process = true;\n    var element;\n    var stroke;\n    var strokeWidth;\n    var fill;\n    var options = {};\n    for (var j = 0; j < elements.length; j++) {\n        element = elements[j].childNodes[0];\n        options = treemap.layout.renderItems[element.id.split('_')[6]]['options'];\n        applyOptions(element, options);\n        elements[j].classList.remove(type);\n        j -= 1;\n    }\n}\nexport function applyOptions(element, options) {\n    element.setAttribute('opacity', options['opacity']);\n    element.setAttribute('fill', options['fill']);\n    element.setAttribute('stroke', options['border']['color']);\n    element.setAttribute('stroke-width', options['border']['width']);\n}\nexport function textFormatter(format, data, treemap) {\n    if (isNullOrUndefined(format)) {\n        return null;\n    }\n    var keys = Object.keys(data);\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n        format = format.split('${' + key + '}').join(formatValue(data[key], treemap).toString());\n    }\n    return format;\n}\nexport function formatValue(value, treemap) {\n    var formatValue;\n    var formatFunction;\n    if (treemap.format && !isNaN(Number(value))) {\n        formatFunction = treemap.intl.getNumberFormat({ format: treemap.format, useGrouping: treemap.useGroupingSeparator });\n        formatValue = formatFunction(Number(value));\n    }\n    else {\n        formatValue = value;\n    }\n    return formatValue ? formatValue : '';\n}\n/** @private */\nvar ColorValue = /** @class */ (function () {\n    function ColorValue(r, g, b) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n    }\n    return ColorValue;\n}());\nexport { ColorValue };\n/** @private */\nexport function convertToHexCode(value) {\n    return '#' + componentToHex(value.r) + componentToHex(value.g) + componentToHex(value.b);\n}\n/** @private */\nexport function componentToHex(value) {\n    var hex = value.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n}\n/** @private */\nexport function convertHexToColor(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? new ColorValue(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) :\n        new ColorValue(255, 255, 255);\n}\n/** @private */\nexport function colorNameToHex(color) {\n    var element;\n    color = color === 'transparent' ? 'white' : color;\n    element = document.getElementById('treeMapMeasureText');\n    element.style.color = color;\n    color = window.getComputedStyle(element).color;\n    var exp = /^(rgb|hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/;\n    var isRGBValue = exp.exec(color);\n    return convertToHexCode(new ColorValue(parseInt(isRGBValue[3], 10), parseInt(isRGBValue[4], 10), parseInt(isRGBValue[5], 10)));\n}\n/** @private */\nexport function drawSymbol(location, shape, size, url, options, label) {\n    var functionName = 'Path';\n    var svgRenderer = new SvgRenderer('');\n    var temp = renderLegendShape(location, size, shape, options, url);\n    var htmlElement = svgRenderer['draw' + temp.functionName](temp.renderOption);\n    htmlElement.setAttribute('aria-label', label);\n    return htmlElement;\n}\n/** @private */\nexport function renderLegendShape(location, size, shape, options, url) {\n    var renderPath;\n    var functionName = 'Path';\n    var shapeWidth = size.width;\n    var shapeHeight = size.height;\n    var shapeX = location.x;\n    var shapeY = location.y;\n    var x = location.x + (-shapeWidth / 2);\n    var y = location.y + (-shapeHeight / 2);\n    switch (shape) {\n        case 'Circle':\n        case 'Bubble':\n            functionName = 'Ellipse';\n            merge(options, { 'rx': shapeWidth / 2, 'ry': shapeHeight / 2, 'cx': shapeX, 'cy': shapeY });\n            break;\n        case 'VerticalLine':\n            renderPath = 'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' '\n                + (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Diamond':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + shapeY + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Rectangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Triangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'InvertedTriangle':\n            renderPath = 'M' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX - (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Pentagon':\n            var eq = 72;\n            var xValue = void 0;\n            var yValue = void 0;\n            for (var i = 0; i <= 5; i++) {\n                xValue = (shapeWidth / 2) * Math.cos((Math.PI / 180) * (i * eq));\n                yValue = (shapeWidth / 2) * Math.sin((Math.PI / 180) * (i * eq));\n                if (i === 0) {\n                    renderPath = 'M' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ';\n                }\n                else {\n                    renderPath = renderPath.concat('L' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ');\n                }\n            }\n            renderPath = renderPath.concat('Z');\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Star':\n            renderPath = 'M ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + (location.x - size.width / 2)\n                + ' ' + (location.y + size.height / 6) + ' L ' + (location.x + size.width / 2) + ' ' + (location.y + size.height / 6)\n                + ' L ' + (location.x - size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + location.x + ' ' +\n                (location.y + size.height / 2) + ' L ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' Z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Cross':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' + 'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' ' +\n                (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Image':\n            functionName = 'Image';\n            merge(options, { 'href': url, 'height': shapeHeight, 'width': shapeWidth, x: x, y: y });\n            break;\n    }\n    return { renderOption: options, functionName: functionName };\n}\nexport function isParentItem(data, item) {\n    var isParentItem = false;\n    for (var j = 0; j < data.length; j++) {\n        if (item['levelOrderName'] === data[j]['levelOrderName']) {\n            isParentItem = true;\n            break;\n        }\n    }\n    return isParentItem;\n}\n/**\n * Ajax support for treemap\n */\nvar TreeMapAjax = /** @class */ (function () {\n    function TreeMapAjax(options, type, async, contentType, sendData) {\n        this.dataOptions = options;\n        this.type = type || 'GET';\n        this.async = async || true;\n        this.contentType = contentType;\n        this.sendData = sendData;\n    }\n    return TreeMapAjax;\n}());\nexport { TreeMapAjax };\nexport function removeShape(collection, value) {\n    if (collection.length > 0) {\n        for (var i = 0; i < collection.length; i++) {\n            var item = collection[i];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n        }\n    }\n}\nexport function removeLegend(collection, value) {\n    if (collection.length > 0) {\n        for (var j = 0; j < collection.length; j++) {\n            var item = collection[j];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n            var dataCount = item['ShapeCollection']['Elements'].length;\n            for (var k = 0; k < dataCount; k++) {\n                setColor(item['ShapeCollection']['Elements'][k], item['shapeOldFill'], item['shapeOldOpacity'], item['shapeOldBorderColor'], item['shapeOldBorderWidth']);\n            }\n        }\n    }\n}\nexport function setColor(element, fill, opacity, borderColor, borderWidth) {\n    element.setAttribute('fill', fill);\n    element.setAttribute('opacity', opacity);\n    element.setAttribute('stroke', borderColor);\n    element.setAttribute('stroke-width', borderWidth);\n}\nexport function removeSelectionWithHighlight(collection, element, treemap) {\n    removeShape(collection, 'highlight');\n    element = [];\n    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n}\nexport function getLegendIndex(length, item, treemap) {\n    var index;\n    for (var i = 0; i < length; i++) {\n        var dataLength = treemap.treeMapLegendModule.legendCollections[i]['legendData'].length;\n        for (var j = 0; j < dataLength; j++) {\n            if (treemap.treeMapLegendModule.legendCollections[i]['legendData'][j]['levelOrderName'] === item['levelOrderName']) {\n                index = i;\n                break;\n            }\n        }\n    }\n    return index;\n}\nexport function pushCollection(collection, index, number, legendElement, shapeElement, renderItems, legendCollection) {\n    collection.push({\n        legendEle: legendElement, oldFill: legendCollection[index]['legendFill'],\n        oldOpacity: legendCollection[index]['opacity'], oldBorderColor: legendCollection[index]['borderColor'],\n        oldBorderWidth: legendCollection[index]['borderWidth'],\n        shapeElement: shapeElement, shapeOldFill: renderItems[number]['options']['fill'],\n        shapeOldOpacity: renderItems[number]['options']['opacity'],\n        shapeOldBorderColor: renderItems[number]['options']['border']['color'],\n        shapeOldBorderWidth: renderItems[number]['options']['border']['width']\n    });\n}\n","/**\n * Maps Themes doc\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.mapsTitleFont = {\n        size: '14px',\n        fontWeight: 'Medium',\n        color: '#424242',\n        fontStyle: 'Medium',\n        fontFamily: 'Roboto, Noto, Sans-serif'\n    };\n})(Theme || (Theme = {}));\n/**\n * @private\n * To get the theme style based on treemap theme.\n */\nexport function getThemeStyle(theme) {\n    var style;\n    var color;\n    switch (theme.toLowerCase()) {\n        case 'materialdark':\n            color = '#303030';\n            break;\n        case 'fabricdark':\n            color = '#201F1F';\n            break;\n        case 'bootstrapdark':\n            color = '#1A1A1A';\n            break;\n    }\n    switch (theme.toLowerCase()) {\n        case 'bootstrapdark':\n        case 'fabricdark':\n        case 'materialdark':\n            style = {\n                backgroundColor: color,\n                titleFontColor: '#FFFFFF',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#DADADA',\n                legendTextColor: '#DADADA',\n                fontFamily: 'Roboto, Noto, Sans-serif'\n            };\n            break;\n        case 'highcontrast':\n            style = {\n                backgroundColor: '#000000',\n                titleFontColor: '#FFFFFF',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#FFFFFF',\n                legendTextColor: '#FFFFFF',\n                fontFamily: 'Roboto, Noto, Sans-serif'\n            };\n            break;\n        case 'bootstrap4':\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#212529',\n                subTitleFontColor: '#212529',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                legendTitleColor: '#212529',\n                legendTextColor: '#212529',\n                fontFamily: 'HelveticaNeue-Medium',\n                fontSize: '16px',\n                legendFontSize: '14px',\n                labelFontFamily: 'HelveticaNeue'\n            };\n            break;\n        default:\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#424242',\n                subTitleFontColor: '#424242',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#353535',\n                legendTextColor: '#353535',\n                fontFamily: 'Roboto, Noto, Sans-serif'\n            };\n            break;\n    }\n    return style;\n}\n","/**\n * TreeMap constants doc\n */\n/**\n * Specifies TreeMap load event name.\n * @private\n */\nexport var load = 'load';\n/**\n * Specifies TreeMap loaded event name.\n * @private\n */\nexport var loaded = 'loaded';\n/**\n * Specifies TreeMap beforePrint event name.\n * @private\n */\nexport var beforePrint = 'beforePrint';\n/**\n * Specifies the itemRendering event name.\n * @private\n */\nexport var itemRendering = 'itemRendering';\n/**\n * Specifies the drilldown start event name.\n * @private\n */\nexport var drillStart = 'drillStart';\n/**\n * Specifies the drilldown end event name.\n * @private\n */\nexport var drillEnd = 'drillEnd';\n/**\n * Specifies the item selected event name.\n * @private\n */\nexport var itemSelected = 'itemSelected';\n/**\n * Specifies the item highlight event name.\n * @private\n */\nexport var itemHighlight = 'itemHighlight';\n/**\n * Specifies the tooltip rendering event name.\n * @private\n */\nexport var tooltipRendering = 'tooltipRendering';\n/**\n * Specifies the item click event name.\n * @private\n */\nexport var itemClick = 'itemClick';\n/**\n * Specifies the item move event name.\n * @private\n */\nexport var itemMove = 'itemMove';\n/**\n * Specifies the mouse click event name.\n * @private\n */\nexport var click = 'click';\n/**\n * Specifies maps double click event name.\n * @private\n */\nexport var doubleClick = 'doubleClick';\n/**\n * Specifies maps right click event name.\n * @private\n */\nexport var rightClick = 'rightClick';\n/**\n * Specifies the mouse move event name.\n * @private\n */\nexport var mouseMove = 'mouseMove';\n/**\n * Specifies legend item rendering event name.\n * @private\n */\nexport var legendItemRendering = 'legendItemRendering';\n/**\n * Specifies legend rendering event name.\n * @private\n */\nexport var legendRendering = 'legendRendering';\n/**\n * Specifies treemap resize event name.\n * @private\n */\nexport var resize = 'resize';\n/**\n * Specifies the font family\n * @private\n */\nexport var defaultFont = 'Roboto, Segoe UI, Noto, Sans-serif';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Maps base doc\n */\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { defaultFont } from './constants';\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#808080')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Configures the treemap margin.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Configures the fonts in treemap.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property(defaultFont)\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * To configure title of the maps.\n */\nvar CommonTitleSettings = /** @class */ (function (_super) {\n    __extends(CommonTitleSettings, _super);\n    function CommonTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"description\", void 0);\n    return CommonTitleSettings;\n}(ChildProperty));\nexport { CommonTitleSettings };\n/**\n * To configure subtitle of the maps.\n */\nvar SubTitleSettings = /** @class */ (function (_super) {\n    __extends(SubTitleSettings, _super);\n    function SubTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], SubTitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], SubTitleSettings.prototype, \"alignment\", void 0);\n    return SubTitleSettings;\n}(CommonTitleSettings));\nexport { SubTitleSettings };\n/**\n * To configure title of the maps.\n */\nvar TitleSettings = /** @class */ (function (_super) {\n    __extends(TitleSettings, _super);\n    function TitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ size: '15px' }, Font)\n    ], TitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], TitleSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({}, SubTitleSettings)\n    ], TitleSettings.prototype, \"subtitleSettings\", void 0);\n    return TitleSettings;\n}(CommonTitleSettings));\nexport { TitleSettings };\nvar ColorMapping = /** @class */ (function (_super) {\n    __extends(ColorMapping, _super);\n    function ColorMapping() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"from\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"to\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"label\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"minOpacity\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"maxOpacity\", void 0);\n    __decorate([\n        Property(true)\n    ], ColorMapping.prototype, \"showLegend\", void 0);\n    return ColorMapping;\n}(ChildProperty));\nexport { ColorMapping };\n/**\n * Configures the legend settings.\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Default')\n    ], LegendSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('transparent')\n    ], LegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property('Circle')\n    ], LegendSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], LegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"shapeBorder\", void 0);\n    __decorate([\n        Complex({}, CommonTitleSettings)\n    ], LegendSettings.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], LegendSettings.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Property('Bottom')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"invertedPointer\", void 0);\n    __decorate([\n        Property('After')\n    ], LegendSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"labelDisplayMode\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Property({ x: 0, y: 0 })\n    ], LegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"showLegendPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"valuePath\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"removeDuplicateLegend\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\nvar InitialDrillSettings = /** @class */ (function (_super) {\n    __extends(InitialDrillSettings, _super);\n    function InitialDrillSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupName\", void 0);\n    return InitialDrillSettings;\n}(ChildProperty));\nexport { InitialDrillSettings };\nvar LeafItemSettings = /** @class */ (function (_super) {\n    __extends(LeafItemSettings, _super);\n    function LeafItemSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LeafItemSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LeafItemSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(0)\n    ], LeafItemSettings.prototype, \"gap\", void 0);\n    __decorate([\n        Property(10)\n    ], LeafItemSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property(1)\n    ], LeafItemSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LeafItemSettings.prototype, \"showLabels\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LeafItemSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Complex({ color: null, size: '12px' }, Font)\n    ], LeafItemSettings.prototype, \"labelStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelTemplate\", void 0);\n    __decorate([\n        Property('Center')\n    ], LeafItemSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Property('Trim')\n    ], LeafItemSettings.prototype, \"interSectAction\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LeafItemSettings.prototype, \"colorMapping\", void 0);\n    return LeafItemSettings;\n}(ChildProperty));\nexport { LeafItemSettings };\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('')\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property('#000816')\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(0.75)\n    ], TooltipSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(['Circle'])\n    ], TooltipSettings.prototype, \"markerShapes\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ fontFamily: defaultFont, size: '13px' }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('#808080')\n    ], SelectionSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], SelectionSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], SelectionSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\nvar HighlightSettings = /** @class */ (function (_super) {\n    __extends(HighlightSettings, _super);\n    function HighlightSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], HighlightSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('#808080')\n    ], HighlightSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], HighlightSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], HighlightSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], HighlightSettings.prototype, \"mode\", void 0);\n    return HighlightSettings;\n}(ChildProperty));\nexport { HighlightSettings };\n/**\n * Options for customizing the tree map levels.\n */\nvar LevelSettings = /** @class */ (function (_super) {\n    __extends(LevelSettings, _super);\n    function LevelSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"groupPath\", void 0);\n    __decorate([\n        Property(0)\n    ], LevelSettings.prototype, \"groupGap\", void 0);\n    __decorate([\n        Property(10)\n    ], LevelSettings.prototype, \"groupPadding\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LevelSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LevelSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Property(1)\n    ], LevelSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LevelSettings.prototype, \"showHeader\", void 0);\n    __decorate([\n        Property(20)\n    ], LevelSettings.prototype, \"headerHeight\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerFormat\", void 0);\n    __decorate([\n        Property('Near')\n    ], LevelSettings.prototype, \"headerAlignment\", void 0);\n    __decorate([\n        Complex({ color: null, size: '13px' }, Font)\n    ], LevelSettings.prototype, \"headerStyle\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LevelSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LevelSettings.prototype, \"colorMapping\", void 0);\n    return LevelSettings;\n}(ChildProperty));\nexport { LevelSettings };\n","import { Rect, itemsToOrder, TextOption, measureText, textTrim, hide, wordWrap, textWrap, getTemplateFunction, convertElement, findLabelLocation, PathOption, textFormatter, colorNameToHex, convertHexToColor, colorMap, measureElement, convertToContainer, convertToRect, getShortestEdge, getArea, orderByArea, isParentItem } from '../utils/helper';\nimport { isNullOrUndefined, createElement, extend, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Location, findChildren, renderTextElement } from '../utils/helper';\nimport { itemRendering } from '../model/constants';\n/**\n * To calculate and render the shape layer\n */\nvar LayoutPanel = /** @class */ (function () {\n    function LayoutPanel(treemap) {\n        this.treemap = treemap;\n    }\n    /* tslint:disable:no-string-literal */\n    LayoutPanel.prototype.processLayoutPanel = function () {\n        var data;\n        var totalRect;\n        if (this.treemap.levelsOfData && this.treemap.levelsOfData.length > 0) {\n            data = (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                !isNullOrUndefined(this.treemap.initialDrillDown.groupName)) &&\n                (isNullOrUndefined(this.treemap.drilledItems) ? isNullOrUndefined(this.treemap.drilledItems)\n                    : this.treemap.drilledItems.length === 0) ?\n                this.getDrilldownData(this.treemap.levelsOfData[0], [])[0] : this.treemap.levelsOfData[0];\n            totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n            if (!isNullOrUndefined(this.treemap.treeMapLegendModule) && !isNullOrUndefined(this.treemap.totalRect)) {\n                if (this.treemap.legendSettings.position !== 'Float') {\n                    totalRect = this.treemap.totalRect;\n                }\n            }\n            if (!isNullOrUndefined(this.treemap.currentLevel) &&\n                (isNullOrUndefined(this.treemap.drilledItems) ? !isNullOrUndefined(this.treemap.drilledItems)\n                    : this.treemap.drilledItems.length !== 0)) {\n                var count = this.treemap.drilledItems.length - 1;\n                var x = this.treemap.drilledItems[count]['data'];\n                var y = new Object();\n                y[this.treemap.drilledItems[count]['data']['groupName']] = [x];\n                if (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) && !this.treemap.enableBreadcrumb) {\n                    this.treemap.currentLevel = this.treemap.drilledItems[count]['data']['groupIndex'];\n                }\n                this.calculateLayoutItems(y || this.treemap.levelsOfData[0], totalRect);\n                this.renderLayoutItems(y || this.treemap.levelsOfData[0]);\n            }\n            else {\n                if (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                    (isNullOrUndefined(this.treemap.drilledItems) ? isNullOrUndefined(this.treemap.drilledItems)\n                        : this.treemap.drilledItems.length === 0)) {\n                    this.treemap.currentLevel = this.treemap.initialDrillDown.groupIndex;\n                }\n                this.calculateLayoutItems(data || this.treemap.levelsOfData[0], totalRect);\n                this.renderLayoutItems(data || this.treemap.levelsOfData[0]);\n            }\n        }\n    };\n    LayoutPanel.prototype.getDrilldownData = function (data, drillData) {\n        var treemap = this.treemap;\n        var newData = {};\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0 && drillData.length === 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (child[i]['groupIndex'] === treemap.initialDrillDown.groupIndex &&\n                    child[i]['name'] === treemap.initialDrillDown.groupName) {\n                    child[i]['isDrilled'] = true;\n                    newData[child[i]['groupName']] = [child[i]];\n                    drillData.push(newData);\n                }\n            }\n            for (var j = 0; j < child.length; j++) {\n                this.getDrilldownData(child[j], drillData);\n            }\n        }\n        return drillData;\n    };\n    LayoutPanel.prototype.calculateLayoutItems = function (data, rect) {\n        this.renderItems = [];\n        this.parentData = [];\n        if (!isNullOrUndefined(this.treemap.weightValuePath)) {\n            if (this.treemap.layoutType.indexOf('SliceAndDice') > -1) {\n                this.computeSliceAndDiceDimensional(data, rect);\n            }\n            else {\n                rect.height = rect.height + rect.y;\n                rect.width = rect.width + rect.x;\n                this.computeSquarifyDimensional(data, rect);\n            }\n        }\n    };\n    LayoutPanel.prototype.computeSliceAndDiceDimensional = function (data, coords) {\n        var leafItem = this.treemap.leafItemSettings;\n        var rect;\n        var groups = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        var children = findChildren(data)['values'];\n        var gap;\n        var headerHeight;\n        if (children && children.length > 0) {\n            this.sliceAndDiceProcess(children, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < children.length; i++) {\n                    groupIndex = children[i]['groupIndex'];\n                    isLeafItem = (groups.length === 0 || groupIndex === groups.length);\n                    gap = isLeafItem ? leafItem.gap : groups[groupIndex].groupGap;\n                    headerHeight = groups.length === 0 ? 0 : groups[groupIndex] ? groups[groupIndex].showHeader ?\n                        groups[groupIndex].headerHeight : 0 : groups[groupIndex - 1].showHeader ? groups[groupIndex - 1].headerHeight : 0;\n                    rect = children[i]['rect'];\n                    rect = new Rect(rect.x + (gap / 2), rect.y + (headerHeight + (gap / 2)), rect.width - gap, Math.abs(rect.height - (gap + headerHeight)));\n                    this.computeSliceAndDiceDimensional(children[i], rect);\n                }\n            }\n        }\n        return data;\n    };\n    LayoutPanel.prototype.sliceAndDiceProcess = function (processData, rect) {\n        var parentArea = rect.height * rect.width;\n        var levels = this.treemap.levels;\n        var childValue;\n        var alottedValue = 0;\n        var totalWeight = 0;\n        processData.forEach(function (data) { totalWeight += data['weight']; });\n        processData.forEach(function (child) {\n            child['weightArea'] = parentArea * child['weight'] / totalWeight;\n        });\n        var isHorizontal = (this.treemap.layoutType === 'SliceAndDiceAuto') ? (rect.width > rect.height) :\n            (this.treemap.layoutType === 'SliceAndDiceHorizontal');\n        processData.sort(itemsToOrder);\n        for (var i = 0; i < processData.length; i++) {\n            var item = processData[i];\n            item['isLeafItem'] = (levels.length === 0) || ((this.treemap.isHierarchicalData ||\n                isNullOrUndefined(this.treemap.leafItemSettings.labelPath)) ?\n                item['groupIndex'] === levels.length - 1 : item['groupIndex'] === this.treemap.levels.length);\n            if (isHorizontal) {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.height;\n                if (alottedValue <= rect.width) {\n                    processData[i]['rect'] = new Rect(alottedValue + rect.x, rect.y, childValue, rect.height);\n                }\n            }\n            else {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.width;\n                if (alottedValue <= rect.height) {\n                    processData[i]['rect'] = new Rect(rect.x, alottedValue + rect.y, rect.width, childValue);\n                }\n            }\n            alottedValue += childValue;\n            this.renderItems.push(processData[i]);\n        }\n    };\n    LayoutPanel.prototype.computeSquarifyDimensional = function (data, coords) {\n        var leaf = this.treemap.leafItemSettings;\n        var rect;\n        var levels = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        var item;\n        var child = findChildren(data)['values'];\n        var index;\n        var gap;\n        var padding;\n        var headerHeight;\n        if (child && child.length > 0) {\n            if (this.parentData.length === 0) {\n                this.parentData = [];\n                this.parentData.push(child);\n            }\n            this.calculateChildrenLayout(data, child, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    item = child[i];\n                    index = item['groupIndex'];\n                    rect = item['rect'];\n                    gap = (item['isLeafItem'] ? leaf.gap : levels[index].groupGap) / 2;\n                    padding = (item['isLeafItem'] ? leaf.padding : levels[index].groupPadding) / 2;\n                    headerHeight = this.treemap.isHierarchicalData ? index === 0 && item['isLeafItem'] ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0 : (levels.length === 0) ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0;\n                    rect = new Rect(rect.x + padding, rect.y + (headerHeight + padding), rect.width - padding, rect.height - padding);\n                    if (!item['isLeafItem'] && item['weight'] > 0) {\n                        this.computeSquarifyDimensional(child[i], rect);\n                    }\n                }\n            }\n        }\n    };\n    LayoutPanel.prototype.calculateChildrenLayout = function (parent, children, coords) {\n        this.computeTotalArea(children, getArea(coords));\n        children.sort(orderByArea);\n        this.performRowsLayout(children, [], coords, []);\n    };\n    LayoutPanel.prototype.performRowsLayout = function (data, currentRow, rect, stack) {\n        var dataLength = data.length;\n        if (dataLength === 0) {\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            var newStack = stack.concat(newCoordinates);\n            return newStack;\n        }\n        var width = getShortestEdge(rect);\n        var nextDatum = data[0];\n        var restData = data.slice(1, dataLength);\n        if (this.aspectRatio(currentRow, nextDatum, width)) {\n            var newRow = currentRow.concat(nextDatum);\n            return this.performRowsLayout(restData, newRow, rect, stack);\n        }\n        else {\n            var currentRowLength = currentRow.length;\n            var valueSum = 0;\n            for (var i = 0; i < currentRowLength; i += 1) {\n                valueSum += currentRow[i]['itemArea'];\n            }\n            var newContainer = this.cutArea(rect, valueSum);\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            var newStack = stack.concat(newCoordinates);\n            return this.performRowsLayout(data, [], newContainer, newStack);\n        }\n    };\n    LayoutPanel.prototype.aspectRatio = function (currentRow, nextDatum, length) {\n        if (currentRow.length === 0) {\n            return true;\n        }\n        else {\n            var newRow = currentRow.concat(nextDatum);\n            var currentMaxAspectRatio = this.findMaxAspectRatio(currentRow, length);\n            var newMaxAspectRatio = this.findMaxAspectRatio(newRow, length);\n            return (currentMaxAspectRatio >= newMaxAspectRatio);\n        }\n    };\n    LayoutPanel.prototype.findMaxAspectRatio = function (row, length) {\n        var rowLength = row.length;\n        var minArea = Infinity;\n        var maxArea = -Infinity;\n        var sumArea = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            var area = row[i]['itemArea'];\n            if (area < minArea) {\n                minArea = area;\n            }\n            if (area > maxArea) {\n                maxArea = area;\n            }\n            sumArea += area;\n        }\n        var result = Math.max((Math.pow(length, 2)) * maxArea / (Math.pow(sumArea, 2)), (Math.pow(sumArea, 2)) /\n            ((Math.pow(length, 2)) * minArea));\n        return result;\n    };\n    LayoutPanel.prototype.cutArea = function (rect, area) {\n        var newContainer = convertToContainer(rect);\n        var width = newContainer.width;\n        var height = newContainer.height;\n        var xOffset = newContainer.x;\n        var yOffset = newContainer.y;\n        if (width >= height) {\n            var areaWidth = area / height;\n            var newWidth = width - areaWidth;\n            var container = {\n                x: xOffset + areaWidth,\n                y: yOffset,\n                width: newWidth,\n                height: height,\n            };\n            return convertToRect(container);\n        }\n        else {\n            var areaHeight = area / width;\n            var newHeight = height - areaHeight;\n            var container = {\n                x: xOffset,\n                y: yOffset + areaHeight,\n                width: width,\n                height: newHeight,\n            };\n            return convertToRect(container);\n        }\n    };\n    LayoutPanel.prototype.getCoordinates = function (row, rect) {\n        var container = convertToContainer(rect);\n        var headerHeight;\n        var width = container.width;\n        var height = container.height;\n        var xOffset = container.x;\n        var yOffset = container.y;\n        var rowLength = row.length;\n        var levels = this.treemap.levels;\n        var leaf = this.treemap.leafItemSettings;\n        var index;\n        var valueSum = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            valueSum += row[i]['itemArea'];\n        }\n        var areaWidth = valueSum / height;\n        var areaHeight = valueSum / width;\n        var subXOffset = xOffset;\n        var subYOffset = yOffset;\n        var padding;\n        var coordinates = [];\n        var isParent;\n        var gap;\n        var parentRect;\n        for (var i = 0; i < rowLength; i += 1) {\n            var item = row[i];\n            index = item['groupIndex'];\n            item['isLeafItem'] = (levels.length === 0) || (this.treemap.isHierarchicalData ? index === levels.length :\n                isNullOrUndefined(leaf.labelPath) ? false : index === levels.length);\n            isParent = isParentItem(this.parentData[0], item);\n            parentRect = isParent ? this.treemap.areaRect : item['parent'].rect;\n            padding = item['isLeafItem'] ? leaf.padding : levels[index].groupPadding;\n            if (width >= height) {\n                var y1 = subYOffset + item['itemArea'] / areaWidth;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: subXOffset + areaWidth,\n                    height: y1,\n                };\n                subYOffset = y1;\n            }\n            else {\n                var x1 = subXOffset + item['itemArea'] / areaHeight;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: x1,\n                    height: subYOffset + areaHeight,\n                };\n                subXOffset = x1;\n            }\n            if (item['weight'] > 0 && (isParent || (Math.round(rect.y + (padding / 2)) <=\n                Math.round(parentRect.y + (parentRect.height - parentRect.y)) && Math.round(rect.x + (padding / 2)) <=\n                Math.round(parentRect.x + (parentRect.width - parentRect.x))))) {\n                this.renderItems.push(item);\n                coordinates.push(item);\n            }\n        }\n        return coordinates;\n    };\n    LayoutPanel.prototype.computeTotalArea = function (data, area) {\n        var dataLength = data.length;\n        var dataSum = 0;\n        var result = [];\n        for (var i = 0; i < dataLength; i += 1) {\n            var dataLength_1 = data.length;\n            var dataSum_1 = 0;\n            for (var i_1 = 0; i_1 < dataLength_1; i_1 += 1) {\n                dataSum_1 += data[i_1]['weight'];\n            }\n            var multiplier = area / dataSum_1;\n            var datum = void 0;\n            for (var j = 0; j < dataLength_1; j++) {\n                datum = data[j];\n                datum['itemArea'] = datum['weight'] * multiplier;\n                result.push(datum);\n            }\n        }\n        return result;\n    };\n    LayoutPanel.prototype.onDemandProcess = function (childItems) {\n        var parentItem = new Object();\n        var totalRect;\n        parentItem = childItems[0]['parent'];\n        this.treemap.currentLevel = parentItem['isDrilled'] ? parentItem['groupIndex'] : null;\n        var parentItemGroupname = new Object();\n        if (isNullOrUndefined(parentItem['groupName'])) {\n            parentItemGroupname = parentItem;\n        }\n        else {\n            parentItemGroupname[parentItem['groupName']] = [parentItem];\n        }\n        totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n        if (!isNullOrUndefined(this.treemap.treeMapLegendModule) && !isNullOrUndefined(this.treemap.totalRect)) {\n            totalRect = this.treemap.totalRect;\n        }\n        var count = this.treemap.levels.length;\n        for (var i = 0; i < count; i++) {\n            var levelCount = childItems[0]['groupIndex'];\n            if (count === levelCount) {\n                this.treemap.levels[count] = this.treemap.levels[i];\n            }\n            else {\n                this.treemap.levels.splice(count - 1, 1);\n            }\n        }\n        this.calculateLayoutItems(parentItemGroupname, totalRect);\n        this.renderLayoutItems(parentItemGroupname);\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    LayoutPanel.prototype.renderLayoutItems = function (renderData) {\n        var _this = this;\n        var textCollection = [];\n        var position;\n        var treeMap = this.treemap;\n        var colorMapping;\n        var txtVisible;\n        var getItemColor;\n        var eventArgs;\n        this.renderer = treeMap.renderer;\n        var trimHeader;\n        var textLocation = new Location(0, 0);\n        var pathOptions;\n        var elementID = treeMap.element.id;\n        var index;\n        var templatePosition;\n        var mode = treeMap.layoutType;\n        var rect;\n        var format;\n        var interSectAction = this.treemap.leafItemSettings.interSectAction;\n        var textSize;\n        var fill;\n        var item;\n        var renderText;\n        var opacity;\n        var padding = 5;\n        var rectPath = '';\n        var isRender;\n        var secondaryEle = document.getElementById(treeMap.element.id + '_Secondary_Element');\n        var groupId;\n        var textOptions;\n        var templateEle;\n        var gap;\n        var textStyle;\n        var levels = treeMap.levels;\n        this.layoutGroup = this.renderer.createGroup({ id: elementID + '_TreeMap_' + mode + '_Layout' });\n        var itemGroup;\n        var level;\n        var template;\n        var border;\n        var templateGroup = createElement('div', {\n            id: treeMap.element.id + '_Label_Template_Group',\n            className: 'template',\n            styles: 'overflow: hidden; position: absolute;pointer-events: none;' +\n                'top:' + treeMap.areaRect.y + 'px;' +\n                'left:' + treeMap.areaRect.x + 'px;' +\n                'height:' + treeMap.areaRect.height + 'px;' +\n                'width:' + treeMap.areaRect.width + 'px;'\n        });\n        var isLeafItem = false;\n        var leaf = treeMap.leafItemSettings;\n        var childItems;\n        var connectorText;\n        var _loop_1 = function (i) {\n            item = this_1.renderItems[i];\n            index = item['groupIndex'];\n            if (this_1.treemap.drillDownView && isNullOrUndefined(this_1.treemap.currentLevel)\n                && index > 0 || this_1.treemap.drillDownView\n                && index > (this_1.treemap.currentLevel + 1)) {\n                return \"continue\";\n            }\n            rect = item['rect'];\n            isLeafItem = item['isLeafItem'];\n            groupId = elementID + '_Level_Index_' + index + '_Item_Index_' + i;\n            itemGroup = this_1.renderer.createGroup({ id: groupId + '_Group' });\n            gap = (isLeafItem ? leaf.gap : levels[index].groupGap) / 2;\n            var treemapItemRect = this_1.treemap.totalRect ? convertToContainer(this_1.treemap.totalRect) : this_1.treemap.areaRect;\n            if (treeMap.layoutType === 'Squarified') {\n                rect.width = Math.abs(rect.x - rect.width) - gap;\n                rect.height = Math.abs(rect.y - rect.height) - gap;\n            }\n            if (treeMap.renderDirection === 'TopRightBottomLeft') {\n                rect.x = (treemapItemRect.x + treemapItemRect.width) - rect.width - Math.abs(treemapItemRect.x - rect.x);\n            }\n            else if (treeMap.renderDirection === 'BottomLeftTopRight') {\n                rect.y = (treemapItemRect.y + treemapItemRect.height) - rect.height - Math.abs(treemapItemRect.y - rect.y);\n            }\n            else if (treeMap.renderDirection === 'BottomRightTopLeft') {\n                rect.x = (treemapItemRect.x + treemapItemRect.width) - rect.width - Math.abs(treemapItemRect.x - rect.x);\n                rect.y = (treemapItemRect.y + treemapItemRect.height) - rect.height - Math.abs(treemapItemRect.y - rect.y);\n            }\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[index].colorMapping;\n            getItemColor = this_1.getItemColor(isLeafItem, item);\n            fill = getItemColor['fill'];\n            opacity = getItemColor['opacity'];\n            format = isLeafItem ? leaf.labelFormat : (levels[index]).headerFormat;\n            var levelName = void 0;\n            txtVisible = isLeafItem ? leaf.showLabels : (levels[index]).showHeader;\n            if (index === this_1.treemap.currentLevel) {\n                if (this_1.treemap.enableBreadcrumb) {\n                    var re = /#/gi;\n                    connectorText = '#' + this_1.treemap.breadcrumbConnector + '#';\n                    levelName = item['levelOrderName'].replace(re, connectorText);\n                    levelName = index !== 0 ? '#' + levelName : levelName;\n                }\n                else {\n                    levelName = item['name'];\n                }\n            }\n            else {\n                if (this_1.treemap.enableBreadcrumb) {\n                    item['isDrilled'] = false;\n                }\n                levelName = item['name'];\n            }\n            renderText = textFormatter(format, item['data'], this_1.treemap) || levelName;\n            childItems = findChildren(item)['values'];\n            renderText = !isLeafItem && childItems && childItems.length > 0 && this_1.treemap.enableDrillDown ?\n                !item['isDrilled'] ? treeMap.enableRtl ? renderText + ' [+]' : '[+] ' + renderText :\n                    treeMap.enableRtl ? renderText + ' [-]' : '[-] ' + renderText : renderText;\n            textStyle = (isLeafItem ? leaf.labelStyle : levels[index].headerStyle);\n            textStyle.fontFamily = this_1.treemap.themeStyle.labelFontFamily || textStyle.fontFamily;\n            border = isLeafItem ? leaf.border : levels[index].border;\n            position = !isLeafItem ? (levels[index].headerAlignment) === 'Near' ? 'TopLeft' : (levels[index].headerAlignment) === 'Center' ?\n                'TopCenter' : 'TopRight' : leaf.labelPosition;\n            templatePosition = isLeafItem ? leaf.templatePosition : levels[index].templatePosition;\n            template = isLeafItem ? leaf.labelTemplate : levels[index].headerTemplate;\n            item['options'] = { border: border, opacity: opacity, fill: fill };\n            eventArgs = {\n                cancel: false, name: itemRendering, treemap: this_1.treemap,\n                currentItem: item, RenderItems: this_1.renderItems, options: item['options']\n            };\n            this_1.treemap.trigger(itemRendering, eventArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    rectPath = ' M ' + rect.x + ' ' + rect.y + ' L ' + (rect.x + rect.width) + ' ' + rect.y +\n                        ' L ' + (rect.x + rect.width) + ' ' + (rect.y + rect.height) + ' L ' + rect.x + ' ' + (rect.y + rect.height) + 'z';\n                    pathOptions = new PathOption(groupId + '_RectPath', fill, border.width, border.color, opacity, null, rectPath);\n                    var path = _this.renderer.drawPath(pathOptions);\n                    itemGroup.appendChild(path);\n                    if (txtVisible) {\n                        _this.renderItemText(renderText.toString(), itemGroup, textStyle, rect, interSectAction, groupId, fill, position, connectorText);\n                    }\n                    if (template) {\n                        templateEle = _this.renderTemplate(secondaryEle, groupId, rect, templatePosition, template, item);\n                        templateGroup.appendChild(templateEle);\n                    }\n                    itemGroup.setAttribute('aria-label', item['name']);\n                    itemGroup.setAttribute('tabindex', (_this.treemap.tabIndex + i + 2).toString());\n                    _this.layoutGroup.appendChild(itemGroup);\n                }\n            });\n        };\n        var this_1 = this;\n        for (var i = 0; i < this.renderItems.length; i++) {\n            _loop_1(i);\n        }\n        if (templateGroup.childNodes.length > 0) {\n            secondaryEle.appendChild(templateGroup);\n            if (leaf.labelTemplate) {\n                for (var i = 0; i < templateGroup.childElementCount; i++) {\n                    updateBlazorTemplate(templateGroup.children[i].id, 'LabelTemplate');\n                }\n            }\n            else {\n                for (var j = 0; j < templateGroup.childElementCount; j++) {\n                    updateBlazorTemplate(templateGroup.children[j].id, 'HeaderTemplate');\n                }\n            }\n        }\n        this.treemap.svgObject.appendChild(this.layoutGroup);\n    };\n    LayoutPanel.prototype.renderItemText = function (text, parentElement, textStyle, rect, interSectAction, groupId, fill, position, connectorText) {\n        var level;\n        var textOptions;\n        var headerPosition;\n        var secondaryEle = document.getElementById(this.treemap.element.id + '_Secondary_Element');\n        var leaf = this.treemap.leafItemSettings;\n        var padding = 5;\n        var textSize;\n        var textLocation;\n        var textCollection = [];\n        var customText;\n        var templateEle;\n        var tspanText = [];\n        var height = 0;\n        var textName;\n        textCollection = ((text.indexOf('<br>')) !== -1) ? text.split('<br>') : null;\n        customText = this.labelInterSectAction(rect, text, textStyle, interSectAction);\n        textSize = measureText(textCollection && textCollection[0] || customText[0], textStyle);\n        if (this.treemap.enableRtl) {\n            var labelSize = measureText(text, textStyle);\n            var drillSymbolCount = text.search('[+]') || text.search('[-]');\n            if (rect.width < labelSize.width && drillSymbolCount > 0) {\n                var label = text.substring(drillSymbolCount - 1, text.length);\n                var drillSymbol = '[+]';\n                var drillSymbolSize = measureText(drillSymbol, textStyle);\n                customText['0'] = textTrim(rect.width - drillSymbolSize.width - padding, customText[0], textStyle) + label;\n            }\n        }\n        textLocation = findLabelLocation(rect, position, textSize, 'Text', this.treemap);\n        if (!isNullOrUndefined(textCollection)) {\n            var collection = [];\n            var texts = null;\n            var maxNumber = [];\n            for (var i = 0; i < textCollection.length; i++) {\n                texts = textTrim((rect.width - 5), textCollection[i], textStyle);\n                textSize = measureText(texts, textStyle);\n                height += textSize.height;\n                maxNumber.push(textSize.width);\n                collection.push(texts);\n            }\n            customText = collection;\n            textSize.width = Math.max.apply(null, maxNumber);\n            textSize.height = height;\n        }\n        if (interSectAction === 'WrapByWord' || interSectAction === 'Wrap' || interSectAction === 'Trim') {\n            for (var j = 0; j < customText.length; j++) {\n                textSize = measureText(customText[j], textStyle);\n                height += textSize.height;\n                if ((rect.height - padding) > height) {\n                    tspanText.push(customText[j]);\n                }\n            }\n            if (interSectAction === 'Wrap' && customText.length !== tspanText.length && tspanText.length) {\n                var collectionLength = tspanText.length - 1;\n                var stringText = tspanText[collectionLength];\n                stringText = stringText.substring(0, (stringText.length - 1)) + '...';\n                tspanText.splice(collectionLength);\n                if (stringText !== '...') {\n                    tspanText.push(stringText);\n                }\n            }\n        }\n        else {\n            textName = customText;\n            tspanText.push(textName);\n        }\n        textOptions = new TextOption(groupId + '_Text', textLocation.x, textLocation.y, 'start', tspanText, '', '', connectorText);\n        renderTextElement(textOptions, textStyle, textStyle.color || this.getSaturatedColor(fill), parentElement);\n    };\n    LayoutPanel.prototype.getItemColor = function (isLeafItem, item) {\n        var treemap = this.treemap;\n        var itemFill = isLeafItem ? treemap.leafItemSettings.fill : treemap.levels[item['groupIndex']].fill;\n        var itemOpacity = isLeafItem ? treemap.leafItemSettings.opacity : treemap.levels[item['groupIndex']].opacity;\n        if (!isNullOrUndefined(this.treemap.defaultLevelData)) {\n            if (this.treemap.defaultLevelData.length > 0) {\n                treemap.levelsOfData = this.treemap.defaultLevelData;\n            }\n        }\n        var parentData = findChildren(treemap.levelsOfData[0])['values'];\n        var colorMapping = isLeafItem ? treemap.leafItemSettings.colorMapping :\n            treemap.levels[item['groupIndex']].colorMapping;\n        if (colorMapping.length > 0) {\n            var option = colorMap(colorMapping, item['data'][this.treemap.equalColorValuePath], item['data'][this.treemap.rangeColorValuePath], item['data'][this.treemap.weightValuePath]);\n            itemFill = !isNullOrUndefined(option['fill']) ? option['fill'] : treemap.leafItemSettings.fill;\n            itemOpacity = option['opacity'];\n        }\n        else {\n            for (var i = 0; i < parentData.length; i++) {\n                if (parentData[i]['levelOrderName'] === item['levelOrderName'].split('#')[0]) {\n                    itemFill = !isNullOrUndefined(itemFill) ? itemFill : !isNullOrUndefined(treemap.colorValuePath) ?\n                        parentData[i]['data'][treemap.colorValuePath] : treemap.palette.length > 0 ?\n                        treemap.palette[i % treemap.palette.length] : '#808080';\n                }\n            }\n        }\n        return { fill: itemFill, opacity: itemOpacity };\n    };\n    /**\n     * To find saturated color for datalabel\n     */\n    LayoutPanel.prototype.getSaturatedColor = function (color) {\n        var saturatedColor = color;\n        saturatedColor = (saturatedColor === 'transparent') ? window.getComputedStyle(document.body, null).backgroundColor : saturatedColor;\n        var rgbValue = convertHexToColor(colorNameToHex(saturatedColor));\n        var contrast = Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000);\n        return contrast >= 128 ? 'black' : 'white';\n    };\n    LayoutPanel.prototype.renderTemplate = function (secondaryEle, groupId, rect, position, template, item) {\n        var templateElement;\n        var labelEle;\n        var templateSize;\n        var templateFn;\n        var templateLocation;\n        if (isNullOrUndefined(template['prototype'])) {\n            var keys = Object.keys(item['data']);\n            for (var i = 0; i < keys.length; i++) {\n                template = template.replace(new RegExp('{{:' + keys[i] + '}}', 'g'), item['data'][keys[i].toString()]);\n            }\n        }\n        templateFn = getTemplateFunction(template);\n        templateElement = templateFn(item['data'], this.treemap);\n        labelEle = convertElement(templateElement, groupId + '_Template', item['data']);\n        templateSize = measureElement(labelEle, secondaryEle);\n        templateLocation = findLabelLocation(rect, position, templateSize, 'Template', this.treemap);\n        labelEle.style.left = templateLocation.x + 'px';\n        labelEle.style.top = templateLocation.y + 'px';\n        return labelEle;\n    };\n    LayoutPanel.prototype.labelInterSectAction = function (rect, text, textStyle, alignment) {\n        var textValue;\n        var maxWidth = rect.width - 10;\n        switch (alignment) {\n            case 'Hide':\n                textValue = [hide(maxWidth, rect.height, text, textStyle)];\n                break;\n            case 'Trim':\n                textValue = [textTrim((maxWidth + 3), text, textStyle)];\n                break;\n            case 'WrapByWord':\n                textValue = wordWrap(maxWidth, text, textStyle);\n                break;\n            case 'Wrap':\n                textValue = textWrap(maxWidth, text, textStyle);\n                break;\n        }\n        return textValue;\n    };\n    return LayoutPanel;\n}());\nexport { LayoutPanel };\n","import { print as printWindow, createElement, isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { getElement } from '../utils/helper';\nimport { beforePrint } from '../model/constants';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\n/**\n * Annotation Module handles the Annotation for Maps\n */\nvar ExportUtils = /** @class */ (function () {\n    /**\n     * Constructor for Maps\n     * @param control\n     */\n    function ExportUtils(control) {\n        this.control = control;\n    }\n    /**\n     * To print the Maps\n     * @param elements\n     */\n    ExportUtils.prototype.print = function (elements) {\n        this.printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        this.printWindow.moveTo(0, 0);\n        this.printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        var argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(elements), name: beforePrint\n        };\n        this.control.trigger(beforePrint, argsData);\n        if (!argsData.cancel) {\n            printWindow(argsData.htmlContent, this.printWindow);\n        }\n    };\n    /**\n     * To get the html string of the Maps\n     * @param elements\n     * @private\n     */\n    ExportUtils.prototype.getHTMLContent = function (elements) {\n        var div = createElement('div');\n        if (elements) {\n            if (elements instanceof Array) {\n                elements.forEach(function (value) {\n                    div.appendChild(getElement(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            div.appendChild(this.control.element.cloneNode(true));\n        }\n        return div;\n    };\n    /**\n     * To export the file as image/svg format\n     * @param type\n     * @param fileName\n     */\n    ExportUtils.prototype.export = function (type, fileName, orientation) {\n        var _this = this;\n        var element = createElement('canvas', {\n            id: 'ej2-canvas',\n            attrs: {\n                'width': this.control.availableSize.width.toString(),\n                'height': this.control.availableSize.height.toString()\n            }\n        });\n        var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n        orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n        var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n            this.control.svgObject.outerHTML +\n            '</svg>';\n        var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n            [(new XMLSerializer()).serializeToString(this.control.svgObject)], { type: 'image/svg+xml' }));\n        if (type === 'SVG') {\n            this.triggerDownload(fileName, type, url, isDownload);\n        }\n        else {\n            var image_1 = new Image();\n            var ctx_1 = element.getContext('2d');\n            image_1.onload = (function () {\n                ctx_1.drawImage(image_1, 0, 0);\n                window.URL.revokeObjectURL(url);\n                if (type === 'PDF') {\n                    var document_1 = new PdfDocument();\n                    var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                    document_1.pageSettings.orientation = orientation;\n                    imageString = imageString.slice(imageString.indexOf(',') + 1);\n                    document_1.pages.add().graphics.drawImage(new PdfBitmap(imageString), 0, 0, (_this.control.availableSize.width - 60), _this.control.availableSize.height);\n                    if (isDownload) {\n                        document_1.save(fileName + '.pdf');\n                        document_1.destroy();\n                    }\n                }\n                else {\n                    _this.triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                }\n            });\n            image_1.src = url;\n        }\n    };\n    /**\n     * To trigger the download element\n     * @param fileName\n     * @param type\n     * @param url\n     */\n    ExportUtils.prototype.triggerDownload = function (fileName, type, url, isDownload) {\n        createElement('a', {\n            attrs: {\n                'download': fileName + '.' + type.toLocaleLowerCase(),\n                'href': url\n            }\n        }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n            view: window,\n            bubbles: false,\n            cancelable: true\n        }));\n    };\n    return ExportUtils;\n}());\nexport { ExportUtils };\n","/**\n * Tree Map Component\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, NotifyPropertyChanges, Property, extend, Ajax } from '@syncfusion/ej2-base';\nimport { Complex, Collection } from '@syncfusion/ej2-base';\nimport { Event, Internationalization } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { isNullOrUndefined, createElement, EventHandler, Browser, remove } from '@syncfusion/ej2-base';\nimport { Border, Margin, TitleSettings, LegendSettings, InitialDrillSettings } from './model/base';\nimport { SelectionSettings, TooltipSettings, LevelSettings, LeafItemSettings, HighlightSettings, } from './model/base';\nimport { Size, stringToNumber, RectOption, Rect, textTrim, measureText, findChildren } from '../treemap/utils/helper';\nimport { removeClassNames, removeShape } from '../treemap/utils/helper';\nimport { findPosition, TextOption, renderTextElement, isContainsData, TreeMapAjax } from '../treemap/utils/helper';\nimport { load, loaded, drillStart, drillEnd } from '../treemap/model/constants';\nimport { itemClick, itemMove, click, mouseMove, resize, doubleClick, rightClick } from '../treemap/model/constants';\nimport { LayoutPanel } from './layout/render-panel';\nimport { ExportUtils } from '../treemap/utils/export';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { getThemeStyle } from './model/theme';\n/**\n * Represents the TreeMap control.\n * ```html\n * <div id=\"container\"/>\n * <script>\n *   var treemap = new TreeMap();\n *   treemap.appendTo(\"#container\");\n * </script>\n * ```\n */\nvar TreeMap = /** @class */ (function (_super) {\n    __extends(TreeMap, _super);\n    /**s\n     * Constructor for TreeMap component.\n     */\n    function TreeMap(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.orientation = 'Horizontal';\n        /** @private */\n        _this.drilledItems = [];\n        /** @private */\n        _this.defaultLevelData = [];\n        /** @private */\n        _this.isHierarchicalData = false;\n        return _this;\n    }\n    TreeMap.prototype.preRender = function () {\n        var blazor = 'Blazor';\n        this.isBlazor = window[blazor];\n        this.trigger(load, { treemap: this });\n        this.initPrivateVariable();\n        this.unWireEVents();\n        this.createSvg();\n        this.wireEVents();\n        this.setCulture();\n    };\n    TreeMap.prototype.render = function () {\n        this.createSecondaryElement();\n        this.addTabIndex();\n        this.themeStyle = getThemeStyle(this.theme);\n        this.renderBorder();\n        this.renderTitle(this.titleSettings, 'title', null, null);\n        if (!isNullOrUndefined(this.levelsOfData)) {\n            this.defaultLevelData = this.levelsOfData;\n        }\n        this.processDataManager();\n    };\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable:no-eval */\n    TreeMap.prototype.processDataManager = function () {\n        var _this = this;\n        var dataModule;\n        var queryModule;\n        var ajaxModule;\n        var localAjax;\n        if (this.dataSource instanceof DataManager) {\n            dataModule = this.dataSource;\n            queryModule = this.query instanceof Query ? this.query : new Query();\n            var dataManager = dataModule.executeQuery(queryModule);\n            dataManager.then(function (e) {\n                _this.dataSource = e['result'];\n                _this.renderTreeMapElements();\n            });\n        }\n        else if (this.dataSource instanceof TreeMapAjax) {\n            localAjax = this.dataSource;\n            ajaxModule = new Ajax(localAjax.dataOptions, localAjax.type, localAjax.async, localAjax.contentType);\n            ajaxModule.onSuccess = function (args) {\n                _this.dataSource = JSON.parse('[' + args + ']')[0];\n                _this.renderTreeMapElements();\n            };\n            ajaxModule.send(localAjax.sendData);\n        }\n        else {\n            this.renderTreeMapElements();\n        }\n    };\n    TreeMap.prototype.renderTreeMapElements = function () {\n        this.processingData();\n        if (this.treeMapLegendModule && this.legendSettings.visible) {\n            this.treeMapLegendModule.renderLegend();\n        }\n        this.layout.processLayoutPanel();\n        this.element.appendChild(this.svgObject);\n        this.elementChange();\n        this.trigger(loaded, this.isBlazor ? {} : { treemap: this });\n    };\n    TreeMap.prototype.createSvg = function () {\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n        var containerWidth = this.element.clientWidth;\n        var containerHeight = this.element.clientHeight;\n        this.availableSize = new Size(stringToNumber(this.width, containerWidth) || containerWidth || 600, stringToNumber(this.height, containerHeight) || containerHeight || 450);\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To initilize the private varibales of treemap.\n     */\n    TreeMap.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-treemap').length;\n            this.element.id = 'treemap_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.layout = new LayoutPanel(this);\n    };\n    TreeMap.prototype.createSecondaryElement = function () {\n        var secondaryEle = document.getElementById(this.element.id + '_Secondary_Element');\n        if (secondaryEle && secondaryEle.childElementCount > 0) {\n            secondaryEle.remove();\n        }\n        if (isNullOrUndefined(document.getElementById(this.element.id + '_Secondary_Element'))) {\n            var secondaryElement = createElement('div', {\n                id: this.element.id + '_Secondary_Element',\n                styles: 'position: absolute;z-index:1;'\n            });\n            this.element.appendChild(secondaryElement);\n        }\n    };\n    TreeMap.prototype.elementChange = function () {\n        if (this.treeMapLegendModule && this.legendSettings.visible && this.treeMapLegendModule.legendGroup && this.layout.layoutGroup) {\n            this.svgObject.insertBefore(this.layout.layoutGroup, this.treeMapLegendModule.legendGroup);\n        }\n    };\n    /**\n     * @private\n     * Render the treemap border\n     */\n    TreeMap.prototype.renderBorder = function () {\n        var width = this.border.width;\n        var borderElement = this.svgObject.querySelector('#' + this.element.id + '_TreeMap_Border');\n        if ((this.border.width > 0 || (this.background || this.themeStyle.backgroundColor)) && isNullOrUndefined(borderElement)) {\n            var borderRect = new RectOption(this.element.id + '_TreeMap_Border', this.background || this.themeStyle.backgroundColor, this.border, 1, new Rect(width / 2, width / 2, this.availableSize.width - width, this.availableSize.height - width));\n            this.svgObject.appendChild(this.renderer.drawRectangle(borderRect));\n        }\n        else if (borderElement) {\n            borderElement.setAttribute('fill', this.background || this.themeStyle.backgroundColor);\n        }\n    };\n    TreeMap.prototype.renderTitle = function (title, type, bounds, groupEle) {\n        var style = title.textStyle;\n        var height;\n        var titlePadding = 10;\n        var width = (this.availableSize.width - this.margin.right - this.margin.left);\n        title.textStyle.fontFamily = this.themeStyle.fontFamily || title.textStyle.fontFamily;\n        title.textStyle.size = this.themeStyle.fontSize || title.textStyle.size;\n        if (title.text) {\n            if (isNullOrUndefined(groupEle)) {\n                groupEle = this.renderer.createGroup({ id: this.element.id + '_Title_Group' });\n            }\n            var trimmedTitle = textTrim(width, title.text, style);\n            var elementSize = measureText(trimmedTitle, style);\n            var rect = (isNullOrUndefined(bounds)) ? new Rect(this.margin.left, this.margin.top, this.availableSize.width, this.availableSize.height) : bounds;\n            var location_1 = findPosition(rect, title.alignment, elementSize, type);\n            var options = new TextOption(this.element.id + '_TreeMap_' + type, location_1.x, location_1.y, 'start', trimmedTitle);\n            var titleBounds = new Rect(location_1.x, location_1.y, elementSize.width, elementSize.height);\n            var element = renderTextElement(options, style, style.color || (type === 'title' ? this.themeStyle.titleFontColor : this.themeStyle.subTitleFontColor), groupEle);\n            element.setAttribute('aria-label', title.description || title.text);\n            element.setAttribute('tabindex', (this.tabIndex + (type === 'title' ? 1 : 2)).toString());\n            if ((type === 'title' && !title.subtitleSettings.text) || (type === 'subtitle')) {\n                height = (this.availableSize.height - titleBounds.y - titlePadding - this.margin.bottom);\n                this.areaRect = new Rect(this.margin.left, titleBounds.y + titlePadding, width, height);\n            }\n            if (type !== 'subtitle' && title.subtitleSettings.text) {\n                this.renderTitle(title.subtitleSettings, 'subtitle', titleBounds, groupEle);\n            }\n            else {\n                this.svgObject.appendChild(groupEle);\n            }\n        }\n        else {\n            height = (this.availableSize.height - this.margin.top - this.margin.bottom);\n            this.areaRect = new Rect(this.margin.left, this.margin.top, width, height);\n        }\n    };\n    TreeMap.prototype.processingData = function () {\n        var _this = this;\n        var path;\n        this.dataSource = this.dataSource;\n        if (!isNullOrUndefined(this.dataSource) && this.dataSource.length > 0 && this.weightValuePath) {\n            this.levelsOfData = [];\n            this.dataSource.map(function (data) {\n                data[_this.weightValuePath] = (data[_this.weightValuePath]) ? data[_this.weightValuePath].toString() :\n                    data[_this.weightValuePath];\n            });\n            this.leafItemSettings.labelPath = this.leafItemSettings.labelPath || this.weightValuePath;\n            this.checkIsHierarchicalData();\n            if (this.levels.length === 0) {\n                var data_1 = new Object();\n                data_1['level'] = 0;\n                path = this.leafItemSettings.labelPath;\n                data_1[path] = [];\n                for (var i = 0; i < this.dataSource.length; i++) {\n                    var child = findChildren(this.dataSource[i])['values'];\n                    if (this.isHierarchicalData && child && child.length > 0) {\n                        child.forEach(function (currentData, dataIndex) {\n                            if (currentData[path]) {\n                                data_1[path].push({\n                                    groupIndex: 0, name: currentData[path], levelOrderName: currentData[path].toString(),\n                                    data: currentData, weight: currentData[_this.weightValuePath]\n                                });\n                            }\n                        });\n                    }\n                    else {\n                        if (this.dataSource[i][path]) {\n                            data_1[path].push({\n                                groupIndex: 0, name: this.dataSource[i][path], levelOrderName: this.dataSource[i][path].toString(), data: this.dataSource[i],\n                                weight: this.dataSource[i][this.weightValuePath]\n                            });\n                        }\n                    }\n                }\n                this.levelsOfData.push(data_1);\n            }\n            else {\n                if (this.isHierarchicalData) {\n                    this.hierarchyData = [];\n                    this.hierarchyData = extend([], this.dataSource, this.hierarchyData, true);\n                    for (var i = 0; i < this.hierarchyData.length; i++) {\n                        this.processHierarchicalData(this.hierarchyData[i], i);\n                    }\n                    this.levelsOfData = this.hierarchyData;\n                }\n                else {\n                    this.processFlatJsonData();\n                    if (this.levelsOfData.length > 1) {\n                        this.reOrderLevelData(this.levelsOfData.length - 1);\n                    }\n                }\n                path = this.levels[0].groupPath;\n            }\n            if (!this.isHierarchicalData) {\n                this.findTotalWeight(this.levelsOfData[0][path], 'Parent');\n            }\n        }\n    };\n    TreeMap.prototype.checkIsHierarchicalData = function () {\n        var child;\n        this.dataSource = this.dataSource;\n        for (var i = 0; i < this.dataSource.length; i++) {\n            child = findChildren(this.dataSource[i])['values'];\n            if (child && child.length) {\n                this.isHierarchicalData = true;\n                break;\n            }\n            else if (i === this.dataSource.length - 1) {\n                this.isHierarchicalData = false;\n            }\n        }\n    };\n    TreeMap.prototype.processHierarchicalData = function (data, dataCount) {\n        var _this = this;\n        var childData;\n        var levelData = [];\n        var newData = new Object();\n        var levelIndex;\n        var path = this.leafItemSettings.labelPath ? this.leafItemSettings.labelPath : this.weightValuePath;\n        var currentData = new Object();\n        var level;\n        var key;\n        newData = findChildren(data);\n        childData = newData ? newData['values'] : null;\n        if (childData && childData.length > 0) {\n            key = newData['key'];\n            for (var i = 0; i < this.levels.length; i++) {\n                if (key === this.levels[i].groupPath) {\n                    level = this.levels[i];\n                    levelIndex = i;\n                }\n            }\n            for (var j = 0; j < childData.length; j++) {\n                childData[j]['name'] = childData[j][path];\n                childData[j]['levelOrderName'] = (levelIndex === 0 ? childData[j]['name'] :\n                    data['levelOrderName'] + '#' + childData[j]['name']) + '';\n                var childItemLevel = childData[j]['levelOrderName'];\n                var childLevel = void 0;\n                if (childItemLevel.search('#') > 0) {\n                    childLevel = childItemLevel.split('#').length - 1;\n                }\n                childData[j]['groupIndex'] = isNullOrUndefined(levelIndex) ? childLevel === this.levels.length\n                    ? this.levels.length : childLevel : levelIndex;\n                if (levelIndex !== 0) {\n                    childData[j]['parent'] = data;\n                }\n                childData[j]['groupName'] = key;\n                childData[j]['data'] = childData[j];\n                childData[j]['isDrilled'] = false;\n                childData[j]['weight'] = childData[j][this.weightValuePath];\n            }\n            childData.forEach(function (currentData) {\n                _this.processHierarchicalData(currentData, dataCount);\n            });\n        }\n        if (dataCount === this.hierarchyData.length - 1) {\n            var mainData_1 = this.hierarchyData[0][this.levels[0].groupPath];\n            for (var k = 0; k < this.hierarchyData.length; k++) {\n                childData = findChildren(this.hierarchyData[k])['values'];\n                if (k !== 0 && childData) {\n                    childData.forEach(function (currentData) { mainData_1.push(currentData); });\n                    this.hierarchyData.splice(k, 1);\n                    k -= 1;\n                }\n            }\n            mainData_1 = this.hierarchyData[0][this.levels[0].groupPath];\n            for (var l = 0; l < mainData_1.length; l++) {\n                newData[this.levels[0].groupPath] = mainData_1;\n                mainData_1[l]['parent'] = newData;\n            }\n        }\n    };\n    /**\n     * Handles the print method for chart control.\n     */\n    TreeMap.prototype.print = function (id) {\n        var exportChart = new ExportUtils(this);\n        exportChart.print(id);\n    };\n    /**\n     * Handles the export method for chart control.\n     * @param type\n     * @param fileName\n     */\n    TreeMap.prototype.export = function (type, fileName, orientation) {\n        var exportMap = new ExportUtils(this);\n        exportMap.export(type, fileName, orientation);\n    };\n    /* tslint:disable:no-string-literal */\n    TreeMap.prototype.processFlatJsonData = function () {\n        this.dataSource = this.dataSource;\n        var groupPath;\n        var childGroupPath;\n        var orderNames = [];\n        var process = false;\n        for (var i = 0; i < this.levels.length + 1; i++) {\n            groupPath = this.levels[i] ? this.levels[i].groupPath : this.leafItemSettings.labelPath;\n            var level = new Object();\n            level['level'] = i;\n            level[groupPath] = [];\n            this.levelsOfData.push(level);\n            for (var j = 0; j < this.dataSource.length; j++) {\n                var currentData = {};\n                var childName = '';\n                if (this.dataSource[j][groupPath]) {\n                    var name_1 = this.dataSource[j][groupPath];\n                    if (i !== 0) {\n                        for (var k = 0; k <= i; k++) {\n                            var childGroupPath_1 = this.levels[k] ? this.levels[k].groupPath : groupPath;\n                            childName += (this.dataSource[j][childGroupPath_1]) + ((k === i) ? '' : '#');\n                        }\n                    }\n                    if (!(orderNames.length > 0 ? orderNames.indexOf(childName ?\n                        childName : name_1) !== -1 : false)) {\n                        currentData['name'] = name_1;\n                        currentData['levelOrderName'] = ((childName) ? childName : name_1) + '';\n                        currentData['groupIndex'] = i;\n                        currentData['isDrilled'] = false;\n                        currentData['groupName'] = groupPath;\n                        currentData['data'] = this.dataSource[j];\n                        this.levelsOfData[this.levelsOfData.length - 1][groupPath].push(currentData);\n                        orderNames.push((childName) ? childName : name_1);\n                    }\n                }\n            }\n        }\n    };\n    TreeMap.prototype.reOrderLevelData = function (start) {\n        var currentName;\n        var currentPath = this.levels[start] ? this.levels[start].groupPath : this.leafItemSettings.labelPath;\n        var prevPath = this.levels[start - 1].groupPath;\n        var currentData = this.levelsOfData[start][currentPath];\n        var previousData = this.levelsOfData[start - 1][prevPath];\n        for (var i = 0; i < currentData.length; i++) {\n            currentName = currentData[i]['levelOrderName'];\n            for (var j = 0; j < previousData.length; j++) {\n                previousData[j][currentPath] = isNullOrUndefined(previousData[j][currentPath]) ? [] : previousData[j][currentPath];\n                if (currentName.indexOf(previousData[j]['levelOrderName']) !== -1) {\n                    if (isNullOrUndefined(currentData[i]['parent'])) {\n                        currentData[i]['parent'] = previousData[j];\n                    }\n                    previousData[j][currentPath].push(currentData[i]);\n                    break;\n                }\n            }\n        }\n        this.findTotalWeight(this.levelsOfData[this.levelsOfData.length - 1][currentPath], 'Child');\n        this.levelsOfData.splice(start, 1);\n        if ((start - 1) > 0) {\n            this.reOrderLevelData(start - 1);\n        }\n    };\n    TreeMap.prototype.findTotalWeight = function (processData, type) {\n        var _this = this;\n        var totalWeight;\n        var childData;\n        var levelName;\n        var start = 0;\n        var split;\n        var groupName;\n        var groupObj = new Object();\n        var _loop_1 = function (i) {\n            totalWeight = 0;\n            groupName = processData[i]['groupName'];\n            split = processData[i]['levelOrderName'].split('#');\n            this_1.dataSource.forEach(function (data) {\n                if (isContainsData(split, processData[i]['levelOrderName'], data, _this)) {\n                    totalWeight += parseFloat(data[_this.weightValuePath]);\n                }\n            });\n            if (type === 'Parent') {\n                groupObj[groupName] = processData;\n                processData[i]['parent'] = groupObj;\n            }\n            processData[i]['weight'] = totalWeight;\n        };\n        var this_1 = this;\n        for (var i = 0; i < processData.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * To unbind event handlers for treemap.\n     */\n    TreeMap.prototype.unWireEVents = function () {\n        EventHandler.remove(this.element, 'click', this.clickOnTreeMap);\n        EventHandler.remove(this.element, 'dblclick', this.doubleClickOnTreeMap);\n        EventHandler.remove(this.element, 'contextmenu', this.rightClickOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap);\n        EventHandler.remove(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap);\n        window.removeEventListener('resize', this.resizeOnTreeMap);\n    };\n    /**\n     * To bind event handlers for treemap.\n     */\n    TreeMap.prototype.wireEVents = function () {\n        EventHandler.add(this.element, 'click', this.clickOnTreeMap, this);\n        EventHandler.add(this.element, 'dblclick', this.doubleClickOnTreeMap, this);\n        EventHandler.add(this.element, 'contextmenu', this.rightClickOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap, this);\n        EventHandler.add(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap, this);\n        window.addEventListener('resize', this.resizeOnTreeMap.bind(this));\n    };\n    /**\n     * Method to set culture for maps\n     */\n    TreeMap.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * To add tab index for treemap element\n     */\n    TreeMap.prototype.addTabIndex = function () {\n        this.element.setAttribute('aria-label', this.description || 'TreeMap Element');\n        this.element.setAttribute('tabindex', this.tabIndex.toString());\n    };\n    /**\n     * To handle the window resize event on treemap.\n     */\n    TreeMap.prototype.resizeOnTreeMap = function (e) {\n        var _this = this;\n        var args = {\n            name: resize,\n            cancel: false,\n            previousSize: this.availableSize,\n            currentSize: new Size(0, 0),\n            treemap: this\n        };\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        if (this.element.classList.contains('e-treemap')) {\n            this.resizeTo = setTimeout(function () {\n                _this.unWireEVents();\n                _this.createSvg();\n                _this.refreshing = true;\n                _this.wireEVents();\n                args.currentSize = _this.availableSize;\n                _this.trigger(resize, _this.isBlazor ? {} : args);\n                _this.render();\n            }, 500);\n        }\n    };\n    TreeMap.prototype.clickOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var eventBlazorArgs;\n        var itemIndex;\n        var clickArgs = { cancel: false, name: click, treemap: this, mouseEvent: e };\n        var clickBlazorArgs = { cancel: false, name: click, mouseEvent: e };\n        this.trigger(click, this.isBlazor ? clickBlazorArgs : clickArgs);\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            itemIndex = parseFloat(targetId.split('_')[6]);\n            eventArgs = {\n                cancel: false, name: itemClick, treemap: this, item: this.layout.renderItems[itemIndex], mouseEvent: e,\n                groupIndex: this.layout.renderItems[itemIndex]['groupIndex'], groupName: this.layout.renderItems[itemIndex]['name']\n            };\n            eventBlazorArgs = {\n                cancel: false, name: itemClick, item: this.layout.renderItems[itemIndex], mouseEvent: e,\n                groupIndex: this.layout.renderItems[itemIndex]['groupIndex'], groupName: this.layout.renderItems[itemIndex]['name']\n            };\n            this.trigger(itemClick, this.isBlazor ? eventBlazorArgs : eventArgs);\n        }\n        var end = new Date().getMilliseconds();\n        var doubleTapTimer1;\n        if (!isNullOrUndefined(this.doubleClick)) {\n            if (!isNullOrUndefined(doubleTapTimer1) && end - doubleTapTimer1 < 500) {\n                this.doubleClickOnTreeMap(e);\n            }\n            doubleTapTimer1 = end;\n        }\n    };\n    TreeMap.prototype.doubleClickOnTreeMap = function (e) {\n        var doubleClickArgs = { cancel: false, name: doubleClick, treemap: this, mouseEvent: e };\n        var doubleClickBlazorArgs = { cancel: false, name: doubleClick, mouseEvent: e };\n        this.trigger(doubleClick, this.isBlazor ? doubleClickBlazorArgs : doubleClickArgs);\n        //this.notify('dblclick', e);\n    };\n    TreeMap.prototype.rightClickOnTreeMap = function (e) {\n        var rightClickArgs = { cancel: false, name: rightClick, treemap: this, mouseEvent: e };\n        var rightClickBlazorArgs = { cancel: false, name: rightClick, mouseEvent: e };\n        this.trigger(rightClick, this.isBlazor ? rightClickBlazorArgs : rightClickArgs);\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMap.prototype.mouseDownOnTreeMap = function (e) {\n        if (e.target.id.indexOf('_Item_Index') > -1) {\n            this.mouseDown = true;\n        }\n        this.notify(Browser.touchStartEvent, e);\n    };\n    TreeMap.prototype.mouseMoveOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var eventBlazorArgs;\n        var item;\n        var moveArgs = { cancel: false, name: mouseMove, treemap: this, mouseEvent: e };\n        var moveBlazorArgs = { cancel: false, name: mouseMove, mouseEvent: e };\n        this.trigger(mouseMove, this.isBlazor ? moveBlazorArgs : moveArgs);\n        var childItems;\n        this.drillMouseMove = this.mouseDown;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.layout.renderItems[parseFloat(targetId.split('_')[6])];\n            childItems = findChildren(item)['values'];\n            this.element.style.cursor = (!item['isLeafItem'] && childItems && childItems.length > 0 && this.enableDrillDown) ?\n                'pointer' : 'auto';\n            eventArgs = { cancel: false, name: itemMove, treemap: this, item: item, mouseEvent: e };\n            eventBlazorArgs = { cancel: false, name: itemMove, item: item, mouseEvent: e };\n            this.trigger(itemMove, this.isBlazor ? eventBlazorArgs : eventArgs);\n        }\n        this.notify(Browser.touchMoveEvent, e);\n    };\n    TreeMap.prototype.calculateSelectedTextLevels = function (labelText, item) {\n        //to find the levels by clicking the particular text both for drillDownView as true / false.\n        var drillLevel;\n        var k;\n        var text;\n        var levelLabels = item['levelOrderName'];\n        var levelText = levelLabels.split('#');\n        for (var _i = 0, _a = Object.keys(levelText); _i < _a.length; _i++) {\n            k = _a[_i];\n            if (levelText[k] === labelText) {\n                drillLevel = parseInt(k, 10);\n                text = labelText;\n            }\n        }\n        return { drillLevel: drillLevel, currentLevelLabel: text, levelText: levelText };\n    };\n    TreeMap.prototype.calculatePreviousLevelChildItems = function (labelText, drillLevelValues, item, directLevel) {\n        //By clicking any child items drilldown to the particular level.\n        //At the time store all the previous drilled level items in drilledItems\n        // This condition satisfies while drilldown View is set as false and the text contains '[+]'\n        var text;\n        var p = 0;\n        var levelItems;\n        var text1;\n        var drillTextLevel = this.layout.renderItems[0]['levelOrderName'].split('#').length;\n        for (var h = 0; h < drillTextLevel; h++) {\n            text1 = h === 0 ? drillLevelValues['levelText'][h] : text1 + '#' + drillLevelValues['levelText'][h];\n        }\n        p = drillTextLevel > 1 ? drillTextLevel : p;\n        for (var _i = 0, _a = Object['values'](this.layout.renderItems); _i < _a.length; _i++) {\n            levelItems = _a[_i];\n            var drillLevelText = levelItems['levelOrderName'].split('#');\n            if (drillLevelText[0] === drillLevelValues['levelText'][0]) {\n                text = p === 0 ? isNullOrUndefined(text1) ? text1 : drillLevelValues['levelText'][p] :\n                    directLevel ? text1 : text1 + '#' + drillLevelValues['levelText'][p];\n                if (text === levelItems['levelOrderName']) {\n                    this.drilledItems.push({ name: levelItems['levelOrderName'], data: levelItems });\n                    p++;\n                    directLevel = true;\n                    if (p <= item['groupIndex']) {\n                        text = text + '#' + drillLevelValues['levelText'][p];\n                        text1 = text;\n                    }\n                }\n            }\n        }\n        return directLevel;\n    };\n    TreeMap.prototype.compareSelectedLabelWithDrillDownItems = function (drillLevelValues, item, i) {\n        var drillLevelChild;\n        var newDrillItem = new Object();\n        var b = drillLevelValues['drillLevel'] + 1;\n        if (b === this.drilledItems[i]['data']['groupIndex']) {\n            drillLevelChild = this.drilledItems[i]['data']['parent'];\n            drillLevelChild['isDrilled'] = true;\n            newDrillItem[drillLevelChild[this.drilledItems[i]['data']['groupName']]]\n                = [drillLevelChild];\n            // to remove all the items after matched drilled items\n            this.drilledItems.splice(i, this.drilledItems.length);\n        }\n        else if (drillLevelValues['drillLevel'] === (this.drilledItems.length - 1)\n            || drillLevelValues['drillLevel'] === item['groupIndex']) {\n            newDrillItem[item['groupName']] = [item];\n        }\n        return newDrillItem;\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMap.prototype.mouseEndOnTreeMap = function (e) {\n        var _this = this;\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var totalRect;\n        var startEvent;\n        var endEvent;\n        var directLevel = false;\n        var index;\n        var newDrillItem = new Object();\n        var item;\n        var process = true;\n        var layoutID = this.element.id + '_TreeMap_' + this.layoutType + '_Layout';\n        var drillLevel;\n        var templateID = this.element.id + '_Label_Template_Group';\n        var drillLevelValues;\n        var endBlazorEvent;\n        if (targetId.indexOf('_Item_Index') > -1 && this.enableDrillDown && !this.drillMouseMove) {\n            e.preventDefault();\n            index = parseFloat(targetId.split('_')[6]);\n            item = this.layout.renderItems[index];\n            var labelText = targetEle.innerHTML;\n            if (this.enableBreadcrumb) {\n                drillLevelValues = this.calculateSelectedTextLevels(labelText, item);\n                drillLevel = drillLevelValues['drillLevel'];\n                if (!this.drillDownView && labelText.search('[+]') !== -1) {\n                    directLevel = this.calculatePreviousLevelChildItems(labelText, drillLevelValues, item, directLevel);\n                }\n            }\n            if (this.levels.length !== 0 && !item['isLeafItem'] && findChildren(item)['values'] &&\n                findChildren(item)['values'].length > 0) {\n                if (this.drilledItems.length > 0) {\n                    item = directLevel ? this.drilledItems[this.drilledItems.length - 1]['data'] : item;\n                    for (var i = 0; i < this.drilledItems.length; i++) {\n                        if (!isNullOrUndefined(drillLevel)) { //Compare the selected text level with drilled items\n                            var drillLength = this.drilledItems.length;\n                            newDrillItem = this.compareSelectedLabelWithDrillDownItems(drillLevelValues, item, i);\n                            if (drillLength !== this.drilledItems.length) {\n                                i -= 1;\n                                break;\n                            }\n                        } //when clicking the levels drill back to the previous level process takes place\n                        if (item['levelOrderName'] === this.drilledItems[i]['name'] && !directLevel && isNullOrUndefined(drillLevel)) {\n                            if (item['groupIndex'] === 0 && item['parent'][item['groupName']] instanceof Array) {\n                                item['isDrilled'] = !(item['isDrilled']);\n                                if (!item['isDrilled']) {\n                                    newDrillItem = item['parent'];\n                                }\n                                else {\n                                    newDrillItem[item['groupName']] = [item];\n                                }\n                            }\n                            else {\n                                item['isDrilled'] = false;\n                                item['parent']['isDrilled'] = true;\n                                item = item['parent'];\n                                newDrillItem[item['groupName']] = [item];\n                            }\n                            this.drilledItems.splice(i, 1);\n                            i -= 1;\n                            break;\n                        }\n                        else if (i === this.drilledItems.length - 1 && isNullOrUndefined(drillLevel)) {\n                            item['isDrilled'] = true; // click the items move to next level.\n                            newDrillItem[item['groupName']] = [item];\n                        }\n                    }\n                }\n                else {\n                    item['isDrilled'] = true;\n                    newDrillItem[item['groupName']] = [item];\n                }\n                startEvent = {\n                    cancel: false, name: drillStart, treemap: this, item: newDrillItem, element: targetEle,\n                    groupIndex: this.enableBreadcrumb && this.drilledItems.length !== 0 && !isNullOrUndefined(drillLevel) ?\n                        this.drilledItems[this.drilledItems.length - 1]['data']['groupIndex'] : item['groupIndex'],\n                    groupName: this.enableBreadcrumb && this.drilledItems.length !== 0 && !isNullOrUndefined(drillLevel) ?\n                        this.drilledItems[this.drilledItems.length - 1]['data']['name'] : item['name'],\n                    rightClick: e.which === 3 ? true : false, childItems: null\n                };\n                this.trigger(drillStart, startEvent, function (observedArgs) {\n                    _this.currentLevel = item['isDrilled'] && isNullOrUndefined(drillLevel) ? item['groupIndex'] :\n                        (!isNullOrUndefined(drillLevel) && _this.enableBreadcrumb && item['isDrilled']) ? drillLevel : null;\n                    if (!observedArgs.cancel) {\n                        if (document.getElementById(layoutID)) {\n                            document.getElementById(layoutID).remove();\n                        }\n                        totalRect = extend({}, _this.areaRect, totalRect, true);\n                        if (_this.legendSettings.visible && !isNullOrUndefined(_this.treeMapLegendModule)) {\n                            if (!isNullOrUndefined(newDrillItem)) {\n                                _this.treeMapLegendModule.legendGroup.textContent = '';\n                                _this.treeMapLegendModule.legendGroup = null;\n                                _this.treeMapLegendModule.widthIncrement = 0;\n                                _this.treeMapLegendModule.heightIncrement = 0;\n                                if (_this.enableBreadcrumb && !isNullOrUndefined(drillLevel)) {\n                                    _this.drilledLegendItems = {\n                                        name: _this.drilledItems[_this.drilledItems.length - 1]['data']['levelOrderName'],\n                                        data: _this.drilledItems[_this.drilledItems.length - 1]['data']\n                                    };\n                                }\n                                else {\n                                    _this.drilledLegendItems = { name: item['levelOrderName'], data: item };\n                                }\n                                _this.treeMapLegendModule.renderLegend();\n                            }\n                            totalRect = !isNullOrUndefined(_this.totalRect) ? _this.totalRect : totalRect;\n                        }\n                        if (document.getElementById(templateID)) {\n                            document.getElementById(templateID).remove();\n                        }\n                        if (!isNullOrUndefined(observedArgs.childItems) && !observedArgs.cancel) {\n                            _this.layout.onDemandProcess(observedArgs.childItems);\n                        }\n                        else {\n                            _this.layout.calculateLayoutItems(newDrillItem, totalRect);\n                            _this.layout.renderLayoutItems(newDrillItem);\n                        }\n                    }\n                });\n                endEvent = { cancel: false, name: drillEnd, treemap: this, renderItems: this.layout.renderItems };\n                endBlazorEvent = { cancel: false, name: drillEnd, renderItems: this.layout.renderItems };\n                this.trigger(drillEnd, this.isBlazor ? endBlazorEvent : endEvent);\n                if (process) {\n                    if (!directLevel && isNullOrUndefined(drillLevel)) {\n                        this.drilledItems.push({ name: item['levelOrderName'], data: item });\n                    }\n                }\n            }\n        }\n        this.mouseDown = false;\n        this.notify(Browser.touchEndEvent, e);\n    };\n    TreeMap.prototype.mouseLeaveOnTreeMap = function (e) {\n        if (this.treeMapTooltipModule) {\n            this.treeMapTooltipModule.removeTooltip();\n        }\n        if (this.treeMapLegendModule) {\n            this.treeMapLegendModule.removeInteractivePointer();\n        }\n        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', this);\n        if (this.treeMapHighlightModule) {\n            removeShape(this.treeMapHighlightModule.shapeHighlightCollection, 'highlight');\n            this.treeMapHighlightModule.highLightId = '';\n        }\n    };\n    /**\n     * To provide the array of modules needed for maps rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    TreeMap.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.tooltipSettings.visible) {\n            modules.push({\n                member: 'treeMapTooltip',\n                args: [this]\n            });\n        }\n        if (this.highlightSettings.enable) {\n            modules.push({\n                member: 'treeMapHighlight',\n                args: [this]\n            });\n        }\n        if (this.selectionSettings.enable) {\n            modules.push({\n                member: 'treeMapSelection',\n                args: [this]\n            });\n        }\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'treeMapLegend',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    TreeMap.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var render = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'background':\n                    this.renderBorder();\n                    break;\n                case 'height':\n                case 'width':\n                    render = true;\n                    break;\n            }\n        }\n        if (render) {\n            this.createSvg();\n            this.render();\n        }\n    };\n    /**\n     * Get component name\n     */\n    TreeMap.prototype.getModuleName = function () {\n        return 'treemap';\n    };\n    /**\n     * To destroy the treemap control.\n     */\n    TreeMap.prototype.destroy = function () {\n        this.unWireEVents();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @private\n     */\n    TreeMap.prototype.getPersistData = function () {\n        return '';\n    };\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TreeMap.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], TreeMap.prototype, \"margin\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"background\", void 0);\n    __decorate([\n        Property('Material')\n    ], TreeMap.prototype, \"theme\", void 0);\n    __decorate([\n        Complex({}, TitleSettings)\n    ], TreeMap.prototype, \"titleSettings\", void 0);\n    __decorate([\n        Property('Squarified')\n    ], TreeMap.prototype, \"layoutType\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"query\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"weightValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"rangeColorValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"equalColorValuePath\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"colorValuePath\", void 0);\n    __decorate([\n        Property([])\n    ], TreeMap.prototype, \"palette\", void 0);\n    __decorate([\n        Property('TopLeftBottomRight')\n    ], TreeMap.prototype, \"renderDirection\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableDrillDown\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableBreadcrumb\", void 0);\n    __decorate([\n        Property(' - ')\n    ], TreeMap.prototype, \"breadcrumbConnector\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"drillDownView\", void 0);\n    __decorate([\n        Complex({}, InitialDrillSettings)\n    ], TreeMap.prototype, \"initialDrillDown\", void 0);\n    __decorate([\n        Complex({}, LeafItemSettings)\n    ], TreeMap.prototype, \"leafItemSettings\", void 0);\n    __decorate([\n        Collection([], LevelSettings)\n    ], TreeMap.prototype, \"levels\", void 0);\n    __decorate([\n        Complex({}, HighlightSettings)\n    ], TreeMap.prototype, \"highlightSettings\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeMap.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], TreeMap.prototype, \"tooltipSettings\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], TreeMap.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], TreeMap.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"format\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillEnd\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemHighlight\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"tooltipRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"rightClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"mouseMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"legendItemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"legendRendering\", void 0);\n    TreeMap = __decorate([\n        NotifyPropertyChanges\n    ], TreeMap);\n    return TreeMap;\n}(Component));\nexport { TreeMap };\n","import { findChildren, Location, Rect, Size, measureText, TextOption, PathOption, RectOption, drawSymbol, orderByArea } from '../utils/helper';\nimport { Browser, isNullOrUndefined, EventHandler, extend } from '@syncfusion/ej2-base';\nimport { renderTextElement, textTrim } from '../utils/helper';\nimport { legendItemRendering, legendRendering } from '../model/constants';\n/**\n * Legend module class\n */\nvar TreeMapLegend = /** @class */ (function () {\n    function TreeMapLegend(treemap) {\n        this.page = 0;\n        this.legendBorderRect = new Rect(0, 0, 0, 0);\n        this.currentPage = 0;\n        this.heightIncrement = 0;\n        this.widthIncrement = 0;\n        this.textMaxWidth = 0;\n        this.legendInteractiveGradient = [];\n        this.legendItemRect = new Rect(0, 0, 0, 0);\n        this.treemap = treemap;\n        this.addEventListener();\n    }\n    /**\n     * method for legend\n     */\n    TreeMapLegend.prototype.renderLegend = function () {\n        var _this = this;\n        this.legendRenderingCollections = [];\n        this.legendCollections = [];\n        this.legendNames = [];\n        this.totalPages = [];\n        this.gradientCount = 1;\n        this.widthIncrement = 0;\n        this.heightIncrement = 0;\n        this.defsElement = this.treemap.renderer.createDefs();\n        this.treemap.svgObject.appendChild(this.defsElement);\n        var eventArgs;\n        eventArgs = {\n            cancel: false, name: legendRendering, treemap: this.treemap, _changePosition: this.treemap.legendSettings.position,\n            position: this.treemap.legendSettings.position\n        };\n        this.treemap.trigger(legendRendering, eventArgs, function (observedArgs) {\n            if (!observedArgs.cancel && observedArgs._changePosition !== _this.treemap.legendSettings.position) {\n                _this.treemap.legendSettings.position = observedArgs._changePosition;\n            }\n            _this.calculateLegendBounds();\n            if (_this.legendCollections.length > 0) {\n                _this.drawLegend();\n            }\n        });\n    };\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.calculateLegendBounds = function () {\n        var _this = this;\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        this.findColorMappingLegendItems(treemap.levelsOfData[0]);\n        if ((this.treemap.palette.length > 0 || !isNullOrUndefined(this.treemap.colorValuePath))\n            && this.legendCollections.length === 0) {\n            this.findPaletteLegendItems(this.treemap.levelsOfData[0], 'Parent');\n        }\n        if (this.legendCollections.length > 0) {\n            var defaultSize = 25;\n            var textPadding = 10;\n            var position = legend.position;\n            var legendTitle = legend.title.text;\n            var titleTextStyle = legend.titleStyle;\n            var legendMode = legend.mode;\n            var shapeX = 0;\n            var shapeY = 0;\n            var textX = 0;\n            var textY = 0;\n            var shapeHeight = legend.shapeHeight;\n            var shapeWidth = legend.shapeWidth;\n            var shapeLocation = [];\n            var textLocation = [];\n            var orientation_1 = (legend.orientation === 'None') ? ((position === 'Top' || position === 'Bottom'\n                || (position === 'Auto' && treemap.availableSize.width <= treemap.availableSize.height))\n                ? 'Horizontal' : 'Vertical') : legend.orientation;\n            var leftPadding = 10;\n            var topPadding = 10;\n            var spacing = 10;\n            var legendWidth = (legend.width.length > 1) ? (legend.width.indexOf('%') > -1) ? (treemap.availableSize.width / 100)\n                * parseFloat(legend.width) : parseFloat(legend.width) : null;\n            var legendHeight = (legend.height.length > 1) ? (legend.height.indexOf('%') > -1) ?\n                (treemap.availableSize.height / 100) * parseFloat(legend.height) : parseFloat(legend.height) : null;\n            titleTextStyle.fontFamily = treemap.themeStyle.fontFamily || titleTextStyle.fontFamily;\n            titleTextStyle.size = treemap.themeStyle.legendFontSize || titleTextStyle.size;\n            var legendTitleSize = measureText(legendTitle, titleTextStyle);\n            var startX_1 = 0;\n            var startY_1 = 0;\n            var shapePadding = legend.shapePadding;\n            var rectWidth = void 0;\n            var rectHeight = void 0;\n            var itemTextStyle = legend.textStyle;\n            var legendLength = this.legendCollections.length;\n            legend.textStyle.size = treemap.themeStyle.legendFontSize || legend.textStyle.size;\n            legend.textStyle.fontFamily = treemap.themeStyle.fontFamily || legend.textStyle.fontFamily;\n            if (legendMode === 'Default') {\n                legendWidth = (isNullOrUndefined(legendWidth)) ? treemap.areaRect.width : legendWidth;\n                legendHeight = (isNullOrUndefined(legendHeight)) ? treemap.areaRect.height : legendHeight;\n                var j = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    var legendItem = this.legendCollections[i];\n                    if (isNullOrUndefined(this.totalPages[this.page])) {\n                        this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n                    }\n                    var legendTextSize = measureText(legendItem['legendName'], legend.textStyle);\n                    this.textMaxWidth = Math.max(this.textMaxWidth, legendTextSize.width);\n                    if (i === 0) {\n                        startX_1 = shapeX = (leftPadding + (shapeWidth / 2));\n                        startY_1 = shapeY = topPadding + legendTitleSize.height + (shapeHeight > legendTextSize.height ? shapeHeight / 2\n                            : (legendTextSize.height / 4));\n                    }\n                    else {\n                        var maxSize = (legendTextSize.height > shapeHeight) ? legendTextSize.height : shapeHeight;\n                        if (orientation_1 === 'Horizontal') {\n                            var prvePositionX = (textLocation[j - 1].x + textLocation[j - 1].width) + textPadding + shapeWidth;\n                            if ((prvePositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                var nextPositionY = (textLocation[j - 1].y > (shapeLocation[j - 1].y + (shapeHeight / 2)) ?\n                                    textLocation[j - 1].y : (shapeLocation[j - 1].y + (shapeHeight / 2))) + topPadding;\n                                if ((nextPositionY + maxSize) > legendHeight) {\n                                    this.getPageChanged();\n                                    j = 0;\n                                    shapeLocation = [];\n                                    textLocation = [];\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                }\n                                else {\n                                    shapeX = (shapeLocation[0].x);\n                                    shapeY = (nextPositionY + (maxSize / 2));\n                                }\n                            }\n                            else {\n                                shapeX = (prvePositionX - (shapeWidth / 2));\n                                shapeY = (shapeLocation[j - 1]).y;\n                            }\n                        }\n                        else {\n                            var prevPositionY = textLocation[j - 1].y > shapeLocation[j - 1].y + (shapeHeight / 2) ?\n                                textLocation[j - 1].y : shapeLocation[j - 1].y + (shapeHeight / 2);\n                            if ((prevPositionY + topPadding + maxSize) > legendHeight) {\n                                var nextPositionX = (textLocation[j - 1].x + this.textMaxWidth + textPadding);\n                                if ((nextPositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                    textLocation = [];\n                                    shapeLocation = [];\n                                    this.getPageChanged();\n                                    j = 0;\n                                }\n                                else {\n                                    shapeX = nextPositionX + (shapeWidth / 2);\n                                    shapeY = (shapeLocation[0].y);\n                                }\n                            }\n                            else {\n                                shapeX = shapeLocation[j - 1].x;\n                                shapeY = prevPositionY + topPadding + (shapeHeight / 2);\n                            }\n                        }\n                    }\n                    textX = shapeX + (shapeWidth / 2) + shapePadding;\n                    textY = shapeY + (legendTextSize.height / 4);\n                    shapeLocation.push({ x: shapeX, y: shapeY });\n                    textLocation.push({ x: textX, y: textY, width: legendTextSize.width, height: (legendTextSize.height / 2) });\n                    this.totalPages[this.page]['Collection'].push({\n                        DisplayText: legendItem['legendName'], element: legendItem['gradientElement'],\n                        Shape: { x: shapeX, y: shapeY },\n                        Text: { x: textX, y: textY },\n                        Fill: legendItem['legendFill'],\n                        Data: legendItem['legendData'],\n                        Rect: {\n                            x: shapeLocation[j].x - (shapeWidth / 2),\n                            y: (shapeLocation[j].y - (shapeHeight / 2)) < (textY - legendTextSize.height) ?\n                                (shapeLocation[j].y - (shapeHeight / 2)) : (textY - legendTextSize.height),\n                            width: Math.abs((shapeLocation[j].x - (shapeWidth / 2)) - (textX + legendTextSize.width)),\n                            height: ((shapeHeight > legendTextSize.height) ? shapeHeight : legendTextSize.height)\n                        }\n                    });\n                    j++;\n                }\n                var collection = this.totalPages[0]['Collection'];\n                collection.forEach(function (legendObj, index) {\n                    var legendRect = new Rect(legendObj['Rect']['x'], legendObj['Rect']['y'], legendObj['Rect']['width'], legendObj['Rect']['height']);\n                    if (index === 0) {\n                        startX_1 = legendRect.x;\n                        startY_1 = legendRect.y;\n                    }\n                    _this.widthIncrement = Math.max(_this.widthIncrement, Math.abs(startX_1 - (legendRect.x + legendRect.width)));\n                    _this.heightIncrement = Math.max(_this.heightIncrement, Math.abs(startY_1 - (legendRect.y + legendRect.height)));\n                });\n                legendWidth = ((this.widthIncrement < legendWidth) ? this.widthIncrement : legendWidth);\n                legendHeight = ((this.heightIncrement < legendHeight) ? this.heightIncrement : legendHeight);\n                this.legendItemRect = {\n                    x: collection[0]['Rect']['x'], y: collection[0]['Rect']['y'],\n                    width: legendWidth, height: legendHeight\n                };\n            }\n            else {\n                var itemTextStyle_1 = legend.textStyle;\n                var rectWidth_1;\n                var rectHeight_1;\n                var legendLength_1 = this.legendCollections.length;\n                rectWidth_1 = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendWidth)) ? (treemap.areaRect.width / legendLength_1) :\n                    (legendWidth / legendLength_1) : (isNullOrUndefined(legendWidth)) ? defaultSize : legendWidth;\n                rectHeight_1 = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendHeight)) ? defaultSize : legendHeight :\n                    (isNullOrUndefined(legendHeight)) ? (treemap.areaRect.height / legendLength_1) : (legendHeight / legendLength_1);\n                startX_1 = 0;\n                startY_1 = legendTitleSize.height + spacing;\n                var textPadding_1 = 10;\n                var placement = legend.labelPosition;\n                var itemStartX = 0;\n                var itemStartY = 0;\n                var labelAction = legend.labelDisplayMode;\n                var maxTextHeight = 0;\n                var maxTextWidth = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    startX_1 = (orientation_1 === 'Horizontal') ? (startX_1 + rectWidth_1) : startX_1;\n                    startY_1 = (orientation_1 === 'Horizontal') ? startY_1 : (startY_1 + rectHeight_1);\n                    var legendText = this.legendCollections[i]['legendName'];\n                    var itemTextSize = new Size(0, 0);\n                    if (labelAction === 'None') {\n                        itemTextSize = measureText(legendText, itemTextStyle_1);\n                    }\n                    else if (labelAction === 'Trim') {\n                        legendText = textTrim((orientation_1 === 'Horizontal' ? rectWidth_1 : rectHeight_1), legendText, itemTextStyle_1);\n                        itemTextSize = measureText(legendText, itemTextStyle_1);\n                    }\n                    else {\n                        legendText = '';\n                    }\n                    maxTextHeight = Math.max(maxTextHeight, itemTextSize.height);\n                    maxTextWidth = Math.max(maxTextWidth, itemTextSize.width);\n                    if (itemTextSize.width > 0 && itemTextSize.height > 0) {\n                        if (orientation_1 === 'Horizontal') {\n                            textX = startX_1 + (rectWidth_1 / 2);\n                            textY = (placement === 'After') ? (startY_1 + rectHeight_1 + (itemTextSize.height / 2)) + textPadding_1 :\n                                (startY_1 - textPadding_1);\n                        }\n                        else {\n                            textX = (placement === 'After') ? startX_1 - (itemTextSize.width / 2) - textPadding_1\n                                : (startX_1 + rectWidth_1 + itemTextSize.width / 2) + textPadding_1;\n                            textY = startY_1 + (rectHeight_1 / 2) + (itemTextSize.height / 4);\n                        }\n                    }\n                    if (i === 0) {\n                        itemStartX = (orientation_1 === 'Horizontal') ? startX_1 : (placement === 'After') ?\n                            textX - (itemTextSize.width / 2) : startX_1;\n                        itemStartY = (orientation_1 === 'Horizontal') ? (placement === 'After') ? startY_1 :\n                            textY - (itemTextSize.height / 2) : startY_1;\n                    }\n                    if (i === legendLength_1 - 1) {\n                        legendWidth = (orientation_1 === 'Horizontal') ? Math.abs((startX_1 + rectWidth_1) - itemStartX) :\n                            (rectWidth_1 + maxTextWidth + textPadding_1);\n                        legendHeight = (orientation_1 === 'Horizontal') ? (rectHeight_1 + (maxTextHeight / 2) + textPadding_1) :\n                            Math.abs((startY_1 + rectHeight_1) - itemStartY);\n                    }\n                    this.legendRenderingCollections.push({\n                        fill: this.legendCollections[i]['legendFill'], x: startX_1, y: startY_1,\n                        width: rectWidth_1, height: rectHeight_1, element: this.legendCollections[i]['gradientElement'],\n                        text: legendText, textX: textX, textY: textY,\n                        textWidth: itemTextSize.width, textHeight: itemTextSize.height,\n                        data: this.legendCollections[i]['legendData']\n                    });\n                }\n                this.legendItemRect = { x: itemStartX, y: itemStartY, width: legendWidth, height: legendHeight };\n            }\n        }\n    };\n    TreeMapLegend.prototype.getPageChanged = function () {\n        this.page++;\n        if (isNullOrUndefined(this.totalPages[this.page])) {\n            this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n        }\n    };\n    TreeMapLegend.prototype.findColorMappingLegendItems = function (data) {\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0) {\n            this.calculateLegendItems(child);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    this.findColorMappingLegendItems(child[i]);\n                }\n            }\n        }\n    };\n    TreeMapLegend.prototype.findPaletteLegendItems = function (data, type) {\n        var child;\n        var legendFillColor;\n        if (!isNullOrUndefined(this.treemap.drilledItems)) {\n            if (this.treemap.drilledItems.length === 0 && !isNullOrUndefined(this.treemap.initialDrillDown.groupName)\n                && isNullOrUndefined(this.treemap.drilledLegendItems)) {\n                var items = findChildren(data)['values'];\n                for (var k = 0; k < items.length; k++) {\n                    if (items[k]['Name'] === this.treemap.initialDrillDown.groupName) {\n                        items[k]['isDrilled'] = !items[k]['isDrilled'];\n                        data = items[k];\n                        this.treemap.currentLevel = this.treemap.initialDrillDown.groupIndex;\n                        legendFillColor = this.treemap.palette.length > 0 ? this.treemap.palette[k % this.treemap.palette.length] :\n                            items[k]['data'][this.treemap.colorValuePath];\n                        break;\n                    }\n                }\n            }\n        }\n        if (this.treemap.enableDrillDown && !isNullOrUndefined(this.treemap.drilledLegendItems)) {\n            var childElement = this.treemap.drilledLegendItems;\n            legendFillColor = childElement['data']['options']['fill'];\n            if (childElement['data']['isDrilled']) {\n                child = findChildren(childElement['data'])['values'];\n            }\n            else {\n                var parentElement = childElement['data']['parent'];\n                child = findChildren(parentElement)['values'];\n            }\n        }\n        else {\n            child = findChildren(data)['values'];\n        }\n        var isDuplicate;\n        var legendName;\n        if (child && child.length > 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (isNullOrUndefined(child[i]['data'][this.treemap.legendSettings.showLegendPath]) ||\n                    child[i]['data'][this.treemap.legendSettings.showLegendPath]) {\n                    legendName = child[i]['data'][this.treemap.legendSettings.valuePath] ?\n                        child[i]['data'][this.treemap.legendSettings.valuePath] : child[i]['name'];\n                    isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                        this.removeDuplicates(this.legendCollections, legendName) : false;\n                    if (!isDuplicate) {\n                        this.legendCollections.push({\n                            legendName: legendName,\n                            legendFill: this.treemap.palette.length > 0 ? !isNullOrUndefined(this.treemap.currentLevel)\n                                ? legendFillColor : this.treemap.palette[i % this.treemap.palette.length] :\n                                child[i]['data'][this.treemap.colorValuePath],\n                            legendData: [],\n                            itemArea: child[i]['weight']\n                        });\n                    }\n                }\n            }\n            this.legendCollections.sort(orderByArea);\n            if (this.treemap.palette.length > 0) {\n                for (var j = 0; j < this.legendCollections.length; j++) {\n                    this.legendCollections[j]['legendFill'] = !isNullOrUndefined(this.treemap.currentLevel)\n                        ? legendFillColor : this.treemap.palette[j % this.treemap.palette.length];\n                }\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.calculateLegendItems = function (data) {\n        var isAddData;\n        var fill;\n        var rangeValue;\n        var currentData;\n        var legendText;\n        var itemValue;\n        var isLeafItem;\n        var colorMapProcess = false;\n        var colorMapping;\n        var groupIndex;\n        var leaf = this.treemap.leafItemSettings;\n        var levels = this.treemap.levels;\n        var equalValue;\n        var position = this.treemap.legendSettings.position;\n        var gradientElement;\n        var x2;\n        var y2;\n        var actualValue;\n        var isDuplicate;\n        var isEqualColor;\n        var isRange;\n        var isDesaturation = false;\n        var legendIndex = 0;\n        var outfill;\n        var labelLegend;\n        var otherIndex;\n        this.outOfRangeLegend = null;\n        for (var i = 0; i < data.length; i++) {\n            fill = '';\n            isEqualColor = false;\n            isRange = false;\n            isDesaturation = false;\n            currentData = data[i]['data'];\n            groupIndex = data[i]['groupIndex'];\n            isLeafItem = (this.treemap.levels.length === 0 || groupIndex === this.treemap.levels.length);\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[groupIndex].colorMapping;\n            for (var _i = 0, colorMapping_1 = colorMapping; _i < colorMapping_1.length; _i++) {\n                var colorMap = colorMapping_1[_i];\n                gradientElement = null;\n                rangeValue = Number(currentData[this.treemap.rangeColorValuePath]);\n                equalValue = currentData[this.treemap.equalColorValuePath];\n                colorMap.value = !isNullOrUndefined(colorMap.value) ? colorMap.value.toString() : colorMap.value;\n                if (!isNullOrUndefined(colorMap.from) && !isNullOrUndefined(colorMap.to) &&\n                    rangeValue >= colorMap.from && rangeValue <= colorMap.to && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isRange = true;\n                    actualValue = colorMap.from + ' - ' + colorMap.to;\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.from + ' - ' + colorMap.to;\n                    fill = isNullOrUndefined(colorMap.color) ? fill : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                else if (!isNullOrUndefined(colorMap.value) && equalValue === colorMap.value && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isEqualColor = true;\n                    actualValue = colorMap.value.toString();\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.value.toString();\n                    fill = isNullOrUndefined(colorMap.color) ? fill :\n                        Object.prototype.toString.call(colorMap.color) === '[object Array]' ? colorMap.color[0] : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                if (colorMapProcess && isNullOrUndefined(colorMap.value) && colorMap.maxOpacity && colorMap.minOpacity\n                    && this.treemap.legendSettings.mode === 'Interactive') {\n                    var colors = [];\n                    var gradient = void 0;\n                    isDesaturation = true;\n                    if (Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n                        for (var q = 0; q < colorMap.color.length; q++) {\n                            var offsetColor = 100 / (colorMap.color.length - 1);\n                            var offsetValue = q * offsetColor + '%';\n                            var stop1Color = { colorStop: offsetValue.toString(), color: colorMap.color[q] };\n                            colors.push(stop1Color);\n                        }\n                    }\n                    else {\n                        var stop1Color = { colorStop: '0%', color: fill };\n                        var stop2Color = { colorStop: '100%', color: fill };\n                        colors.push(stop1Color);\n                        colors.push(stop2Color);\n                    }\n                    x2 = position === 'Top' || position === 'Bottom' ? '100%' : '0%';\n                    y2 = position === 'Top' || position === 'Bottom' ? '0%' : '100%';\n                    gradient = {\n                        id: 'groupIndex_' + groupIndex + '_colorIndex_' + this.gradientCount, x1: '0%', y1: '0%', x2: x2, y2: y2\n                    };\n                    gradientElement = this.treemap.renderer.drawGradient('linearGradient', gradient, colors).childNodes[0];\n                    if (Object.prototype.toString.call(colorMap.color) !== '[object Array]') {\n                        gradientElement.childNodes[0].setAttribute('stop-opacity', colorMap.minOpacity.toString());\n                        gradientElement.childNodes[1].setAttribute('stop-opacity', colorMap.maxOpacity.toString());\n                    }\n                    this.defsElement.appendChild(gradientElement);\n                    this.gradientCount++;\n                }\n                isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                    this.removeDuplicates(this.legendCollections, legendText) : false;\n                if (isAddData && isAddData['process'] && colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    fill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]')) && isNullOrUndefined(gradientElement)\n                        && isNullOrUndefined(colorMap.value) ? this.legendGradientColor(colorMap, legendIndex) : fill;\n                    this.legendCollections.push({\n                        actualValue: actualValue,\n                        legendName: legendText, legendFill: fill, legendData: [],\n                        gradientElement: !isNullOrUndefined(gradientElement) ? gradientElement : isNullOrUndefined(colorMap.value)\n                            ? this.legendLinearGradient : null, name: data[i]['name'],\n                        opacity: this.treemap.legendSettings.opacity, borderColor: this.treemap.legendSettings.border.color,\n                        borderWidth: this.treemap.legendSettings.border.width\n                    });\n                    this.legendCollections[this.legendCollections.length - 1]['legendData'].push(data[i]);\n                    legendIndex++;\n                }\n                else if (colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    this.legendCollections[isAddData['value']]['legendData'].push(data[i]);\n                }\n                if (!isRange && !isDesaturation && !isEqualColor) {\n                    if (isNullOrUndefined(colorMap.from) && isNullOrUndefined(colorMap.to)\n                        && isNullOrUndefined(colorMap.minOpacity) &&\n                        isNullOrUndefined(colorMap.maxOpacity) && isNullOrUndefined(colorMap.value) &&\n                        !isNullOrUndefined(colorMap.color)) {\n                        outfill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]'))\n                            ? colorMap.color[0] : colorMap.color;\n                        labelLegend = !isNullOrUndefined(colorMap.label) ? colorMap.label : 'Others';\n                        if (isNullOrUndefined(this.outOfRangeLegend)) {\n                            this.legendCollections.push({\n                                actualValue: labelLegend, legendData: [],\n                                legendName: labelLegend, legendFill: outfill\n                            });\n                            otherIndex = this.legendCollections.length;\n                            this.outOfRangeLegend = this.legendCollections[otherIndex - 1];\n                            legendIndex++;\n                        }\n                        this.legendCollections[otherIndex - 1]['legendData'].push(data[i]);\n                    }\n                }\n            }\n        }\n    };\n    TreeMapLegend.prototype.removeDuplicates = function (legendCollection, text) {\n        var isDuplicate = false;\n        for (var i = 0; i < legendCollection.length; i++) {\n            if (legendCollection[i]['legendName'] === text) {\n                isDuplicate = true;\n                break;\n            }\n            else {\n                continue;\n            }\n        }\n        return isDuplicate;\n    };\n    TreeMapLegend.prototype.isAddNewLegendData = function (legendText) {\n        var newDataProcess;\n        var itemValue;\n        if (this.legendCollections.length === 0) {\n            newDataProcess = true;\n        }\n        else {\n            for (var j = 0; j < this.legendCollections.length; j++) {\n                if (legendText === this.legendCollections[j]['actualValue']) {\n                    newDataProcess = false;\n                    itemValue = j;\n                    break;\n                }\n                else if (j === this.legendCollections.length - 1) {\n                    newDataProcess = true;\n                }\n            }\n        }\n        return { process: newDataProcess, value: itemValue };\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    /**\n     * To draw the legend\n     */\n    TreeMapLegend.prototype.drawLegend = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var render = treemap.renderer;\n        var fill;\n        var textOptions;\n        var gradientElement;\n        var textFont = legend.textStyle;\n        this.legendGroup = render.createGroup({ id: treemap.element.id + '_Legend_Group' });\n        this.renderLegendBorder();\n        this.renderLegendTitle();\n        if (legend.mode === 'Default') {\n            this.drawLegendItem(this.currentPage);\n        }\n        else {\n            for (var i = 0; i < this.legendRenderingCollections.length; i++) {\n                var itemId = treemap.element.id + '_Legend_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Index_' + i + '_Text';\n                var item = this.legendRenderingCollections[i];\n                gradientElement = item['element'];\n                fill = gradientElement ? 'url(#' + gradientElement.id + ')' : item['fill'];\n                var bounds = new Rect(item['x'], item['y'], item['width'], item['height']);\n                var textLocation = new Location(item['textX'], item['textY']);\n                var rectOptions = new RectOption(itemId, fill, legend.shapeBorder, legend.opacity, bounds);\n                if (this.treemap.enableRtl) {\n                    if (treemap.legendSettings.position === 'Left' || treemap.legendSettings.position === 'Right'\n                        || (treemap.legendSettings.position === 'Auto'\n                            && this.treemap.availableSize.width >= this.treemap.availableSize.height)) {\n                        rectOptions.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                            - (this.translate.y + rectOptions.height) - Math.abs(this.legendBorderRect.y - rectOptions.y);\n                        textLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                            - (this.translate.y) + (item['textHeight'] / 2)\n                            - Math.abs(this.legendBorderRect.y - textLocation.y);\n                    }\n                    else {\n                        rectOptions.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n                            - (this.translate.x + rectOptions.width)\n                            - Math.abs(this.legendBorderRect.x - rectOptions.x);\n                        textLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n                            - this.translate.x - Math.abs(this.legendBorderRect.x - textLocation.x);\n                    }\n                }\n                textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'middle', item['text'], '', '');\n                renderTextElement(textOptions, textFont, textFont.color || this.treemap.themeStyle.legendTextColor, this.legendGroup);\n                this.legendGroup.appendChild(render.drawRectangle(rectOptions));\n            }\n        }\n    };\n    TreeMapLegend.prototype.defaultLegendRtlLocation = function (collection, spacing, treemap, legend) {\n        var shapeLocation = collection['Shape'];\n        var textLocation = collection['Text'];\n        var legendText = collection['DisplayText'];\n        var textSize = measureText(legendText, legend.textStyle);\n        shapeLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n            - (this.translate.x + spacing) - Math.abs(this.legendBorderRect.x - shapeLocation.x);\n        textLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n            - (this.translate.x + textSize.width + spacing) - Math.abs(this.legendBorderRect.x - textLocation.x);\n        if (treemap.legendSettings.position === 'Left' || treemap.legendSettings.position === 'Right'\n            || (treemap.legendSettings.position === 'Auto'\n                && this.treemap.availableSize.width >= this.treemap.availableSize.height)) {\n            shapeLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                - this.translate.y - Math.abs(Math.abs(this.legendBorderRect.y) - shapeLocation.y) - (legend.shapeHeight / 2);\n            textLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                - this.translate.y - Math.abs(Math.abs(this.legendBorderRect.y) - textLocation.y);\n        }\n        return { shapeLocation: shapeLocation, textLocation: textLocation };\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.drawLegendItem = function (page) {\n        var _this = this;\n        var treemap = this.treemap;\n        var spacing = 10;\n        var legend = treemap.legendSettings;\n        var shapeSize = new Size(legend.shapeWidth, legend.shapeHeight);\n        var textOptions;\n        var legendRtlLocation;\n        var renderOptions;\n        var render = treemap.renderer;\n        var shapeBorder = legend.shapeBorder;\n        var eventArgs;\n        if (page >= 0 && page < this.totalPages.length) {\n            if (document.getElementById(this.legendGroup.id)) {\n                document.getElementById(this.legendGroup.id).remove();\n            }\n            var isLineShape_1 = (legend.shape === 'HorizontalLine' || legend.shape === 'VerticalLine' || legend.shape === 'Cross');\n            var strokeColor_1 = isLineShape_1 ? isNullOrUndefined(legend.fill) ? '#000000' : legend.fill : shapeBorder.color;\n            var strokeWidth_1 = isLineShape_1 ? (shapeBorder.width === 0) ? 1 : shapeBorder.width : shapeBorder.width;\n            var _loop_1 = function (i) {\n                var collection = this_1.totalPages[page]['Collection'][i];\n                var legendElement = render.createGroup({ id: treemap.element.id + '_Legend_Index_' + i });\n                var legendText = collection['DisplayText'];\n                var shapeId = treemap.element.id + '_Legend_Shape_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Text_Index_' + i;\n                var shapeLocation = collection['Shape'];\n                var textLocation = collection['Text'];\n                if (treemap.enableRtl) {\n                    legendRtlLocation = this_1.defaultLegendRtlLocation(collection, spacing, treemap, legend);\n                    shapeLocation = legendRtlLocation['shapeLocation'];\n                    textLocation = legendRtlLocation['textLocation'];\n                }\n                eventArgs = {\n                    cancel: false, name: legendItemRendering, treemap: treemap, fill: collection['Fill'],\n                    shape: legend.shape, imageUrl: legend.imageUrl\n                };\n                this_1.treemap.trigger(legendItemRendering, eventArgs, function (observedArgs) {\n                    var renderOptions = new PathOption(shapeId, observedArgs.fill, strokeWidth_1, isLineShape_1 ? collection['Fill'] : strokeColor_1, legend.opacity, '');\n                    legendElement.appendChild(drawSymbol(shapeLocation, observedArgs.shape, shapeSize, observedArgs.imageUrl, renderOptions, legendText));\n                    textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'start', legendText, '', '');\n                    renderTextElement(textOptions, legend.textStyle, legend.textStyle.color || _this.treemap.themeStyle.legendTextColor, legendElement);\n                    _this.legendGroup.appendChild(legendElement);\n                });\n            };\n            var this_1 = this;\n            for (var i = 0; i < this.totalPages[page]['Collection'].length; i++) {\n                _loop_1(i);\n            }\n            var pagingGroup = void 0;\n            var width = spacing;\n            var height = (spacing / 2);\n            if (this.page !== 0) {\n                var pagingText = (page + 1) + '/' + this.totalPages.length;\n                var pagingFont = legend.textStyle;\n                var pagingTextSize = measureText(pagingText, pagingFont);\n                var leftPageX = (this.legendItemRect.x + this.legendItemRect.width) - pagingTextSize.width -\n                    (width * 2) - spacing;\n                var rightPageX = (this.legendItemRect.x + this.legendItemRect.width);\n                var locY = (this.legendItemRect.y + this.legendItemRect.height) + (height / 2) + spacing;\n                var pageTextX = rightPageX - width - (pagingTextSize.width / 2) - (spacing / 2);\n                pagingGroup = render.createGroup({ id: treemap.element.id + '_Legend_Paging_Group' });\n                var leftPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Left_Paging_Group' });\n                var rightPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Right_Paging_Group' });\n                var rightPath = ' M ' + rightPageX + ' ' + locY + ' L ' + (rightPageX - width) + ' ' + (locY - height) +\n                    ' L ' + (rightPageX - width) + ' ' + (locY + height) + ' z ';\n                var leftPath = ' M ' + leftPageX + ' ' + locY + ' L ' + (leftPageX + width) + ' ' + (locY - height) +\n                    ' L ' + (leftPageX + width) + ' ' + (locY + height) + ' z ';\n                var leftPageOptions = new PathOption(treemap.element.id + '_Left_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', leftPath);\n                leftPageElement.appendChild(render.drawPath(leftPageOptions));\n                var leftRectPageOptions = new RectOption(treemap.element.id + '_Left_Page_Rect', 'transparent', {}, 1, new Rect(leftPageX - (width / 2), (locY - (height * 2)), width * 2, spacing * 2), '');\n                leftPageElement.appendChild(render.drawRectangle(leftRectPageOptions));\n                this.wireEvents(leftPageElement);\n                var rightPageOptions = new PathOption(treemap.element.id + '_Right_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', rightPath);\n                rightPageElement.appendChild(render.drawPath(rightPageOptions));\n                var rightRectPageOptions = new RectOption(treemap.element.id + '_Right_Page_Rect', 'transparent', {}, 1, new Rect((rightPageX - width), (locY - height), width, spacing), '');\n                rightPageElement.appendChild(render.drawRectangle(rightRectPageOptions));\n                this.wireEvents(rightPageElement);\n                pagingGroup.appendChild(leftPageElement);\n                pagingGroup.appendChild(rightPageElement);\n                var pageTextOptions = {\n                    'id': treemap.element.id + '_Paging_Text',\n                    'x': pageTextX,\n                    'y': locY + (pagingTextSize.height / 4),\n                    'fill': '#a6a6a6',\n                    'font-size': '14px',\n                    'font-style': pagingFont.fontStyle,\n                    'font-family': pagingFont.fontFamily,\n                    'font-weight': pagingFont.fontWeight,\n                    'text-anchor': 'middle',\n                    'transform': '',\n                    'opacity': 1,\n                    'dominant-baseline': ''\n                };\n                pagingGroup.appendChild(render.createText(pageTextOptions, pagingText));\n                this.legendGroup.appendChild(pagingGroup);\n            }\n        }\n    };\n    TreeMapLegend.prototype.renderLegendBorder = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var legendTitle = legend.title.text;\n        var spacing = 10;\n        var textStyle = legend.titleStyle;\n        var textOptions;\n        var title = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(title, textStyle);\n        this.legendBorderRect = new Rect((this.legendItemRect.x - spacing), (this.legendItemRect.y - spacing - textSize.height), (this.legendItemRect.width) + (spacing * 2), (this.legendItemRect.height) + (spacing * 2) + textSize.height +\n            (legend.mode === 'Interactive' ? 0 : (this.page !== 0) ? spacing : 0));\n        var renderOptions = new RectOption(treemap.element.id + '_Legend_Border', legend.background, legend.border, 1, this.legendBorderRect, '');\n        var legendBorder = treemap.renderer.drawRectangle(renderOptions);\n        legendBorder.style.pointerEvents = 'none';\n        this.legendGroup.appendChild(legendBorder);\n        this.getLegendAlignment(treemap, this.legendBorderRect.width, this.legendBorderRect.height, legend);\n        this.legendGroup.setAttribute('transform', 'translate( ' + (this.translate.x + (-(this.legendBorderRect.x))) + ' ' +\n            (this.translate.y + (-(this.legendBorderRect.y))) + ' )');\n        treemap.svgObject.appendChild(this.legendGroup);\n    };\n    TreeMapLegend.prototype.renderLegendTitle = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var textStyle = legend.titleStyle;\n        var legendTitle = legend.title.text;\n        var textOptions;\n        var spacing = 10;\n        var trimTitle = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(trimTitle, textStyle);\n        if (legendTitle) {\n            textOptions = new TextOption(treemap.element.id + '_LegendTitle', (this.legendItemRect.x) + (this.legendItemRect.width / 2), this.legendItemRect.y - (textSize.height / 2) - (spacing / 2), 'middle', trimTitle, '');\n            renderTextElement(textOptions, textStyle, textStyle.color || this.treemap.themeStyle.legendTitleColor, this.legendGroup);\n        }\n    };\n    /**\n     * To rendered the interactive pointer\n     */\n    TreeMapLegend.prototype.renderInteractivePointer = function (e) {\n        var treemap = this.treemap;\n        var target = e.target;\n        var interactiveId = treemap.element.id + '_Interactive_Legend';\n        target = !(e.type.indexOf('touch') > -1) ? target :\n            document.elementFromPoint(e.changedTouches[0].clientX, e.changedTouches[0].clientY);\n        var targetItem;\n        var legend = treemap.legendSettings;\n        if (target.id.indexOf('_Item_Index') > -1 && legend.visible && this.legendRenderingCollections.length > 0) {\n            var currentData = void 0;\n            var legendRect = void 0;\n            var rect = void 0;\n            var data = void 0;\n            var fill = void 0;\n            var stroke = void 0;\n            var strokeWidth = void 0;\n            var legendElement = void 0;\n            targetItem = treemap.layout.renderItems[parseFloat(target.id.split('_')[6])];\n            var svgRect = treemap.svgObject.getBoundingClientRect();\n            for (var i = 0; i < this.legendCollections.length; i++) {\n                currentData = this.legendCollections[i];\n                legendElement = document.getElementById(treemap.element.id + '_Legend_Index_' + i);\n                legendRect = legendElement.getBoundingClientRect();\n                var rect_1 = new Rect(Math.abs(legendRect.left - svgRect.left), Math.abs(legendRect.top - svgRect.top), legendRect.width, legendRect.height);\n                fill = legendElement.getAttribute('fill');\n                stroke = legend.shapeBorder.color;\n                strokeWidth = legend.shapeBorder.width;\n                if (!isNullOrUndefined(currentData['legendData'])) {\n                    data = currentData['legendData'];\n                    for (var j = 0; j < data.length; j++) {\n                        if (data[j]['levelOrderName'] === targetItem['levelOrderName']) {\n                            this.drawInteractivePointer(legend, fill, stroke, interactiveId, strokeWidth, rect_1);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            this.removeInteractivePointer();\n        }\n    };\n    TreeMapLegend.prototype.drawInteractivePointer = function (legend, fill, stroke, id, strokeWidth, rect) {\n        var path;\n        var pathOptions;\n        var locX;\n        var locY;\n        var height = 10;\n        var width = 10;\n        var direction = (legend.orientation === 'None') ? (legend.position === 'Top' || legend.position === 'Bottom')\n            ? 'Horizontal' : 'Vertical' : legend.orientation;\n        if (direction === 'Horizontal') {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y;\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY - height) + ' Z ';\n            }\n            else {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y + (rect.height);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY + height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' Z ';\n            }\n        }\n        else {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width);\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX + width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' z ';\n            }\n            else {\n                locX = rect.x;\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX - width) + ' ' + (locY + height) + ' z ';\n            }\n        }\n        pathOptions = new PathOption(id, fill, strokeWidth, stroke, 1, '', path);\n        this.treemap.svgObject.appendChild(this.treemap.renderer.drawPath(pathOptions));\n    };\n    TreeMapLegend.prototype.getLegendAlignment = function (treemap, width, height, legend) {\n        var x;\n        var y;\n        var spacing = 10;\n        var totalRect;\n        totalRect = extend({}, treemap.areaRect, totalRect, true);\n        var areaX = totalRect.x;\n        var areaY = totalRect.y;\n        var areaHeight = totalRect.height;\n        var areaWidth = totalRect.width;\n        var totalWidth = treemap.availableSize.width;\n        var totalHeight = treemap.availableSize.height;\n        var position = legend.position === 'Auto' ? (totalWidth > totalHeight) ? 'Right' : 'Bottom' : legend.position;\n        if (legend.position === 'Float') {\n            this.translate = legend.location;\n        }\n        else {\n            switch (position) {\n                case 'Top':\n                case 'Bottom':\n                    totalRect.height = (areaHeight - height);\n                    x = (totalWidth / 2) - (width / 2);\n                    y = (position === 'Top') ? areaY : (areaY + totalRect.height) + spacing;\n                    totalRect.y = (position === 'Top') ? areaY + height + spacing : areaY;\n                    break;\n                case 'Left':\n                case 'Right':\n                    totalRect.width = (areaWidth - width);\n                    x = (position === 'Left') ? areaX : areaX + totalRect.width;\n                    y = (totalHeight / 2) - (height / 2);\n                    totalRect.x = (position === 'Left') ? areaX + width : areaX;\n                    break;\n            }\n            switch (legend.alignment) {\n                case 'Near':\n                    if (position === 'Top' || position === 'Bottom') {\n                        x = totalRect.x;\n                    }\n                    else {\n                        y = totalRect.y;\n                    }\n                    break;\n                case 'Far':\n                    if (position === 'Top' || position === 'Bottom') {\n                        x = totalWidth - width;\n                    }\n                    else {\n                        y = totalHeight - height;\n                    }\n                    break;\n            }\n            this.treemap.totalRect = totalRect;\n            this.translate = new Location(x, y);\n        }\n    };\n    TreeMapLegend.prototype.mouseUpHandler = function (e) {\n        this.renderInteractivePointer(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeInteractivePointer.bind(this), 3000);\n    };\n    /**\n     * To remove the interactive pointer\n     */\n    TreeMapLegend.prototype.removeInteractivePointer = function () {\n        if (document.getElementById(this.treemap.element.id + '_Interactive_Legend')) {\n            document.getElementById(this.treemap.element.id + '_Interactive_Legend').remove();\n        }\n    };\n    /**\n     * To change the next page\n     */\n    TreeMapLegend.prototype.changeNextPage = function (e) {\n        this.currentPage = (e.target.id.indexOf('_Left_Page_') > -1) ? (this.currentPage - 1) :\n            (this.currentPage + 1);\n        this.drawLegend();\n    };\n    /**\n     * Wire events for event handler\n     */\n    TreeMapLegend.prototype.wireEvents = function (element) {\n        EventHandler.add(element, Browser.touchStartEvent, this.changeNextPage, this);\n    };\n    /**\n     * To add the event listener\n     */\n    TreeMapLegend.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderInteractivePointer, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To remove the event listener\n     */\n    TreeMapLegend.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderInteractivePointer);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapLegend.prototype.getModuleName = function () {\n        return 'treeMapLegend';\n    };\n    /**\n     * To destroy the legend.\n     * @return {void}\n     * @private\n     */\n    TreeMapLegend.prototype.destroy = function (treemap) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    /**\n     * Get the gradient color for interactive legend.\n     */\n    TreeMapLegend.prototype.legendGradientColor = function (colorMap, legendIndex) {\n        var legendFillColor;\n        var xmlns = 'http://www.w3.org/2000/svg';\n        if (!isNullOrUndefined(colorMap.color) && Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n            var defElement = this.treemap.renderer.createDefs();\n            var linerGradientEle = document.createElementNS(xmlns, 'linearGradient');\n            var opacity = 1;\n            var position = this.treemap.legendSettings.position;\n            var x2 = void 0;\n            var y2 = void 0;\n            x2 = position === 'Top' || position === 'Bottom' ? '100' : '0';\n            y2 = position === 'Top' || position === 'Bottom' ? '0' : '100';\n            linerGradientEle.setAttribute('id', 'linear_' + legendIndex);\n            linerGradientEle.setAttribute('x1', 0 + '%');\n            linerGradientEle.setAttribute('y1', 0 + '%');\n            linerGradientEle.setAttribute('x2', x2 + '%');\n            linerGradientEle.setAttribute('y2', y2 + '%');\n            for (var b = 0; b < colorMap.color.length; b++) {\n                var offsetColor = 100 / (colorMap.color.length - 1);\n                var stopEle = document.createElementNS(xmlns, 'stop');\n                stopEle.setAttribute('offset', b * offsetColor + '%');\n                stopEle.setAttribute('stop-color', colorMap.color[b]);\n                stopEle.setAttribute('stop-opacity', opacity.toString());\n                linerGradientEle.appendChild(stopEle);\n            }\n            defElement.appendChild(linerGradientEle);\n            this.legendLinearGradient = linerGradientEle;\n            var color = 'url(' + '#linear_' + legendIndex + ')';\n            this.defsElement.appendChild(linerGradientEle);\n            legendFillColor = color;\n        }\n        return legendFillColor;\n    };\n    return TreeMapLegend;\n}());\nexport { TreeMapLegend };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { itemHighlight, itemSelected } from '../model/constants';\nimport { findHightLightItems, removeClassNames, applyOptions, removeShape, removeLegend, removeSelectionWithHighlight, setColor, getLegendIndex, pushCollection } from '../utils/helper';\n/**\n * Performing treemap highlight\n */\nvar TreeMapHighlight = /** @class */ (function () {\n    function TreeMapHighlight(treeMap) {\n        this.target = 'highlight';\n        this.shapeTarget = 'highlight';\n        this.shapeHighlightCollection = [];\n        this.legendHighlightCollection = [];\n        this.currentElement = [];\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    //tslint:disable:max-func-body-length\n    /* tslint:disable:max-line-length */\n    /**\n     * Mouse down event in highlight\n     */\n    TreeMapHighlight.prototype.mouseMove = function (e) {\n        var treemap = this.treemap;\n        var processHighlight;\n        var targetId = e.target.id;\n        var eventArgs;\n        var items = [];\n        var eventBlazorArgs;\n        var highlight = this.treemap.highlightSettings;\n        var item;\n        var highLightElements = [];\n        var process;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selectionModule = this.treemap.treeMapSelectionModule;\n        if (targetId.indexOf('_Item_Index') > -1 && (selectionModule ? selectionModule.selectionId !== targetId : true)) {\n            if (this.highLightId !== targetId) {\n                treeMapElement = document.getElementById(treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout');\n                var selectionElements = document.getElementsByClassName('treeMapSelection');\n                item = this.treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    var length_1 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    index = getLegendIndex(length_1, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById('container_Legend_Shape_Index_' + index) : document.getElementById('container_Legend_Index_' + index);\n                    if (this.shapeElement !== null && (selectionModule ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true)) {\n                        if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true) {\n                            this.currentElement.push({ currentElement: this.shapeElement });\n                            removeShape(this.shapeHighlightCollection, 'highlight');\n                            this.shapeHighlightCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                                oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                                oldBorderWidth: collection[index]['borderWidth']\n                            });\n                            setColor(this.shapeElement, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            this.target = 'highlight';\n                        }\n                        else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                            removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                            this.highLightId = '';\n                        }\n                    }\n                    else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                        removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                        this.highLightId = '';\n                    }\n                }\n                orders = findHightLightItems(item, [], highlight.mode, treemap);\n                if (this.treemap.legendSettings.visible ? selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true : true) {\n                    if (this.treemap.legendSettings.visible ? selectionModule ? this.shapeElement !== selectionModule.shapeElement : true : true) {\n                        for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                            element = treeMapElement.childNodes[i];\n                            process = true;\n                            item = treemap.layout.renderItems[element.id.split('_')[6]];\n                            for (var j = 0; j < selectionElements.length; j++) {\n                                if (element.id === selectionElements[j].id) {\n                                    process = false;\n                                    break;\n                                }\n                            }\n                            if (orders.indexOf(item['levelOrderName']) > -1 && process) {\n                                highLightElements.push(element);\n                                items.push(item);\n                            }\n                        }\n                        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                        for (var k = 0; k < highLightElements.length; k++) {\n                            element = highLightElements[k];\n                            applyOptions(element.childNodes[0], { border: highlight.border, fill: highlight.fill, opacity: highlight.opacity });\n                            element.classList.add('treeMapHighLight');\n                            this.highLightId = targetId;\n                        }\n                        eventArgs = { cancel: false, name: itemHighlight, treemap: treemap, items: items, elements: highLightElements };\n                        eventBlazorArgs = { cancel: false, name: itemHighlight, items: items, elements: highLightElements };\n                        treemap.trigger(itemHighlight, treemap.isBlazor ? eventBlazorArgs : eventArgs);\n                    }\n                    else {\n                        processHighlight = false;\n                    }\n                }\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1) {\n            if (this.treemap.legendSettings.visible && (selectionModule ? selectionModule.legendSelectId !== targetId : true) && (selectionModule ? selectionModule.shapeSelectId !== targetId : true)) {\n                var index = void 0;\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_2;\n                var targetEle = document.getElementById(targetId);\n                if (this.shapeTarget === 'highlight') {\n                    removeLegend(this.legendHighlightCollection, 'highlight');\n                }\n                this.shapeTarget = 'highlight';\n                index = this.treemap.legendSettings.mode === 'Default' ? parseFloat(targetId.split('_')[4]) : parseFloat(targetId.split('_')[3]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                var collection = this.treemap.treeMapLegendModule.legendCollections;\n                var legendIndex = parseInt(targetId[targetId.length - 1], 10);\n                for (var i = 0; i < dataLength; i++) {\n                    for (var j = 0; j < this.treemap.layout.renderItems.length; j++) {\n                        if (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][i]['levelOrderName'] === this.treemap.layout.renderItems[j]['levelOrderName']) {\n                            itemIndex = j;\n                            groupIndex = this.treemap.layout.renderItems[j]['groupIndex'];\n                            var nodeEle = document.getElementById('container_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (i === 0) {\n                                this.legendHighlightCollection = [];\n                                pushCollection(this.legendHighlightCollection, legendIndex, j, targetEle, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_2 = this.legendHighlightCollection.length;\n                                this.legendHighlightCollection[length_2 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            setColor(nodeEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            length_2 = this.legendHighlightCollection.length;\n                            this.legendHighlightCollection[length_2 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && this.treemap.legendSettings.visible) {\n                    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                }\n            }\n            if ((this.shapeTarget === 'highlight' || this.target === 'highlight') && this.treemap.legendSettings.visible) {\n                if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                    if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && selectionModule ? selectionModule.legendSelect : true) {\n                        removeShape(this.shapeHighlightCollection, 'highlight');\n                        this.shapeHighlightCollection = [];\n                    }\n                }\n            }\n            if (this.shapeTarget === 'highlight' && this.treemap.legendSettings.visible) {\n                removeLegend(this.legendHighlightCollection, 'highlight');\n            }\n            this.highLightId = '';\n            processHighlight = false;\n        }\n        return processHighlight;\n    };\n    /**\n     * To bind events for highlight\n     */\n    TreeMapHighlight.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.mouseMove, this);\n    };\n    /**\n     * To unbind events for highlight\n     */\n    TreeMapHighlight.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.mouseMove);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapHighlight.prototype.getModuleName = function () {\n        return 'treeMapHighlight';\n    };\n    /**\n     * To destroy the hightlight.\n     * @return {void}\n     * @private\n     */\n    TreeMapHighlight.prototype.destroy = function (treeMap) {\n        this.removeEventListener();\n    };\n    return TreeMapHighlight;\n}());\nexport { TreeMapHighlight };\n/**\n * Performing treemap selection\n */\nvar TreeMapSelection = /** @class */ (function () {\n    function TreeMapSelection(treeMap) {\n        this.shapeSelectionCollection = [];\n        this.legendSelectionCollection = [];\n        this.shapeSelect = true;\n        this.legendSelect = true;\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    /**\n     * Mouse down event in selection\n     */\n    TreeMapSelection.prototype.mouseDown = function (e) {\n        var targetEle = e.target;\n        var eventArgs;\n        var eventBlazorArgs;\n        var treemap = this.treemap;\n        var items = [];\n        var targetId = targetEle.id;\n        var item;\n        var selectionElements = [];\n        var opacity;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selection = treemap.selectionSettings;\n        var highlightModule = this.treemap.treeMapHighlightModule;\n        var layoutID = treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout';\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            if (this.selectionId !== targetId && this.legendSelect) {\n                treeMapElement = document.getElementById(layoutID);\n                item = treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    this.shapeSelect = false;\n                    var length_3 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    this.shapeElement = undefined;\n                    removeShape(this.shapeSelectionCollection, 'selection');\n                    if (highlightModule) {\n                        highlightModule.shapeTarget = 'selection';\n                        highlightModule.shapeHighlightCollection = [];\n                    }\n                    index = getLegendIndex(length_3, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById('container_Legend_Shape_Index_' + index) : document.getElementById('container_Legend_Index_' + index);\n                    if (this.shapeElement !== null) {\n                        this.shapeSelectId = this.shapeElement.getAttribute('id');\n                        this.shapeSelectionCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                            oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                            oldBorderWidth: collection[index]['borderWidth']\n                        });\n                        setColor(this.shapeElement, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                    }\n                }\n                orders = findHightLightItems(item, [], selection.mode, treemap);\n                for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                    element = treeMapElement.childNodes[i];\n                    item = treemap.layout.renderItems[element.id.split('_')[6]];\n                    if (orders.indexOf(item['levelOrderName']) > -1) {\n                        selectionElements.push(element);\n                        items.push(item);\n                    }\n                }\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.selectionId = targetId;\n                var highLightElements = document.getElementsByClassName('treeMapHighLight');\n                for (var k = 0; k < selectionElements.length; k++) {\n                    element = selectionElements[k];\n                    if (highLightElements.length > 0) {\n                        for (var j = 0; j < highLightElements.length; j++) {\n                            if (highLightElements[j].id === element.id) {\n                                highLightElements[j].classList.remove('treeMapHighLight');\n                            }\n                            applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                            element.classList.add('treeMapSelection');\n                        }\n                    }\n                    else {\n                        applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                        element.classList.add('treeMapSelection');\n                    }\n                    eventArgs = { cancel: false, name: itemSelected, treemap: treemap, items: items, elements: selectionElements };\n                    eventBlazorArgs = { cancel: false, name: itemSelected, items: items, elements: selectionElements };\n                    treemap.trigger(itemSelected, treemap.isBlazor ? eventBlazorArgs : eventArgs);\n                }\n            }\n            else {\n                removeShape(this.shapeSelectionCollection, 'selection');\n                this.shapeElement = undefined;\n                this.shapeSelect = true;\n                this.shapeSelectId = '';\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.selectionId = '';\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1) {\n            var collection = this.treemap.treeMapLegendModule.legendCollections;\n            if (this.treemap.legendSettings.visible && this.legendSelectId !== targetId && this.shapeSelect) {\n                var index = void 0;\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_4;\n                this.legendSelectId = targetId;\n                this.legendSelect = false;\n                var legendIndex = parseInt(targetId[targetId.length - 1], 10);\n                var targetEle_1 = document.getElementById(targetId);\n                removeLegend(this.legendSelectionCollection, 'selection');\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'selection';\n                }\n                index = this.treemap.legendSettings.mode === 'Default' ? parseFloat(targetId.split('_')[4]) : parseFloat(targetId.split('_')[3]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                for (var k = 0; k < dataLength; k++) {\n                    for (var l = 0; l < this.treemap.layout.renderItems.length; l++) {\n                        if (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][k]['levelOrderName'] === this.treemap.layout.renderItems[l]['levelOrderName']) {\n                            itemIndex = l;\n                            groupIndex = this.treemap.layout.renderItems[l]['groupIndex'];\n                            var nodeEle = document.getElementById('container_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (k === 0) {\n                                pushCollection(this.legendSelectionCollection, legendIndex, l, targetEle_1, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_4 = this.legendSelectionCollection.length;\n                                this.legendSelectionCollection[length_4 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle_1, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            setColor(nodeEle, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            length_4 = this.legendSelectionCollection.length;\n                            this.legendSelectionCollection[length_4 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n            else {\n                removeLegend(this.legendSelectionCollection, 'Selection');\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'highlight';\n                }\n                this.legendSelect = true;\n                this.legendSelectId = '';\n            }\n        }\n    };\n    /**\n     * To bind events for selection\n     */\n    TreeMapSelection.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchStartEvent, this.mouseDown, this);\n    };\n    /**\n     * To unbind events for selection\n     */\n    TreeMapSelection.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchStartEvent, this.mouseDown);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapSelection.prototype.getModuleName = function () {\n        return 'treeMapSelection';\n    };\n    /**\n     * To destroy the selection.\n     * @return {void}\n     * @private\n     */\n    TreeMapSelection.prototype.destroy = function (treeMap) {\n        this.removeEventListener();\n    };\n    return TreeMapSelection;\n}());\nexport { TreeMapSelection };\n","import { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { Browser, createElement, isNullOrUndefined, updateBlazorTemplate, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { getMousePosition, textFormatter, formatValue } from '../utils/helper';\nimport { tooltipRendering } from '../model/constants';\n/**\n * Render Tooltip\n */\nvar TreeMapTooltip = /** @class */ (function () {\n    function TreeMapTooltip(treeMap) {\n        this.treemap = treeMap;\n        this.tooltipSettings = this.treemap.tooltipSettings;\n        this.tooltipId = this.treemap.element.id + '_TreeMapTooltip';\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    TreeMapTooltip.prototype.renderTooltip = function (e) {\n        var _this = this;\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var tootipArgs;\n        if (e.type.indexOf('touch') !== -1) {\n            this.isTouch = true;\n            touchArg = e;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n            target = touchArg.target;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch';\n            pageX = e.pageX;\n            pageY = e.pageY;\n            target = e.target;\n        }\n        var value;\n        var targetId = target.id;\n        var item = {};\n        var tooltipEle;\n        var location;\n        var toolTipHeader;\n        var toolTipData = {};\n        var tooltipContent = [];\n        var markerFill;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n            if (!isNullOrUndefined(item)) {\n                toolTipHeader = item['name'];\n                value = item['weight'];\n                toolTipData = item['data'];\n                markerFill = item['options']['fill'];\n                if (this.treemap.enableRtl) {\n                    tooltipContent = [textFormatter(this.tooltipSettings.format, toolTipData, this.treemap) ||\n                            formatValue(value, this.treemap) + ' : ' + this.treemap.weightValuePath.toString()];\n                }\n                else {\n                    tooltipContent = [textFormatter(this.tooltipSettings.format, toolTipData, this.treemap) ||\n                            this.treemap.weightValuePath.toString() + ' : ' + formatValue(value, this.treemap)];\n                }\n                if (document.getElementById(this.tooltipId)) {\n                    tooltipEle = document.getElementById(this.tooltipId);\n                }\n                else {\n                    tooltipEle = createElement('div', {\n                        id: this.treemap.element.id + '_TreeMapTooltip',\n                        className: 'EJ2-TreeMap-Tooltip',\n                        styles: 'position: absolute;pointer-events:none;'\n                    });\n                    document.getElementById(this.treemap.element.id + '_Secondary_Element').appendChild(tooltipEle);\n                }\n                location = getMousePosition(pageX, pageY, this.treemap.svgObject);\n                location.y = (this.tooltipSettings.template) ? location.y + 10 : location.y;\n                this.tooltipSettings.textStyle.fontFamily = this.treemap.themeStyle.fontFamily;\n                this.tooltipSettings.textStyle.color = this.treemap.themeStyle.tooltipFontColor\n                    || this.tooltipSettings.textStyle.color;\n                this.tooltipSettings.textStyle.opacity = this.treemap.themeStyle.tooltipTextOpacity\n                    || this.tooltipSettings.textStyle.opacity;\n                tootipArgs = {\n                    cancel: false, name: tooltipRendering, item: item,\n                    options: {\n                        location: location, text: tooltipContent, data: toolTipData,\n                        textStyle: this.tooltipSettings.textStyle, template: this.tooltipSettings.template\n                    },\n                    treemap: this.treemap,\n                    element: target, eventArgs: e\n                };\n                this.treemap.trigger(tooltipRendering, tootipArgs, function (observedArgs) {\n                    if (!observedArgs.cancel) {\n                        _this.svgTooltip = new Tooltip({\n                            enable: true,\n                            header: '',\n                            data: observedArgs.options['data'],\n                            template: observedArgs.options['template'],\n                            content: observedArgs.options['text'],\n                            shapes: [],\n                            location: observedArgs.options['location'],\n                            palette: [markerFill],\n                            areaBounds: _this.treemap.areaRect,\n                            textStyle: observedArgs.options['textStyle']\n                        });\n                        _this.svgTooltip.opacity = _this.treemap.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                        _this.svgTooltip.appendTo(tooltipEle);\n                        updateBlazorTemplate(_this.treemap.element.id + 'Template', 'Template');\n                    }\n                    else {\n                        _this.removeTooltip();\n                        resetBlazorTemplate(_this.treemap.element.id + 'Template', 'Template');\n                    }\n                });\n            }\n        }\n        else {\n            this.removeTooltip();\n            resetBlazorTemplate(this.treemap.element.id + 'Template', 'Template');\n        }\n    };\n    TreeMapTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    TreeMapTooltip.prototype.removeTooltip = function () {\n        if (document.getElementsByClassName('EJ2-TreeMap-Tooltip').length > 0) {\n            document.getElementsByClassName('EJ2-TreeMap-Tooltip')[0].remove();\n        }\n    };\n    /**\n     * To bind events for tooltip module\n     */\n    TreeMapTooltip.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To unbind events for tooltip module\n     */\n    TreeMapTooltip.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapTooltip.prototype.getModuleName = function () {\n        return 'treeMapTooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     * @return {void}\n     * @private\n     */\n    TreeMapTooltip.prototype.destroy = function (treeMap) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    return TreeMapTooltip;\n}());\nexport { TreeMapTooltip };\n"],"names":["stringToNumber","value","containerSize","undefined","indexOf","parseInt","measureText","text","font","measureObject","document","getElementById","createElement","id","body","appendChild","innerHTML","style","position","fontSize","size","fontWeight","fontStyle","fontFamily","visibility","top","left","whiteSpace","lineHeight","Size","clientWidth","clientHeight","textTrim","maxWidth","label","width","i","length","substring","findPosition","location","alignment","textSize","type","x","y","height","Location","createTextStyle","renderer","renderOptions","htmlObject","createText","setAttributeNS","renderTextElement","options","color","parent","isMinus","tspanElement","font-size","font-style","font-family","font-weight","text-anchor","anchor","transform","opacity","dominant-baseline","baseLine","fill","SvgRenderer","isNullOrUndefined","connectorText","search","drillLevelText","split","z","drillText","replace","len","createTSpan","getElement","itemsToOrder","a","b","isContainsData","source","pathName","processData","treemap","path","isExist","name","leaf","leafItemSettings","levels","groupPath","labelPath","weightValuePath","findChildren","data","children","keys","Object","Array","findHightLightItems","items","mode","treeMap","push","j","parentName","currentItem","layout","renderItems","getTemplateFunction","template","templateFn","querySelectorAll","compile","querySelector","trim","e","convertElement","element","labelId","childElement","styles","templateHtml","RegExp","toString","findLabelLocation","rect","labelSize","getBoundingClientRect","areaRect","Math","abs","enableDrillDown","renderDirection","measureElement","parentElement","offsetHeight","offsetWidth","remove","getArea","getShortestEdge","input","container","convertToContainer","min","convertToRect","xOffset","yOffset","getMousePosition","pageX","pageY","elementRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","positionY","colorMap","colorMapping","equalValue","paths","isNaN","isEqualColor","dataValue","from","to","prototype","call","colorCollections","minOpacity","maxOpacity","deSaturationColor","rangeValue","getColorByValue","rgbToHex","r","g","componentToHex","rbg","Number","getGradientColor","previousOffset","nextOffset","percent","full","previousColor","nextColor","charAt","colorNameToHex","length_1","splitColorValueOffset","splitColor","getPercentageColor","previous","next","prevColor","getPercentage","substr","ColorValue","round","wordWrap","maximumWidth","dataLabel","textCollection","labelCollection","concat","textWrap","resultText","currentLength","totalWidth","totalLength","sliceString","slice","hide","maxHeight","orderByArea","removeClassNames","elements","applyOptions","childNodes","classList","setAttribute","textFormatter","format","_i","keys_1","key","join","formatValue","intl","getNumberFormat","useGrouping","useGroupingSeparator","formatFunction","convertToHexCode","hex","convertHexToColor","result","exec","window","getComputedStyle","isRGBValue","drawSymbol","shape","url","svgRenderer","temp","renderLegendShape","htmlElement","functionName","renderOption","renderPath","shapeWidth","shapeHeight","shapeX","shapeY","merge","rx","ry","cx","cy","d","xValue","yValue","cos","PI","sin","href","isParentItem","item","removeShape","collection","setColor","removeLegend","dataCount","k","borderColor","borderWidth","removeSelectionWithHighlight","getElementsByClassName","getLegendIndex","index","dataLength","treeMapLegendModule","legendCollections","pushCollection","number","legendElement","shapeElement","legendCollection","legendEle","oldFill","oldOpacity","oldBorderColor","oldBorderWidth","shapeOldFill","shapeOldOpacity","shapeOldBorderColor","shapeOldBorderWidth","getThemeStyle","theme","toLowerCase","backgroundColor","titleFontColor","subTitleFontColor","tooltipFillColor","tooltipFontColor","legendTitleColor","legendTextColor","tooltipFillOpacity","tooltipTextOpacity","legendFontSize","labelFontFamily","beforePrint","itemRendering","drillStart","drillEnd","itemSelected","itemHighlight","tooltipRendering","itemClick","itemMove","click","doubleClick","rightClick","mouseMove","legendItemRendering","legendRendering","resize","defaultFont","__extends","extendStatics","setPrototypeOf","__proto__","p","hasOwnProperty","__","this","constructor","create","__decorate","decorators","target","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Border","_super","apply","Property","ChildProperty","Margin","Font","CommonTitleSettings","SubTitleSettings","Complex","TitleSettings","ColorMapping","LegendSettings","InitialDrillSettings","LeafItemSettings","Collection","TooltipSettings","SelectionSettings","HighlightSettings","LevelSettings","Rect","RectOption","border","dashArray","stroke","PathOption","TextOption","TreeMapAjax","async","contentType","sendData","dataOptions","LayoutPanel","processLayoutPanel","totalRect","levelsOfData","initialDrillDown","groupIndex","groupName","drilledItems","getDrilldownData","extend","legendSettings","currentLevel","calculateLayoutItems","renderLayoutItems","count","enableBreadcrumb","drillData","newData","child","parentData","layoutType","computeSliceAndDiceDimensional","computeSquarifyDimensional","coords","gap","headerHeight","leafItem","groups","sliceAndDiceProcess","groupGap","showHeader","childValue","parentArea","alottedValue","totalWeight","forEach","isHorizontal","sort","isHierarchicalData","padding","calculateChildrenLayout","groupPadding","computeTotalArea","performRowsLayout","currentRow","stack","newCoordinates","getCoordinates","newStack","nextDatum","restData","aspectRatio","newRow","currentRowLength","valueSum","newContainer","cutArea","findMaxAspectRatio","row","rowLength","minArea","Infinity","maxArea","sumArea","area","max","pow","areaWidth","areaHeight","isParent","parentRect","subXOffset","subYOffset","coordinates","y1","x1","dataLength_1","dataSum_1","i_1","multiplier","datum","onDemandProcess","childItems","parentItem","parentItemGroupname","splice","renderData","txtVisible","getItemColor","eventArgs","_this","pathOptions","templatePosition","renderText","groupId","templateEle","textStyle","elementID","interSectAction","rectPath","secondaryEle","layoutGroup","createGroup","itemGroup","templateGroup","className","isLeafItem","_loop_1","this_1","drillDownView","treemapItemRect","labelFormat","headerFormat","levelName","showLabels","breadcrumbConnector","enableRtl","labelStyle","headerStyle","themeStyle","labelPosition","labelTemplate","headerTemplate","cancel","RenderItems","trigger","observedArgs","drawPath","renderItemText","renderTemplate","tabIndex","childElementCount","updateBlazorTemplate","svgObject","textLocation","customText","textName","tspanText","labelInterSectAction","drillSymbolCount","drillSymbolSize","texts","maxNumber","collectionLength","stringText","getSaturatedColor","itemFill","itemOpacity","defaultLevelData","option","equalColorValuePath","rangeColorValuePath","colorValuePath","palette","saturatedColor","rgbValue","templateElement","labelEle","templateSize","templateLocation","textValue","ExportUtils","control","print","printWindow","open","outerHeight","outerWidth","moveTo","resizeTo","screen","availWidth","availHeight","argsData","htmlContent","getHTMLContent","div","cloneNode","Element","export","fileName","orientation","attrs","availableSize","isDownload","Browser","userAgent","PdfPageOrientation","Landscape","svgData","outerHTML","URL","createObjectURL","Blob","XMLSerializer","serializeToString","triggerDownload","image_1","Image","ctx_1","getContext","onload","drawImage","revokeObjectURL","document_1","PdfDocument","imageString","toDataURL","pageSettings","pages","add","graphics","PdfBitmap","save","destroy","src","download","toLocaleLowerCase","dispatchEvent","MouseEvent","view","bubbles","cancelable","Theme","mapsTitleFont","TreeMap","preRender","isBlazor","initPrivateVariable","unWireEVents","createSvg","wireEVents","setCulture","render","createSecondaryElement","addTabIndex","renderBorder","renderTitle","titleSettings","processDataManager","dataModule","queryModule","ajaxModule","localAjax","dataSource","DataManager","query","Query","executeQuery","then","renderTreeMapElements","Ajax","onSuccess","args","JSON","parse","send","processingData","visible","renderLegend","elementChange","removeChild","firstChild","hasChildNodes","parentNode","containerWidth","containerHeight","secondaryElement","legendGroup","insertBefore","borderElement","background","borderRect","drawRectangle","title","bounds","groupEle","margin","right","trimmedTitle","elementSize","location_1","titleBounds","description","subtitleSettings","bottom","map","checkIsHierarchicalData","data_1","currentData","dataIndex","levelOrderName","weight","hierarchyData","processHierarchicalData","processFlatJsonData","reOrderLevelData","findTotalWeight","childData","levelIndex","childItemLevel","childLevel","mainData_1","l","orderNames","level","childName","name_1","childGroupPath_1","start","currentName","currentPath","prevPath","previousData","groupObj","parseFloat","EventHandler","clickOnTreeMap","doubleClickOnTreeMap","rightClickOnTreeMap","touchStartEvent","mouseDownOnTreeMap","touchMoveEvent","mouseMoveOnTreeMap","touchEndEvent","mouseEndOnTreeMap","mouseLeaveOnTreeMap","removeEventListener","resizeOnTreeMap","addEventListener","bind","Internationalization","previousSize","currentSize","clearTimeout","contains","setTimeout","refreshing","eventBlazorArgs","itemIndex","targetId","clickArgs","mouseEvent","clickBlazorArgs","preventDefault","doubleTapTimer1","end","Date","getMilliseconds","doubleClickArgs","doubleClickBlazorArgs","rightClickArgs","rightClickBlazorArgs","mouseDown","notify","moveArgs","moveBlazorArgs","drillMouseMove","cursor","calculateSelectedTextLevels","labelText","drillLevel","levelText","_a","currentLevelLabel","calculatePreviousLevelChildItems","drillLevelValues","directLevel","levelItems","text1","drillTextLevel","h","compareSelectedLabelWithDrillDownItems","drillLevelChild","newDrillItem","startEvent","endEvent","endBlazorEvent","targetEle","layoutID","templateID","drillLength","which","textContent","widthIncrement","heightIncrement","drilledLegendItems","treeMapTooltipModule","removeTooltip","removeInteractivePointer","treeMapHighlightModule","shapeHighlightCollection","highLightId","requiredModules","modules","tooltipSettings","member","highlightSettings","enable","selectionSettings","onPropertyChanged","newProp","oldProp","getModuleName","getPersistData","Event","NotifyPropertyChanges","Component","TreeMapLegend","page","legendBorderRect","currentPage","textMaxWidth","legendInteractiveGradient","legendItemRect","legendRenderingCollections","legendNames","totalPages","gradientCount","defsElement","createDefs","_changePosition","calculateLegendBounds","drawLegend","legend","findColorMappingLegendItems","findPaletteLegendItems","legendTitle","titleTextStyle","titleStyle","legendMode","textX","textY","shapeLocation","orientation_1","legendWidth","legendHeight","legendTitleSize","startX_1","startY_1","shapePadding","legendItem","Page","legendTextSize","maxSize","prvePositionX","nextPositionY","getPageChanged","prevPositionY","nextPositionX","DisplayText","Shape","Text","Fill","Data","legendObj","legendRect","rectWidth_1","rectHeight_1","itemTextStyle_1","legendLength_1","placement","itemStartX","itemStartY","labelAction","labelDisplayMode","maxTextHeight","maxTextWidth","legendText","itemTextSize","textWidth","textHeight","calculateLegendItems","legendFillColor","legendName","showLegendPath","valuePath","removeDuplicateLegend","removeDuplicates","legendFill","legendData","itemArea","isAddData","gradientElement","x2","y2","actualValue","isDuplicate","isRange","outfill","labelLegend","otherIndex","colorMapProcess","isDesaturation","legendIndex","outOfRangeLegend","colorMapping_1","showLegend","isAddNewLegendData","colors","gradient","q","stop1Color","colorStop","stop2Color","drawGradient","legendGradientColor","legendLinearGradient","newDataProcess","itemValue","process","textFont","renderLegendBorder","renderLegendTitle","drawLegendItem","itemId","textId","rectOptions","shapeBorder","translate","defaultLegendRtlLocation","spacing","legendRtlLocation","shapeSize","isLineShape_1","strokeColor_1","strokeWidth_1","shapeId","imageUrl","pagingGroup","pagingText","pagingFont","pagingTextSize","leftPageX","rightPageX","locY","pageTextX","leftPageElement","rightPageElement","rightPath","leftPath","leftPageOptions","leftRectPageOptions","wireEvents","rightPageOptions","rightRectPageOptions","pageTextOptions","legendBorder","pointerEvents","getLegendAlignment","trimTitle","renderInteractivePointer","interactiveId","elementFromPoint","changedTouches","clientX","clientY","targetItem","strokeWidth","svgRect","rect_1","getAttribute","drawInteractivePointer","locX","invertedPointer","areaX","areaY","totalHeight","mouseUpHandler","changeNextPage","isDestroyed","on","off","xmlns","defElement","linerGradientEle","createElementNS","offsetColor","stopEle","TreeMapHighlight","shapeTarget","legendHighlightCollection","currentElement","processHighlight","treeMapElement","orders","highlight","highLightElements","selectionModule","treeMapSelectionModule","selectionId","selectionElements","legendSelectId","shapeSelectId","length_2","nodeEle","Elements","legendSelect","TreeMapSelection","shapeSelectionCollection","legendSelectionCollection","shapeSelect","selection","highlightModule","length_3","length_4","targetEle_1","TreeMapTooltip","tooltipId","renderTooltip","touchArg","tootipArgs","isTouch","pointerType","tooltipEle","markerFill","toolTipData","tooltipContent","resetBlazorTemplate","svgTooltip","Tooltip","header","content","shapes","areaBounds","appendTo"],"mappings":"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"}