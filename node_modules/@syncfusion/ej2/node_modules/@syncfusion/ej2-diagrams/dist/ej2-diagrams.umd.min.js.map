{"version":3,"file":"ej2-diagrams.umd.min.js","sources":["../src/diagram/utility/path-util.js","../src/diagram/primitives/matrix.js","../src/diagram/objects/dictionary/basic-shapes.js","../src/diagram/objects/dictionary/common.js","../src/diagram/objects/dictionary/flow-shapes.js","../src/diagram/utility/connector.js","../src/diagram/objects/tooltip.js","../src/diagram/objects/connector.js","../src/diagram/ruler/ruler.js","../src/diagram/utility/constraints-util.js","../src/diagram/objects/dictionary/umlactivity-shapes.js","../src/diagram/interaction/container-interaction.js","../src/diagram/utility/swim-lane-util.js","../src/diagram/utility/diagram-util.js","../src/diagram/utility/uml-util.js","../src/diagram/utility/dom-util.js","../src/diagram/utility/base-util.js","../src/diagram/interaction/actions.js","../src/diagram/objects/bpmn.js","../src/diagram/layout/symmetrical-layout.js","../src/diagram/primitives/size.js","../src/diagram/primitives/point.js","../src/diagram/primitives/rect.js","../src/diagram/core/appearance.js","../src/diagram/enum/enum.js","../src/diagram/core/elements/diagram-element.js","../src/diagram/core/containers/container.js","../src/diagram/core/elements/text-element.js","../src/diagram/core/containers/canvas.js","../src/diagram/core/elements/path-element.js","../src/diagram/core/elements/image-element.js","../src/diagram/core/elements/native-element.js","../src/diagram/objects/port.js","../src/diagram/objects/annotation.js","../src/diagram/objects/icon.js","../src/diagram/objects/node-base.js","../src/diagram/core/elements/html-element.js","../src/ruler/ruler.js","../src/diagram/interaction/selector.js","../src/diagram/diagram/keyboard-commands.js","../src/diagram/core/containers/grid.js","../src/diagram/core/containers/stack-panel.js","../src/diagram/objects/node.js","../src/diagram/rendering/canvas-renderer.js","../src/diagram/rendering/svg-renderer.js","../src/diagram/rendering/renderer.js","../src/diagram/diagram/page-settings.js","../src/diagram/objects/service.js","../src/diagram/diagram/grid-lines.js","../src/diagram/diagram/ruler-settings.js","../src/diagram/diagram/data-source.js","../src/diagram/layout/layout-base.js","../src/diagram/interaction/tool.js","../src/diagram/interaction/connector-editing.js","../src/diagram/interaction/event-handlers.js","../src/diagram/diagram/layer.js","../src/diagram/interaction/command-manager.js","../src/diagram/interaction/scroller.js","../src/diagram/interaction/spatial-search/quad.js","../src/diagram/interaction/spatial-search/spatial-search.js","../src/diagram/diagram/serialization-settings.js","../src/diagram/diagram.js","../src/diagram/print-settings.js","../src/diagram/data-binding/data-binding.js","../src/diagram/objects/context-menu.js","../src/diagram/objects/connector-bridging.js","../src/diagram/objects/snapping.js","../src/diagram/objects/undo-redo.js","../src/diagram/objects/layout-animation.js","../src/diagram/layout/hierarchical-tree.js","../src/diagram/layout/mind-map.js","../src/diagram/layout/radial-tree.js","../src/diagram/layout/complex-hierarchical-tree.js","../src/symbol-palette/symbol-palette.js","../src/overview/overview.js"],"sourcesContent":["/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function processPathData(data) {\n    var collection = [];\n    var j;\n    var arrayCollection = parsePathData(data);\n    if (arrayCollection.length > 0) {\n        for (var i = 0; i < arrayCollection.length; i++) {\n            var ob = arrayCollection[i];\n            var char = '';\n            char = ob[0];\n            switch (char.toLowerCase()) {\n                case 'm':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                        if (char === 'm') {\n                            char = 'l';\n                        }\n                        else if (char === 'M') {\n                            char = 'L';\n                        }\n                    }\n                    break;\n                case 'l':\n                case 't':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                    }\n                    break;\n                case 'h':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j] });\n                    }\n                    break;\n                case 'v':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, y: ob[j] });\n                    }\n                    break;\n                case 'z':\n                    collection.push({ command: char });\n                    break;\n                case 'c':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, x1: ob[j], y1: ob[j + 1], x2: ob[j + 2], y2: ob[j + 3], x: ob[j + 4], y: ob[j + 5]\n                        });\n                        j = j + 5;\n                    }\n                    break;\n                case 's':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x2: ob[j], y2: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'q':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x1: ob[j], y1: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'a':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, r1: ob[j], r2: ob[j + 1], angle: ob[j + 2], largeArc: ob[j + 3],\n                            sweep: ob[j + 4], x: ob[j + 5], y: ob[j + 6]\n                        });\n                        j = j + 6;\n                    }\n                    break;\n            }\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function parsePathData(data) {\n    var tokenizer = /([a-z]+)|([+-]?(?:\\d+\\.?\\d*|\\.\\d+))/gi;\n    var current = [];\n    var commands = [];\n    var match = {};\n    tokenizer.lastIndex = 0;\n    var isExponential = false;\n    match = tokenizer.exec(data);\n    while (match) {\n        if (match[1] === 'e') {\n            var s1 = '';\n            isExponential = true;\n        }\n        else if (match[1]) {\n            if (match[1].toLowerCase() === 'zm') {\n                if (current.length) {\n                    commands.push(current);\n                }\n                commands.push(['Z']);\n                current = [match[1].substring(1, 2)];\n            }\n            else {\n                if (current.length) {\n                    commands.push(current);\n                }\n                current = [match[1]];\n            }\n            isExponential = false;\n        }\n        else {\n            if (!current.length) {\n                current = [];\n            }\n            if (!isExponential) {\n                current.push(Number(match[2]));\n            }\n            isExponential = false;\n        }\n        match = tokenizer.exec(data);\n    }\n    if (current.length) {\n        commands.push(current);\n    }\n    return commands;\n}\n/**\n * Used to find the path for rounded rect\n */\nexport function getRectanglePath(cornerRadius, height, width) {\n    var x = 0;\n    var y = 0;\n    var path = '';\n    var points = [{ x: x + cornerRadius, y: y }, { x: x + width - cornerRadius, y: y },\n        { x: x + width, y: y + cornerRadius }, { x: x + width, y: y + height - cornerRadius },\n        { x: x + width - cornerRadius, y: y + height }, { x: x + cornerRadius, y: y + height },\n        { x: x, y: y + height - cornerRadius }, { x: x, y: y + cornerRadius }\n    ];\n    var corners = [{ x: x + width, y: y }, { x: x + width, y: y + height }, { x: x, y: y + height }, { x: x, y: y }];\n    var corner = 0;\n    var point2;\n    var next;\n    path = 'M' + points[0].x + ' ' + points[0].y;\n    var i;\n    for (i = 0; i < points.length; i = i + 2) {\n        point2 = points[i + 1];\n        path += 'L' + point2.x + ' ' + point2.y;\n        next = points[i + 2] || points[0];\n        path += 'Q' + corners[corner].x + ' ' + corners[corner].y + ' ' + next.x + ' ' + next.y;\n        corner++;\n    }\n    return path;\n}\n/**\n * Used to find the path for polygon shapes\n */\nexport function getPolygonPath(collection) {\n    var path = '';\n    var seg;\n    path = 'M' + collection[0].x + ' ' + collection[0].y;\n    var i;\n    for (i = 1; i < collection.length; i++) {\n        seg = collection[i];\n        path += 'L' + seg.x + ' ' + seg.y;\n    }\n    path += 'Z';\n    return path;\n}\n/** @private */\nexport function pathSegmentCollection(collection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var initx;\n    var inity;\n    var segments = [];\n    for (x = 0, y = 0, i = 0, length = collection.length; i < length; ++i) {\n        var obj = collection[i];\n        var seg = obj;\n        var char = '';\n        char = seg.command;\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        var prev = segments[segments.length - 1];\n        switch (char) {\n            case 'M':\n                segments.push({ command: 'M', x: x, y: y });\n                break;\n            case 'L':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y });\n                break;\n            case 'H':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y0 });\n                break;\n            case 'V':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x0, y: y });\n                break;\n            case 'C':\n                segments.push({ command: 'C', x0: x0, y0: y0, x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y });\n                break;\n            case 'S':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'C' || prev.command === 'S') {\n                        ctrl = { x: prev.x2, y: prev.y2 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'C', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x2: x2, y2: y2, x: x, y: y });\n                }\n                break;\n            case 'Q':\n                //ctx.quadraticCurveTo(x1, y1, x, y);\n                segments.push({ command: 'Q', x0: x0, y0: y0, x1: x1, y1: y1, x: x, y: y });\n                break;\n            case 'T':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'Q') {\n                        ctrl = { x: prev.x1, y: prev.y1 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'Q', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x: x, y: y });\n                }\n                break;\n            case 'A':\n                var newSeg = seg;\n                newSeg.command = 'A';\n                segments.push(newSeg);\n                break;\n            case 'Z':\n            case 'z':\n                segments.push({ command: 'Z' });\n                x = x0;\n                y = y0;\n                break;\n        }\n        if (char === 'M' || char === 'm') {\n            initx = x;\n            inity = y;\n        }\n        x0 = x;\n        y0 = y;\n    }\n    return segments;\n}\n/** @private */\nexport function transformPath(arr, sX, sY, s, bX, bY, iX, iY) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var newSeg;\n    for (x = 0, y = 0, i = 0, length = arr.length; i < length; ++i) {\n        var obj = arr[i];\n        var seg = obj;\n        var char = seg.command;\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if (s) {\n            if (x !== undefined) {\n                x = scalePathData(x, sX, bX, iX);\n            }\n            if (y !== undefined) {\n                y = scalePathData(y, sY, bY, iY);\n            }\n            if (x1 !== undefined) {\n                x1 = scalePathData(x1, sX, bX, iX);\n            }\n            if (y1 !== undefined) {\n                y1 = scalePathData(y1, sY, bY, iY);\n            }\n            if (x2 !== undefined) {\n                x2 = scalePathData(x2, sX, bX, iX);\n            }\n            if (y2 !== undefined) {\n                y2 = scalePathData(y2, sY, bY, iY);\n            }\n        }\n        else {\n            if (x !== undefined) {\n                x = Number((x + sX).toFixed(2));\n            }\n            if (y !== undefined) {\n                y = Number((y + sY).toFixed(2));\n            }\n            if (x1 !== undefined) {\n                x1 = Number((x1 + sX).toFixed(2));\n            }\n            if (y1 !== undefined) {\n                y1 = Number((y1 + sY).toFixed(2));\n            }\n            if (x2 !== undefined) {\n                x2 = Number((x2 + sX).toFixed(2));\n            }\n            if (y2 !== undefined) {\n                y2 = Number((y2 + sY).toFixed(2));\n            }\n        }\n        var scaledPath = { x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2, r1: seg.r1, r2: seg.r2 };\n        newSeg = updatedSegment(seg, char, scaledPath, s, sX, sY);\n        if (newSeg) {\n            arr[i] = newSeg;\n        }\n        // Record the start of a subpath\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    var pathData = getPathString(arr);\n    return pathData;\n}\n/** @private */\nexport function updatedSegment(segment, char, obj, isScale, sX, sY) {\n    switch (char) {\n        case 'M':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'L':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'H':\n            segment.x = obj.x;\n            break;\n        case 'V':\n            segment.y = obj.y;\n            break;\n        case 'C':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'S':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'Q':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            break;\n        case 'T':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'A':\n            var r1 = obj.r1;\n            var r2 = obj.r2;\n            if (isScale) {\n                obj.r1 = r1 = (r1 * sX);\n                obj.r2 = r2 = (r2 * sY);\n            }\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.r1 = obj.r1;\n            segment.r2 = obj.r2;\n            break;\n        case 'z':\n        case 'Z':\n            segment = { command: 'Z' };\n            break;\n    }\n    return segment;\n}\n/** @private */\nexport function scalePathData(val, scaleFactor, oldOffset, newOffset) {\n    if (val !== oldOffset) {\n        if (newOffset !== oldOffset) {\n            val = (((val * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)))\n                + (newOffset - Number(oldOffset)));\n        }\n        else {\n            val = ((Number(val) * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)));\n        }\n    }\n    else {\n        if (newOffset !== oldOffset) {\n            val = newOffset;\n        }\n    }\n    return Number(val.toFixed(2));\n}\n/** @private */\nexport function splitArrayCollection(arrayCollection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    for (x = 0, y = 0, i = 0, length = arrayCollection.length; i < length; ++i) {\n        var path = arrayCollection[i];\n        var seg = path;\n        var char = seg.command;\n        if (/[MLHVCSQTA]/.test(char)) {\n            if ('x' in seg) {\n                seg.x = x = seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y = seg.y;\n            }\n        }\n        else {\n            if ('x1' in seg) {\n                seg.x1 = x1 = x + seg.x1;\n            }\n            if ('x2' in seg) {\n                seg.x2 = x2 = x + seg.x2;\n            }\n            if ('y1' in seg) {\n                seg.y1 = y1 = y + seg.y1;\n            }\n            if ('y2' in seg) {\n                seg.y2 = y2 = y + seg.y2;\n            }\n            if ('x' in seg) {\n                seg.x = x += seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y += seg.y;\n            }\n            var newSeg = void 0;\n            switch (char) {\n                case 'm':\n                case 'M':\n                    newSeg = { command: 'M', x: x, y: y };\n                    break;\n                case 'l':\n                case 'L':\n                    newSeg = { command: 'L', x: x, y: y };\n                    break;\n                case 'h':\n                case 'H':\n                    newSeg = { command: 'H', x: x };\n                    break;\n                case 'v':\n                case 'V':\n                    newSeg = { command: 'V', y: y };\n                    break;\n                case 'c':\n                case 'C':\n                    newSeg = { command: 'C', x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2 };\n                    break;\n                case 's':\n                case 'S':\n                    newSeg = { command: 'S', x: x, y: y, x2: x2, y2: y2 };\n                    break;\n                case 'q':\n                case 'Q':\n                    newSeg = { command: 'Q', x: x, y: y, x1: x1, y1: y1 };\n                    break;\n                case 't':\n                case 'T':\n                    newSeg = { command: 'T', x: x, y: y };\n                    break;\n                case 'a':\n                case 'A':\n                    newSeg = { command: 'A', x: x, y: y };\n                    newSeg.r1 = seg.r1;\n                    newSeg.r2 = seg.r2;\n                    newSeg.angle = seg.angle;\n                    newSeg.largeArc = seg.largeArc;\n                    newSeg.sweep = seg.sweep;\n                    break;\n                case 'z':\n                case 'Z':\n                    newSeg = { command: 'Z' };\n                    x = x0;\n                    y = y0;\n                    newSeg = arrayCollection[i];\n                    break;\n            }\n            if (newSeg) {\n                arrayCollection[i] = newSeg;\n            }\n        }\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    return arrayCollection;\n}\n/** @private */\nexport function getPathString(arrayCollection) {\n    var getNewString = '';\n    var i;\n    for (i = 0; i < arrayCollection.length; i++) {\n        if (i === 0) {\n            getNewString += getString(arrayCollection[i]);\n        }\n        else {\n            getNewString += ' ' + getString(arrayCollection[i]);\n        }\n    }\n    return getNewString;\n}\n/** @private */\nexport function getString(obj) {\n    var string = '';\n    switch (obj.command) {\n        case 'Z':\n        case 'z':\n            string = obj.command;\n            break;\n        case 'M':\n        case 'm':\n        case 'L':\n        case 'l':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'C':\n        case 'c':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'Q':\n        case 'q':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'A':\n        case 'a':\n            var cmd = obj.command;\n            var ang = obj.angle;\n            var l = (obj.largeArc ? '1' : '0');\n            var s = (obj.sweep ? '1' : '0');\n            string = cmd + ' ' + obj.r1 + ' ' + obj.r2 + ' ' + ang + ' ' + l + ' ' + s + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'H':\n        case 'h':\n            string = obj.command + ' ' + obj.x;\n            break;\n        case 'V':\n        case 'v':\n            string = obj.command + ' ' + obj.y;\n            break;\n        case 'S':\n        case 's':\n            string = obj.command + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'T':\n        case 't':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n    }\n    return string;\n}\n","/**\n * Matrix module is used to transform points based on offsets, angle\n */\n/** @private */\nexport var MatrixTypes;\n(function (MatrixTypes) {\n    MatrixTypes[MatrixTypes[\"Identity\"] = 0] = \"Identity\";\n    MatrixTypes[MatrixTypes[\"Translation\"] = 1] = \"Translation\";\n    MatrixTypes[MatrixTypes[\"Scaling\"] = 2] = \"Scaling\";\n    MatrixTypes[MatrixTypes[\"Unknown\"] = 4] = \"Unknown\";\n})(MatrixTypes || (MatrixTypes = {}));\n/** @private */\nvar Matrix = /** @class */ (function () {\n    function Matrix(m11, m12, m21, m22, offsetX, offsetY, type) {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        // if (type === undefined) {\n        //     this.type = MatrixTypes.Unknown;\n        // } else {\n        //     this.type = type;\n        // }\n        this.type = type;\n    }\n    return Matrix;\n}());\nexport { Matrix };\n/** @private */\nexport function identityMatrix() {\n    return new Matrix(1, 0, 0, 1, 0, 0, MatrixTypes.Identity);\n}\n/** @private */\nexport function transformPointByMatrix(matrix, point) {\n    var pt = multiplyPoint(matrix, point.x, point.y);\n    return { x: Math.round(pt.x * 100) / 100, y: Math.round(pt.y * 100) / 100 };\n}\n/** @private */\nexport function transformPointsByMatrix(matrix, points) {\n    var transformedPoints = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        transformedPoints.push(transformPointByMatrix(matrix, point));\n    }\n    return transformedPoints;\n}\n/** @private */\nexport function rotateMatrix(matrix, angle, centerX, centerY) {\n    angle %= 360.0;\n    multiplyMatrix(matrix, createRotationRadians(angle * 0.017453292519943295, centerX ? centerX : 0, centerY ? centerY : 0));\n}\n/** @private */\nexport function scaleMatrix(matrix, scaleX, scaleY, centerX, centerY) {\n    if (centerX === void 0) { centerX = 0; }\n    if (centerY === void 0) { centerY = 0; }\n    multiplyMatrix(matrix, createScaling(scaleX, scaleY, centerX, centerY));\n}\n/** @private */\nexport function translateMatrix(matrix, offsetX, offsetY) {\n    if (matrix.type & MatrixTypes.Identity) {\n        matrix.type = MatrixTypes.Translation;\n        setMatrix(matrix, 1.0, 0.0, 0.0, 1.0, offsetX, offsetY);\n        return;\n    }\n    if (matrix.type & MatrixTypes.Unknown) {\n        matrix.offsetX += offsetX;\n        matrix.offsetY += offsetY;\n        return;\n    }\n    matrix.offsetX += offsetX;\n    matrix.offsetY += offsetY;\n    matrix.type |= MatrixTypes.Translation;\n}\n/** @private */\nfunction createScaling(scaleX, scaleY, centerX, centerY) {\n    var result = identityMatrix();\n    result.type = !(centerX || centerY) ? MatrixTypes.Scaling : MatrixTypes.Scaling | MatrixTypes.Translation;\n    setMatrix(result, scaleX, 0.0, 0.0, scaleY, centerX - scaleX * centerX, centerY - scaleY * centerY);\n    return result;\n}\n/** @private */\nfunction createRotationRadians(angle, centerX, centerY) {\n    var result = identityMatrix();\n    var num = Math.sin(angle);\n    var num2 = Math.cos(angle);\n    var offsetX = centerX * (1.0 - num2) + centerY * num;\n    var offsetY = centerY * (1.0 - num2) - centerX * num;\n    result.type = MatrixTypes.Unknown;\n    setMatrix(result, num2, num, -num, num2, offsetX, offsetY);\n    return result;\n}\n/** @private */\nfunction multiplyPoint(matrix, x, y) {\n    switch (matrix.type) {\n        case MatrixTypes.Identity: break;\n        case MatrixTypes.Translation:\n            x += matrix.offsetX;\n            y += matrix.offsetY;\n            break;\n        case MatrixTypes.Scaling:\n            x *= matrix.m11;\n            y *= matrix.m22;\n            break;\n        case MatrixTypes.Translation | MatrixTypes.Scaling:\n            x *= matrix.m11;\n            x += matrix.offsetX;\n            y *= matrix.m22;\n            y += matrix.offsetY;\n            break;\n        default:\n            var num = y * matrix.m21 + matrix.offsetX;\n            var num2 = x * matrix.m12 + matrix.offsetY;\n            x *= matrix.m11;\n            x += num;\n            y *= matrix.m22;\n            y += num2;\n            break;\n    }\n    return { x: x, y: y };\n}\n/** @private */\nexport function multiplyMatrix(matrix1, matrix2) {\n    var type = matrix1.type;\n    var type2 = matrix2.type;\n    if (type2 === MatrixTypes.Identity) {\n        return;\n    }\n    if (type === MatrixTypes.Identity) {\n        assignMatrix(matrix1, matrix2);\n        matrix1.type = matrix2.type;\n        return;\n    }\n    if (type2 === MatrixTypes.Translation) {\n        matrix1.offsetX += matrix2.offsetX;\n        matrix1.offsetY += matrix2.offsetY;\n        if (type !== MatrixTypes.Unknown) {\n            matrix1.type |= MatrixTypes.Translation;\n        }\n        return;\n    }\n    if (type !== MatrixTypes.Translation) {\n        var num = type << 4 | type2;\n        switch (num) {\n            case 34:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                return;\n            case 35:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                matrix1.offsetX = matrix2.offsetX;\n                matrix1.offsetY = matrix2.offsetY;\n                matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n                return;\n            case 36: break;\n            default:\n                {\n                    switch (num) {\n                        case 50:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX *= matrix2.m11;\n                            matrix1.offsetY *= matrix2.m22;\n                            return;\n                        case 51:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX = matrix2.m11 * matrix1.offsetX + matrix2.offsetX;\n                            matrix1.offsetY = matrix2.m22 * matrix1.offsetY + matrix2.offsetY;\n                            return;\n                        case 52: break;\n                        default:\n                            switch (num) {\n                                case 66:\n                                case 67:\n                                case 68: break;\n                                default: return;\n                            }\n                            break;\n                    }\n                    break;\n                }\n        }\n        var result = identityMatrix();\n        var m11New = matrix1.m11 * matrix2.m11 + matrix1.m12 * matrix2.m21;\n        var m12New = matrix1.m11 * matrix2.m12 + matrix1.m12 * matrix2.m22;\n        var m21New = matrix1.m21 * matrix2.m11 + matrix1.m22 * matrix2.m21;\n        var m22New = matrix1.m21 * matrix2.m12 + matrix1.m22 * matrix2.m22;\n        var offsetX_1 = matrix1.offsetX * matrix2.m11 + matrix1.offsetY * matrix2.m21 + matrix2.offsetX;\n        var offsetY_1 = matrix1.offsetX * matrix2.m12 + matrix1.offsetY * matrix2.m22 + matrix2.offsetY;\n        setMatrix(result, m11New, m12New, m21New, m22New, offsetX_1, offsetY_1);\n        if (result.m21 || result.m12) {\n            result.type = MatrixTypes.Unknown;\n        }\n        else {\n            if (result.m11 && result.m11 !== 1.0 || result.m22 && result.m22 !== 1.0) {\n                result.type = MatrixTypes.Scaling;\n            }\n            if (result.offsetX || result.offsetY) {\n                result.type |= MatrixTypes.Translation;\n            }\n            if ((result.type & (MatrixTypes.Translation | MatrixTypes.Scaling)) === MatrixTypes.Identity) {\n                result.type = MatrixTypes.Identity;\n            }\n            result.type = MatrixTypes.Scaling | MatrixTypes.Translation;\n        }\n        assignMatrix(matrix1, result);\n        matrix1.type = result.type;\n        return;\n    }\n    var offsetX = matrix1.offsetX;\n    var offsetY = matrix1.offsetY;\n    matrix1.offsetX = offsetX * matrix2.m11 + offsetY * matrix2.m21 + matrix2.offsetX;\n    matrix1.offsetY = offsetX * matrix2.m12 + offsetY * matrix2.m22 + matrix2.offsetY;\n    if (type2 === MatrixTypes.Unknown) {\n        matrix1.type = MatrixTypes.Unknown;\n        return;\n    }\n    matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n}\n/** @private */\nfunction setMatrix(mat, m11, m12, m21, m22, x, y) {\n    mat.m11 = m11;\n    mat.m12 = m12;\n    mat.m21 = m21;\n    mat.m22 = m22;\n    mat.offsetX = x;\n    mat.offsetY = y;\n}\n/** @private */\nfunction assignMatrix(matrix1, matrix2) {\n    matrix1.m11 = matrix2.m11;\n    matrix1.m12 = matrix2.m12;\n    matrix1.m21 = matrix2.m21;\n    matrix1.m22 = matrix2.m22;\n    matrix1.offsetX = matrix2.offsetX;\n    matrix1.offsetY = matrix2.offsetY;\n    matrix1.type = matrix2.type;\n}\n","/**\n * BasicShapeDictionary defines the shape of the built-in basic shapes\n */\n/** @private */\nexport function getBasicShape(shape) {\n    return basicShapes[shape.toString()];\n}\nvar basicShapes = {\n    //Rectangle,\n    'Rectangle': 'M0,0 L50,0 L50,50 L0,50 z',\n    //Ellipse,\n    'Ellipse': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    //Hexagon,\n    'Hexagon': 'M30,0 L60,0 L90,30 L60,60 L30,60 L0,30 L30,0 z',\n    //Parallelogram,\n    'Parallelogram': 'M30,0 L60,0 L45,30 L15,30 z',\n    //Triangle,\n    'Triangle': 'M45,0 L90,45 L0,45 L45,0 z',\n    //Plus,\n    'Plus': 'M696.6084,158.2656 L674.8074,158.2656 L674.8074,136.4656 L658.4084,136.4656 L658.4084,158.2656 L636.6084,158.2656' +\n        'L636.6084,174.6646 L658.4084,174.6646 L658.4084,196.4656 L674.8074,196.4656 L674.8074,174.6646 L696.6084,174.6646' +\n        'L696.6084,158.2656 z',\n    //Star,\n    'Star': 'M540.3643,137.9336 L546.7973,159.7016 L570.3633,159.7296 L550.7723,171.9366 L558.9053,194.9966 L540.3643,179.4996' +\n        'L521.8223,194.9966 L529.9553,171.9366 L510.3633,159.7296 L533.9313,159.7016 L540.3643,137.9336 z',\n    //Pentagon,\n    'Pentagon': 'M30,0 L60,30 L50,70 L10,70 L0,30 L30,0 z',\n    //Heptagon,\n    'Heptagon': 'M223.7783,195.7134 L207.1303,174.8364 L213.0713,148.8034 L237.1303,137.2174 L261.1883,148.8034 L267.1303,174.8364' +\n        'L250.4813,195.7134 L223.7783,195.7134 z',\n    //Octagon,\n    'Octagon': 'M98.7319,196.4653 L81.1579,178.8923 L81.1579,154.0393 L98.7319,136.4653 L123.5849,136.4653' +\n        'L141.1579,154.0393 L141.1579,178.8923 L123.5849,196.4653 L98.7319,196.4653 z',\n    //Trapezoid,\n    'Trapezoid': 'M127.2842,291.4492 L95.0322,291.4492 L81.1582,256.3152 L141.1582,256.3152 L127.2842,291.4492 z',\n    //Decagon,\n    'Decagon': 'M657.3379,302.4141 L642.3369,291.5161 L636.6089,273.8821 L642.3369,256.2481 L657.3379,245.3511 L675.8789,245.3511' +\n        'L690.8789,256.2481 L696.6089,273.8821' +\n        'L690.8789,291.5161 L675.8789,302.4141 L657.3379,302.4141 z',\n    //RightTriangle,\n    'RightTriangle': 'M836.293,292.9238 L776.293,292.9238 L776.293,254.8408 L836.293,292.9238 z',\n    //Cylinder,\n    'Cylinder': 'M 542.802,362.009C 542.802,368.452 525.341,373.676 503.802,373.676C 482.263,373.676 464.802,368.452 464.802,362.009' +\n        'L 464.802,466.484C 464.802,472.928 482.263,478.151 503.802,478.151' +\n        'C 525.341,478.151 542.802,472.928 542.802,466.484L 542.802,362.016C 542.802,368.459 525.341,373.534 503.802,373.534' +\n        'C 482.263,373.534 464.802,368.31 464.802,361.867' +\n        'L 464.802,362.016C 464.802,355.572 482.263,350.349 503.802,350.349C 525.341,350.349 542.802,355.572 542.802,362.016',\n    //Diamond,\n    'Diamond': 'M397.784,287.875 L369.5,316.159 L341.216,287.875 L369.5,259.591 L397.784,287.875 z'\n};\n","/**\n * ShapeDictionary defines the shape of the default nodes and ports\n */\n/** @private */\nexport function getPortShape(shape) {\n    return portShapes[shape.toString()];\n}\n/** @private */\nexport function getDecoratorShape(shape, decorator) {\n    if (shape === 'Custom') {\n        return decorator.pathData;\n    }\n    return decoratorShapes[shape];\n}\n/**\n * @private\n * @param icon\n * sets the path data for different icon shapes\n */\nexport function getIconShape(icon) {\n    var data;\n    switch (icon.shape) {\n        case 'Minus':\n            data = 'M0,50 L100,50';\n            break;\n        case 'Plus':\n            data = 'M0,-50 L0,50 M-50,0 L50,0';\n            break;\n        case 'ArrowUp':\n            data = 'M0,100 L50,0 L100,100 Z';\n            break;\n        case 'ArrowDown':\n            data = 'M0,0 L50,100 L100,0 Z';\n            break;\n        case 'Path':\n            data = icon.pathData;\n            break;\n    }\n    return data;\n}\nvar portShapes = {\n    'X': 'M14,14 L106,106 M106,14 L14,106',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n};\nvar decoratorShapes = {\n    'OpenArrow': 'M15.9,23 L5,16 L15.9,9 L17,10.7 L8.7,16 L17,21.3Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n    'Fletch': 'M14.8,10c0,0-3.5,6,0.2,12c0,0-2.5-6-10.9-6C4.1,16,11.3,16,14.8,10z',\n    'OpenFetch': 'M6,17c-0.6,0-1-0.4-1-1s0.4-1,1-1c10.9,0,11-5,11-5' +\n        'c0-0.6,0.4-1,1-1s1,0.4,1,1C19,10.3,18.9,17,6,17C6,17,6,17,6,17z ' +\n        'M18,23c-0.5,0-1-0.4-1-1c0-0.2-0.3-5-11-5c-0.6,0-1-0.5-1-1s0.4-1,1-1c0,0,0,0,0,0' +\n        'c12.9,0,13,6.7,13,7    C19,22.6,18.6,23,18,23z',\n    'IndentedArrow': 'M17,10c0,0-4.5,5.5,0,12L5,16L17,10z',\n    'OutdentedArrow': 'M14.6,10c0,0,5.4,6,0,12L5,16L14.6,10z',\n    'DoubleArrow': 'M19,10 L19,22 L13,16Z M12,10 L12,22 L6,16Z',\n    'Arrow': 'M15,10 L15,22 L5,16Z',\n    'Diamond': 'M12,23l-7-7l7-7l6.9,7L12,23z',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z'\n};\n","/**\n * FlowShapeDictionary defines the shape of the built-in flow shapes\n */\n/** @private */\nexport function getFlowShape(shape) {\n    return flowShapes[shape.toString()];\n}\nvar flowShapes = {\n    // Process,\n    'Process': 'M419.511,76.687L359.511,76.687L359.511,43.086L419.511,43.086z',\n    // Decision,\n    'Decision': 'M 253.005,115.687L 200.567,146.071L 148.097,115.687L 200.534,85.304L 253.005,115.687 Z',\n    // Document,\n    'Document': 'M 60 31.9 c 0 0 -11 -7.7 -30 0 s -30 0 -30 0 V 0 h 60 V 31.9 Z',\n    // PreDefinedProcess,\n    'PreDefinedProcess': 'M 0,0 L 50,0 L 50,50 L 0,50 Z  M 8.334,0 L 8.334,50 M 41.667,0 L 41.667,50',\n    // Terminator,\n    'Terminator': 'M 269.711,29.33C 269.71,44.061 257.77,56 243.04,56L 158.058,56C 143.33,56 131.39,44.061 131.39,29.33L 131.39,29.33' +\n        'C 131.391,14.6057 143.33,2.669 158.058,2.669L 243.044,2.669C 257.772,2.669 269.711,14.6057 269.711,29.333 Z',\n    // PaperTap,\n    'PaperTap': 'M0.0009,17.2042 L0.0009,47.165 C0.001,47.165 14.403,53.5455 25.00,47.165 C35.599,40.7852 44.403,43.5087 50.00,47.165' +\n        'L50.001,17.2042 M50.001,32.7987 L50.001,2.8405 C50.001,2.8405 35.599,-3.5427 25.001,2.8405' +\n        'C14.403,9.2237 5.599,6.494 0.0009,2.8405 L0.0009,32.7987',\n    // DirectData,\n    'DirectData': 'M 132.62 0 L 17.38 0 C 7.78 0 0 13.43 0 30 C 0 46.57 7.78 60 17.38 60 L 132.62 60 M 132.62 0' +\n        'C 123.02 0 115.24 13.43 115.24 30 C 115.24 46.57 123.02 60 132.62 60 C 142.22 60 150 46.57 150 30 C 150 13.43 142.22 0 132.62 0 z ',\n    // SequentialData,\n    'SequentialData': 'M0.0029,24.999 C0.0029,11.1922 10.433,0.0021 23.295,0.0021 C36.159,0.00216 46.585,11.1922 46.585,24.999' +\n        'C46.585,38.8057 36.159,49.9979 23.295,49.9979 C10.433,49.9979 0.0029,38.8057 0.0029,24.999 z M23.294,49.999 L50.002,49.999',\n    // Sort,\n    'Sort': 'M50.001,24.9971 L25.001,49.9971 L0.00097,24.9971 L25.001,-0.00286865 L50.001,24.9971 z' +\n        ' M0.000976562,24.9971 L50.001,24.9971',\n    // MultiDocument,\n    'MultiDocument': 'M43.6826,40 C44.8746,40.6183 45.8586,41.3502 46.8366,42.1122 L46.8366,4.74487 L3.09857,4.74487 L3.09857,10.9544' +\n        ' M46.837,35.143 C48.027,35.765 49.025,36.604 50.003,37.369 L50.003,0.002 L6.264,0.002 L6.264,4.744 M43.682,47.113 L43.682,10.765' +\n        ' L0.0025,10.7652 L0.0025,47.1132 C0.0025,47.1132 12.5846,53.6101 21.8426,47.1132 C31.1006,40.6163 38.792,43.393 43.6826,47.1132 z',\n    // Collate,\n    'Collate': 'M50.001,0.0028 L25.001,25.0029 L0.00097,0.0028 L50.001,0.002 z M0.0009,50.002 L25.001,25.002' +\n        'L50.001,50.002 L0.0009,50.0029 z',\n    // SummingJunction,\n    'SummingJunction': 'M7.3252,42.6768 L42.6772,7.3247 M42.6768,42.6768 L7.3248,7.3247 M0.0009,25.001 ' +\n        'C0.0009,11.193 11.197,0.0009 25.001,0.0009' +\n        ' C38.809,0.0009 50.001,11.193 50.001,25.001 C50.001,38.809 38.809,50.001 25.001,50.001 C11.197,50.00 0.0009,38.809 0.0009,25.00 z',\n    // Or,\n    'Or': 'M 0 50 L 100 50 M 50 100 L 50 0.0 M 0 50 C 0 22.384 22.392 0 50 0 C 77.616 0 100 22.384 100 50' +\n        ' C 100 77.616 77.616 100 50 100 C 22.392 100 0 77.616 0 50 Z',\n    // InternalStorage,\n    'InternalStorage': 'M 0 3.81946A 2.5,3.81946 0 0,1 2.5,0L 47.5 0A 2.5,3.81946 0 0,1 50,3.81946' +\n        'L 50 45.836A 2.5,3.819446 0 0,1 47.5,49.652778' +\n        'L 2.5 49.652778A 2.5,3.819446 0 0,1 0,45.8336L 0 3.819446ZM 0 11.45834L 50 11.4583334M 12.5 0L 12.5 49.652778',\n    // Extract,\n    'Extract': 'M0,35 L30,0 L60,35 Z',\n    // ManualOperation,\n    'ManualOperation': 'M46.4,28.8 L14.8,28.8 L0,0 L60,0 Z',\n    // Merge,\n    'Merge': 'M60,0 L30,35 L0,0 Z',\n    // OffPageReference,\n    'OffPageReference': 'M60,33.3 L30.1,39 L0,33.3 L0,0 L60,0 Z',\n    // SequentialAccessStorage,\n    'SequentialAccessStorage': 'M 60 30 C 60 13.4 46.6 0 30 0 S 0 13.4 0 30 s 13.4 30 30 30 h 28.6 v -6.5 h -9.9' +\n        'C 55.5 48 60 39.5 60 30 Z',\n    // Annotation,\n    'Annotation': 'M49.9984,50.0029 L-0.00271199,50.0029 L-0.00271199,0.00286865 L49.9984,0.00286865',\n    // Annotation2,\n    'Annotation2': 'M49.9977,50.0029 L25.416,50.0029 L25.416,0.00286865 L49.9977,0.00286865 M25.4166,25.0029 L-0.00227869,25.0029',\n    // Data,\n    'Data': 'M 10 0 L 40 0 L 30 40 L 0 40 Z',\n    // Card,\n    'Card': 'M275,60 L400,60 L400,110 L260,110 L260,75 Z',\n    // Delay,\n    'Delay': 'M0,0 L12.029,0 C14.212999,0 16,1.7869979 16,3.9709952 C16,6.1549926 14.212999,7.9409904 12.029,7.9409904 L0,7.9409904 z',\n    // Preparation,\n    'Preparation': 'M 1048.17 572 C 1051.06 568.86 1055.17 567.05 1059.5 567 L 1094.51 567'\n        + ' C 1098.84 567.05 1102.95 568.86 1105.84 572' +\n        ' L 1126.43 595 C 1127.01 596.28 1127.01 597.72 1126.43 599 L 1105.84 622 C 1102.95 625.14 1098.84 626.95 1094.51 627' +\n        ' L 1059.5 627 C 1055.17 626.95 1051.06 625.14 1048.17 622 L 1027.58 599 C 1027 597.72 1027 596.28 1027.58 595 L 1048.17 572 Z',\n    // Display,\n    'Display': 'M47.8809,19.2914 L32.7968,-0.00594145 L11.3902,-0.00594145 C7.93166,-0.00594145 0.00124586,11.187 0.00124586,24.9968' +\n        'C0.00124586,38.8032 7.93166,49.9962 11.3902,49.9962 L32.7968,49.99 L47.615,31.038 C47.615,31.0388 52.798,24.9968 47.880,19.2914 z',\n    // ManualInput,\n    'ManualInput': 'M 912 732 L 1006.85 707 C 1008.2 707 1009.5 707.53 1010.46 708.46 C 1011.41 709.4 1011.95 710.67 1011.95 712' +\n        ' L 1011.95 762C 1012 764.41 1010.28 766.52 1007.87 767 L 917.1 767 C 915.75 767 914.45 766.47 913.49 765.54' +\n        ' C 912.54 764.6 912 763.33 912 762 L 912 732 Z',\n    // LoopLimit,\n    'LoopLimit': 'M 8 9 L 27 9 L 33 15 L 33 26 C 33 27 33 27 32 27 L 4 27 C 3 27 2 27 2 26 L 2 15 L 8 9 Z',\n    // StoredData\n    'StoredData': 'M 5.55 0L 50 0A 1.5,30 0 0,1 50,0A 5.555,25 0 0,0 50,50A 1.5,30 0 0,1 50,50L 5.555 50A 5.55,25 0 0,1 5.555,0Z',\n};\n","import { Point } from './../primitives/point';\nimport { Rect } from './../primitives/rect';\nimport { getPoints, intersect3 } from './diagram-util';\nimport { NoOfSegments } from '../enum/enum';\nimport { StraightSegment, BezierSegment, OrthogonalSegment } from './../objects/connector';\nimport { PathElement } from './../core/elements/path-element';\nimport { cornersPointsBeforeRotation, rotatePoint } from './base-util';\n/**\n * Connector modules are used to dock and update the connectors\n */\n/** @private */\nexport function findConnectorPoints(element, layoutOrientation) {\n    var intermeditatePoints;\n    var sourcePoint;\n    if (element.type === 'Straight' || !element.sourceWrapper) {\n        sourcePoint = getSourcePoint(element);\n    }\n    else {\n        sourcePoint = element.sourceWrapper.corners.center;\n    }\n    intermeditatePoints = terminateConnection(element, sourcePoint, element.targetPoint, layoutOrientation);\n    setLineEndPoint(element, intermeditatePoints[0], false);\n    setLineEndPoint(element, intermeditatePoints[intermeditatePoints.length - 1], true);\n    return intermeditatePoints;\n}\nfunction getSourcePoint(element) {\n    var srcPoint;\n    if (element.sourcePortWrapper) {\n        var srcPort = element.sourcePortWrapper;\n        var srcNode = element.sourceWrapper;\n        var pt = { x: srcPort.offsetX, y: srcPort.offsetY };\n        var direction = getPortDirection(pt, cornersPointsBeforeRotation(srcNode), srcNode.bounds, false);\n        srcPoint = pt;\n    }\n    else if (element.sourceID && element.sourceWrapper) {\n        if (element.targetWrapper) {\n            var sPoint = element.sourceWrapper.corners.center;\n            var tPoint = element.targetWrapper.corners.center;\n            srcPoint = getIntersection(element, element.sourceWrapper, sPoint, tPoint, false);\n        }\n        else {\n            srcPoint = element.sourcePoint;\n        }\n    }\n    else {\n        srcPoint = element.sourcePoint;\n    }\n    return srcPoint;\n}\nfunction getDirection(source, target, layoutOrientation) {\n    if (layoutOrientation === 'LeftToRight') {\n        source.direction = source.direction ? source.direction : 'Right';\n        target.direction = target.direction ? target.direction : 'Left';\n    }\n    else if (layoutOrientation === 'RightToLeft') {\n        source.direction = source.direction ? source.direction : 'Left';\n        target.direction = target.direction ? target.direction : 'Right';\n    }\n    else if (layoutOrientation === 'TopToBottom') {\n        source.direction = source.direction ? source.direction : 'Bottom';\n        target.direction = target.direction ? target.direction : 'Top';\n    }\n    else if (layoutOrientation === 'BottomToTop') {\n        source.direction = source.direction ? source.direction : 'Top';\n        target.direction = target.direction ? target.direction : 'Bottom';\n    }\n}\nfunction terminateConnection(element, srcPoint, tarPoint, layoutOrientation) {\n    var sourceNode = element.sourceWrapper;\n    var targetNode = element.targetWrapper;\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var srcCorner;\n    var tarCorner;\n    var intermeditatePoints = [];\n    var segPoint;\n    var srcDir;\n    var tarDir;\n    var minSpace = 13;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCorner, point: srcPoint, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCorner, point: tarPoint, direction: tarDir, margin: targetMargin };\n    var sourceCorners;\n    var targetCorners;\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        sourceCorners = cornersPointsBeforeRotation(sourceNode);\n        targetCorners = cornersPointsBeforeRotation(targetNode);\n        source.corners = sourceNode.corners;\n        target.corners = targetNode.corners;\n    }\n    if (sourcePort !== undefined) {\n        var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        source.direction = getPortDirection(port, sourceCorners, sourceNode.bounds, false);\n    }\n    if (targetPort !== undefined) {\n        var tarPortPt = { x: targetPort.offsetX, y: targetPort.offsetY };\n        target.direction = getPortDirection(tarPortPt, targetCorners, targetNode.bounds, false);\n    }\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        if (source.direction === undefined || target.direction === undefined) {\n            if (layoutOrientation) {\n                getDirection(source, target, layoutOrientation);\n            }\n            else {\n                if (source.corners.top > target.corners.bottom &&\n                    Math.abs(source.corners.top - target.corners.bottom) >\n                        (source.margin.top + source.margin.bottom)) {\n                    source.direction = source.direction ? source.direction : 'Top';\n                    target.direction = target.direction ? target.direction : 'Bottom';\n                }\n                else if (source.corners.bottom < target.corners.top &&\n                    Math.abs(source.corners.bottom - target.corners.top) >\n                        (source.margin.bottom + source.margin.top)) {\n                    source.direction = source.direction ? source.direction : 'Bottom';\n                    target.direction = target.direction ? target.direction : 'Top';\n                }\n                else if ((source.corners.right < target.corners.left &&\n                    Math.abs(source.corners.right - target.corners.left) >\n                        (source.margin.right + source.margin.left)) ||\n                    ((source.corners.right + minSpace < target.corners.left) ||\n                        (target.corners.right >= source.corners.left - minSpace && source.corners.left > target.corners.left))) {\n                    source.direction = source.direction ? source.direction : 'Right';\n                    target.direction = target.direction ? target.direction : 'Left';\n                }\n                else if ((source.corners.left > target.corners.right &&\n                    Math.abs(source.corners.left - target.corners.right) > (source.margin.left + source.margin.right)) ||\n                    ((target.corners.right + minSpace < source.corners.left ||\n                        (source.corners.right >= target.corners.left - minSpace\n                            && source.corners.left < target.corners.left)))) {\n                    source.direction = source.direction ? source.direction : 'Left';\n                    target.direction = target.direction ? target.direction : 'Right';\n                }\n                else {\n                    if (sourceNode.id !== targetNode.id && (!sourceCorners.equals(sourceCorners, targetCorners)) &&\n                        targetCorners.containsPoint(sourceCorners.topCenter, source.margin.top)) {\n                        source.direction = source.direction ? source.direction : 'Bottom';\n                        target.direction = target.direction ? target.direction : 'Top';\n                    }\n                    else {\n                        source.direction = source.direction ? source.direction : 'Top';\n                        target.direction = target.direction ? target.direction : 'Bottom';\n                    }\n                }\n            }\n        }\n        return defaultOrthoConnection(element, source.direction, target.direction, source.point, target.point);\n    }\n    //It will be called only when there is only one end node\n    checkLastSegmentasTerminal(element);\n    if (element.sourceWrapper || element.targetWrapper) {\n        connectToOneEnd(element, source, target);\n    }\n    if (element.type === 'Straight' || element.type === 'Bezier') {\n        intermeditatePoints = intermeditatePointsForStraight(element, source, target);\n    }\n    else {\n        if (element.type === 'Orthogonal' && element.segments && element.segments.length > 0 &&\n            element.segments[0].length !== null &&\n            element.segments[0].direction !== null) {\n            intermeditatePoints = findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort);\n        }\n        else {\n            var extra = void 0;\n            if (!source.direction) {\n                source.direction = (target.direction) ? ((element.targetPortWrapper !== undefined) ? target.direction : getOppositeDirection(target.direction)) :\n                    Point.direction(source.point, target.point);\n            }\n            else {\n                extra = adjustSegmentLength(sourceNode.bounds, source, 20);\n            }\n            element.segments[0].points = intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n        }\n    }\n    return intermeditatePoints;\n}\nfunction updateSegmentPoints(source, segment) {\n    var segPoint;\n    var angle;\n    var extra;\n    source.direction = segment.direction;\n    segment.points = [];\n    segment.points.push(source.point);\n    extra = (segment.direction === 'Left' || segment.direction === 'Top') ? -(segment.length) : segment.length;\n    angle = (segment.direction === 'Left' || segment.direction === 'Right') ? 0 : 90;\n    segPoint = addLineSegment(source.point, extra, angle);\n    segment.points.push(segPoint);\n    return segPoint;\n}\nfunction pointToPoint(element, source, target) {\n    var point;\n    var direction;\n    var portdirection;\n    source.corners = (element.sourceWrapper) ? element.sourceWrapper.corners : undefined;\n    if (element.sourcePortWrapper) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n        if (source.corners && (source.direction === 'Bottom' || source.direction === 'Top')) {\n            if (target.point.x > source.corners.left && target.point.x < source.corners.right) {\n                direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else if (source.corners && (source.direction === 'Left' || source.direction === 'Right')) {\n            if (target.point.y > source.corners.top && target.point.y < source.corners.bottom) {\n                direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n    }\n    if (element.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_1;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.center.y) &&\n            (target.point.y >= source.corners.top && target.point.y <= source.corners.center.y)) {\n            source.direction = 'Top';\n            length_1 = source.point.y - source.corners.top + 20;\n        }\n        else if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y > source.corners.center.y\n            && source.point.y <= source.corners.bottom) &&\n            (target.point.y > source.corners.center.y && target.point.y <= source.corners.bottom)) {\n            source.direction = 'Bottom';\n            length_1 = source.corners.bottom - source.point.y + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.center.x) &&\n            (target.point.x >= source.corners.left && target.point.x <= source.corners.center.x)) {\n            source.direction = 'Left';\n            length_1 = source.point.x - source.corners.left + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x <= source.corners.right\n            && source.point.x > source.corners.center.x) &&\n            (target.point.x <= source.corners.right && target.point.x < source.corners.center.x)) {\n            source.direction = 'Right';\n            length_1 = source.corners.right - source.point.x + 20;\n        }\n        if (source.direction && length_1) {\n            point = orthoConnection3Segment(element, source, target, length_1, true);\n        }\n    }\n    else {\n        source.direction = (direction) ? direction : findSourceDirection(source.direction, source.point, target.point);\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction pointToNode(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    findDirection(element.targetWrapper, source, target, element);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (source.direction === target.direction && (source.direction === 'Left' || source.direction === 'Right')) {\n        source.direction = direction;\n        point = orthoConnection3Segment(element, source, target, element.targetWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        findDirection(element.targetWrapper, source, target, element);\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction addPoints(element, source, target) {\n    var refPoint;\n    target.corners = element.targetWrapper.corners;\n    var direction;\n    var length;\n    if (source.direction !== 'Left' && source.direction !== 'Right') {\n        if (target.corners.center.y === source.point.y &&\n            (!(target.corners.left <= source.point.x && source.point.x <= target.corners.right))) {\n            direction = 'Top';\n            length = target.corners.height / 2 + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Bottom') ||\n            (target.corners.center.y > source.point.y && source.point.y >= target.corners.top)) {\n            direction = 'Top';\n            length = (source.point.y - target.corners.top) + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Top') ||\n            (target.corners.center.y < source.point.y && source.point.y <= target.corners.bottom)) {\n            direction = 'Bottom';\n            length = (target.corners.bottom - source.point.y) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.top <= source.point.y && source.point.y <= source.corners.bottom) {\n            direction = source.direction;\n            length = (source.point.y > target.point.y) ? (source.point.y - source.corners.top + 20) :\n                (source.corners.bottom - source.point.y + 20);\n        }\n    }\n    else {\n        if (target.corners.center.x === source.point.x &&\n            (!(target.corners.top < source.point.y && source.point.y <= target.corners.bottom))) {\n            direction = 'Left';\n            length = target.corners.width / 2 + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Right')\n            || (target.corners.center.x > source.point.x && source.point.x >= target.corners.left)) {\n            direction = 'Left';\n            length = (source.point.x - target.corners.left) + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Left') ||\n            (target.corners.center.x <= source.point.x && source.point.x <= target.corners.right)) {\n            direction = 'Right';\n            length = (target.corners.right - source.point.x) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.left <= source.point.x && source.point.x <= source.corners.right) {\n            direction = source.direction;\n            length = (source.point.x > target.point.x) ? (source.point.x - source.corners.left + 20) :\n                (source.corners.right - source.point.x + 20);\n        }\n    }\n    var extra = (direction === 'Left' || direction === 'Top') ? -(length) : length;\n    var angle = (direction === 'Left' || direction === 'Right') ? 0 : 90;\n    refPoint = source.point;\n    source.point = addLineSegment(source.point, extra, angle);\n    source.direction = Point.direction(source.point, target.point);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        (source.corners.center.x === target.corners.center.x || source.corners.center.y === target.corners.center.y)) {\n        source.direction = target.direction;\n    }\n    var point = orthoConnection3Segment(element, source, target);\n    point.splice(0, 0, refPoint);\n    return point;\n}\nfunction findSegmentDirection(element, source, target, portDir) {\n    var update = false;\n    switch (target.direction) {\n        case 'Left':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Right' &&\n                source.point.x > target.point.x && source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)\n                || (((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) &&\n                    source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (portDir === 'Right') ? ((source.point.y > target.point.y) ? 'Top' : 'Bottom') :\n                    (source.point.x < target.point.x ? 'Right' : 'Left');\n                update = true;\n            }\n            else if (source.point.x > target.point.x && (source.point.y > target.point.y || source.point.y < target.point.y)\n                && (!(target.corners.top > source.point.y && target.corners.bottom < source.point.y))) {\n                source.direction = 'Left';\n            }\n            else if ((source.point.x < target.point.x && source.point.y > target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y <= target.point.y)\n                    && ((target.corners.top < source.point.y && target.corners.center.y >= source.point.y)))) {\n                source.direction = 'Top';\n            }\n            else if ((source.point.x < target.point.x && source.point.y < target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y > target.point.y)\n                    && ((target.corners.bottom < source.point.y && target.corners.center.y > source.point.y)))) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y === target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Right':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                ((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) && source.point.x > target.point.x &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                update = true;\n            }\n            else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                portDir === 'Left' && source.point.x < target.point.x && (source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                update = true;\n            }\n            else if (source.point.x < target.point.x && target.corners.top <= source.point.y\n                && target.corners.bottom >= source.point.y && source.point.y === target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.x < target.point.x && (source.point.y > target.point.y ||\n                source.point.y < target.point.y)) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y === target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            break;\n        case 'Top':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Bottom' &&\n                source.point.y > target.point.y && source.point.x >= source.corners.left &&\n                source.point.x <= source.corners.right) || (((portDir === 'Right' && source.point.x > target.point.x) ||\n                (portDir === 'Left' && target.point.y > source.point.y && target.point.x > source.point.x)) &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom))) {\n                source.direction = (portDir === 'Bottom') ? ((source.point.x > target.point.x) ? 'Left' : 'Right') :\n                    (source.point.y < target.point.y) ? 'Bottom' : 'Top';\n                update = true;\n            }\n            else if (source.point.x === target.point.x && source.point.y < target.point.y) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.corners.left &&\n                source.point.x < target.corners.right) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y >= target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y < target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Bottom':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && ((((portDir === 'Right') ||\n                (portDir === 'Left' && target.point.x > source.point.x)) && (source.point.y > target.point.y) &&\n                source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) ||\n                (((portDir === 'Top' && source.point.y < target.point.y)) &&\n                    (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n                if (portDir === 'Right' || portDir === 'Left') {\n                    source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                }\n                else {\n                    source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                }\n                update = true;\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                target.corners.right > source.point.x) {\n                if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                    target.corners.center.x >= source.point.x) {\n                    source.direction = 'Left';\n                }\n                else if (source.point.y < target.point.y && source.point.x < target.corners.right &&\n                    target.corners.center.x < source.point.x) {\n                    source.direction = 'Right';\n                }\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y > target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y <= target.point.y && (source.point.x > target.point.x || target.point.x > source.point.x)) {\n                source.direction = 'Bottom';\n            }\n            break;\n    }\n    return update;\n}\nfunction pointToPort(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    var portdirection;\n    var length;\n    if (element.sourcePortWrapper !== undefined) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n    }\n    var update = findSegmentDirection(element, source, target, portdirection);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        target.direction === getOppositeDirection(portdirection) &&\n        ((((target.direction === 'Left' && source.point.x > target.point.x) || (target.direction === 'Right' &&\n            source.point.x < target.point.x)) && source.point.y >= source.corners.top &&\n            source.point.y <= source.corners.bottom) || (target.direction === 'Bottom' && source.point.y < target.point.y &&\n            (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n        point = addPoints(element, source, target);\n    }\n    else if (source.direction === target.direction) {\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else if ((((target.direction === 'Left' && source.point.x > target.point.x) ||\n        (target.direction === 'Right' && source.point.x < target.point.x)) && (source.direction === 'Top' || source.direction === 'Bottom')\n        && ((source.point.y <= target.point.y) &&\n            ((target.corners.top <= source.point.y && target.corners.bottom >= source.point.y)))) ||\n        ((target.direction === 'Top' && source.point.y > target.point.y) ||\n            (target.direction === 'Bottom' && source.point.y < target.point.y) &&\n                ((target.corners.left <= source.point.x && target.corners.right >= source.point.x)))) {\n        point = addPoints(element, source, target);\n    }\n    else {\n        if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Left' || source.direction === 'Right') &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom)\n                && (target.direction === 'Top' || target.direction === 'Bottom') &&\n                (target.corners.center.x === source.corners.center.x))) {\n            source.direction = (target.direction === 'Top') ? 'Bottom' : 'Top';\n            length = (target.direction === 'Top') ? (source.corners.bottom - source.point.y + 20) :\n                (source.point.y - source.corners.top + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Top' || source.direction === 'Bottom') &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right) &&\n                (target.direction === 'Left' || target.direction === 'Right') && (target.corners.center.y === source.corners.center.y))) {\n            source.direction = (target.direction === 'Left') ? 'Right' : 'Left';\n            length = (target.direction === 'Left') ? (source.corners.right - source.point.x + 20) :\n                (source.point.x - source.corners.left + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (update) {\n            if (source.direction === 'Left' || source.direction === 'Right') {\n                length = (source.direction === 'Left') ? (source.point.x - source.corners.left + 20) :\n                    (source.corners.right - source.point.x + 20);\n            }\n            else {\n                length = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n                    (source.corners.bottom - source.point.y + 20);\n            }\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else {\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    return point;\n}\nfunction findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort) {\n    var j;\n    var point;\n    var intermeditatePoints = [];\n    var direction;\n    var port;\n    var seg;\n    checkLastSegmentasTerminal(element);\n    var removeSegment;\n    if (element.segments.length > 0) {\n        for (var i = 0; i < element.segments.length; i++) {\n            var seg_1 = element.segments[i];\n            if (i === 0 && element.sourcePortWrapper !== undefined) {\n                port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n                direction = getPortDirection(port, cornersPointsBeforeRotation(sourceNode), sourceNode.bounds, false);\n                if (seg_1.direction === getOppositeDirection(direction)) {\n                    seg_1.direction = direction;\n                }\n            }\n            if (i > 0 && element.segments[i - 1].direction === seg_1.direction) {\n                i = checkConsectiveSegmentAsSame(element, i, source);\n            }\n            else {\n                var lastSegment = element.segments[i - 1];\n                source.point = (seg_1.direction) ? updateSegmentPoints(source, seg_1) :\n                    lastSegment.points[lastSegment.points.length - 1];\n            }\n            if (i === element.segments.length - 1) {\n                if (!targetPort && !targetNode) {\n                    point = pointToPoint(element, source, target);\n                }\n                else if (element.targetWrapper && element.targetPortWrapper === undefined) {\n                    checkSourcePointInTarget(element, source);\n                    point = pointToNode(element, source, target);\n                }\n                else {\n                    point = pointToPort(element, source, target);\n                }\n                checkPreviousSegment(point, element, source);\n                seg_1.points = [];\n                if (point.length >= 2) {\n                    for (j = 0; j < point.length; j++) {\n                        seg_1.points.push(point[j]);\n                    }\n                }\n                else {\n                    removeSegment = i;\n                }\n            }\n            if (sourcePort && i === 0) {\n                var sourcePoint = checkPortdirection(element, sourcePort, sourceNode);\n                if (sourcePoint) {\n                    source.point = sourcePoint;\n                }\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === element.segments.length - 1) {\n                element.segments[removeSegment - 1].direction = null;\n                element.segments[removeSegment - 1].length = null;\n            }\n            element.segments.splice(removeSegment, 1);\n        }\n        intermeditatePoints = returnIntermeditatePoints(element, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction checkPortdirection(element, sourcePort, sourceNode) {\n    var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n    var point;\n    var bounds = cornersPointsBeforeRotation(sourceNode);\n    var direction = getPortDirection(port, bounds, sourceNode.bounds, false);\n    var seg = element.segments[0];\n    if (seg.direction !== direction) {\n        pointsFromNodeToPoint(seg, direction, bounds, seg.points[0], seg.points[seg.points.length - 1], false);\n        point = seg.points[seg.points.length - 1];\n        seg.direction = Point.direction(seg.points[seg.points.length - 2], seg.points[seg.points.length - 1]);\n    }\n    return point;\n}\nfunction checkPreviousSegment(tPoints, connector, source) {\n    var actualSegment = connector.segments[connector.segments.length - 2];\n    var actualLastPoint = actualSegment.points[actualSegment.points.length - 1];\n    var direction;\n    if (((actualSegment.direction === 'Top' || actualSegment.direction === 'Bottom') && (actualLastPoint.x === tPoints[1].x)) ||\n        ((actualSegment.direction === 'Left' || actualSegment.direction === 'Right') && (actualLastPoint.y === tPoints[1].y))) {\n        actualSegment.points[actualSegment.points.length - 1] = tPoints[1];\n        direction = Point.direction(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        if (connector.sourceWrapper !== undefined && connector.sourcePortWrapper === undefined &&\n            direction === getOppositeDirection(actualSegment.direction)) {\n            if (actualSegment.direction === 'Left' || actualSegment.direction === 'Right') {\n                actualSegment.points[0].x = (actualSegment.direction === 'Right') ?\n                    actualSegment.points[0].x - connector.sourceWrapper.corners.width :\n                    actualSegment.points[0].x + connector.sourceWrapper.corners.width;\n            }\n            else {\n                actualSegment.points[0].y = (actualSegment.direction === 'Bottom') ?\n                    actualSegment.points[0].y - connector.sourceWrapper.corners.height :\n                    actualSegment.points[0].y + connector.sourceWrapper.corners.height;\n            }\n        }\n        actualSegment.direction = direction;\n        actualSegment.length = Point.distancePoints(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        tPoints.splice(0, 1);\n    }\n}\nfunction connectToOneEnd(element, source, target) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var node = element.sourceWrapper;\n    var fixedPoint = source.point;\n    var nodeMargin = { left: 0, right: 0, top: 0, bottom: 0 };\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var refPoint;\n    var nodeDirection = 'Top';\n    if (!node) {\n        node = element.targetWrapper;\n        nodeMargin = target.margin;\n    }\n    else {\n        fixedPoint = target.point;\n        nodeMargin = source.margin;\n    }\n    if (element.type === 'Orthogonal') {\n        if ((element.segments && element.segments.length > 0) && element.sourceWrapper &&\n            element.segments[0].direction) {\n            source.direction = element.segments[0].direction;\n            nodeConnectingPoint = findPoint(node.corners, source.direction);\n            refPoint = findPoint(node.corners, getOppositeDirection(source.direction));\n            nodeConnectingPoint = getIntersection(element, node, nodeConnectingPoint, refPoint, false);\n        }\n        else {\n            var source_1 = { corners: null, direction: null, point: fixedPoint, margin: nodeMargin };\n            var target_1 = { corners: null, direction: null, point: null, margin: null };\n            findDirection(node, source_1, target_1, element);\n            nodeConnectingPoint = target_1.point;\n            nodeDirection = target_1.direction;\n        }\n    }\n    else {\n        var segmentPoint = void 0;\n        if (element.segments && element.segments.length > 1) {\n            if (node === element.sourceWrapper) {\n                segmentPoint = element.segments[0].point;\n            }\n            else {\n                segmentPoint = element.segments[element.segments.length - 2].point;\n            }\n        }\n        nodeConnectingPoint = getIntersection(element, node, node.bounds.center, (element.segments && element.segments.length > 1) ? segmentPoint : fixedPoint, node === element.targetWrapper);\n    }\n    if (node === element.sourceWrapper) {\n        source.direction = source.direction || nodeDirection;\n        source.point = nodeConnectingPoint;\n        if (element.sourcePortWrapper) {\n            source.point = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n            if (element.sourcePadding) {\n                source.point = addPaddingToConnector(element, source, target, false);\n            }\n        }\n    }\n    else {\n        target.direction = target.direction || nodeDirection;\n        target.point = nodeConnectingPoint;\n        if (element.targetPortWrapper) {\n            target.point = { x: targetPort.offsetX, y: targetPort.offsetY };\n            if (element.targetPadding) {\n                target.point = addPaddingToConnector(element, source, target, true);\n            }\n        }\n    }\n}\nfunction addPaddingToConnector(element, source, target, isTarget) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var padding = (isTarget) ? element.targetPadding : element.sourcePadding;\n    var paddingPort = (isTarget) ? targetPort : sourcePort;\n    var rect = new Rect(paddingPort.bounds.x - padding, paddingPort.bounds.y - padding, paddingPort.actualSize.width + 2 * padding, paddingPort.actualSize.height + 2 * padding);\n    var segmentPoints = [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft];\n    segmentPoints[segmentPoints.length] = segmentPoints[0];\n    var length = segmentPoints.length;\n    var thisSegment = { x1: source.point.x, y1: source.point.y, x2: target.point.x, y2: target.point.y };\n    var point = (isTarget) ? target.point : source.point;\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || point;\n}\nfunction checkSourceAndTargetIntersect(sourceWrapper, targetWrapper, connector) {\n    var sourceSegment = createSegmentsCollection(sourceWrapper, connector.sourcePadding);\n    var targetSegment = createSegmentsCollection(targetWrapper, connector.targetPadding);\n    for (var i = 0; i < sourceSegment.length - 1; i++) {\n        var srcSegment = sourceSegment[i];\n        for (var j = 0; j < targetSegment.length - 1; j++) {\n            var tarSegmet = targetSegment[j];\n            if (intersect3(srcSegment, tarSegmet).enabled) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction createSegmentsCollection(sourceWrapper, padding) {\n    var segments = [];\n    var points = getPoints(sourceWrapper, sourceWrapper.corners, padding);\n    points.push(points[0]);\n    for (var i = 0; i < points.length - 1; i++) {\n        segments.push(createLineSegment(points[i], points[i + 1]));\n    }\n    return segments;\n}\nfunction createLineSegment(sPt, tPt) {\n    var line = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return line;\n}\n/** @private */\nexport function swapBounds(object, bounds, outerBounds) {\n    var rectBounds;\n    var rotateAngle = object.rotateAngle + object.parentTransform;\n    if (rotateAngle) {\n        if (rotateAngle < 45) {\n            return bounds;\n        }\n        else if (rotateAngle <= 135) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.middleLeft, topRight: bounds.topLeft,\n                middleLeft: bounds.bottomCenter, center: outerBounds.center, middleRight: bounds.topCenter,\n                bottomLeft: bounds.bottomRight, bottomCenter: bounds.middleRight, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 225) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.bottomCenter, topRight: bounds.bottomRight,\n                middleLeft: bounds.middleRight, center: outerBounds.center, middleRight: bounds.middleLeft,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.topCenter, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top,\n                bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 315) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.topRight, topCenter: bounds.middleRight, topRight: bounds.bottomRight,\n                middleLeft: bounds.topCenter, center: outerBounds.center, middleRight: bounds.bottomCenter,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.middleLeft, bottomRight: bounds.bottomLeft,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else {\n            return bounds;\n        }\n        return rectBounds;\n    }\n    return bounds;\n}\n/* tslint:disable */\nfunction defaultOrthoConnection(ele, srcDir, tarDir, sPt, tPt) {\n    var sourceEle = ele.sourceWrapper;\n    var targetEle = ele.targetWrapper;\n    var srcPort = ele.sourcePortWrapper;\n    var tarPort = ele.targetPortWrapper;\n    var intermeditatePoints = [];\n    var refPoint;\n    var seg;\n    var srcCor = sourceEle.corners;\n    var tarCor = targetEle.corners;\n    var point = tarCor.center;\n    var i;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCor, point: sPt, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCor, point: tPt, direction: tarDir, margin: targetMargin };\n    var srcBounds = swapBounds(sourceEle, srcCor, ele.sourceWrapper.bounds);\n    var tarBounds = swapBounds(targetEle, tarCor, ele.targetWrapper.bounds);\n    var isInterSect = false;\n    if (ele.sourceWrapper && ele.targetWrapper) {\n        isInterSect = checkSourceAndTargetIntersect(ele.sourceWrapper, ele.targetWrapper, ele);\n    }\n    if (srcPort !== undefined) {\n        source.point = { x: srcPort.offsetX, y: srcPort.offsetY };\n        switch (source.direction) {\n            case 'Bottom':\n            case 'Top':\n                source.point.y = source.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                source.point.x = source.point.x;\n                break;\n        }\n        if (ele.sourcePadding && !isInterSect) {\n            if (tarPort) {\n                target.point = {\n                    x: tarPort.offsetX,\n                    y: tarPort.offsetY\n                };\n            }\n            source.point = addPaddingToConnector(ele, source, target, false);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            if (ele.segments && ele.segments.length > 0 && ele.segments[0].direction) {\n                source.direction = ele.segments[0].direction;\n            }\n            source.point = findPoint(srcBounds, source.direction);\n            refPoint = findPoint(srcBounds, getOppositeDirection(source.direction));\n            source.point = getIntersection(ele, sourceEle, source.point, refPoint, false);\n        }\n        else {\n            source.point = sourceEle.corners.center;\n        }\n    }\n    if (tarPort !== undefined) {\n        target.point = {\n            x: tarPort.offsetX,\n            y: tarPort.offsetY\n        };\n        switch (target.direction) {\n            case 'Bottom':\n            case 'Top':\n                target.point.y = target.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                target.point.x = target.point.x;\n                break;\n        }\n        if (ele.targetPadding && !isInterSect) {\n            target.point = addPaddingToConnector(ele, source, target, true);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            target.point = findPoint(tarBounds, target.direction);\n            refPoint = findPoint(tarBounds, getOppositeDirection(target.direction));\n            target.point = getIntersection(ele, targetEle, target.point, refPoint, true);\n        }\n        else {\n            target.point = targetEle.corners.center;\n        }\n    }\n    if (ele.type !== 'Orthogonal') {\n        var segment = void 0;\n        var first = void 0;\n        checkLastSegmentasTerminal(ele);\n        if (ele.sourcePortWrapper === undefined) {\n            source.point = source.corners.center;\n            if (ele.segments && ele.segments.length > 0) {\n                first = ele.segments[0];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var tarPoint = (segment !== undefined) ? segment.point : target.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[0].vector1.angle && ele.segments[0].vector1.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                tarPoint = Point.transform(source.point, ele.segments[0].vector1.angle, value / 2);\n            }\n            source.point = isInterSect ? ele.sourceWrapper.bounds.center : getIntersection(ele, sourceEle, source.point, tarPoint, false);\n        }\n        if (ele.targetPortWrapper === undefined) {\n            target.point = target.corners.center;\n            if (ele.segments && ele.segments.length > 1) {\n                first = ele.segments[ele.segments.length - 2];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var srcPoint = (segment) ? segment.point : source.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[ele.segments.length - 1].vector2.angle &&\n                ele.segments[ele.segments.length - 1].vector2.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                srcPoint = Point.transform(target.point, ele.segments[0].vector2.angle, value / 2);\n            }\n            target.point = isInterSect ? ele.targetWrapper.bounds.center : getIntersection(ele, targetEle, srcPoint, target.point, true);\n        }\n        intermeditatePoints = intermeditatePointsForStraight(ele, source, target);\n    }\n    else {\n        if (ele.type === 'Orthogonal' && (ele.segments && ele.segments.length > 0) &&\n            ele.segments[0].direction !== null) {\n            intermeditatePoints = findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle);\n        }\n        else {\n            if (!ele.segments[0]) {\n                var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n                ele.segments.push(segment);\n            }\n            ele.segments[0].points = intermeditatePoints = findOrthoSegments(ele, source, target);\n        }\n    }\n    return intermeditatePoints;\n}\n/* tslint:enable */\nfunction intermeditatePointsForStraight(element, source, target) {\n    var intermeditatePoints = [];\n    if (element.segments && element.segments.length > 0) {\n        var i = void 0;\n        var segPoint = [];\n        var srcPoint = source.point;\n        for (i = 0; i < element.segments.length; i++) {\n            var seg = element.segments[i];\n            segPoint = [];\n            segPoint.push(srcPoint);\n            if (i !== element.segments.length - 1) {\n                segPoint.push(seg.point);\n                srcPoint = seg.point;\n            }\n            else {\n                segPoint.push(target.point);\n            }\n            element.segments[i].points = segPoint;\n            if (element.segments.length > 1 && Point.equals(seg.points[0], seg.points[1])) {\n                (element.segments).splice(i, 1);\n            }\n            if (seg) {\n                for (var j = 0; j < seg.points.length; j++) {\n                    if (j > 0 || i === 0) {\n                        intermeditatePoints.push(seg.points[j]);\n                    }\n                }\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findSourceDirection(dir, srcPoint, tarPoint) {\n    var direction = (dir === 'Top' || dir === 'Bottom') ?\n        ((tarPoint.x > srcPoint.x) ? 'Right' : 'Left') :\n        ((tarPoint.y > srcPoint.y) ? 'Bottom' : 'Top');\n    return direction;\n}\nfunction checkLastSegmentasTerminal(ele) {\n    if (ele.type === 'Straight' || ele.type === 'Bezier') {\n        if ((ele.segments.length === 0 || (ele.segments.length > 0 &&\n            (!Point.isEmptyPoint(ele.segments[ele.segments.length - 1].point))))) {\n            var segment = void 0;\n            segment = (ele.type === 'Bezier') ? new BezierSegment(ele, 'segments', { type: 'Bezier' }, true) :\n                new StraightSegment(ele, 'segments', { type: 'Straight' }, true);\n            (ele.segments).push(segment);\n        }\n    }\n    else {\n        if (ele.segments.length === 0 || ele.segments[ele.segments.length - 1].direction) {\n            var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n            ele.segments.push(segment);\n        }\n    }\n}\nfunction checkConsectiveSegmentAsSame(ele, i, source) {\n    var seg = ele.segments[i];\n    var extra = (seg.direction === 'Left' || seg.direction === 'Top') ? -(seg.length) : seg.length;\n    var angle = (seg.direction === 'Left' || seg.direction === 'Right') ? 0 : 90;\n    var segPoint = addLineSegment(source.point, extra, angle);\n    ele.segments[i - 1].length += seg.length;\n    ele.segments[i - 1].points[1] = source.point = segPoint;\n    ele.segments.splice(i, 1);\n    i--;\n    return i;\n}\nfunction nodeOrPortToNode(ele, source, target) {\n    var point;\n    var portdirection;\n    if (ele.sourcePortWrapper) {\n        var port = { x: ele.sourcePortWrapper.offsetX, y: ele.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(ele.sourceWrapper), ele.sourceWrapper.bounds, false);\n    }\n    findDirection(ele.targetWrapper, source, target, ele);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (ele.sourcePortWrapper !== undefined && source.direction === target.direction &&\n        ((source.direction === 'Top' || source.direction === 'Bottom') && (source.corners.center.x === target.corners.center.x)\n            || (source.direction === 'Left' || source.direction === 'Right') && (source.corners.center.y === target.corners.center.y))) {\n        source.direction = direction;\n        point = (direction === 'Top' || direction === 'Bottom') ?\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.height / 2 + 20) :\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        if (direction === 'Left' || direction === 'Right') {\n            target.direction = direction;\n            target.point = (direction === 'Left') ? target.corners.middleLeft : target.corners.middleRight;\n        }\n        else {\n            findDirection(ele.targetWrapper, source, target, ele);\n        }\n        point = orthoConnection3Segment(ele, source, target);\n    }\n    else if (target.point.x >= source.corners.left && target.point.x <= source.corners.right &&\n        source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var length_2 = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n            (source.corners.bottom - source.point.y + 20);\n        point = orthoConnection3Segment(ele, source, target, length_2);\n    }\n    else if (ele.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_3;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.bottom)) {\n            source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n            length_3 = source.corners.height / 2 + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.right)) {\n            source.direction = (target.point.x > source.point.x) ? 'Right' : 'Left';\n            length_3 = source.corners.width / 2 + 20;\n        }\n        if (source.direction && length_3) {\n            point = orthoConnection3Segment(ele, source, target, length_3, true);\n        }\n        else {\n            source.direction = direction;\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    else if (ele.sourcePortWrapper && portdirection === target.direction && (portdirection === 'Top' || portdirection === 'Bottom') &&\n        (source.corners.center.x === target.corners.center.x)) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var len = (source.direction === 'Bottom') ? (source.corners.bottom - source.point.y + 20) :\n            (source.point.y - source.corners.top + 20);\n        point = orthoConnection3Segment(ele, source, target, len);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction checkSourcePointInTarget(ele, source) {\n    if (ele.targetWrapper !== undefined && ele.targetPortWrapper === undefined) {\n        if (cornersPointsBeforeRotation(ele.targetWrapper).containsPoint(source.point)) {\n            var target = ele.targetWrapper;\n            var segment = ele.segments[ele.segments.length - 2];\n            var lastPoint = segment.points[segment.points.length - 1];\n            var direction = getOppositeDirection(segment.direction);\n            if (direction === 'Bottom') {\n                if (lastPoint.y < target.corners.bottom) {\n                    segment.points[segment.points.length - 1].y = target.corners.bottom + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Top') {\n                if (lastPoint.y > target.corners.top) {\n                    segment.points[segment.points.length - 1].y = target.corners.top - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Left') {\n                if (lastPoint.x > target.corners.left) {\n                    segment.points[segment.points.length - 1].x = target.corners.left - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Right') {\n                if (lastPoint.x < target.corners.right) {\n                    segment.points[segment.points.length - 1].x = target.corners.right + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            source.point = segment.points[segment.points.length - 1];\n        }\n    }\n}\nfunction findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle) {\n    var point;\n    var intermeditatePoints = [];\n    var seg;\n    var j;\n    var removeSegment;\n    checkLastSegmentasTerminal(ele);\n    for (var i = 0; i < ele.segments.length; i++) {\n        seg = ele.segments[i];\n        if (srcPort && source.direction === getOppositeDirection(seg.direction)) {\n            seg.direction = source.direction;\n        }\n        if (i > 0 && ele.segments[i - 1].direction === seg.direction) {\n            i = checkConsectiveSegmentAsSame(ele, i, source);\n        }\n        else {\n            if (seg.direction) {\n                source.point = updateSegmentPoints(source, ele.segments[i]);\n            }\n            else {\n                var segment = ele.segments[i - 1];\n                source.point = segment.points[segment.points.length - 1];\n            }\n        }\n        if (i === ele.segments.length - 1) {\n            checkSourcePointInTarget(ele, source);\n            if (tarPort === undefined) {\n                point = nodeOrPortToNode(ele, source, target);\n            }\n            else {\n                point = pointToPort(ele, source, target);\n            }\n            checkPreviousSegment(point, ele, source);\n            seg.points = [];\n            if (point.length >= 2) {\n                for (j = 0; j < point.length; j++) {\n                    seg.points.push(point[j]);\n                }\n            }\n            else {\n                removeSegment = i;\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === ele.segments.length - 1) {\n                ele.segments[removeSegment - 1].direction = null;\n                ele.segments[removeSegment - 1].length = null;\n            }\n            ele.segments.splice(removeSegment, 1);\n        }\n        if (srcPort && i === 0) {\n            var sourcePoint = checkPortdirection(ele, srcPort, sourceEle);\n            if (sourcePoint) {\n                source.point = sourcePoint;\n            }\n        }\n    }\n    return returnIntermeditatePoints(ele, intermeditatePoints);\n}\nfunction returnIntermeditatePoints(element, intermeditatePoints) {\n    for (var i = 0; i < element.segments.length; i++) {\n        var seg = element.segments[i];\n        for (var j = 0; j < seg.points.length; j++) {\n            if (j > 0 || i === 0) {\n                intermeditatePoints.push(seg.points[j]);\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findDirection(node, source, target, ele) {\n    var nodeDirection;\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var nodeCorners = swapBounds(node, node.corners, node.bounds);\n    var nodeMargin = source.margin;\n    var fixedPoint = source.point;\n    if (nodeCorners.bottomCenter.y + nodeMargin.bottom < fixedPoint.y) {\n        nodeDirection = 'Bottom';\n        nodeConnectingPoint = nodeCorners.bottomCenter;\n    }\n    else if (nodeCorners.topCenter.y - nodeMargin.top > fixedPoint.y) {\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n    }\n    else if (nodeCorners.middleLeft.x - nodeMargin.left > fixedPoint.x) {\n        nodeDirection = 'Left';\n        nodeConnectingPoint = nodeCorners.middleLeft;\n    }\n    else if (nodeCorners.middleRight.x + nodeMargin.right < fixedPoint.x) {\n        nodeDirection = 'Right';\n        nodeConnectingPoint = nodeCorners.middleRight;\n    }\n    else {\n        var top_1 = Math.abs(fixedPoint.y - nodeCorners.topCenter.y);\n        var right = Math.abs(fixedPoint.x - nodeCorners.middleRight.x);\n        var bottom = Math.abs(fixedPoint.y - nodeCorners.bottomCenter.y);\n        var left = Math.abs(fixedPoint.x - nodeCorners.middleLeft.x);\n        var shortes = Number.MAX_VALUE;\n        shortes = top_1;\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n        if (shortes > right) {\n            shortes = right;\n            nodeDirection = 'Right';\n            nodeConnectingPoint = nodeCorners.middleRight;\n        }\n        if (shortes > bottom) {\n            shortes = bottom;\n            nodeDirection = 'Bottom';\n            nodeConnectingPoint = nodeCorners.bottomCenter;\n        }\n        if (shortes > left) {\n            //shortes = left;\n            nodeDirection = 'Left';\n            nodeConnectingPoint = nodeCorners.middleLeft;\n        }\n    }\n    target.point = nodeConnectingPoint;\n    target.direction = nodeDirection;\n    var refPoint = findPoint(nodeCorners, getOppositeDirection(target.direction));\n    target.point = getIntersection(ele, node, target.point, refPoint, node === ele.targetWrapper);\n}\nfunction findOrthoSegments(ele, source, target, extra) {\n    var swap = false;\n    var intermeditatePoints = [];\n    var seg;\n    swap = getSwapping(source.direction, target.direction);\n    if (swap) {\n        swapPoints(source, target);\n    }\n    if (source.direction === 'Right' && target.direction === 'Left') {\n        seg = getRightToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Right') {\n        seg = getRightToRightSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Top') {\n        seg = getRightToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Bottom') {\n        seg = getRightToBottomSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Top') {\n        seg = getBottomToTopSegmentCount(source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Bottom') {\n        source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        seg = getBottomToBottomSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Left') {\n        seg = getBottomToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Left') {\n        seg = getLeftToLeftSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Top') {\n        seg = getLeftToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Top' && target.direction === 'Top') {\n        seg = getTopToTopSegmentCount(ele, source, target);\n    }\n    if (swap) {\n        swapPoints(source, target);\n    }\n    intermeditatePoints = addOrthoSegments(ele, seg, source, target, extra);\n    return intermeditatePoints;\n}\n/** @private */\nexport function findAngle(s, e) {\n    var r = { x: e.x, y: s.y };\n    var sr = Point.findLength(s, r);\n    var re = Point.findLength(r, e);\n    var es = Point.findLength(e, s);\n    var ang = Math.asin(re / es);\n    ang = ang * 180 / Math.PI;\n    if (s.x < e.x) {\n        if (s.y > e.y) {\n            ang = 360 - ang;\n        }\n    }\n    else {\n        if (s.y < e.y) {\n            ang = 180 - ang;\n        }\n        else {\n            ang = 180 + ang;\n        }\n    }\n    return ang;\n}\n/** @private */\nexport function findPoint(cor, direction) {\n    var point;\n    switch (direction) {\n        case 'Left':\n            point = cor.middleLeft;\n            break;\n        case 'Top':\n            point = cor.topCenter;\n            break;\n        case 'Right':\n            point = cor.middleRight;\n            break;\n        case 'Bottom':\n            point = cor.bottomCenter;\n            break;\n    }\n    return point;\n}\nfunction pointsFromNodeToPoint(seg, direction, bounds, point, endPoint, isTarget) {\n    var minSpace = 13;\n    var x;\n    var points = [];\n    var y;\n    points.push(point);\n    var straight;\n    straight = (point.y === endPoint.y && (direction === 'Left' && endPoint.x < point.x ||\n        direction === 'Right' && endPoint.x > point.x)) ||\n        (point.x === endPoint.x && (direction === 'Top' && endPoint.y < point.y ||\n            direction === 'Bottom' && endPoint.y > point.y));\n    if (!straight) {\n        if (direction === 'Top' || direction === 'Bottom') {\n            if (direction === 'Top' && endPoint.y < point.y && endPoint.y > point.y - minSpace ||\n                direction === 'Bottom' && endPoint.y > point.y && endPoint.y < point.y + minSpace) {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: endPoint.y });\n            }\n            else if (Math.abs(point.x - endPoint.x) > minSpace &&\n                (direction === 'Top' && endPoint.y < point.y || direction === 'Bottom' && endPoint.y > point.y)) {\n                //twosegments\n                points.push({ x: point.x, y: endPoint.y });\n            }\n            else {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                x = (endPoint.x < point.x) ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: endPoint.x, y: y });\n            }\n        }\n        else {\n            if (direction === 'Left' && endPoint.x < point.x && endPoint.x > point.x - minSpace || direction === 'right' &&\n                endPoint.x > point.x && endPoint.x < point.x + minSpace) {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: point.y + (endPoint.y - point.y) / 2 });\n                points.push({ x: endPoint.x, y: point.y + (endPoint.y - point.y) / 2 });\n            }\n            else if (Math.abs(point.y - endPoint.y) > minSpace &&\n                (direction === 'Left' && endPoint.x < point.x || direction === 'Right' && endPoint.x > point.x)) {\n                points.push({ x: endPoint.x, y: point.y });\n                //twosegments\n            }\n            else {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: endPoint.y });\n            }\n        }\n        if (isTarget) {\n            points.push(seg.points[0]);\n            points.reverse();\n        }\n        seg.points = points;\n    }\n}\nfunction addLineSegment(point, extra, angle) {\n    var segEnd = Point.transform(point, angle, extra);\n    return segEnd;\n}\n/** @private */\nexport function getIntersection(ele, bounds, sPt, tPt, isTar) {\n    sPt = { x: sPt.x, y: sPt.y };\n    tPt = { x: tPt.x, y: tPt.y };\n    var angle = Point.findAngle(tPt, sPt);\n    var child;\n    var intersection;\n    var wrapper = isTar ? ele.targetWrapper : ele.sourceWrapper;\n    var padding = (isTar ? ele.targetPadding : ele.sourcePadding);\n    var rect;\n    var segmentPoints;\n    var point = isTar || ele.type === 'Orthogonal' ? sPt : tPt;\n    var sourcePoint = Point.transform(sPt, angle, Math.max(wrapper.actualSize.height / 2, wrapper.actualSize.width / 2));\n    child = wrapper;\n    var sPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt);\n    var tPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, tPt);\n    if (ele.type === 'Orthogonal') {\n        var constValue = 5;\n        if (sPt1.x === tPt1.x) {\n            if (sPt1.y < tPt1.y) {\n                sPt1.y -= constValue;\n            }\n            else {\n                sPt1.y += constValue;\n            }\n        }\n        if (sPt1.y === tPt1.y) {\n            if (sPt1.x < tPt1.x) {\n                sPt1.x -= constValue;\n            }\n            else {\n                sPt1.x += constValue;\n            }\n        }\n        sPt = rotatePoint(wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt1);\n    }\n    else {\n        var angle_1 = isTar ? Point.findAngle(sPt, tPt) : Point.findAngle(tPt, sPt);\n        if (isTar) {\n            var angle_2 = Point.findAngle(sPt, tPt);\n            tPt = Point.transform({ x: tPt.x, y: tPt.y }, angle_2, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n        else {\n            var angle_3 = Point.findAngle(tPt, sPt);\n            sPt = Point.transform({ x: sPt.x, y: sPt.y }, angle_3, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n    }\n    if (wrapper instanceof PathElement && wrapper.data) {\n        segmentPoints = child.getPoints();\n        if (((child.data.split('m').length - 1) + (child.data.split('M').length - 1)) === 1) {\n            segmentPoints[segmentPoints.length] = segmentPoints[0];\n        }\n    }\n    else {\n        if ((ele.sourcePadding || ele.targetPadding)) {\n            rect = new Rect(wrapper.bounds.x - padding, wrapper.bounds.y - padding, wrapper.actualSize.width + 2 * padding, wrapper.actualSize.height + 2 * padding);\n        }\n        segmentPoints = rect ? [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft] : getPoints(wrapper, wrapper.corners);\n        segmentPoints[segmentPoints.length] = segmentPoints[0];\n    }\n    var length = segmentPoints.length;\n    var thisSegment = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || sPt;\n}\nfunction setLineEndPoint(element, point, isTarget) {\n    point.x = Math.round(point.x * 100) / 100;\n    point.y = Math.round(point.y * 100) / 100;\n    if (isTarget) {\n        element.targetPoint = point;\n    }\n    else {\n        element.sourcePoint = point;\n    }\n    return point;\n}\n/** @private */\nexport function getIntersectionPoints(thisSegment, pts, minimal, point) {\n    var length = pts.length;\n    var min;\n    var segment = {\n        x1: pts[0].x, y1: pts[0].y, x2: pts[1].x,\n        y2: pts[1].y\n    };\n    var intersection = intersectSegment(thisSegment, segment);\n    if (intersection) {\n        // if (!minimal) { return intersection; } //commented because minimal is always true\n        min = Point.distancePoints(intersection, point);\n    }\n    if (isNaN(min) || min > 0) {\n        for (var i = 1; i < length - 1; i++) {\n            segment = {\n                x1: pts[i].x, y1: pts[i].y,\n                x2: pts[i + 1].x, y2: pts[i + 1].y\n            };\n            var intersect = intersectSegment(thisSegment, segment);\n            if (intersect) {\n                // if (!minimal) { return intersect; }//commented because minimal is always true\n                var dist = Point.distancePoints(intersect, point);\n                if (isNaN(min) || min > dist) {\n                    min = dist;\n                    intersection = intersect;\n                }\n                if (min >= 0 && min <= 1) {\n                    break;\n                }\n            }\n        }\n    }\n    return intersection;\n}\nfunction intersectSegment(segment1, segment2) {\n    var x1 = segment1.x1;\n    var y1 = segment1.y1;\n    var x2 = segment1.x2;\n    var y2 = segment1.y2;\n    var x3 = segment2.x1;\n    var y3 = segment2.y1;\n    var x4 = segment2.x2;\n    var y4 = segment2.y2;\n    var a1;\n    var a2;\n    var b1;\n    var b2;\n    var c1;\n    var c2;\n    var x;\n    var y;\n    var r1;\n    var r2;\n    var r3;\n    var r4;\n    var denom;\n    var offset;\n    var num;\n    a1 = y2 - y1;\n    b1 = x1 - x2;\n    c1 = (x2 * y1) - (x1 * y2);\n    r3 = ((a1 * x3) + (b1 * y3) + c1);\n    r4 = ((a1 * x4) + (b1 * y4) + c1);\n    if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n        return null;\n    }\n    a2 = y4 - y3;\n    b2 = x3 - x4;\n    c2 = (x4 * y3) - (x3 * y4);\n    r1 = (a2 * x1) + (b2 * y1) + c2;\n    r2 = (a2 * x2) + (b2 * y2) + c2;\n    if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n        return null;\n    }\n    denom = (a1 * b2) - (a2 * b1);\n    if (denom === 0) {\n        return null;\n    }\n    if (denom < 0) {\n        offset = -denom / 2;\n    }\n    else {\n        offset = denom / 2;\n    }\n    offset = 0;\n    num = (b1 * c2) - (b2 * c1);\n    if (num < 0) {\n        x = (num - offset) / denom;\n    }\n    else {\n        x = (num + offset) / denom;\n    }\n    num = (a2 * c1) - (a1 * c2);\n    if (num < 0) {\n        y = (num - offset) / denom;\n    }\n    else {\n        y = (num + offset) / denom;\n    }\n    return { x: x, y: y };\n}\nfunction sameSign(a, b) {\n    return ((a * b) >= 0);\n}\nfunction getRightToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var pts;\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var margin = 10;\n    if (swap) {\n        var point = void 0;\n        point = left;\n        left = right;\n        right = point;\n    }\n    if (!(source.corners.bottom + margin < target.corners.top - margin ||\n        source.corners.top - margin > target.corners.bottom + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffY === 0 && (source.corners.right < target.corners.left\n        || (swap && source.corners.right < target.corners.left))) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.point.x + source.margin.right < target.point.x - target.margin.left) {\n        pts = NoOfSegments.Three;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(left) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.bottom <= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.top >= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY <= target.corners.top) ||\n        (srcPort === undefined && source.corners.right <= target.corners.top)) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY >= target.corners.bottom) ||\n        (srcPort === undefined && source.corners.right >= target.corners.bottom)) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getRightToRightSegmentCount(element, sourceObj, targetObj) {\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var pts;\n    var diffX = sourceObj.point.x - targetObj.point.x;\n    var diffY = sourceObj.point.y - targetObj.point.y;\n    targetObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    sourceObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (sourceObj.corners.right >= targetObj.corners.right) {\n        if ((sourcePort !== undefined && (sourcePort.offsetY < targetObj.corners.top ||\n            sourcePort.offsetY > targetObj.corners.bottom)) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y < targetObj.corners.top)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY > targetObj.corners.bottom + targetObj.margin.bottom\n            && sourceObj.corners.top > targetObj.corners.bottom) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY < targetObj.corners.top\n            && sourceObj.corners.bottom > targetObj.corners.top) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (sourceObj.corners.right < targetObj.corners.left ||\n            targetObj.corners.right < sourceObj.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.bottom < tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.bottom < targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.top > tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.top > targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && ((sourcePort !== undefined && sourcePort.offsetX < targetObj.corners.left &&\n        sourcePort.offsetX !== tarPort.offsetX && sourcePort.offsetY !== tarPort.offsetY &&\n        (Math.abs(sourceObj.corners.right - targetObj.corners.left) <= 20)) ||\n        (sourcePort === undefined && sourceObj.corners.right < targetObj.corners.left &&\n            sourceObj.corners.center.x !== targetObj.corners.center.x && sourceObj.corners.center.y !== targetObj.corners.center.y)))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (sourceObj.corners.right < targetObj.corners.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getRightToTopSegmentCount(element, source, target, swap) {\n    var tarPort = element.targetPortWrapper;\n    var srcPort = element.sourcePortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var pts;\n    target.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n    source.margin = { top: 5, bottom: 5, left: 5, right: 5 };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.bottom < target.corners.top - target.margin.top)) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined && Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (tarPort !== undefined && Math.abs(tarPort.offsetX - source.corners.topCenter.x) >= 25 &&\n        source.corners.middleRight.y < tarPort.offsetY) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getRightToBottomSegmentCount(element, source, target, swap) {\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var bottom = { x: target.point.x, y: Math.max(target.point.y, target.corners.bottom) };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleRight.y > target.corners.bottom + target.margin.bottom)) {\n        if (source.corners.top > target.corners.bottom) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.bottomCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.bottomCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToTopSegmentCount(source, target) {\n    var pts;\n    var diffX = source.point.x - target.point.x;\n    var diffY = source.point.y - target.point.y;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var margin = 10;\n    if (!(source.corners.right + margin < target.corners.left - margin ||\n        source.corners.left - margin > target.corners.right + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffX === 0 && source.corners.bottom < target.corners.top) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.corners.bottom + source.margin.bottom < target.corners.top - target.margin.top) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.right + source.margin.right < target.corners.left - target.margin.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.left - source.margin.left > target.corners.right + target.margin.right) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getBottomToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var pts;\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n        (srcPort === undefined && source.corners.bottomCenter.x < target.corners.bottomLeft.x - target.margin.left)) {\n        if (source.corners.right < target.corners.left) {\n            if ((tarPort !== undefined && source.corners.bottom + source.margin.bottom < tarPort.offsetY) ||\n                (tarPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.top > tarPort.offsetY) ||\n            (tarPort === undefined && source.corners.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (tarPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(tarPort.offsetY - source.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToBottomSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var difX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(target.point.y - target.point.y));\n    var pts;\n    if (source.corners.bottom < target.corners.bottom) {\n        if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n            (srcPort === undefined && source.corners.bottomCenter.x < target.corners.left - target.margin.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right + target.margin.right) ||\n            (srcPort === undefined && source.corners.bottomCenter.x > target.corners.right + target.margin.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (difX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n        (tarPort === undefined && source.corners.left > target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n        (tarPort === undefined &&\n            source.corners.right < target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (difX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getLeftToTopSegmentCount(element, source, target, swap) {\n    var pts;\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var left = { x: Math.min(source.point.x, source.corners.left), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    if (swap) {\n        var port = void 0;\n        port = sourcePort;\n        sourcePort = tarPort;\n        tarPort = port;\n    }\n    if ((sourcePort !== undefined && sourcePort.offsetY < target.corners.top - target.margin.top) ||\n        (sourcePort === undefined && (source.corners.bottom < target.corners.top - target.margin.top ||\n            source.corners.middleLeft.y < target.corners.top - target.margin.top))) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.left - source.margin.left > tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.left - source.margin.left > target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.right < target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (sourcePort !== undefined &&\n        Math.abs(source.corners.left - target.corners.right) <= 25 &&\n        Math.abs(sourcePort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(left))) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getLeftToLeftSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var pts;\n    if (source.corners.left < target.corners.left) {\n        if ((targetPort !== undefined && source.corners.bottom + source.margin.bottom < targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.top - source.margin.top > targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.top - source.margin.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.right < target.corners.left ||\n            target.corners.right < source.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.middleLeft.y < target.corners.top)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleLeft.y > target.corners.bottom + target.margin.bottom)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getTopToTopSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (source.corners.top < target.corners.top) {\n        if ((targetPort !== undefined && source.corners.left > targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.left > target.corners.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.right < targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.right < target.corners.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right) ||\n        (srcPort === undefined && source.corners.left > target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX < target.corners.left) ||\n        (srcPort === undefined && source.corners.bottomRight.x < target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction addOrthoSegments(element, seg, source, target, segLength) {\n    var src = element.sourceWrapper;\n    var tar = element.targetWrapper;\n    var tarPort = element.targetPortWrapper;\n    var intermeditatePoints;\n    var srcCorner = src.corners;\n    var tarCorner = tar.corners;\n    var extra = 20;\n    if (source.direction !== target.direction || seg === NoOfSegments.Five) {\n        if (source.direction === getOppositeDirection(target.direction) || seg === NoOfSegments.Three) {\n            switch (source.direction) {\n                case 'Left':\n                    if (srcCorner.middleLeft.x > tarCorner.middleRight.x) {\n                        extra = Math.min(extra, (srcCorner.middleLeft.x - tarCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Right':\n                    if (srcCorner.middleRight.x < tarCorner.middleLeft.x) {\n                        extra = Math.min(extra, (tarCorner.middleLeft.x - srcCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Top':\n                    if (srcCorner.topCenter.y > tarCorner.bottomCenter.y) {\n                        extra = Math.min(extra, (srcCorner.topCenter.y - tarCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n                case 'Bottom':\n                    if (srcCorner.bottomCenter.y < tarCorner.topCenter.y) {\n                        extra = Math.min(extra, (tarCorner.topCenter.y - srcCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n            }\n        }\n    }\n    extra = adjustSegmentLength(srcCorner, source, extra);\n    if (segLength) {\n        extra = Math.max(extra, segLength);\n    }\n    if (seg === NoOfSegments.One) {\n        intermeditatePoints = [source.point, target.point];\n    }\n    if (seg === NoOfSegments.Two) {\n        intermeditatePoints = orthoConnection2Segment(source, target);\n    }\n    if (seg === NoOfSegments.Three) {\n        intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n    }\n    if (seg === NoOfSegments.Four) {\n        var prevDir = undefined;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints, extra);\n    }\n    if (seg === NoOfSegments.Five) {\n        intermeditatePoints = orthoConnection5Segment(source, target, extra);\n    }\n    return intermeditatePoints;\n}\nfunction adjustSegmentLength(bounds, source, extra) {\n    switch (source.direction) {\n        case 'Left':\n            if (source.point.x > bounds.left) {\n                extra = (source.point.x - bounds.left) > extra ? ((source.point.x - bounds.left) + extra) : extra;\n            }\n            break;\n        case 'Right':\n            if (source.point.x < bounds.right) {\n                extra = (bounds.right - source.point.x) > extra ? ((bounds.right - source.point.x) + extra) : extra;\n            }\n            break;\n        case 'Top':\n            if (source.point.y > bounds.top) {\n                extra = (source.point.y - bounds.top) > extra ? ((source.point.y - bounds.top) + extra) : extra;\n            }\n            break;\n        case 'Bottom':\n            if (source.point.y < bounds.bottom) {\n                extra = (bounds.bottom - source.point.y) > extra ? ((bounds.bottom - source.point.y) + extra) : extra;\n            }\n            break;\n    }\n    return extra;\n}\n/** @private */\nexport function orthoConnection2Segment(source, target) {\n    var intermeditatePoints;\n    switch (source.direction) {\n        case 'Left':\n        case 'Right':\n            var point1 = { x: target.point.x, y: source.point.y };\n            intermeditatePoints = (Point.equals(source.point, point1) || Point.equals(target.point, point1)) ?\n                [source.point, target.point] : [source.point, point1, target.point];\n            break;\n        case 'Top':\n        case 'Bottom':\n            var point2 = { x: source.point.x, y: target.point.y };\n            intermeditatePoints = (Point.equals(source.point, point2) || Point.equals(target.point, point2)) ?\n                [source.point, target.point] : [source.point, point2, target.point];\n            break;\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection3Segment(element, source, target, extra, allow) {\n    if (!extra) {\n        extra = 20;\n    }\n    var srcPort = element.sourcePortWrapper;\n    var intermeditatePoints;\n    var segmentValue;\n    var next;\n    var diffx = target.point.x - source.point.x;\n    var diffy = target.point.y - source.point.y;\n    var temp;\n    if (!allow && (Math.abs(diffx) < 0.001 || Math.abs(diffy) < 0.001)) {\n        if (target.direction === undefined) {\n            intermeditatePoints = [source.point, target.point];\n            return intermeditatePoints;\n        }\n    }\n    if (element.targetWrapper === undefined && Math.abs(diffx) <= 31 && Math.abs(diffy) <= 31) {\n        if ((source.direction === 'Left' || source.direction === 'Right')) {\n            if (Math.abs(diffy) < 12) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else {\n            if (Math.abs(diffx) < 12) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n        if (Math.abs(diffx) > 12 || Math.abs(diffy) > 12) {\n            return orthoConnection2Segment(source, target);\n        }\n        else {\n            extra += 5;\n        }\n    }\n    if (source.direction === 'Left' || source.direction === 'Right') {\n        if (source.direction === 'Right') {\n            if (target.direction !== undefined && target.direction === 'Right') {\n                extra = Math.max(source.point.x, target.point.x) - source.point.x + extra;\n            }\n            if (source.point.x > target.point.x && srcPort === undefined) {\n                extra = -extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Left') {\n                extra = source.point.x - Math.min(source.point.x, target.point.x) + extra;\n            }\n            if (source.point.x > target.point.x || srcPort !== undefined || source.direction === 'Left') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.y - source.point.y;\n        segmentValue = addLineSegment(source.point, extra, 0);\n        temp = target.point.y - segmentValue.y;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.y - segmentValue.y, 90);\n        }\n    }\n    else if (source.direction === 'Top' || source.direction === 'Bottom') {\n        if (source.direction === 'Bottom') {\n            if (target.direction !== undefined && target.direction === 'Bottom') {\n                extra = Math.max(source.point.y, target.point.y) - source.point.y + extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Top') {\n                extra = source.point.y - Math.min(source.point.y, target.point.y) + extra;\n            }\n            if (source.point.y > target.point.y || (srcPort !== undefined) || source.direction === 'Top') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.x - source.point.x;\n        if (source.direction === 'Top') {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        else {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        temp = target.point.x - segmentValue.x;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.x - segmentValue.x, 0);\n        }\n    }\n    if (temp === 0) {\n        return intermeditatePoints = [\n            source.point,\n            target.point\n        ];\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue,\n        next,\n        target.point\n    ];\n    return intermeditatePoints;\n}\nfunction orthoConnection5Segment(source, target, extra) {\n    if (extra === void 0) { extra = 20; }\n    var intermeditatePoints;\n    var length = extra;\n    var sLeft = source.corners.left - source.margin.left;\n    var sRight = source.corners.right + source.margin.right;\n    var sBottom = source.corners.bottom + source.margin.bottom;\n    var sTop = source.corners.top - source.margin.top;\n    var tLeft = target.corners.left - target.margin.left;\n    var tRight = target.corners.right + target.margin.right;\n    var tBottom = target.corners.bottom + target.margin.bottom;\n    var tTop = target.corners.top - target.margin.top;\n    var segmentValue;\n    switch (source.direction) {\n        case 'Left':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sLeft > tLeft && sLeft <= tRight && extra >= 20) {\n                length = source.point.x - target.corners.left + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 180);\n            break;\n        case 'Top':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sTop > tTop && sTop <= tBottom && extra >= 20) {\n                length = source.point.y - target.corners.top + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 270);\n            break;\n        case 'Right':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sRight < tRight && sRight >= tLeft && extra >= 20) {\n                length = target.corners.right - source.point.x + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 0);\n            break;\n        case 'Bottom':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sBottom < tBottom && sBottom >= tTop && extra >= 20) {\n                length = target.corners.bottom - source.point.y + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 90);\n            break;\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue\n    ];\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        var prevDir = source.direction;\n        source.direction = segmentValue.x > target.point.x ? 'Left' : 'Right';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    else {\n        var prevDir = source.direction;\n        source.direction = segmentValue.y > target.point.y ? 'Top' : 'Bottom';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection4Segment(source, target, prevDir, interPt, e) {\n    if (e === void 0) { e = 20; }\n    var segmentValue;\n    if (prevDir === undefined) {\n        source.margin = { left: 2, right: 2, top: 2, bottom: 2 };\n        target.margin = { left: 0, right: 5, top: 0, bottom: 5 };\n    }\n    else {\n        if (source.direction === 'Bottom') {\n            if (target.corners.top > source.corners.bottom && target.corners.top - source.corners.bottom < 20) {\n                e = (target.corners.top - source.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Top') {\n            if (target.corners.bottom < source.corners.top && source.corners.top - target.corners.bottom < 20) {\n                e = (source.corners.top - target.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Right') {\n            if (target.corners.left > source.corners.right && target.corners.left - source.corners.right < 20) {\n                e = (target.corners.left - source.corners.right) / 2;\n            }\n        }\n        else if (source.direction === 'Left') {\n            if (target.corners.right < source.corners.left && source.corners.left - target.corners.right < 20) {\n                e = (source.corners.left - target.corners.right) / 2;\n            }\n        }\n    }\n    switch (source.direction) {\n        case 'Left':\n            e = getLeftLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 180);\n            break;\n        case 'Right':\n            e = getRightLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 0);\n            break;\n        case 'Top':\n            e = getTopLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 270);\n            break;\n        case 'Bottom':\n            e = getBottomLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 90);\n    }\n    if (interPt !== undefined) {\n        interPt.push(segmentValue);\n    }\n    else {\n        interPt = [\n            source.point,\n            segmentValue\n        ];\n    }\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        getOrtho3Seg(segmentValue, 'horizontal', source, target, interPt);\n    }\n    else if (source.direction === 'Right' || source.direction === 'Left') {\n        getOrtho3Seg(segmentValue, 'vertical', source, target, interPt);\n    }\n    return interPt;\n}\nfunction getOrtho3Seg(sPt, orientation, src, tar, points) {\n    var point1;\n    var point2;\n    var point3;\n    if (orientation === 'horizontal') {\n        src.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n        tar.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n    }\n    else if (orientation === 'vertical') {\n        src.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n        tar.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n    }\n    var extra = 20;\n    if (orientation === 'horizontal') {\n        switch (tar.direction) {\n            case 'Left':\n                if (src.corners.right + src.margin.right < tar.corners.left - tar.margin.left &&\n                    (tar.corners.left - src.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(tar.corners.left - src.corners.right) / 2, 20);\n                    extra = src.corners.right - sPt.x + gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.min(tar.corners.left, sPt.x) - sPt.x - 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.min(tar.corners.left, src.corners.left) - sPt.x - 20;\n                    }\n                    else {\n                        extra = tar.corners.left - sPt.x - 20;\n                    }\n                }\n                break;\n            case 'Right':\n                if (src.corners.left - src.margin.left > tar.corners.right + tar.margin.right &&\n                    (src.corners.left - tar.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(src.corners.left - tar.corners.right) / 2, 20);\n                    extra = src.corners.left - sPt.x - gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.max(tar.corners.right, sPt.x) - sPt.x + 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.max(tar.corners.right, src.corners.right) - sPt.x + 20;\n                    }\n                    else {\n                        extra = tar.corners.right - sPt.x + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 0);\n        point2 = addLineSegment(point1, tar.point.y - sPt.y, 90);\n        point3 = tar.point;\n    }\n    else if (orientation === 'vertical') {\n        switch (tar.direction) {\n            case 'Top':\n                if (src.corners.bottom + src.margin.bottom < tar.corners.top - tar.margin.top &&\n                    (tar.corners.top - src.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(tar.corners.top - src.corners.bottom) / 2, 20);\n                    extra = src.corners.bottom - sPt.y + gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.min(tar.corners.top, sPt.y) - sPt.y - 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.min(tar.corners.top, src.corners.top) - sPt.y - 20;\n                    }\n                    else {\n                        extra = tar.corners.top - sPt.y - 20;\n                    }\n                }\n                break;\n            case 'Bottom':\n                if (src.corners.top - src.margin.top > tar.corners.bottom + tar.margin.bottom &&\n                    (src.corners.top - tar.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(src.corners.top - tar.corners.bottom) / 2, 20);\n                    extra = src.corners.top - sPt.y - gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.max(tar.corners.bottom, sPt.y) - sPt.y + 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.max(tar.corners.bottom, src.corners.bottom) - sPt.y + 20;\n                    }\n                    else {\n                        extra = tar.corners.bottom - sPt.y + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 90);\n        point2 = addLineSegment(point1, tar.point.x - sPt.x, 0);\n        point3 = tar.point;\n    }\n    points.push(point1);\n    points.push(point2);\n    points.push(point3);\n}\nfunction getTopLength(source, target, preDir, length) {\n    if (source.corners.top - source.margin.top > target.corners.top + target.margin.top &&\n        source.corners.top - source.margin.top <= target.corners.bottom + target.margin.bottom) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        length += source.point.y - source.corners.top;\n    }\n    else {\n        if ((preDir !== undefined && preDir !== 'Left') && target.direction === 'Right' && source.point.x < target.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((preDir !== undefined && preDir !== 'Right') && target.direction === 'Left'\n            && target.point.x < source.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            length += source.point.y - source.corners.top;\n        }\n    }\n    return length;\n}\nfunction getLeftLength(source, target, prevDir, segLength) {\n    if (source.corners.left - source.margin.left > target.corners.left - target.margin.left &&\n        source.corners.left - source.margin.left <= target.corners.right + target.margin.right) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        segLength += source.point.x - source.corners.left;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') &&\n            target.direction === 'Top' && target.point.y < source.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            segLength += source.point.x - source.corners.left;\n        }\n    }\n    return segLength;\n}\nfunction getRightLength(source, target, length, prevDir) {\n    if (source.corners.right + source.margin.right < target.corners.right + target.margin.right &&\n        source.corners.right + source.margin.right >= target.corners.left - target.margin.left) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        length += source.corners.right - source.point.x;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') && target.direction === 'Top' && target.point.y < source.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            length += source.corners.right - source.point.x;\n        }\n    }\n    return length;\n}\nfunction getBottomLength(source, target, segLength, prevDir) {\n    if (source.corners.bottom + source.margin.bottom < target.corners.bottom + target.margin.bottom &&\n        source.corners.bottom + source.margin.bottom >= target.corners.top - target.margin.top) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        segLength += source.corners.bottom - source.point.y;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Left') &&\n            target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Right') &&\n            target.direction === 'Left' && target.point.x < source.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            segLength += source.corners.bottom - source.point.y;\n        }\n    }\n    return segLength;\n}\nfunction getSwapping(srcDir, tarDir) {\n    var swap = false;\n    switch (srcDir) {\n        case 'Left':\n            switch (tarDir) {\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Top':\n            switch (tarDir) {\n                case 'Left':\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Bottom':\n            switch (tarDir) {\n                case 'Right':\n                    swap = true;\n                    break;\n            }\n            break;\n    }\n    return swap;\n}\nfunction swapPoints(source, target) {\n    var direction = source.direction;\n    source.direction = target.direction;\n    target.direction = direction;\n    var point = source.point;\n    source.point = target.point;\n    target.point = point;\n    var corner = source.corners;\n    source.corners = target.corners;\n    target.corners = corner;\n}\nexport function getPortDirection(point, corner, bounds, closeEdge) {\n    var direction;\n    var boundsValue = corner === undefined ? bounds : corner;\n    var one = boundsValue.topLeft;\n    var two = boundsValue.topRight;\n    var three = boundsValue.bottomRight;\n    var four = boundsValue.bottomLeft;\n    var center = boundsValue.center;\n    var angle = findAngle(center, point);\n    var fourty5 = findAngle(center, three);\n    var one35 = findAngle(center, four);\n    var two25 = findAngle(center, one);\n    var three15 = findAngle(center, two);\n    if (angle > two25 && angle < three15) {\n        direction = 'Top';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - one.x) < Math.abs(point.x - two.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Left');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - bounds.width, two.y, width, height), point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= fourty5 && angle < one35) {\n        direction = 'Bottom';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - four.x) < Math.abs(point.x - three.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Left');\n        //     } else {\n        //         let value: Rect = new Rect(three.x - bounds.width, three.y - bounds.height / 4, bounds.width, bounds.height / 4);\n        //         direction = checkCloseEdge(direction, value, point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= one35 && angle <= two25) {\n        direction = 'Left';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - one.y) < Math.abs(point.y - four.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else if (angle >= three15 || angle < fourty5) {\n        direction = 'Right';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - two.y) < Math.abs(point.y - three.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - width, two.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, \n        //new Rect(three.x - width, three.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else {\n        direction = 'Right';\n    }\n    return direction;\n}\n// function checkCloseEdge(direction: string, threshold: Rect, port: PointModel, nearest: string): string {\n// if (threshold) {\n//     switch (direction) {\n//         case 'Bottom':\n//         case 'Top':\n//             let left: number = Math.abs(threshold.left - port.x);\n//             let right: number = Math.abs(threshold.right - port.x);\n//             let ver: number = direction === 'Top' ? Math.abs(threshold.top - port.y) : Math.abs(threshold.bottom - port.y);\n//             if (left < right) {\n//                 if (left < ver) {\n//                     return 'Left';\n//                 }\n//             } else {\n//                 if (right < ver) {\n//                     return 'Right';\n//                 }\n//             }\n//             break;\n//         case 'Left':\n//         case 'Right':\n//             let top: number = Math.abs(threshold.top - port.y);\n//             let bottom: number = Math.abs(threshold.bottom - port.y);\n//             let hor: number = direction === 'Left' ? Math.abs(threshold.left - port.x) : Math.abs(threshold.right - port.x);\n//             if (top < bottom) {\n//                 if (top < hor) {\n//                     return 'Top';\n//                 }\n//             } else {\n//                 if (bottom < hor) {\n//                     return 'Bottom';\n//                 }\n//             }\n//             break;\n//     }\n// }\n//Meant for dock port\n//    return direction;\n//  }\n/** @private */\nexport function getOuterBounds(obj) {\n    var outerBounds;\n    outerBounds = obj.wrapper.children[0].bounds;\n    if (obj.sourceDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[1].bounds);\n    }\n    if (obj.targetDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[2].bounds);\n    }\n    return outerBounds;\n}\nexport function getOppositeDirection(direction) {\n    switch (direction) {\n        case 'Top':\n            return 'Bottom';\n        case 'Bottom':\n            return 'Top';\n        case 'Left':\n            return 'Right';\n        case 'Right':\n            return 'Left';\n    }\n    return 'auto';\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Tooltip } from '@syncfusion/ej2-popups';\n/**\n * Defines the tooltip that should be shown when the mouse hovers over node.\n * An object that defines the description, appearance and alignments of tooltip\n */\nvar DiagramTooltip = /** @class */ (function (_super) {\n    __extends(DiagramTooltip, _super);\n    function DiagramTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DiagramTooltip.prototype, \"content\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], DiagramTooltip.prototype, \"position\", void 0);\n    __decorate([\n        Property('Mouse')\n    ], DiagramTooltip.prototype, \"relativeMode\", void 0);\n    __decorate([\n        Property(true)\n    ], DiagramTooltip.prototype, \"showTipPointer\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"width\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"height\", void 0);\n    __decorate([\n        Property('Auto')\n    ], DiagramTooltip.prototype, \"openOn\", void 0);\n    __decorate([\n        Property()\n    ], DiagramTooltip.prototype, \"animation\", void 0);\n    return DiagramTooltip;\n}(ChildProperty));\nexport { DiagramTooltip };\n/**\n * @private\n * defines the Tooltip.\n * @param diagram\n */\nexport function initTooltip(diagram) {\n    var tooltipOption = new Tooltip;\n    tooltipOption = updateTooltipContent(diagram.tooltip, tooltipOption);\n    var tooltip = new Tooltip(tooltipOption);\n    tooltip.beforeCollision = beforeCollision;\n    tooltip.beforeOpen = beforeOpen;\n    tooltip.cssClass = 'e-diagram-tooltip';\n    tooltip.opensOn = 'custom';\n    tooltip.appendTo('#' + diagram.element.id);\n    tooltip.close();\n    return tooltip;\n}\nfunction beforeOpen(args) {\n    if ((this.content === '' || this.content === undefined)) {\n        args.element.style.display = 'none';\n    }\n}\nfunction beforeCollision(args) {\n    if ((args.collidedPosition && args.collidedPosition !== this.position)) {\n        args.element.style.display = 'none';\n    }\n}\n/**\n * @private\n * updates the contents of the tooltip.\n * @param diagram\n * @param node\n */\nexport function updateTooltip(diagram, node) {\n    var tooltip;\n    var tooltipObject = diagram.tooltipObject;\n    tooltip = node ? node.tooltip : diagram.tooltip;\n    updateTooltipContent(tooltip, tooltipObject);\n    return tooltipObject;\n}\nfunction updateTooltipContent(tooltip, tooltipObject) {\n    if (tooltip.content) {\n        tooltipObject.content = tooltip.content;\n        tooltipObject.position = tooltip.position;\n        tooltipObject.showTipPointer = tooltip.showTipPointer;\n        tooltipObject.width = tooltip.width;\n        tooltipObject.height = tooltip.height;\n        if (!tooltip.animation) {\n            tooltipObject.animation = { close: { effect: 'None' } };\n        }\n        else {\n            tooltipObject.animation = tooltip.animation;\n        }\n    }\n    else {\n        tooltipObject.close();\n    }\n    return tooltipObject;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory, CollectionFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, StrokeStyle } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { Transform, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { findAngle, findConnectorPoints, getOuterBounds } from '../utility/connector';\nimport { getAnnotationPosition, alignLabelOnSegments, updateConnector, setUMLActivityDefaults } from '../utility/diagram-util';\nimport { findDistance, findPath, updatePathElement } from '../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { flipConnector } from './../utility/diagram-util';\nimport { PathElement } from '../core/elements/path-element';\nimport { PathAnnotation } from './annotation';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDecoratorShape } from './dictionary/common';\nimport { NodeBase } from './node-base';\nimport { DiagramTooltip } from './tooltip';\nimport { identityMatrix, rotateMatrix, scaleMatrix, transformPointsByMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nvar getConnectorType = function (obj) {\n    switch (obj.type) {\n        case 'Bpmn':\n            return BpmnFlow;\n        case 'UmlActivity':\n            return ActivityFlow;\n        case 'UmlClassifier':\n            return RelationShip;\n        default:\n            return ConnectorShape;\n    }\n};\nvar getSegmentType = function (obj) {\n    switch (obj.type) {\n        case 'Straight':\n            return StraightSegment;\n        case 'Bezier':\n            return BezierSegment;\n        case 'Orthogonal':\n            return OrthogonalSegment;\n        default:\n            return StraightSegment;\n    }\n};\n/**\n * Decorators are used to decorate the end points of the connector with some predefined path geometry\n */\nvar Decorator = /** @class */ (function (_super) {\n    __extends(Decorator, _super);\n    function Decorator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"height\", void 0);\n    __decorate([\n        Property('Arrow')\n    ], Decorator.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({ fill: 'black', strokeColor: 'black', strokeWidth: 1 }, ShapeStyle)\n    ], Decorator.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0.5 }, Point)\n    ], Decorator.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('')\n    ], Decorator.prototype, \"pathData\", void 0);\n    return Decorator;\n}(ChildProperty));\nexport { Decorator };\n/**\n * Describes the length and angle between the control point and the start point of bezier segment\n */\nvar Vector = /** @class */ (function (_super) {\n    __extends(Vector, _super);\n    function Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"angle\", void 0);\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"distance\", void 0);\n    return Vector;\n}(ChildProperty));\nexport { Vector };\n/**\n * Sets the type of the connector\n */\nvar ConnectorShape = /** @class */ (function (_super) {\n    __extends(ConnectorShape, _super);\n    function ConnectorShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], ConnectorShape.prototype, \"type\", void 0);\n    return ConnectorShape;\n}(ChildProperty));\nexport { ConnectorShape };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar ActivityFlow = /** @class */ (function (_super) {\n    __extends(ActivityFlow, _super);\n    function ActivityFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Object')\n    ], ActivityFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property(30)\n    ], ActivityFlow.prototype, \"exceptionFlowHeight\", void 0);\n    return ActivityFlow;\n}(ConnectorShape));\nexport { ActivityFlow };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar BpmnFlow = /** @class */ (function (_super) {\n    __extends(BpmnFlow, _super);\n    function BpmnFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Sequence')\n    ], BpmnFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property('Normal')\n    ], BpmnFlow.prototype, \"sequence\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"message\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"association\", void 0);\n    return BpmnFlow;\n}(ConnectorShape));\nexport { BpmnFlow };\n/**\n * Defines the behavior of connector segments\n */\nvar ConnectorSegment = /** @class */ (function (_super) {\n    __extends(ConnectorSegment, _super);\n    // tslint:disable-next-line:no-any\n    function ConnectorSegment(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        _this.points = [];\n        return _this;\n    }\n    __decorate([\n        Property('Straight')\n    ], ConnectorSegment.prototype, \"type\", void 0);\n    __decorate([\n        Property(true)\n    ], ConnectorSegment.prototype, \"allowDrag\", void 0);\n    return ConnectorSegment;\n}(ChildProperty));\nexport { ConnectorSegment };\n/**\n * Defines the behavior of straight segments\n */\nvar StraightSegment = /** @class */ (function (_super) {\n    __extends(StraightSegment, _super);\n    function StraightSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class StraightSegment\n     */\n    StraightSegment.prototype.getClassName = function () {\n        return 'StraightSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], StraightSegment.prototype, \"point\", void 0);\n    return StraightSegment;\n}(ConnectorSegment));\nexport { StraightSegment };\n/**\n * Defines the behavior of bezier segments\n */\nvar BezierSegment = /** @class */ (function (_super) {\n    __extends(BezierSegment, _super);\n    function BezierSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BezierSegment\n     */\n    BezierSegment.prototype.getClassName = function () {\n        return 'BezierSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point1\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point2\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector1\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector2\", void 0);\n    return BezierSegment;\n}(StraightSegment));\nexport { BezierSegment };\n/**\n * Defines the behavior of orthogonal segments\n */\nvar OrthogonalSegment = /** @class */ (function (_super) {\n    __extends(OrthogonalSegment, _super);\n    function OrthogonalSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class OrthogonalSegment\n     */\n    OrthogonalSegment.prototype.getClassName = function () {\n        return 'OrthogonalSegment';\n    };\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"direction\", void 0);\n    return OrthogonalSegment;\n}(ConnectorSegment));\nexport { OrthogonalSegment };\n/**\n * Get the direction of the control points while the bezier is connected to the node\n */\nexport function getDirection(bounds, points, excludeBounds) {\n    var center = bounds.center;\n    var direction;\n    var part = excludeBounds ? 45 : (180 / (2 + 2 / (bounds.height / bounds.width)));\n    var fourty5 = part;\n    var one35 = (180 - part);\n    var two25 = one35 + (2 * part);\n    var three15 = 360 - part;\n    var angle = findAngle(points, center);\n    if (angle > fourty5 && angle < one35) {\n        return direction = 'top';\n    }\n    else if (angle > one35 && angle < two25) {\n        return direction = 'right';\n    }\n    else if (angle > two25 && angle < three15) {\n        return direction = 'bottom';\n    }\n    else {\n        return direction = 'left';\n    }\n}\nexport function isEmptyVector(element) {\n    if (!element.distance && !element.angle) {\n        return true;\n    }\n    return false;\n}\n/**\n * Get the bezier points if control points are not given.\n */\nexport function getBezierPoints(sourcePoint, targetPoint, direction) {\n    var distance = 60;\n    var value = { x: 0, y: 0 };\n    if (!direction) {\n        if (Math.abs(targetPoint.x - sourcePoint.x) > Math.abs(targetPoint.y - sourcePoint.y)) {\n            direction = sourcePoint.x < targetPoint.x ? 'right' : 'left';\n        }\n        else {\n            direction = sourcePoint.y < targetPoint.y ? 'bottom' : 'top';\n        }\n    }\n    switch (direction) {\n        case 'bottom':\n        case 'top':\n            distance = Math.min(Math.abs(sourcePoint.y - targetPoint.y) * 0.45, distance);\n            value = { x: sourcePoint.x, y: sourcePoint.y + (direction === 'bottom' ? distance : -distance) };\n            break;\n        case 'right':\n        case 'left':\n            distance = Math.min(Math.abs(sourcePoint.x - targetPoint.x) * 0.45, distance);\n            value = { x: sourcePoint.x + (direction === 'right' ? distance : -distance), y: sourcePoint.y };\n            break;\n    }\n    return value;\n}\n/**\n * Get the bezier curve bounds.\n */\nexport function getBezierBounds(startPoint, controlPoint1, controlPoint2, endPoint, connector) {\n    var minx = 0;\n    var miny = 0;\n    var maxx = 0;\n    var maxy = 0;\n    var tolerancevalue = 3;\n    var max = Number((connector.distance(controlPoint1, startPoint) +\n        connector.distance(controlPoint2, controlPoint1) +\n        connector.distance(endPoint, controlPoint2)) / tolerancevalue);\n    if (max !== 0) {\n        for (var i = 0; i <= max; i++) {\n            var t = i / max;\n            var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.x +\n                3 * t * t * (1 - t) * controlPoint2.x +\n                t * t * t * endPoint.x;\n            var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.y +\n                3 * t * t * (1 - t) * controlPoint2.y +\n                t * t * t * endPoint.y;\n            if (i === 0) {\n                minx = maxx = x;\n                miny = maxy = y;\n            }\n            else {\n                minx = Math.min(x, minx);\n                miny = Math.min(y, miny);\n                maxx = Math.max(x, maxx);\n                maxy = Math.max(y, maxy);\n            }\n        }\n    }\n    return {\n        x: minx, y: miny, width: maxx - minx, height: maxy - miny,\n        left: minx, top: miny, right: (minx + (maxx - minx)), bottom: (miny + (maxy - miny)),\n        center: { x: (minx + (maxx - minx)) / 2, y: (miny + (maxy - miny)) / 2 },\n    };\n}\n/**\n * Get the intermediate bezier curve for point over connector\n */\nexport function bezierPoints(connector, startPoint, point1, point2, endPoint, i, max) {\n    var pt = { x: 0, y: 0 };\n    var t = i / max;\n    var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n        3 * t * (1 - t) * (1 - t) * point1.x +\n        3 * t * t * (1 - t) * point2.x +\n        t * t * t * endPoint.x;\n    pt.x = x;\n    var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n        3 * t * (1 - t) * (1 - t) * point1.y +\n        3 * t * t * (1 - t) * point2.y +\n        t * t * t * endPoint.y;\n    pt.y = y;\n    return pt;\n}\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar MultiplicityLabel = /** @class */ (function (_super) {\n    __extends(MultiplicityLabel, _super);\n    function MultiplicityLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], MultiplicityLabel.prototype, \"optional\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"lowerBounds\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"upperBounds\", void 0);\n    return MultiplicityLabel;\n}(ChildProperty));\nexport { MultiplicityLabel };\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar ClassifierMultiplicity = /** @class */ (function (_super) {\n    __extends(ClassifierMultiplicity, _super);\n    function ClassifierMultiplicity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('OneToOne')\n    ], ClassifierMultiplicity.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"target\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"source\", void 0);\n    return ClassifierMultiplicity;\n}(ChildProperty));\nexport { ClassifierMultiplicity };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar RelationShip = /** @class */ (function (_super) {\n    __extends(RelationShip, _super);\n    function RelationShip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlClassifier')\n    ], RelationShip.prototype, \"type\", void 0);\n    __decorate([\n        Property('Aggregation')\n    ], RelationShip.prototype, \"relationship\", void 0);\n    __decorate([\n        Property('Directional')\n    ], RelationShip.prototype, \"associationType\", void 0);\n    __decorate([\n        Complex({}, ClassifierMultiplicity)\n    ], RelationShip.prototype, \"multiplicity\", void 0);\n    return RelationShip;\n}(ConnectorShape));\nexport { RelationShip };\n/**\n * Connectors are used to create links between nodes\n */\nvar Connector = /** @class */ (function (_super) {\n    __extends(Connector, _super);\n    // tslint:disable-next-line:no-any\n    function Connector(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.bridges = [];\n        /** @private */\n        _this.status = 'None';\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    /** @private */\n    // tslint:disable-next-line:no-any\n    Connector.prototype.init = function (diagram) {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        var bpmnElement;\n        var container = new Canvas();\n        var segment = new PathElement();\n        segment.id = this.id + '_path';\n        var srcDecorator = new PathElement();\n        var targetDecorator = new PathElement();\n        segment = this.getSegmentElement(this, segment);\n        var bounds;\n        var points = [];\n        points = this.getConnectorPoints(this.type);\n        points = this.clipDecorators(this, points);\n        bounds = Rect.toBounds(points);\n        container.width = bounds.width;\n        container.height = bounds.height;\n        container.offsetX = bounds.x + container.pivot.x * bounds.width;\n        container.offsetY = bounds.y + container.pivot.y * bounds.height;\n        switch (this.shape.type) {\n            case 'Bpmn':\n                switch (this.shape.flow) {\n                    case 'Sequence':\n                        bpmnElement = this.getBpmnSequenceFlow();\n                        break;\n                    case 'Association':\n                        bpmnElement = new PathElement();\n                        bpmnElement.visible = false;\n                        this.getBpmnAssociationFlow();\n                        break;\n                    case 'Message':\n                        bpmnElement = this.getBpmnMessageFlow();\n                        segment = this.getSegmentElement(this, segment);\n                        this.updateShapePosition(this, bpmnElement);\n                        break;\n                }\n                break;\n            case 'UmlActivity':\n                switch (this.shape.flow) {\n                    case 'Object':\n                        this.getUMLObjectFlow();\n                        break;\n                    case 'Exception':\n                        this.getUMLExceptionFlow(segment);\n                        break;\n                }\n                break;\n            case 'UmlClassifier':\n                this.getConnectorRelation();\n                break;\n        }\n        var anglePoints = this.intermediatePoints;\n        if (this.type === 'Bezier') {\n            var firstSegment = this.segments[0];\n            var lastSegment = this.segments[this.segments.length - 1];\n            anglePoints = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n                !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n        }\n        var accessContent = 'getDescription';\n        var getDescription = diagram[accessContent];\n        var strokeWidth = this.sourceWrapper ? this.sourceWrapper.style.strokeWidth / 2 / 2 : 0;\n        srcDecorator = this.getDecoratorElement(points[0], anglePoints[1], this.sourceDecorator, true, getDescription);\n        targetDecorator = this.getDecoratorElement(points[points.length - 1], anglePoints[anglePoints.length - 2], this.targetDecorator, false, getDescription);\n        srcDecorator.id = this.id + '_srcDec';\n        targetDecorator.id = this.id + '_tarDec';\n        segment.style = this.style;\n        /* tslint:disable:no-string-literal */\n        segment.style['fill'] = 'transparent';\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(this, diagram);\n            segment.description = wrapperContent ? wrapperContent : this.id;\n        }\n        container.style.strokeColor = 'transparent';\n        container.style.fill = 'transparent';\n        container.style.strokeWidth = 0;\n        container.children = [segment, srcDecorator, targetDecorator];\n        container.id = this.id;\n        if (bpmnElement !== undefined) {\n            container.children.push(bpmnElement);\n        }\n        container.offsetX = segment.offsetX;\n        container.offsetY = segment.offsetY;\n        container.width = segment.width;\n        container.height = segment.height;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            container.children.push(this.getAnnotationElement(this.annotations[i], this.intermediatePoints, bounds, getDescription, diagram.element.id));\n        }\n        this.wrapper = container;\n        return container;\n    };\n    Connector.prototype.getConnectorRelation = function () {\n        var shape = this.shape;\n        if (shape.relationship === 'Association') {\n            this.segments[0].type = 'Straight';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Inheritance') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n            this.style.strokeDashArray = '4 4';\n        }\n        else if (shape.relationship === 'Composition') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n            this.sourceDecorator.style.fill = 'black';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Aggregation') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Dependency') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'OpenArrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n            this.style.strokeDashArray = '4 4';\n        }\n        else if (shape.relationship === 'Realization') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n        }\n        if (shape.associationType === 'BiDirectional') {\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'None';\n        }\n        var text1 = '';\n        var lower;\n        var upper;\n        var sourceText = '';\n        var targetText = '';\n        var text = '';\n        if (shape.multiplicity.source) {\n            shape.multiplicity.source.lowerBounds = shape.multiplicity.source.lowerBounds;\n            shape.multiplicity.source.upperBounds = shape.multiplicity.source.upperBounds;\n        }\n        if (shape.multiplicity.target) {\n            shape.multiplicity.target.lowerBounds = shape.multiplicity.target.lowerBounds;\n            shape.multiplicity.target.upperBounds = shape.multiplicity.target.upperBounds;\n        }\n        lower = shape.multiplicity.source;\n        upper = shape.multiplicity.target;\n        text = lower.upperBounds ? lower.lowerBounds + '...' + lower.upperBounds : lower.lowerBounds;\n        text1 = upper.upperBounds ? upper.lowerBounds + '...' + upper.upperBounds : upper.lowerBounds;\n        if (shape.multiplicity.type === 'ManyToOne') {\n            shape.multiplicity.target.optional = false;\n            sourceText = text ? text : '*';\n            targetText = '1';\n        }\n        if (shape.multiplicity.type === 'OneToMany') {\n            shape.multiplicity.source.optional = false;\n            targetText = text1 ? text1 : '*';\n            sourceText = '1';\n        }\n        if (shape.multiplicity.type === 'ManyToOne') {\n            sourceText = text ? text : '*';\n            targetText = text1 ? text1 : '*';\n        }\n        if (shape.multiplicity.type === 'OneToOne') {\n            shape.multiplicity.target.optional = false;\n            shape.multiplicity.source.optional = false;\n            sourceText = '1';\n            targetText = '1';\n        }\n        this.annotations = [\n            {\n                id: this.id + 'sourcelabel', content: sourceText, offset: 0, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            },\n            {\n                id: this.id + 'targetlabel', content: targetText, offset: 1, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            }\n        ];\n    };\n    Connector.prototype.getBpmnSequenceFlow = function () {\n        var segment = new PathElement();\n        var pathseq = new PathElement();\n        var pathseqData;\n        if ((this.shape.sequence) === 'Normal' && this.type !== 'Bezier') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Default') {\n            segment = this.getSegmentElement(this, segment);\n            var anglePoints = this.intermediatePoints;\n            pathseq = updatePathElement(anglePoints, this);\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Conditional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Diamond';\n            pathseq.id = this.id + this.shape.type;\n            this.sourceDecorator.style.fill = 'white';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.width = 20;\n            this.sourceDecorator.height = 10;\n        }\n        return pathseq;\n    };\n    /** @private */\n    Connector.prototype.getUMLObjectFlow = function () {\n        if (this.annotations) {\n            for (var i = 0; i < this.annotations.length; i++) {\n                this.annotations[i].content = '[' + this.annotations[i].content + ']';\n            }\n        }\n    };\n    /** @private */\n    Connector.prototype.getUMLExceptionFlow = function (segment) {\n        this.type = 'Straight';\n        var height = (this.shape.exceptionFlowHeight) / 2;\n        var midPt = { x: (this.targetPoint.x + this.sourcePoint.x) / 2, y: (this.targetPoint.y + this.sourcePoint.y) / 2 };\n        var xDist = midPt.x - this.sourcePoint.x;\n        var yDist = midPt.y - this.sourcePoint.y;\n        var dist = Math.sqrt(xDist * xDist + yDist * yDist);\n        var fractionOfTotal = (height) / dist;\n        var midPt2 = { x: midPt.x - xDist * fractionOfTotal, y: midPt.y - yDist * fractionOfTotal };\n        var midPt1 = { x: midPt.x + xDist * fractionOfTotal, y: midPt.y + yDist * fractionOfTotal };\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, 315, midPt.x, midPt.y);\n        this.segments = [];\n        var segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt1) }, true);\n        (this.segments).push(segments);\n        segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt2) }, true);\n        (this.segments).push(segments);\n        segment = this.getSegmentElement(this, segment);\n    };\n    Connector.prototype.getBpmnAssociationFlow = function () {\n        if ((this.shape.association) === 'Default') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.association) === 'Directional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.style.fill = 'black';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'BiDirectional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.shape = 'Arrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.sourceDecorator.width = 5;\n            this.sourceDecorator.height = 10;\n        }\n    };\n    Connector.prototype.getBpmnMessageFlow = function () {\n        var segmentMessage = new PathElement();\n        this.style.strokeDashArray = '4 4';\n        this.targetDecorator.shape = 'Arrow';\n        this.targetDecorator.width = 5;\n        this.targetDecorator.height = 10;\n        this.sourceDecorator.shape = 'Circle';\n        if (((this.shape.message) === 'InitiatingMessage') ||\n            ((this.shape.message) === 'NonInitiatingMessage')) {\n            segmentMessage.id = this.id + '_' + (this.shape.message);\n            segmentMessage.width = 25;\n            segmentMessage.height = 15;\n            segmentMessage.data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n            segmentMessage.horizontalAlignment = 'Center';\n            segmentMessage.verticalAlignment = 'Center';\n            segmentMessage.transform = Transform.Self;\n            segmentMessage.style.fill = (this.shape.message) === 'NonInitiatingMessage' ? 'lightgrey' : 'white';\n        }\n        return segmentMessage;\n    };\n    /** @private */\n    Connector.prototype.distance = function (pt1, pt2) {\n        return findDistance(pt1, pt2);\n    };\n    /**   @private  */\n    Connector.prototype.findPath = function (sourcePt, targetPt) {\n        return findPath(sourcePt, targetPt);\n    };\n    /** @private */\n    Connector.prototype.getAnnotationElement = function (annotation, points, bounds, getDescription, diagramId) {\n        annotation.id = annotation.id || randomId();\n        var textele;\n        if (diagramId && annotation.template) {\n            textele = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            textele.content = annotation.template;\n        }\n        else {\n            textele = new TextElement();\n            textele.content = annotation.content;\n            textele.style.textOverflow = 'Wrap';\n        }\n        textele.constraints = annotation.constraints;\n        textele.visible = annotation.visibility;\n        textele.rotateAngle = annotation.rotateAngle;\n        textele.horizontalAlignment = annotation.horizontalAlignment;\n        textele.verticalAlignment = annotation.verticalAlignment;\n        textele.width = annotation.width;\n        textele.height = annotation.height;\n        if (bounds.width !== undefined && !annotation.template) {\n            textele.width = (annotation.width || bounds.width) - annotation.margin.left - annotation.margin.right;\n        }\n        textele.margin = annotation.margin;\n        textele.id = this.id + '_' + annotation.id;\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        textele.style = annotation.style;\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        var description = getFunction(getDescription);\n        if (description) {\n            wrapperContent = description(annotation, this);\n        }\n        textele.description = wrapperContent ? wrapperContent : textele.id;\n        this.updateAnnotation(annotation, points, bounds, textele);\n        return textele;\n    };\n    /** @private */\n    Connector.prototype.updateAnnotation = function (annotation, points, bounds, textElement, canRefresh) {\n        var getPointloop;\n        var newPoint;\n        var align;\n        var hAlign;\n        var vAlign;\n        var offsetPoint;\n        var pivotPoint = { x: 0, y: 0 };\n        if (!(textElement instanceof DiagramHtmlElement) && (!canRefresh)) {\n            textElement.refreshTextElement();\n        }\n        textElement.width = (annotation.width || bounds.width);\n        getPointloop = getAnnotationPosition(points, annotation, bounds);\n        newPoint = getPointloop.point;\n        if (annotation.segmentAngle) {\n            textElement.rotateAngle = annotation.rotateAngle + getPointloop.angle;\n            textElement.rotateAngle = (textElement.rotateAngle + 360) % 360;\n        }\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        offsetPoint = { x: ((newPoint.x - bounds.x) / bounds.width), y: ((newPoint.y - bounds.y) / bounds.height) };\n        pivotPoint.x = bounds.width * offsetPoint.x;\n        pivotPoint.y = bounds.height * offsetPoint.y;\n        align = alignLabelOnSegments(annotation, getPointloop.angle, points);\n        hAlign = align.hAlign;\n        vAlign = align.vAlign;\n        var horizor;\n        var verzor;\n        if (hAlign === 'left') {\n            horizor = 'Left';\n            pivotPoint.x += annotation.displacement.x;\n        }\n        else if (hAlign === 'right') {\n            horizor = 'Right';\n            pivotPoint.x -= annotation.displacement.x;\n        }\n        else if (hAlign === 'center') {\n            horizor = 'Center';\n        }\n        if (vAlign === 'top') {\n            verzor = 'Top';\n            pivotPoint.y += annotation.displacement.y;\n        }\n        else if (vAlign === 'bottom') {\n            verzor = 'Bottom';\n            pivotPoint.y -= annotation.displacement.y;\n        }\n        else if (vAlign === 'center') {\n            verzor = 'Center';\n        }\n        textElement.horizontalAlignment = horizor;\n        textElement.verticalAlignment = verzor;\n        textElement.setOffsetWithRespectToBounds(pivotPoint.x, pivotPoint.y, 'Absolute');\n        textElement.relativeMode = 'Point';\n    };\n    /** @private */\n    Connector.prototype.getConnectorPoints = function (type, points, layoutOrientation) {\n        var width = Math.abs(this.sourcePoint.x - this.targetPoint.x);\n        var height = Math.abs(this.sourcePoint.y - this.targetPoint.y);\n        points = findConnectorPoints(this, layoutOrientation);\n        var newPoints = points.slice(0);\n        if (newPoints && newPoints.length > 0) {\n            this.sourcePoint = newPoints[0];\n            this.targetPoint = newPoints[newPoints.length - 1];\n        }\n        return newPoints;\n    };\n    /** @private */\n    Connector.prototype.clipDecorator = function (connector, points, isSource) {\n        var point = { x: 0, y: 0 };\n        var start = { x: 0, y: 0 };\n        var end = { x: 0, y: 0 };\n        var length = points.length;\n        start = !isSource ? points[length - 1] : points[0];\n        end = !isSource ? points[length - 2] : points[1];\n        var len = Point.distancePoints(start, end);\n        len = (len === 0) ? 1 : len;\n        var width = connector.style.strokeWidth - 1;\n        point.x = (Math.round(start.x + width * (end.x - start.x) / len));\n        point.y = (Math.round(start.y + width * (end.y - start.y) / len));\n        var strokeWidth = 1;\n        var node = isSource ? connector.sourceWrapper : connector.targetWrapper;\n        if (node) {\n            strokeWidth = node.style.strokeWidth;\n        }\n        if ((isSource && connector.sourceDecorator.shape !== 'None') ||\n            (!isSource && connector.targetDecorator.shape !== 'None')) {\n            point = Point.adjustPoint(point, end, true, (strokeWidth / 2));\n        }\n        return point;\n    };\n    /** @private */\n    Connector.prototype.clipDecorators = function (connector, pts) {\n        if (connector.sourceDecorator.shape !== 'None') {\n            pts[0] = this.clipDecorator(connector, pts, true);\n        }\n        if (connector.targetDecorator.shape !== 'None') {\n            pts[pts.length - 1] = this.clipDecorator(connector, pts, false);\n        }\n        return pts;\n    };\n    /** @private */\n    Connector.prototype.updateSegmentElement = function (connector, points, element) {\n        var segmentPath;\n        var bounds = new Rect();\n        var point;\n        segmentPath = this.getSegmentPath(connector, points);\n        if (connector.type === 'Bezier') {\n            if (this.segments.length > 0) {\n                for (var i = 0; i < this.segments.length; i++) {\n                    var segment = this.segments[i];\n                    var connectorSegment = connector.segments[i];\n                    var point1 = !Point.isEmptyPoint(segment.point1) ? connectorSegment.point1 : connectorSegment.bezierPoint1;\n                    var point2 = !Point.isEmptyPoint(segment.point2) ? connectorSegment.point2 : connectorSegment.bezierPoint2;\n                    bounds.uniteRect(getBezierBounds(segment.points[0], point1, point2, segment.points[1], connector));\n                }\n            }\n        }\n        else {\n            bounds = Rect.toBounds(points);\n        }\n        element.width = bounds.width;\n        element.height = bounds.height;\n        element.offsetX = bounds.x + element.width / 2;\n        element.offsetY = bounds.y + element.height / 2;\n        element.data = segmentPath;\n        if (connector.wrapper) {\n            connector.wrapper.offsetX = element.offsetX;\n            connector.wrapper.offsetY = element.offsetY;\n            connector.wrapper.width = bounds.width;\n            connector.wrapper.height = bounds.height;\n        }\n        return element;\n    };\n    /** @private */\n    Connector.prototype.getSegmentElement = function (connector, segmentElement, layoutOrientation) {\n        var bounds;\n        var segmentPath;\n        var points = [];\n        flipConnector(connector);\n        points = this.getConnectorPoints(connector.type, undefined, layoutOrientation);\n        this.intermediatePoints = points;\n        segmentElement.staticSize = true;\n        segmentElement = this.updateSegmentElement(connector, points, segmentElement);\n        return segmentElement;\n    };\n    /** @private */\n    Connector.prototype.getDecoratorElement = function (offsetPoint, adjacentPoint, decorator, isSource, getDescription) {\n        var decEle = new PathElement();\n        var getPath;\n        var angle;\n        decEle.transform = Transform.Self;\n        this.updateDecoratorElement(decEle, offsetPoint, adjacentPoint, decorator);\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(decorator, this);\n            decEle.description = wrapperContent ? wrapperContent :\n                ('Specifies the ' + isSource ? 'source' : 'target' + 'port element of the connector');\n        }\n        return decEle;\n    };\n    Connector.prototype.bridgePath = function (connector, path, pointIndex) {\n        var pathData = path;\n        if (connector.bridges.length > 0) {\n            if (connector.type === 'Straight' && connector.segments.length < 2) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (!bridge.rendered) {\n                        pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                        pathData += bridge.path;\n                        bridge.rendered = true;\n                    }\n                }\n            }\n            else if (connector.type === 'Orthogonal' || (connector.type === 'Straight' && connector.segments.length > 1)) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (bridge.segmentPointIndex === pointIndex) {\n                        if (!bridge.rendered) {\n                            if (bridge.segmentPointIndex === pointIndex) {\n                                pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                                pathData += bridge.path;\n                                bridge.rendered = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return pathData;\n    };\n    /** @private */\n    Connector.prototype.updateDecoratorElement = function (element, pt, adjacentPoint, decorator) {\n        var getPath;\n        var angle;\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n        angle = Point.findAngle(pt, adjacentPoint);\n        getPath = getDecoratorShape(decorator.shape, decorator);\n        var size = new Size(decorator.width, decorator.height);\n        element.pivot.x = decorator.pivot.x;\n        element.pivot.y = decorator.pivot.y;\n        element.style = decorator.style;\n        element.rotateAngle = angle;\n        element.data = getPath;\n        element.canMeasurePath = true;\n        element.width = size.width;\n        element.height = size.height;\n    };\n    /** @private */\n    Connector.prototype.getSegmentPath = function (connector, points) {\n        var path = '';\n        var getPt;\n        var end;\n        var st;\n        var pts = [];\n        var j = 0;\n        while (j < points.length) {\n            pts.push({ x: points[j].x, y: points[j].y });\n            j++;\n        }\n        for (var m = 0; m < connector.bridges.length; m++) {\n            var bridge = connector.bridges[m];\n            bridge.rendered = false;\n        }\n        pts = this.clipDecorators(connector, pts);\n        if (this.cornerRadius > 0 && this.type !== 'Bezier') {\n            for (var j_1 = 0; j_1 < pts.length - 1; j_1++) {\n                getPt = pts[j_1];\n                if (j_1 === 0) {\n                    path = 'M' + getPt.x + ' ' + getPt.y;\n                }\n                var segLength = Point.distancePoints(pts[j_1], pts[j_1 + 1]);\n                if (segLength > 0) {\n                    if (j_1 < pts.length - 2) {\n                        if (segLength < this.cornerRadius * 2) {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, segLength / 2);\n                        }\n                        else {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, this.cornerRadius);\n                        }\n                    }\n                    else {\n                        end = pts[j_1 + 1];\n                    }\n                    if (j_1 > 0) {\n                        if (segLength < this.cornerRadius * 2) {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, segLength / 2);\n                            if (j_1 < pts.length - 2) {\n                                end = null;\n                            }\n                        }\n                        else {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, this.cornerRadius);\n                        }\n                    }\n                    if (st) {\n                        path += 'Q' + getPt.x + ' ' + getPt.y + ' ' + st.x + ' ' + st.y;\n                    }\n                    if (end) {\n                        if (connector.bridges.length > 0) {\n                            path = this.bridgePath(connector, path, j_1);\n                            if (connector.type === 'Orthogonal') {\n                                path = this.bridgePath(connector, path, j_1 + 1);\n                            }\n                        }\n                        path += ' L' + end.x + ' ' + end.y;\n                    }\n                }\n            }\n        }\n        else {\n            if (this.type === 'Bezier') {\n                var direction = void 0;\n                var segments = this.segments;\n                for (var j_2 = 0; j_2 < segments.length; j_2++) {\n                    if (pts.length > 2) {\n                        segments[j_2].bezierPoint1 = { x: 0, y: 0 };\n                        segments[j_2].bezierPoint2 = { x: 0, y: 0 };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point1) && !segments[j_2].vector1.angle && !segments[j_2].vector1.distance) {\n                        if ((connector.sourceID || this.sourcePortID) && this.sourceWrapper) {\n                            direction = getDirection(this.sourceWrapper.bounds, pts[j_2], true);\n                        }\n                        segments[j_2].bezierPoint1 = getBezierPoints(pts[j_2], pts[j_2 + 1], direction);\n                    }\n                    else if (segments[j_2].vector1.angle || segments[j_2].vector1.distance) {\n                        segments[j_2].bezierPoint1 = Point.transform(pts[j_2], segments[j_2].vector1.angle, segments[j_2].vector1.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint1 = {\n                            x: segments[j_2].point1.x || segments[j_2].bezierPoint1.x,\n                            y: segments[j_2].point1.y || segments[j_2].bezierPoint1.y\n                        };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point2) && !segments[j_2].vector2.angle && !segments[j_2].vector2.distance) {\n                        if ((connector.targetID || this.targetPortID) && this.targetWrapper) {\n                            direction = getDirection(this.targetWrapper.bounds, pts[j_2 + 1], true);\n                        }\n                        segments[j_2].bezierPoint2 = getBezierPoints(pts[j_2 + 1], pts[j_2], direction);\n                    }\n                    else if (segments[j_2].vector2.angle || segments[j_2].vector2.distance) {\n                        segments[j_2].bezierPoint2 = Point.transform(pts[j_2 + 1], segments[j_2].vector2.angle, segments[j_2].vector2.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint2 = {\n                            x: segments[j_2].point2.x || segments[j_2].bezierPoint2.x,\n                            y: segments[j_2].point2.y || segments[j_2].bezierPoint2.y\n                        };\n                    }\n                }\n                pts.splice(1, 0, { x: segments[0].bezierPoint1.x, y: segments[0].bezierPoint1.y });\n                pts.splice(pts.length - 1, 0, {\n                    x: segments[segments.length - 1].bezierPoint2.x, y: segments[segments.length - 1].bezierPoint2.y\n                });\n                pts = this.clipDecorators(connector, pts);\n                for (var j_3 = 0; j_3 < segments.length; j_3++) {\n                    if (j_3 === 0) {\n                        path = 'M' + pts[0].x + ' ' + pts[0].y;\n                    }\n                    var lastPoint = (j_3 === segments.length - 1) ? pts[pts.length - 1].x + ' ' + pts[pts.length - 1].y :\n                        segments[j_3].points[segments[j_3].points.length - 1].x + ' ' + segments[j_3].points[segments[j_3].points.length - 1].y;\n                    path += 'C' +\n                        segments[j_3].bezierPoint1.x + ' ' + segments[j_3].bezierPoint1.y + ' ' + segments[j_3].bezierPoint2.x + ' '\n                        + segments[j_3].bezierPoint2.y + ' ' + lastPoint;\n                }\n            }\n            else {\n                for (var k = 0; k < pts.length; k++) {\n                    getPt = pts[k];\n                    if (k === 0) {\n                        path = 'M' + getPt.x + ' ' + getPt.y;\n                    }\n                    if (k > 0) {\n                        path = this.bridgePath(connector, path, k);\n                        path += ' ' + 'L' + getPt.x + ' ' + getPt.y;\n                    }\n                }\n            }\n        }\n        return path;\n    };\n    /** @private */\n    Connector.prototype.updateShapeElement = function (connector) {\n        var element;\n        switch (connector.shape.type) {\n            case 'Bpmn':\n                if (connector.wrapper.children[3] instanceof PathElement) {\n                    element = connector.wrapper.children[3];\n                }\n                if (connector.shape.flow === 'Message') {\n                    this.updateShapePosition(connector, element);\n                }\n                break;\n            case 'UmlActivity':\n                if (connector.shape.flow === 'Exception') {\n                    this.getUMLExceptionFlow(connector.wrapper.children[0]);\n                }\n                break;\n        }\n    };\n    /** @private */\n    Connector.prototype.updateShapePosition = function (connector, element) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        var length = 0;\n        var anglePoints = this.intermediatePoints;\n        for (var i = 0; i < anglePoints.length - 1; i++) {\n            length = length + this.distance(anglePoints[i], anglePoints[i + 1]);\n            var offsetLength = length * segmentOffset;\n            if (length >= offsetLength) {\n                angle = findAngle(anglePoints[i], anglePoints[i + 1]);\n                pt = Point.transform(anglePoints[i], angle, offsetLength);\n            }\n        }\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n    };\n    /** @hidden */\n    Connector.prototype.scale = function (sw, sh, width, height, refObject) {\n        var tx = 0;\n        var ty = 0;\n        if (this.wrapper && this.wrapper.outerBounds) {\n            var outerBounds = getOuterBounds(this);\n            var connWidth = (this.wrapper.bounds.width || this.style.strokeWidth || 1) - 2;\n            var connHeight = (this.wrapper.bounds.height || this.style.strokeWidth || 1) - 2;\n            tx = (outerBounds.width - connWidth);\n            ty = (outerBounds.height - connHeight);\n            sw = (width - (Math.max(tx, ty))) / connWidth;\n            sh = (height - (Math.max(tx, ty))) / connHeight;\n            tx = ty = Math.min(tx, ty);\n        }\n        sw = sh = Math.min(sw, sh);\n        var matrix = identityMatrix();\n        refObject = refObject || this.wrapper;\n        rotateMatrix(matrix, -refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        scaleMatrix(matrix, sw, sh, refObject.offsetX, refObject.offsetY);\n        rotateMatrix(matrix, refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        var points = transformPointsByMatrix(matrix, this.intermediatePoints);\n        this.sourcePoint = points[0];\n        this.targetPoint = points[points.length - 1];\n        points = this.intermediatePoints = findConnectorPoints(this);\n        updateConnector(this, points);\n        return { x: tx, y: ty };\n    };\n    /**\n     * @private\n     * Returns the name of class Connector\n     */\n    Connector.prototype.getClassName = function () {\n        return 'Connector';\n    };\n    __decorate([\n        ComplexFactory(getConnectorType)\n    ], Connector.prototype, \"shape\", void 0);\n    __decorate([\n        Property(ConnectorConstraints.Default)\n    ], Connector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"bridgeSpace\", void 0);\n    __decorate([\n        Collection([], PathAnnotation)\n    ], Connector.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"sourcePoint\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"targetPoint\", void 0);\n    __decorate([\n        CollectionFactory(getSegmentType)\n    ], Connector.prototype, \"segments\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"hitPadding\", void 0);\n    __decorate([\n        Property('Straight')\n    ], Connector.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ shape: 'None' }, Decorator)\n    ], Connector.prototype, \"sourceDecorator\", void 0);\n    __decorate([\n        Complex({ shape: 'Arrow' }, Decorator)\n    ], Connector.prototype, \"targetDecorator\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Connector.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourcePortID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetPortID\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"sourcePadding\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"targetPadding\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 1, strokeColor: 'black' }, StrokeStyle)\n    ], Connector.prototype, \"style\", void 0);\n    __decorate([\n        Property(null)\n    ], Connector.prototype, \"wrapper\", void 0);\n    return Connector;\n}(NodeBase));\nexport { Connector };\n","import { createHtmlElement, removeElement } from '../utility/dom-util';\nimport { Ruler } from '../../ruler/index';\nimport { Size } from '../primitives/size';\nimport { getFunction } from '../utility/base-util';\n/**\n * defines the helper methods for the ruler\n */\n/**\n * @private\n */\nexport function renderOverlapElement(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var attributes = {\n        'id': diagram.element.id + '_overlapRuler',\n        style: 'height:' + rulerSize.height + 'px;width:' + rulerSize.width + 'px;position:absolute;left:0;top:0',\n        class: 'e-ruler-overlap'\n    };\n    var overlap = createHtmlElement('div', attributes);\n    diagram.element.insertBefore(overlap, diagram.element.firstChild);\n}\n/**\n * @private\n */\nexport function renderRuler(diagram, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var margin = isHorizontal ? ('margin-left:' + rulerSize.width + 'px;') : ('margin-top:' + rulerSize.height + 'px;');\n    if (!div) {\n        var style = 'height:' + (isHorizontal ? rulerSize.height : (rulerGeometry.height + 100)) + 'px;overflow:hidden;width:' +\n            (isHorizontal ? (rulerGeometry.width + 100) : rulerSize.width) + 'px;position:absolute;font-size:11px;' + margin;\n        var attributes = {\n            'id': diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'),\n            style: style\n        };\n        div = createHtmlElement('div', attributes);\n    }\n    diagram.element.insertBefore(div, diagram.element.firstChild);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    var ruler = new Ruler(diagramRuler);\n    ruler.orientation = isHorizontal ? 'Horizontal' : 'Vertical';\n    ruler.length = (isHorizontal ? rulerGeometry.width : rulerGeometry.height) + diagramRuler.segmentWidth;\n    ruler.appendTo('#' + diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler = ruler : diagram.vRuler = ruler;\n    var rulerObj = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler.element = rulerObj : diagram.vRuler.element = rulerObj;\n}\n/**\n * @private\n */\nexport function updateRuler(diagram) {\n    var hOffset = -diagram.scroller.horizontalOffset;\n    var vOffset = -diagram.scroller.verticalOffset;\n    if (diagram && diagram.rulerSettings.showRulers) {\n        diagram.hRuler.length = 0;\n        diagram.vRuler.length = 0;\n        if (hOffset !== undefined && diagram.hRuler.element) {\n            updateRulerDimension(diagram, diagram.hRuler, hOffset, true);\n        }\n        if (vOffset !== undefined && diagram.vRuler.element) {\n            updateRulerDimension(diagram, diagram.vRuler, vOffset, false);\n        }\n    }\n    else {\n        removeRulerElements(diagram);\n    }\n}\n/**\n * @private\n */\nexport function removeRulerElements(diagram) {\n    removeElement(diagram.element.id + '_hRuler');\n    removeElement(diagram.element.id + '_vRuler');\n    removeElement(diagram.element.id + '_overlapRuler');\n}\n/** @private */\nexport function getRulerSize(diagram) {\n    var top = 0;\n    var left = 0;\n    if (diagram.rulerSettings.showRulers) {\n        top = diagram.rulerSettings.horizontalRuler.thickness;\n        left = diagram.rulerSettings.verticalRuler.thickness;\n    }\n    return new Size(left, top);\n}\n/** @private */\nexport function getRulerGeometry(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var height = diagram.scroller.viewPortHeight;\n    var width = diagram.scroller.viewPortWidth;\n    if (width < diagram.element.clientWidth - rulerSize.width) {\n        width = diagram.element.clientWidth - rulerSize.width;\n    }\n    if (height < diagram.element.clientHeight - rulerSize.height) {\n        height = diagram.element.clientHeight - rulerSize.height;\n    }\n    if (diagram.hRuler && diagram.hRuler.length) {\n        width = diagram.hRuler.length;\n    }\n    if (diagram.vRuler && diagram.vRuler.length) {\n        height = diagram.vRuler.length;\n    }\n    return new Size(width, height);\n}\n/**\n * @private\n */\nexport function removeRulerMarkers() {\n    var markers = document.getElementsByClassName('e-d-ruler-marker');\n    var marker;\n    var i;\n    if (markers && markers.length > 0) {\n        for (i = markers.length - 1; i >= 0; i--) {\n            marker = markers[i];\n            if (marker) {\n                marker.parentNode.removeChild(marker);\n            }\n        }\n    }\n}\nexport function drawRulerMarkers(diagram, currentPoint) {\n    if (diagram.rulerSettings.showRulers) {\n        diagram.hRuler.drawRulerMarker(diagram.hRuler.element, currentPoint, diagram.scroller.horizontalOffset);\n        diagram.vRuler.drawRulerMarker(diagram.vRuler.element, currentPoint, diagram.scroller.verticalOffset);\n    }\n}\nfunction updateRulerDimension(diagram, ruler, offset, isHorizontal) {\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    updateRulerDiv(diagram, rulerGeometry, isHorizontal);\n    updateRulerSpace(diagram, rulerGeometry, isHorizontal);\n    ruler.offset = offset;\n    ruler.scale = diagram.scroller.currentZoom;\n    ruler.length = rulerGeometry.width + 100;\n    ruler.arrangeTick = getFunction(diagramRuler.arrangeTick);\n    ruler.dataBind();\n    var rulerObj = isHorizontal ? diagram.hRuler.element : diagram.vRuler.element;\n    if (isHorizontal) {\n        rulerObj.style.marginLeft = (rulerSize.width - ruler.hRulerOffset) + 'px';\n    }\n    else {\n        rulerObj.style.marginTop = (rulerSize.height - ruler.vRulerOffset) + 'px';\n    }\n}\nfunction updateRulerSpace(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler_ruler_space' : '_vRuler_ruler_space'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + (ruler.segmentWidth * 2)) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + (ruler.segmentWidth * 2))) + 'px';\n    }\n}\nfunction updateRulerDiv(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + ruler.segmentWidth) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + ruler.segmentWidth)) + 'px';\n        div = document.getElementById(diagram.element.id + '_overlapRuler');\n        if (div) {\n            isHorizontal ? (div.style.height = ruler.thickness + 'px') : (div.style.width = ruler.thickness + 'px');\n        }\n    }\n}\n","import { Node } from './../objects/node';\nimport { NodeConstraints, ConnectorConstraints, DiagramConstraints, DiagramTools, DiagramAction, RendererAction } from '../enum/enum';\nimport { AnnotationConstraints, PortConstraints } from '../enum/enum';\nimport { Connector } from './../objects/connector';\nimport { Selector } from './../interaction/selector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * constraints-util module contains the common constraints\n */\n/** @private */\nexport function canSelect(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Select;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Select;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Select;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canMove(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Drag;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Drag;\n        }\n        else if (node instanceof Selector) {\n            state = 1;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Drag;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canEnablePointerEvents(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.PointerEvents;\n    }\n    else {\n        state = node.constraints & NodeConstraints.PointerEvents;\n    }\n    return state;\n}\n/** @private */\nexport function canDelete(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.Delete;\n    }\n    else {\n        state = node.constraints & NodeConstraints.Delete;\n    }\n    return state;\n}\n/** @private */\nexport function canBridge(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.Bridging) {\n        state = connector.constraints & ConnectorConstraints.Bridging;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritBridging) {\n        state = diagram.constraints & DiagramConstraints.Bridging;\n    }\n    else {\n        state = 0;\n    }\n    return state;\n}\n/** @private */\nexport function canDragSourceEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragSourceEnd;\n}\n/** @private */\nexport function canDragTargetEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragTargetEnd;\n}\n/** @private */\nexport function canDragSegmentThumb(connector) {\n    return connector.constraints & ConnectorConstraints.DragSegmentThumb;\n}\n/** @private */\nexport function canRotate(node) {\n    if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n        return node.constraints & AnnotationConstraints.Rotate;\n    }\n    else {\n        return node.constraints & NodeConstraints.Rotate;\n    }\n}\n/** @private */\nexport function canShadow(node) {\n    return node.constraints & NodeConstraints.Shadow;\n}\n/** @private */\nexport function canInConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.InConnect)) {\n        return node.constraints & NodeConstraints.InConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortInConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.InConnect)) {\n            return port.constraints & PortConstraints.InConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canOutConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.OutConnect)) {\n        return node.constraints & NodeConstraints.OutConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortOutConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.OutConnect)) {\n            return port.constraints & PortConstraints.OutConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canResize(node, direction) {\n    var returnValue = 0;\n    if (node instanceof ShapeAnnotation || node instanceof PathAnnotation) {\n        returnValue = node.constraints & AnnotationConstraints.Resize;\n    }\n    else if (node) {\n        if (direction === 'SouthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthEast;\n        }\n        else if (direction === 'East') {\n            returnValue = node.constraints & NodeConstraints.ResizeEast;\n        }\n        else if (direction === 'NorthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthEast;\n        }\n        else if (direction === 'South') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouth;\n        }\n        else if (direction === 'North') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorth;\n        }\n        else if (direction === 'SouthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthWest;\n        }\n        else if (direction === 'West') {\n            returnValue = node.constraints & NodeConstraints.ResizeWest;\n        }\n        else if (direction === 'NorthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthWest;\n        }\n    }\n    return returnValue;\n}\n/** @private */\nexport function canAllowDrop(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.AllowDrop;\n    }\n    else {\n        state = node.constraints & NodeConstraints.AllowDrop;\n    }\n    return state;\n}\n/** @private */\nexport function canVitualize(diagram) {\n    return diagram.constraints & DiagramConstraints.Virtualization;\n}\n/** @private */\nexport function canEnableToolTip(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        if (node.constraints & ConnectorConstraints.Tooltip) {\n            state = node.constraints & ConnectorConstraints.Tooltip;\n        }\n        else if (node.constraints & ConnectorConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    else {\n        if (node.constraints & NodeConstraints.Tooltip) {\n            state = node.constraints & NodeConstraints.Tooltip;\n        }\n        else if (node.constraints & NodeConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    return state;\n}\n/** @private */\nexport function canSingleSelect(model) {\n    return model.tool & DiagramTools.SingleSelect;\n}\n/** @private */\nexport function canMultiSelect(model) {\n    return model.tool & DiagramTools.MultipleSelect;\n}\n/** @private */\nexport function canZoomPan(model) {\n    return model.tool & DiagramTools.ZoomPan;\n}\n/** @private */\nexport function canContinuousDraw(model) {\n    return model.tool & DiagramTools.ContinuousDraw;\n}\n/** @private */\nexport function canDrawOnce(model) {\n    return model.tool & DiagramTools.DrawOnce;\n}\n/** @private */\nexport function defaultTool(model) {\n    return (model.tool & DiagramTools.SingleSelect) || (model.tool & DiagramTools.MultipleSelect);\n}\n/** @private */\nexport function canZoom(model) {\n    return model.constraints & DiagramConstraints.Zoom;\n}\n/** @private */\nexport function canPan(model) {\n    return model.constraints & DiagramConstraints.Pan;\n}\n/** @private */\nexport function canUserInteract(model) {\n    return model.constraints & DiagramConstraints.UserInteraction;\n}\n/** @private */\nexport function canApiInteract(model) {\n    return model.constraints & DiagramConstraints.ApiUpdate;\n}\n/** @private */\nexport function canPanX(model) {\n    return ((model.constraints & DiagramConstraints.PanX));\n}\n/** @private */\nexport function canPanY(model) {\n    return ((model.constraints & DiagramConstraints.PanY));\n}\n/** @private */\nexport function canZoomTextEdit(diagram) {\n    return ((diagram.constraints & DiagramConstraints.ZoomTextEdit));\n}\n/** @private */\nexport function canPageEditable(model) {\n    return canApiInteract(model) || (model.diagramActions & DiagramAction.ToolAction);\n}\n/** @private */\nexport function enableReadOnly(annotation, node) {\n    var enumValue = 0;\n    enumValue = (node instanceof Connector) ? ConnectorConstraints.ReadOnly : NodeConstraints.ReadOnly;\n    if (node.shape.type === 'Text') {\n        return node.constraints & NodeConstraints.ReadOnly;\n    }\n    else if (node.constraints & enumValue) {\n        if (annotation.constraints & AnnotationConstraints.InheritReadOnly) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    else if (annotation.constraints & AnnotationConstraints.ReadOnly) {\n        return 1;\n    }\n    return 0;\n}\n/** @private */\nexport function canDraw(port, diagram) {\n    return port.constraints & PortConstraints.Draw;\n}\n/** @private */\nexport function canDrag(port, diagram) {\n    return port.constraints & PortConstraints.Drag;\n}\n/** @private */\nexport function canPreventClearSelection(diagramActions) {\n    if (diagramActions & DiagramAction.PreventClearSelection) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function canDrawThumbs(rendererActions) {\n    if (!(rendererActions & RendererAction.DrawSelectorBorder)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function avoidDrawSelector(rendererActions) {\n    if ((rendererActions & RendererAction.PreventRenderSelector)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n","/**\n * UMLActivityShapeDictionary defines the shape of the built-in uml activity shapes\n */\n/** @private */\nexport function getUMLActivityShape(shape) {\n    return umlActivityShapes[shape.toString()];\n}\nvar umlActivityShapes = {\n    // Action,\n    'Action': 'M 90 82.895 C 90 86.819 86.776 90 82.8 90 H 7.2 C 3.224 90 0 86.819 0 82.895' +\n        ' V 7.105 C 0 3.181 3.224 0 7.2 0 h 75.6 C 86.776 0 90 3.181 90 7.105 V 82.895 Z',\n    // Decision,\n    'Decision': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // MergeNode,\n    'MergeNode': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // InitialNode,\n    'InitialNode': 'M10,19.5c-5.238,0-9.5-4.262-9.5-9.5S4.762,0.5,10,0.5s9.5,4.262,9.5,9.5S15.238,19.5,10,19.5z',\n    // ForkNode,\n    'ForkNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // JoinNode,\n    'JoinNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // TimeEvent,\n    'TimeEvent': 'M50.001,0.00286865 L25.001,25.0029 L0.000976562,0.00286865 L50.001,0.00286865 z' +\n        ' M0.000976562,50.0029 L25.001,25.0029 L50.001,50.0029 L0.000976562,50.0029 z',\n    // AcceptingEvent,\n    'AcceptingEvent': 'M17.8336 32.164 L29.64 24 L17.32 16 L48.1664 16 L48.5 32 Z',\n    // SendSignal,\n    'SendSignal': 'M48.164 31.8336 L56 23.832 L47.836 16 L16.168 16 L16.1668 31.8336 Z',\n    // ReceiveSignal,\n    'ReceiveSignal': 'M48.1664 31.8336 L39.836 24 L47.836 16 L16.168 16 L16.168 31.836 Z',\n    // StructuredNode,\n    'StructuredNode': 'M0,0 L50,0 L50,50 L0,50 z',\n    // Note,\n    'Note': 'M20 12 L4 12 L4 22 L22 22 L22 14 L20 14 L20 12 L22 14 Z',\n};\n","import { Node } from '../objects/node';\nimport { Selector } from './selector';\nimport { Size } from '../primitives/size';\nimport { cloneObject } from './../utility/base-util';\nimport { getObjectType } from './../utility/diagram-util';\nimport { Rect } from '../primitives/rect';\nimport { getAdornerLayerSvg } from '../utility/dom-util';\nimport { swimLaneMeasureAndArrange, checkLaneSize, checkPhaseOffset } from '../utility/swim-lane-util';\nimport { updatePhaseMaxWidth, updateHeaderMaxWidth, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { considerSwimLanePadding } from '../utility/swim-lane-util';\nimport { DiagramAction } from '../enum/enum';\n/**\n * Interaction for Container\n */\n//#region canvas Container interaction\n/** @private */\nexport function updateCanvasBounds(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    var groupAction = false;\n    if (checkParentAsContainer(diagram, obj, true)) {\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((isBoundsUpdate || (wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y)))) {\n                var columnIndex = void 0;\n                var parentWrapper = void 0;\n                var y = wrapper.bounds.y;\n                var x = wrapper.bounds.x;\n                var parent_1 = diagram.nameTable[container.parentId] || container;\n                var shape = parent_1.shape;\n                if (shape.type === 'SwimLane') {\n                    groupAction = updateLaneBoundsAfterAddChild(container, parent_1, obj, diagram, true);\n                }\n                else {\n                    var parent_2 = diagram.nameTable[container.parentId] || container;\n                    var shape_1 = parent_2.shape;\n                    parentWrapper = parent_2.wrapper;\n                    if (wrapper.actualSize.width < wrapper.outerBounds.width &&\n                        (!(wrapper.bounds.x > wrapper.outerBounds.x))) {\n                        if (container.rowIndex !== undefined) {\n                            columnIndex = parent_2.columns.length - 1;\n                            parentWrapper.updateColumnWidth(container.columnIndex, wrapper.outerBounds.width, true);\n                            if (shape_1.orientation === 'Horizontal' && shape_1.phaseSize) {\n                                updatePhaseMaxWidth(parent_2, diagram, wrapper, container.columnIndex);\n                            }\n                            updateHeaderMaxWidth(diagram, parent_2);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, (1 + ((wrapper.outerBounds.width - wrapper.actualSize.width) / wrapper.actualSize.width)), 1, ((wrapper.outerBounds.x < wrapper.bounds.x) ? { x: 1, y: 0.5 } : { x: 0, y: 0.5 }));\n                        }\n                    }\n                    if (wrapper.actualSize.height < wrapper.outerBounds.height &&\n                        (!(wrapper.bounds.y > wrapper.outerBounds.y))) {\n                        if (container.rowIndex !== undefined) {\n                            parentWrapper.updateRowHeight(container.rowIndex, wrapper.outerBounds.height, true);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, 1, (1 + ((wrapper.outerBounds.height - wrapper.actualSize.height) / wrapper.actualSize.height)), ((wrapper.outerBounds.y < wrapper.bounds.y) ? { x: 0.5, y: 1 } : { x: 0.5, y: 0 }));\n                        }\n                    }\n                }\n            }\n            diagram.select([obj]);\n            updateConnectorsProperties(connectorList, diagram);\n        }\n        diagram.protectPropertyChange(false);\n    }\n    return groupAction;\n}\nexport function removeChildInContainer(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    if (checkParentAsContainer(diagram, obj, true)) {\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((!isBoundsUpdate && (!(wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y))))) {\n                var undoObj = cloneObject(obj);\n                diagram.clearSelection();\n                removeChildrenInLane(diagram, obj);\n                obj.parentId = '';\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(obj)\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.commandHandler.isContainer) {\n                    diagram.commandHandler.isContainer = false;\n                    diagram.endGroupAction();\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function findBounds(obj, columnIndex, isHeader) {\n    var rect = new Rect();\n    var rows = (obj.shape.type === 'SwimLane') ?\n        obj.wrapper.children[0].rows : obj.wrapper.rows;\n    for (var i = ((isHeader) ? 1 : 0); i < rows.length; i++) {\n        rect.uniteRect(rows[i].cells[columnIndex].bounds);\n    }\n    return rect;\n}\n/** @private */\nexport function createHelper(diagram, obj) {\n    var newObj;\n    var cloneObject = {};\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var prop = _a[_i];\n        cloneObject[prop] = obj[prop];\n    }\n    if (getObjectType(obj) === Node) {\n        newObj = new Node(diagram, 'nodes', cloneObject, true);\n        newObj.id = obj.id;\n        diagram.initObject(newObj);\n    }\n    diagram.updateDiagramObject(newObj);\n    return newObj;\n}\n/** @private */\nexport function renderContainerHelper(diagram, obj) {\n    var object;\n    var nodes;\n    if (diagram.selectedObject.helperObject) {\n        nodes = diagram.selectedObject.helperObject;\n    }\n    else if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        if (obj instanceof Selector && obj.nodes.length + obj.connectors.length === 1) {\n            object = (obj.nodes.length > 0) ? obj.nodes[0] : obj.connectors[0];\n        }\n        else {\n            object = obj;\n        }\n        diagram.selectedObject.actualObject = object;\n        var container = diagram.selectedItems.wrapper.children[0];\n        if (checkParentAsContainer(diagram, object)) {\n            var node = {\n                id: 'helper',\n                rotateAngle: container.rotateAngle,\n                offsetX: container.offsetX, offsetY: container.offsetY,\n                minWidth: container.minWidth, minHeight: container.minHeight,\n                maxWidth: container.maxWidth, maxHeight: container.maxHeight,\n                width: container.actualSize.width,\n                height: container.actualSize.height,\n                style: { strokeDashArray: '2 2', fill: 'transparent', strokeColor: '#7D7D7D', strokeWidth: 2 }\n            };\n            nodes = createHelper(diagram, node);\n            diagram.selectedObject.helperObject = nodes;\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function checkParentAsContainer(diagram, obj, isChild) {\n    var parentNode = (isChild) ? diagram.nameTable[obj.parentId] :\n        (diagram.nameTable[obj.parentId] || obj);\n    if (parentNode && parentNode.container) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkChildNodeInContainer(diagram, obj) {\n    var parentNode = diagram.nameTable[obj.parentId];\n    if (parentNode.container.type === 'Canvas') {\n        obj.margin.left = (obj.offsetX - parentNode.wrapper.bounds.x - (obj.width / 2));\n        obj.margin.top = (obj.offsetY - parentNode.wrapper.bounds.y - (obj.height / 2));\n    }\n    diagram.nodePropertyChange(obj, {}, {\n        width: obj.width, height: obj.height,\n        offsetX: obj.offsetX, offsetY: obj.offsetY,\n        margin: {\n            left: obj.margin.left,\n            right: obj.margin.right, top: obj.margin.top,\n            bottom: obj.margin.bottom\n        }, rotateAngle: obj.rotateAngle\n    });\n    if (!parentNode.isLane) {\n        parentNode.wrapper.measure(new Size());\n        parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n    }\n}\nfunction removeChildrenInLane(diagram, node) {\n    if (node.parentId !== '') {\n        var prevParentNode = diagram.nameTable[node.parentId];\n        if (prevParentNode.isLane && prevParentNode.parentId) {\n            var swimlane = diagram.nameTable[prevParentNode.parentId];\n            var canvasId = (prevParentNode.id.slice(swimlane.id.length));\n            var prevParentId = canvasId.substring(0, canvasId.length - 1);\n            var lanes = swimlane.shape.lanes;\n            var lane = void 0;\n            for (var i = 0; i < lanes.length; i++) {\n                lane = lanes[i];\n                if (prevParentId === lane.id) {\n                    for (var j = 0; j < lane.children.length; j++) {\n                        if (lane.children[j].id === node.id) {\n                            lane.children.splice(j, 1);\n                            j--;\n                        }\n                    }\n                }\n            }\n        }\n        diagram.deleteChild(node);\n    }\n}\n/**\n * @private\n */\nexport function addChildToContainer(diagram, parent, node, isUndo) {\n    if (!diagram.currentSymbol) {\n        diagram.protectPropertyChange(true);\n        var swimlane = void 0;\n        node = diagram.getObject(node.id) || node;\n        var child = (diagram.nodes.indexOf(node) !== -1) ? node.id : node;\n        if (parent.container.type === 'Canvas') {\n            var left = (node.wrapper.offsetX - node.wrapper.actualSize.width / 2) -\n                (parent.wrapper.offsetX - parent.wrapper.actualSize.width / 2);\n            var top_1 = (node.wrapper.offsetY - node.wrapper.actualSize.height / 2) -\n                (parent.wrapper.offsetY - parent.wrapper.actualSize.height / 2);\n            node.margin.left = left;\n            node.margin.top = top_1;\n        }\n        var container = diagram.nameTable[parent.id];\n        if (!container.children) {\n            container.children = [];\n        }\n        if (container.children.indexOf(node.id) === -1) {\n            removeChildrenInLane(diagram, node);\n            if (diagram.getObject(node.id)) {\n                diagram.removeElements(node);\n            }\n            var undoObj = cloneObject(node);\n            diagram.addChild(container, child);\n            node = diagram.getObject(node.id);\n            if (container.isLane && container.parentId) {\n                swimlane = diagram.nameTable[container.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (container.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (container.isLane && currentParentId === lanes[i].id) {\n                        lanes[i].children.push(node);\n                    }\n                }\n            }\n            diagram.updateDiagramObject(node);\n            if (!container.parentId) {\n                diagram.updateDiagramObject(container);\n            }\n            else if (!isUndo) {\n                updateLaneBoundsAfterAddChild(container, swimlane, node, diagram);\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(node)\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        diagram.protectPropertyChange(false);\n    }\n}\nexport function updateLaneBoundsAfterAddChild(container, swimLane, node, diagram, isBoundsUpdate) {\n    var undoObject = cloneObject(container);\n    var isUpdateRow;\n    var isGroupAction = false;\n    var padding = swimLane.shape.padding;\n    var containerBounds = container.wrapper.bounds;\n    var containerOuterBounds = container.wrapper.outerBounds;\n    var nodeBounds = node.wrapper.bounds;\n    if (swimLane && swimLane.shape.type === 'SwimLane' &&\n        (containerBounds.right < nodeBounds.right + padding ||\n            containerBounds.bottom < nodeBounds.bottom + padding)) {\n        var grid = swimLane.wrapper.children[0];\n        var x = grid.bounds.x;\n        var y = grid.bounds.y;\n        var size = void 0;\n        if (containerBounds.right < nodeBounds.right + padding &&\n            containerOuterBounds.x <= containerBounds.x) {\n            size = nodeBounds.right - containerBounds.right;\n            isUpdateRow = false;\n            grid.updateColumnWidth(container.columnIndex, containerBounds.width + size, true, padding);\n        }\n        if (containerBounds.bottom < nodeBounds.bottom + padding &&\n            containerOuterBounds.y <= containerBounds.y) {\n            size = nodeBounds.bottom - containerBounds.bottom;\n            isUpdateRow = true;\n            grid.updateRowHeight(container.rowIndex, containerBounds.height + size, true, padding);\n        }\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            if (isBoundsUpdate) {\n                diagram.startGroupAction();\n                isGroupAction = true;\n            }\n            if (isUpdateRow !== undefined) {\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObject, redoObject: cloneObject(container)\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        swimLane.width = swimLane.wrapper.width = grid.width;\n        swimLane.height = swimLane.wrapper.height = grid.height;\n        swimLaneMeasureAndArrange(swimLane);\n        if (swimLane.shape.orientation === 'Horizontal') {\n            updatePhaseMaxWidth(swimLane, diagram, container.wrapper, container.columnIndex);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        diagram.drag(swimLane, x - grid.bounds.x, y - grid.bounds.y);\n        checkPhaseOffset(swimLane, diagram);\n        checkLaneSize(swimLane);\n    }\n    considerSwimLanePadding(diagram, node, padding);\n    return isGroupAction;\n}\n//#endregion\n//# reginon stack panel interaction\n/** @private */\nexport function renderStackHighlighter(element, isVertical, position, diagram, isUml, isSwimlane) {\n    var adornerSvg = getAdornerLayerSvg(diagram.element.id);\n    diagram.diagramRenderer.renderStackHighlighter(element, adornerSvg, diagram.scroller.transform, isVertical, position, isUml, isSwimlane);\n}\n/** @private */\nexport function moveChildInStack(sourceNode, target, diagram, action) {\n    var obj = sourceNode;\n    var parent = diagram.nameTable[obj.parentId];\n    var sourceParent = diagram.nameTable[obj.parentId];\n    if (target && sourceParent && sourceParent.container && sourceParent.container.type === 'Stack' &&\n        target.container && target.container.type === 'Stack' && (sourceParent.id !== target.parentId)) {\n        var value = sourceParent.wrapper.children.indexOf(obj.wrapper);\n        if (value > -1) {\n            diagram.nameTable[obj.id].parentId = target.id;\n            sourceParent.wrapper.children.splice(value, 1);\n        }\n    }\n    if (target && target.parentId && obj.parentId && action === 'Drag' && sourceParent.container.type === 'Stack') {\n        var targetIndex = parent.wrapper.children.indexOf(target.wrapper);\n        var sourceIndex = parent.wrapper.children.indexOf(obj.wrapper);\n        var undoElement = {\n            targetIndex: targetIndex, target: target,\n            sourceIndex: sourceIndex, source: sourceNode\n        };\n        parent.wrapper.children.splice(sourceIndex, 1);\n        parent.wrapper.children.splice(targetIndex, 0, obj.wrapper);\n        var redoElement = {\n            targetIndex: sourceIndex, target: target,\n            sourceIndex: targetIndex, source: sourceNode\n        };\n        var entry = {\n            type: 'StackChildPositionChanged', redoObject: redoElement,\n            undoObject: undoElement, category: 'Internal'\n        };\n        diagram.commandHandler.addHistoryEntry(entry);\n    }\n}\n//#end region\n//# region Swimlane rendering\n//#end region\n","import { Node } from '../objects/node';\nimport { GridPanel, RowDefinition, ColumnDefinition } from '../core/containers/grid';\nimport { Lane, Phase } from '../objects/node';\nimport { DiagramAction, NodeConstraints } from '../enum/enum';\nimport { cloneObject, randomId } from './../utility/base-util';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { Canvas } from '../core/containers/canvas';\nimport { Rect } from '../primitives/rect';\nimport { checkParentAsContainer, findBounds } from '../interaction/container-interaction';\n/**\n * SwimLane modules are used to rendering and interaction.\n */\n/** @private */\nexport function initSwimLane(grid, diagram, node) {\n    var row = [];\n    var columns = [];\n    var index = 0;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    if (shape.header && shape.hasHeader) {\n        createRow(row, shape.header.height);\n    }\n    initGridRow(row, orientation, node);\n    initGridColumns(columns, orientation, node);\n    grid.setDefinitions(row, columns);\n    if (shape.header && shape.hasHeader) {\n        headerDefine(grid, diagram, node);\n        index++;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        for (var k = 0; k < shape.phases.length; k++) {\n            if (shape.phases[k].id === '') {\n                shape.phases[k].id = randomId();\n            }\n            phaseDefine(grid, diagram, node, index, orientation, k);\n        }\n        index++;\n    }\n    if (shape.lanes.length > 0) {\n        for (var k = 0; k < shape.lanes.length; k++) {\n            if (shape.lanes[k].id === '') {\n                shape.lanes[k].id = randomId();\n            }\n            laneCollection(grid, diagram, node, index, k, orientation);\n            index++;\n        }\n    }\n}\n/** @private */\nexport function addObjectToGrid(diagram, grid, parent, object, isHeader, isPhase, isLane, canvas) {\n    var node = new Node(diagram, 'nodes', object, true);\n    node.parentId = parent.id;\n    node.isHeader = (isHeader) ? true : false;\n    node.isPhase = (isPhase) ? true : false;\n    node.isLane = (isLane) ? true : false;\n    var id = (isPhase) ? 'PhaseHeaderParent' : 'LaneHeaderParent';\n    if (canvas) {\n        node[id] = canvas;\n    }\n    node.constraints &= ~(NodeConstraints.InConnect | NodeConstraints.OutConnect);\n    node.constraints |= NodeConstraints.HideThumbs;\n    diagram.initObject(node);\n    diagram.nodes.push(node);\n    if (node.wrapper.children.length > 0) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child instanceof DiagramElement) {\n                child.isCalculateDesiredSize = false;\n            }\n            if (child instanceof TextElement) {\n                child.canConsiderBounds = false;\n                if (!isHeader && (parent.shape.orientation === 'Vertical' && isPhase) ||\n                    (parent.shape.orientation !== 'Vertical' && isLane)) {\n                    child.isLaneOrientation = true;\n                    child.refreshTextElement();\n                }\n            }\n        }\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n    }\n    return node.wrapper;\n}\n/** @private */\nexport function headerDefine(grid, diagram, object) {\n    var maxWidth = 0;\n    var columns = grid.columnDefinitions();\n    var shape = object.shape;\n    for (var i = 0; i < columns.length; i++) {\n        maxWidth += columns[i].width;\n    }\n    var node = {\n        annotations: [{\n                content: shape.header.annotation.content\n            }],\n        style: shape.header.style ? shape.header.style : undefined,\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        rowIndex: 0, columnIndex: 0,\n        maxWidth: maxWidth,\n        container: { type: 'Canvas', orientation: 'Horizontal' }\n    };\n    var wrapper = addObjectToGrid(diagram, grid, object, node, true);\n    grid.addObject(wrapper, 0, 0, 1, grid.columnDefinitions().length);\n}\n/** @private */\nexport function phaseDefine(grid, diagram, object, indexValue, orientation, phaseIndex) {\n    var rowValue = 0;\n    var colValue = 0;\n    var maxWidth;\n    var shape = object.shape;\n    if (orientation) {\n        colValue = phaseIndex;\n        rowValue = indexValue;\n        maxWidth = grid.columnDefinitions()[phaseIndex].width;\n    }\n    else {\n        rowValue = shape.header && shape.hasHeader ? phaseIndex + 1 : phaseIndex;\n    }\n    var phaseObject = {\n        annotations: [{\n                content: shape.phases[phaseIndex].header.annotation.content,\n                rotateAngle: orientation ? 0 : 270\n            }], maxWidth: maxWidth,\n        id: object.id + shape.phases[phaseIndex].id + '_header',\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        style: shape.phases[phaseIndex].style,\n        rowIndex: rowValue, columnIndex: colValue,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    shape.phases[phaseIndex].header.id = phaseObject.id;\n    var wrapper = addObjectToGrid(diagram, grid, object, phaseObject, false, true, false, shape.phases[phaseIndex].id);\n    grid.addObject(wrapper, rowValue, colValue);\n}\n/** @private */\nexport function laneCollection(grid, diagram, object, indexValue, laneIndex, orientation) {\n    var laneNode;\n    var parentWrapper;\n    var gridCell;\n    var canvas;\n    var childWrapper;\n    var shape = object.shape;\n    var value = shape.phases.length || 1;\n    var isHeader = (shape.header && shape.hasHeader) ? 1 : 0;\n    var colValue = 0;\n    var rowValue = orientation ? indexValue : isHeader;\n    var phaseCount = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n    for (var l = 0; l < value; l++) {\n        colValue = orientation ? l : laneIndex + phaseCount;\n        gridCell = grid.rows[rowValue].cells[colValue];\n        canvas = {\n            id: object.id + shape.lanes[laneIndex].id + l,\n            rowIndex: rowValue, columnIndex: colValue,\n            width: gridCell.minWidth, height: gridCell.minHeight,\n            offsetX: object.offsetX, offsetY: object.offsetY,\n            style: shape.lanes[laneIndex].style,\n            constraints: NodeConstraints.Default | NodeConstraints.ReadOnly | NodeConstraints.AllowDrop,\n            container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n        };\n        parentWrapper = addObjectToGrid(diagram, grid, object, canvas, false, false, true);\n        parentWrapper.children[0].isCalculateDesiredSize = false;\n        if (l === 0) {\n            laneNode = {\n                id: object.id + shape.lanes[laneIndex].id + '_' + l + '_header',\n                style: shape.lanes[laneIndex].header.style,\n                annotations: [{\n                        content: shape.lanes[laneIndex].header.annotation.content,\n                        rotateAngle: orientation ? 270 : 0\n                    }],\n                offsetX: object.offsetX, offsetY: object.offsetY,\n                rowIndex: rowValue, columnIndex: colValue,\n                container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n            };\n            shape.lanes[laneIndex].header.id = laneNode.id;\n            (orientation) ? laneNode.width = shape.lanes[laneIndex].header.width :\n                laneNode.height = shape.lanes[laneIndex].header.height;\n            childWrapper = addObjectToGrid(diagram, grid, object, laneNode, false, false, true, shape.lanes[laneIndex].id);\n            parentWrapper.children.push(childWrapper);\n        }\n        grid.addObject(parentWrapper, rowValue, colValue);\n        if (!orientation) {\n            rowValue++;\n        }\n        colValue = orientation ? l : laneIndex + 1;\n    }\n}\n/** @private */\nexport function createRow(row, height) {\n    var rows = new RowDefinition();\n    rows.height = height;\n    row.push(rows);\n}\n/** @private */\nexport function createColumn(width) {\n    var cols = new ColumnDefinition();\n    cols.width = width;\n    return cols;\n}\n/** @private */\nexport function initGridRow(row, orientation, object) {\n    var totalHeight = 0;\n    var height;\n    var shape = object.shape;\n    if (row.length > 0) {\n        for (var i = 0; i < row.length; i++) {\n            totalHeight += row[i].height;\n        }\n    }\n    if (orientation) {\n        if (shape.phases.length > 0 && shape.phaseSize) {\n            totalHeight += shape.phaseSize;\n            createRow(row, shape.phaseSize);\n        }\n        if (shape.lanes.length > 0) {\n            for (var i = 0; i < shape.lanes.length; i++) {\n                height = shape.lanes[i].height;\n                totalHeight += height;\n                if (i === shape.lanes.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n    }\n    else {\n        if (shape.phases.length > 0) {\n            var phaseHeight = 0;\n            for (var i = 0; i < shape.phases.length; i++) {\n                var phaseOffset = shape.phases[i].offset;\n                if (i === 0) {\n                    phaseHeight += phaseOffset;\n                }\n                else {\n                    phaseOffset -= phaseHeight;\n                    phaseHeight += phaseOffset;\n                }\n                height = phaseOffset;\n                totalHeight += height;\n                if (i === shape.phases.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n        else {\n            createRow(row, object.height);\n        }\n    }\n}\n/** @private */\nexport function initGridColumns(columns, orientation, object) {\n    var totalWidth = 0;\n    var shape = object.shape;\n    var phaseOffset;\n    var cols;\n    var k;\n    var j;\n    var value;\n    if (shape.phases.length > 0 && shape.orientation === 'Horizontal') {\n        for (j = 0; j < shape.phases.length; j++) {\n            phaseOffset = shape.phases[j].offset;\n            if (j === 0) {\n                totalWidth += phaseOffset;\n            }\n            else {\n                phaseOffset -= totalWidth;\n                totalWidth += phaseOffset;\n            }\n            cols = createColumn(phaseOffset);\n            if (j === shape.phases.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n    }\n    else if (!orientation) {\n        value = (shape.phaseSize && shape.phases.length > 0) ? shape.lanes.length\n            + 1 : shape.lanes.length;\n        if (shape.phaseSize && shape.phases.length > 0) {\n            totalWidth += shape.phaseSize;\n            cols = createColumn(shape.phaseSize);\n            columns.push(cols);\n        }\n        for (k = 0; k < shape.lanes.length; k++) {\n            totalWidth += shape.lanes[k].width;\n            cols = createColumn(shape.lanes[k].width);\n            if (k === shape.lanes.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n    }\n    else {\n        cols = createColumn(object.width);\n        columns.push(cols);\n    }\n}\n/** @private */\nexport function getConnectors(diagram, grid, rowIndex, isRowUpdate) {\n    var connectors = [];\n    var conn = 0;\n    var childNode;\n    var node;\n    var k;\n    var i;\n    var j;\n    var canvas;\n    var row;\n    var length = grid.rowDefinitions().length;\n    var edges;\n    for (var i_1 = 0; i_1 < length; i_1++) {\n        row = grid.rows[i_1];\n        for (j = 0; j < row.cells.length; j++) {\n            canvas = row.cells[j].children[0];\n            if (canvas && canvas.children && canvas.children.length) {\n                for (k = 1; k < canvas.children.length; k++) {\n                    childNode = canvas.children[k];\n                    node = diagram.getObject(childNode.id);\n                    if (node && (node.inEdges.length > 0 || node.outEdges.length > 0)) {\n                        edges = node.inEdges.concat(node.outEdges);\n                        for (conn = 0; conn < edges.length; conn++) {\n                            if (connectors.indexOf(edges[conn]) === -1) {\n                                connectors.push(edges[conn]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return connectors;\n}\n/** @private */\nexport function swimLaneMeasureAndArrange(obj) {\n    var canvas = obj.wrapper;\n    canvas.measure(new Size(obj.width, obj.height));\n    if (canvas.children[0] instanceof GridPanel) {\n        var grid = canvas.children[0];\n        var isMeasure = false;\n        if (grid.width && grid.width < grid.desiredSize.width) {\n            isMeasure = true;\n            grid.width = grid.desiredSize.width;\n        }\n        if (grid.height && grid.height < grid.desiredSize.height) {\n            isMeasure = true;\n            grid.height = grid.desiredSize.height;\n        }\n        if (isMeasure) {\n            grid.measure(new Size(grid.width, grid.height));\n        }\n    }\n    canvas.arrange(canvas.desiredSize);\n}\n/** @private */\nexport function ChangeLaneIndex(diagram, obj, startRowIndex) {\n    var container = obj.wrapper.children[0];\n    var i;\n    var j;\n    var k;\n    var object;\n    var subChild;\n    var row;\n    var cell;\n    var child;\n    for (i = startRowIndex; i < container.rows.length; i++) {\n        row = container.rows[i];\n        for (j = 0; j < row.cells.length; j++) {\n            cell = row.cells[j];\n            if (cell.children && cell.children.length > 0) {\n                for (k = 0; k < cell.children.length; k++) {\n                    child = cell.children[k];\n                    object = diagram.nameTable[child.id];\n                    if (object.isLane && child.children.length > 1) {\n                        subChild = diagram.nameTable[child.children[1].id];\n                        if (subChild && subChild.isLane) {\n                            subChild.rowIndex = i;\n                            subChild.columnIndex = j;\n                        }\n                    }\n                    object.rowIndex = i;\n                    object.columnIndex = j;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChildNodesInSwimLane(diagram, obj) {\n    var grid = obj.wrapper.children[0];\n    var shape = obj.shape;\n    var padding = shape.padding;\n    var lanes = shape.lanes;\n    var top = grid.bounds.y;\n    var rowvalue;\n    var columnValue;\n    var phaseCount = (shape.phaseSize > 0) ? shape.phases.length : 0;\n    var node;\n    var canvas;\n    var cell;\n    var i;\n    var j;\n    var k;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var col = orientation ? shape.phases.length || 1 : lanes.length + 1;\n    var row = orientation ? ((shape.header && shape.hasHeader) ? 1 : 0) +\n        (shape.phases.length > 0 ? 1 : 0) + (shape.lanes.length)\n        : (shape.header && shape.hasHeader ? 1 : 0) + shape.phases.length;\n    if (phaseCount === 0 && !orientation && shape.lanes.length) {\n        row += 1;\n    }\n    if (orientation) {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0) + (phaseCount > 0 ? 1 : 0);\n        columnValue = 0;\n    }\n    else {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0);\n        columnValue = phaseCount > 0 ? 1 : 0;\n    }\n    if (lanes.length > 0) {\n        top += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n        for (i = 0; i < lanes.length; i++) {\n            for (j = 0; j < lanes[i].children.length; j++) {\n                node = lanes[i].children[j];\n                node.offsetX = lanes[i].width;\n                node.offsetY = lanes[i].height;\n                diagram.initObject(node);\n                diagram.nodes.push(node);\n                canvas = node.wrapper;\n                if (orientation) {\n                    for (k = columnValue; k < col; k++) {\n                        cell = grid.rows[rowvalue].cells[k];\n                        if (canvas.margin.left < (cell.bounds.right - grid.bounds.x)) {\n                            node.parentId = cell.children[0].id;\n                            if (k > columnValue) {\n                                canvas.margin.left = canvas.margin.left - (cell.bounds.left - grid.bounds.left);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.width + padding) >= canvas.margin.left) {\n                                    canvas.margin.left = cell.children[0].children[1].actualSize.width + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n                else {\n                    for (var k_1 = rowvalue; k_1 < row; k_1++) {\n                        cell = grid.rows[k_1].cells[columnValue];\n                        if (canvas.margin.top < (cell.bounds.bottom - top)) {\n                            node.parentId = cell.children[0].id;\n                            if (k_1 > rowvalue) {\n                                canvas.margin.top = canvas.margin.top - (cell.bounds.top - top);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.height + padding) >= canvas.margin.top) {\n                                    canvas.margin.top = cell.children[0].children[1].actualSize.height + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n            }\n            orientation ? rowvalue++ : columnValue++;\n        }\n    }\n    grid.measure(new Size(obj.width, obj.height));\n    grid.arrange(grid.desiredSize);\n    updateChildOuterBounds(grid, obj);\n    obj.width = obj.wrapper.width = grid.width;\n    obj.height = obj.wrapper.height = grid.height;\n    updateHeaderMaxWidth(diagram, obj);\n    obj.wrapper.measure(new Size(obj.width, obj.height));\n    obj.wrapper.arrange(grid.desiredSize);\n    checkLaneChildrenOffset(obj);\n    checkPhaseOffset(obj, diagram);\n    checkLaneSize(obj);\n}\nfunction addChildToLane(canvas, node, diagram) {\n    canvas.measure(new Size(node.width, node.height));\n    canvas.arrange(canvas.desiredSize);\n    var parent = diagram.getObject(node.parentId);\n    diagram.addChild(parent, node.id);\n}\n/** @private */\nexport function updateChildOuterBounds(grid, obj) {\n    var columnDefinitions = grid.columnDefinitions();\n    var rowDefinitions = grid.rowDefinitions();\n    var i;\n    var k;\n    var j;\n    var cell;\n    var child;\n    var row;\n    var rowIndex = findStartLaneIndex(obj);\n    if (obj.shape.orientation === 'Vertical') {\n        if (rowIndex === 0) {\n            rowIndex = (obj.shape.header && obj.shape.hasHeader) ? 1 : 0;\n        }\n    }\n    var padding = obj.shape.padding;\n    for (i = 0; i < columnDefinitions.length; i++) {\n        grid.updateColumnWidth(i, columnDefinitions[i].width, true, padding);\n    }\n    for (i = rowIndex; i < rowDefinitions.length; i++) {\n        grid.updateRowHeight(i, rowDefinitions[i].height, true, padding);\n    }\n    for (k = 0; k < rowDefinitions.length; k++) {\n        row = grid.rows[k];\n        for (i = 0; i < columnDefinitions.length; i++) {\n            cell = row.cells[i];\n            if (cell.children && cell.children.length > 0) {\n                for (j = 0; j < cell.children.length; j++) {\n                    child = cell.children[j];\n                    if (child.maxWidth) {\n                        child.maxWidth = cell.actualSize.width;\n                    }\n                    if (child.maxHeight) {\n                        child.maxHeight = cell.actualSize.height;\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkLaneSize(obj) {\n    if (obj.shape.type === 'SwimLane' && !obj.shape.isLane && !obj.shape.isPhase) {\n        var lane = void 0;\n        var i = void 0;\n        var columns = void 0;\n        var size = void 0;\n        var laneCount = 0;\n        var lanes = obj.shape.lanes;\n        var laneIndex = findStartLaneIndex(obj);\n        var rows = obj.wrapper.children[0].rowDefinitions();\n        for (i = 0; i < lanes.length; i++, laneIndex++) {\n            lane = lanes[i];\n            if (obj.shape.orientation === 'Horizontal') {\n                size = rows[laneIndex].height;\n                if (lane.height !== size) {\n                    lane.height = size;\n                }\n            }\n            else {\n                columns = obj.wrapper.children[0].columnDefinitions();\n                size = columns[laneIndex].width;\n                if (lane.width !== size) {\n                    lane.width = size;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkPhaseOffset(obj, diagram) {\n    var shape = obj.shape;\n    var phases = shape.phases;\n    var i;\n    var offset;\n    var phaseRow;\n    var phase;\n    var gridRowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n    var grid = obj.wrapper.children[0];\n    var top = grid.bounds.y + ((shape.header && shape.hasHeader) ? shape.header.height : 0);\n    if (obj.shape.type === 'SwimLane') {\n        obj = diagram.getObject(obj.id) || obj;\n        if (phases.length > 0) {\n            grid = obj.wrapper.children[0];\n            if (shape.orientation === 'Horizontal') {\n                phaseRow = (shape.header && shape.hasHeader) ? grid.rows[1] : grid.rows[0];\n                for (i = 0; i < phases.length; i++) {\n                    phase = phaseRow.cells[i].children[0];\n                    offset = phase.bounds.right - grid.bounds.x;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n            else {\n                for (i = 0; i < phases.length; i++) {\n                    phase = grid.rows[gridRowIndex + i].cells[0].children[0];\n                    offset = phase.bounds.bottom - top;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function updateConnectorsProperties(connectors, diagram) {\n    if (connectors && connectors.length > 0) {\n        var edges = void 0;\n        for (var i = 0; i < connectors.length; i++) {\n            edges = diagram.getObject(connectors[i]);\n            diagram.connectorPropertyChange(edges, {}, {\n                sourceID: edges.sourceID, targetID: edges.targetID\n            });\n        }\n    }\n}\n/** @private */\nexport function laneInterChanged(diagram, obj, target, position) {\n    var index;\n    var undoElement;\n    var entry;\n    var redoElement;\n    var sourceIndex;\n    var targetIndex;\n    var temp;\n    var sourceLaneIndex;\n    var targetLaneIndex;\n    var rowIndex;\n    var swimLane = (diagram.getObject(obj.parentId));\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var lanes = shape.lanes;\n    var connectors = getConnectors(diagram, grid, obj.rowIndex, true);\n    if ((shape.orientation === 'Horizontal' && obj.rowIndex !== target.rowIndex) ||\n        (shape.orientation === 'Vertical' && obj.columnIndex !== target.columnIndex)) {\n        if (shape.orientation === 'Horizontal') {\n            sourceIndex = obj.rowIndex;\n            targetIndex = target.rowIndex;\n            index = ((shape.header && shape.hasHeader) ? 1 : 0) + (shape.phases.length && shape.phaseSize ? 1 : 0);\n            sourceLaneIndex = obj.rowIndex - index;\n            targetLaneIndex = target.rowIndex - index;\n            if (sourceLaneIndex < targetLaneIndex) {\n                if (position && target.wrapper.offsetY > position.y) {\n                    targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                }\n            }\n            else {\n                if (position && target.wrapper.offsetY < position.y) {\n                    targetIndex += 1;\n                    targetLaneIndex += 1;\n                }\n            }\n            if (sourceIndex !== targetIndex) {\n                grid.updateRowIndex(sourceIndex, targetIndex);\n            }\n        }\n        else {\n            sourceIndex = obj.columnIndex;\n            targetIndex = target.columnIndex;\n            index = (shape.phases.length && shape.phaseSize) ? 1 : 0;\n            sourceLaneIndex = obj.columnIndex - index;\n            targetLaneIndex = target.columnIndex - index;\n            rowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n            if (sourceLaneIndex < targetLaneIndex) {\n                if (position && target.wrapper.offsetX > position.x) {\n                    targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                }\n            }\n            else {\n                if (position && target.wrapper.offsetX < position.x) {\n                    targetIndex += 1;\n                    targetLaneIndex += 1;\n                }\n            }\n            if (sourceIndex !== targetIndex) {\n                if (shape.phaseSize === 0 && targetIndex === 0) {\n                    if (shape.header && shape.hasHeader) {\n                        grid.rows[0].cells[sourceIndex].children = grid.rows[0].cells[0].children;\n                        grid.rows[0].cells[sourceIndex].columnSpan = grid.rows[0].cells[0].columnSpan;\n                        grid.rows[0].cells[0].children = [];\n                    }\n                }\n                grid.updateColumnIndex(0, sourceIndex, targetIndex);\n            }\n        }\n        if (sourceIndex !== targetIndex) {\n            undoElement = {\n                target: cloneObject(target), source: cloneObject(obj)\n            };\n            temp = lanes[sourceLaneIndex];\n            lanes.splice(sourceLaneIndex, 1);\n            lanes.splice(targetLaneIndex, 0, temp);\n            redoElement = {\n                target: cloneObject(undoElement.source), source: cloneObject(undoElement.target)\n            };\n            entry = {\n                type: 'LanePositionChanged', redoObject: redoElement,\n                undoObject: undoElement, category: 'Internal'\n            };\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                diagram.commandHandler.addHistoryEntry(entry);\n            }\n            ChangeLaneIndex(diagram, swimLane, 0);\n            updateConnectorsProperties(connectors, diagram);\n            swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n            swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n            diagram.updateDiagramObject(swimLane);\n        }\n    }\n}\n/** @private */\nexport function updateSwimLaneObject(diagram, obj, swimLane, helperObject) {\n    var parentNode = diagram.getObject(swimLane.id);\n    var shape = parentNode.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    var lanes = shape.lanes;\n    var phases = shape.phases;\n    var helperWidth = helperObject.wrapper.actualSize.width;\n    var helperHeight = helperObject.wrapper.actualSize.height;\n    var objWidth = obj.wrapper.actualSize.width;\n    var objHeight = obj.wrapper.actualSize.height;\n    if (parentNode.shape.type === 'SwimLane') {\n        if (shape.orientation === 'Horizontal') {\n            if (obj.isPhase) {\n                phases[obj.columnIndex].offset += (helperWidth - objWidth);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? index + 1 : index;\n                lanes[(obj.rowIndex - index)].height += (helperHeight - objHeight);\n            }\n        }\n        else {\n            if (obj.isPhase) {\n                phases[(obj.rowIndex - index)].offset += (helperHeight - objHeight);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n                lanes[(obj.columnIndex - index)].width += (helperWidth - objWidth);\n            }\n        }\n    }\n}\n/** @private */\nexport function findLaneIndex(swimLane, laneObj) {\n    var laneIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    if (shape.orientation === 'Horizontal') {\n        index += shape.phases.length > 0 ? 1 : 0;\n        laneIndex = laneObj.rowIndex - index;\n    }\n    else {\n        laneIndex = laneObj.columnIndex - (shape.phaseSize && shape.phases.length > 0 ? 1 : 0);\n    }\n    return laneIndex;\n}\n/** @private */\nexport function findPhaseIndex(phase, swimLane) {\n    var phaseIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    phaseIndex = (shape.orientation === 'Horizontal') ? phase.columnIndex : phase.rowIndex - index;\n    return phaseIndex;\n}\n/** @private */\nexport function findStartLaneIndex(swimLane) {\n    var index = 0;\n    var shape = swimLane.shape;\n    if (shape.orientation === 'Horizontal') {\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        index += 1;\n    }\n    return index;\n}\n/** @private */\nexport function updatePhaseMaxWidth(parent, diagram, wrapper, columnIndex) {\n    var shape = parent.shape;\n    if (shape.phases.length > 0) {\n        var node = diagram.nameTable[shape.phases[columnIndex].header.id];\n        if (node && node.maxWidth < wrapper.outerBounds.width) {\n            node.maxWidth = wrapper.outerBounds.width;\n            node.wrapper.maxWidth = wrapper.outerBounds.width;\n        }\n    }\n}\n/** @private */\nexport function updateHeaderMaxWidth(diagram, swimLane) {\n    if (swimLane.shape.header && swimLane.shape.hasHeader) {\n        var grid = swimLane.wrapper.children[0];\n        var id = grid.rows[0].cells[0].children[0].id;\n        var headerNode = diagram.nameTable[id];\n        if (headerNode && headerNode.isHeader && headerNode.maxWidth < swimLane.width) {\n            headerNode.maxWidth = swimLane.width;\n            headerNode.wrapper.maxWidth = swimLane.width;\n        }\n    }\n}\n/** @private */\nexport function addLane(diagram, parent, lane, count) {\n    var swimLane = diagram.nameTable[parent.id];\n    if (swimLane.shape.type === 'SwimLane') {\n        diagram.protectPropertyChange(true);\n        var grid = swimLane.wrapper.children[0];\n        var bounds = grid.bounds;\n        var shape = swimLane.shape;\n        var redoObj = void 0;\n        var orientation_1 = false;\n        var connectors = void 0;\n        var entry = void 0;\n        var index = void 0;\n        var laneObj = void 0;\n        var laneIndex = void 0;\n        var children = void 0;\n        var j = void 0;\n        var i = void 0;\n        var k = void 0;\n        var cell = void 0;\n        var child = void 0;\n        var point = void 0;\n        laneObj = new Lane(shape, 'lanes', lane, true);\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n        if (shape.orientation === 'Horizontal') {\n            orientation_1 = true;\n            index = shape.phases.length > 0 ? index + 1 : index;\n        }\n        connectors = getConnectors(diagram, grid, 0, true);\n        laneIndex = (count !== undefined) ? count : shape.lanes.length;\n        index += laneIndex;\n        if (orientation_1) {\n            var rowDef = new RowDefinition();\n            rowDef.height = lane.height;\n            grid.addRow(index, rowDef, false);\n            swimLane.height = (swimLane.height !== undefined) ? swimLane.height + lane.height : swimLane.height;\n            swimLane.wrapper.height = grid.height = swimLane.height;\n        }\n        else {\n            var colDef = new ColumnDefinition();\n            colDef.width = lane.width;\n            grid.addColumn(laneIndex + 1, colDef, false);\n            if (swimLane.width) {\n                swimLane.width += lane.width;\n                swimLane.wrapper.width = grid.width = swimLane.width;\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                grid.rows[0].cells[0].columnSpan += 1;\n            }\n        }\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            laneObj.id += randomId();\n        }\n        if (count !== undefined) {\n            shape.lanes.splice(count, 0, laneObj);\n        }\n        else {\n            shape.lanes.push(laneObj);\n        }\n        laneCollection(grid, diagram, swimLane, index, laneIndex, orientation_1);\n        redoObj = (shape.orientation === 'Horizontal') ?\n            diagram.nameTable[grid.rows[index].cells[0].children[0].id] :\n            ((shape.header && shape.hasHeader) ? diagram.nameTable[grid.rows[1].cells[index].children[0].id] :\n                diagram.nameTable[grid.rows[0].cells[index].children[0].id]);\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            entry = {\n                type: 'LaneCollectionChanged', changeType: 'Insert', undoObject: cloneObject(laneObj),\n                redoObject: cloneObject(redoObj), category: 'Internal'\n            };\n            diagram.addHistoryEntry(entry);\n        }\n        var startRowIndex = (shape.orientation === 'Horizontal') ?\n            index : ((shape.header && shape.hasHeader) ? 1 : 0);\n        ChangeLaneIndex(diagram, swimLane, startRowIndex);\n        swimLaneMeasureAndArrange(swimLane);\n        updateHeaderMaxWidth(diagram, swimLane);\n        children = lane.children;\n        if (children && children.length > 0) {\n            for (j = 0; j < children.length; j++) {\n                child = children[j];\n                point = { x: child.wrapper.offsetX, y: child.wrapper.offsetY };\n                if (shape.orientation === 'Horizontal') {\n                    cell = grid.rows[index].cells[i];\n                    for (i = 0; i < grid.rows[index].cells.length; i++) {\n                        addChildNodeToNewLane(diagram, grid.rows[index].cells[i], point, child);\n                    }\n                }\n                else {\n                    for (k = 0; k < grid.rows.length; k++) {\n                        cell = grid.rows[k].cells[index];\n                        addChildNodeToNewLane(diagram, cell, point, child);\n                    }\n                }\n            }\n        }\n        updateConnectorsProperties(connectors, diagram);\n        diagram.drag(swimLane, bounds.x - grid.bounds.x, bounds.y - grid.bounds.y);\n        diagram.protectPropertyChange(false);\n    }\n}\nfunction addChildNodeToNewLane(diagram, cell, point, child) {\n    if (cell.children && cell.children.length > 0) {\n        var canvas = cell.children[0];\n        var parent_1 = diagram.nameTable[canvas.id];\n        if (canvas.bounds.containsPoint(point)) {\n            diagram.addChild(parent_1, child);\n        }\n    }\n}\nexport function addPhase(diagram, parent, newPhase) {\n    if (parent.shape.type === 'SwimLane') {\n        var gridRowIndex = void 0;\n        var gridColIndex = void 0;\n        var phaseNode = void 0;\n        var phase = void 0;\n        var previousPhase = void 0;\n        var nextPhase = void 0;\n        var phaseIndex = void 0;\n        var laneHeaderSize = void 0;\n        var i = void 0;\n        var x = parent.wrapper.bounds.x;\n        var y = parent.wrapper.bounds.y;\n        var shape = parent.shape;\n        var padding = shape.padding;\n        var phasesCollection = shape.phases;\n        var width = void 0;\n        var grid = parent.wrapper.children[0];\n        var orientation_2 = shape.orientation === 'Horizontal' ? true : false;\n        gridRowIndex = (shape.header && shape.hasHeader) ? 0 : -1;\n        if (shape.phases.length > 0) {\n            gridRowIndex += 1;\n            gridColIndex = 0;\n        }\n        laneHeaderSize = (orientation_2) ? shape.lanes[0].header.width : shape.lanes[0].header.height;\n        if (newPhase.offset > laneHeaderSize) {\n            for (i = 0; i < phasesCollection.length; i++) {\n                phase = phasesCollection[i];\n                previousPhase = (i > 0) ? phasesCollection[i - 1] : phase;\n                if (phase.offset > newPhase.offset) {\n                    width = (i > 0) ? newPhase.offset - previousPhase.offset : newPhase.offset;\n                    if (orientation_2) {\n                        var nextCol = grid.columnDefinitions()[i];\n                        nextCol.width -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        nextPhase.maxWidth = nextPhase.wrapper.maxWidth = nextCol.width;\n                        grid.updateColumnWidth(i, nextCol.width, false);\n                        var addPhase_1 = new ColumnDefinition();\n                        addPhase_1.width = width;\n                        phaseIndex = i;\n                        grid.addColumn(i, addPhase_1, false);\n                        break;\n                    }\n                    else {\n                        var nextRow = grid.rowDefinitions()[i + gridRowIndex];\n                        nextRow.height -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        grid.updateRowHeight(i + gridRowIndex, nextRow.height, false);\n                        var addPhase_2 = new RowDefinition();\n                        addPhase_2.height = width;\n                        phaseIndex = i;\n                        grid.addRow(i + gridRowIndex, addPhase_2, false);\n                        break;\n                    }\n                }\n            }\n            if (diagram.diagramActions & DiagramAction.UndoRedo && phaseIndex === undefined) {\n                var entry = diagram.historyManager.currentEntry.next;\n                if (entry.isLastPhase) {\n                    phaseIndex = phasesCollection.length;\n                    addLastPhase(phaseIndex, parent, entry, grid, orientation_2, newPhase);\n                }\n            }\n            var phaseObj = new Phase((parent.shape), 'phases', newPhase, true);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                phaseObj.id += randomId();\n            }\n            shape.phases.splice(phaseIndex, 0, phaseObj);\n            phaseDefine(grid, diagram, parent, gridRowIndex, orientation_2, phaseIndex);\n            if (orientation_2) {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex].children[0].id];\n                if (phaseIndex === 0 && shape.header && shape.hasHeader) {\n                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                    grid.rows[0].cells[1].children = [];\n                    var fristRow = grid.rows[0];\n                    for (var i_2 = 0; i_2 < fristRow.cells.length; i_2++) {\n                        fristRow.cells[i_2].minWidth = undefined;\n                        if (i_2 === 0) {\n                            fristRow.cells[i_2].columnSpan = grid.rows[0].cells.length;\n                        }\n                        else {\n                            fristRow.cells[i_2].columnSpan = 1;\n                        }\n                    }\n                }\n                addHorizontalPhase(diagram, parent, grid, phaseIndex, orientation_2);\n                var col = grid.columnDefinitions();\n                grid.updateColumnWidth(phaseIndex, col[phaseIndex].width, true, padding);\n                phaseNode.maxWidth = phaseNode.wrapper.maxWidth = col[phaseIndex].width;\n                if (col.length > phaseIndex + 1) {\n                    var nextPhaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex + 1].children[0].id];\n                    grid.updateColumnWidth(phaseIndex + 1, col[phaseIndex + 1].width, true, padding);\n                    nextPhaseNode.maxWidth = nextPhaseNode.wrapper.maxWidth = col[phaseIndex + 1].width;\n                }\n                parent.width = parent.wrapper.width = parent.wrapper.children[0].width = grid.width;\n            }\n            else {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex + phaseIndex].cells[0].children[0].id];\n                var row = grid.rowDefinitions();\n                var size = row[gridRowIndex + phaseIndex].height;\n                addVerticalPhase(diagram, parent, grid, gridRowIndex + phaseIndex, orientation_2);\n                grid.updateRowHeight(gridRowIndex + phaseIndex, size, true, padding);\n                if (row.length > gridRowIndex + phaseIndex + 1) {\n                    size = row[gridRowIndex + phaseIndex + 1].height;\n                    grid.updateRowHeight(gridRowIndex + phaseIndex + 1, size, true, padding);\n                }\n                parent.height = parent.wrapper.height = parent.wrapper.children[0].height = grid.actualSize.height;\n            }\n            swimLaneMeasureAndArrange(parent);\n            parent.width = parent.wrapper.actualSize.width;\n            updateHeaderMaxWidth(diagram, parent);\n            diagram.drag(parent, x - parent.wrapper.bounds.x, y - parent.wrapper.bounds.y);\n            checkPhaseOffset(parent, diagram);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'PhaseCollectionChanged', changeType: 'Insert', undoObject: cloneObject(phaseObj),\n                    redoObject: cloneObject(phaseNode), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            diagram.updateDiagramObject(parent);\n        }\n    }\n}\nexport function addLastPhase(phaseIndex, parent, entry, grid, orientation, newPhase) {\n    var shape = parent.shape;\n    var prevPhase = shape.phases[phaseIndex - 2];\n    var prevOffset = entry.previousPhase.offset;\n    if (orientation) {\n        var nextCol = grid.columnDefinitions()[phaseIndex - 1];\n        var addPhase_3 = new ColumnDefinition();\n        if (phaseIndex > 1) {\n            addPhase_3.width = (nextCol.width) - (prevOffset - prevPhase.offset);\n            nextCol.width = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_3.width = nextCol.width - prevOffset;\n            nextCol.width = prevOffset;\n        }\n        grid.updateColumnWidth(phaseIndex - 1, nextCol.width, false);\n        grid.addColumn(phaseIndex, addPhase_3, false);\n    }\n    else {\n        var nextCol = grid.rowDefinitions()[phaseIndex];\n        var addPhase_4 = new RowDefinition();\n        if (phaseIndex > 1) {\n            addPhase_4.height = entry.undoObject.offset - prevOffset;\n            nextCol.height = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_4.height = nextCol.height - prevOffset;\n            nextCol.height = prevOffset;\n        }\n        grid.updateRowHeight(phaseIndex, nextCol.height, false);\n        grid.addRow(1 + phaseIndex, addPhase_4, false);\n    }\n}\nexport function addHorizontalPhase(diagram, node, grid, index, orientation) {\n    var shape = node.shape;\n    var nextCell;\n    var i;\n    var prevCell;\n    var gridCell;\n    var row;\n    var laneIndex = findStartLaneIndex(node);\n    if (shape.header && shape.hasHeader) {\n        grid.rows[0].cells[0].columnSpan = grid.rows[0].cells.length;\n    }\n    for (i = laneIndex; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        prevCell = row.cells[index - 1];\n        gridCell = row.cells[index];\n        nextCell = row.cells[index + 1];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, i, index);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nexport function addVerticalPhase(diagram, node, grid, rowIndex, orientation) {\n    var prevCell;\n    var gridCell;\n    var nextCell;\n    var row = grid.rows[rowIndex];\n    var nextRow = grid.rows[rowIndex + 1];\n    var prevRow = grid.rows[rowIndex - 1];\n    for (var i = 1; i < row.cells.length; i++) {\n        gridCell = row.cells[i];\n        nextCell = (nextRow) ? nextRow.cells[i] : undefined;\n        prevCell = prevRow.cells[i];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, i);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nfunction addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, columnIndex) {\n    var x;\n    var y;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var grid = node.wrapper.children[0];\n    var width = gridCell.desiredCellWidth;\n    var height = gridCell.desiredCellHeight;\n    var col = (orientation) ? rowIndex : columnIndex;\n    var rect;\n    var canvas;\n    var parentWrapper;\n    var j;\n    var i = (orientation) ? rowIndex : columnIndex;\n    if (prevCell) {\n        x = orientation ? prevCell.bounds.x + prevCell.bounds.width : prevCell.bounds.x;\n        y = orientation ? prevCell.bounds.y : prevCell.bounds.y + prevCell.bounds.height;\n    }\n    else {\n        x = grid.bounds.x;\n        y = nextCell.bounds.y;\n    }\n    rect = new Rect(x, y, width, height);\n    canvas = {\n        id: node.id + ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).id + randomId()[0],\n        rowIndex: rowIndex, columnIndex: columnIndex,\n        width: gridCell.minWidth, height: gridCell.minHeight,\n        style: ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).style,\n        constraints: NodeConstraints.Default | NodeConstraints.AllowDrop,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    parentWrapper = addObjectToGrid(diagram, grid, node, canvas, false, false, true);\n    parentWrapper.children[0].isCalculateDesiredSize = false;\n    grid.addObject(parentWrapper, rowIndex, columnIndex);\n    if (nextCell && nextCell.children && nextCell.children.length) {\n        for (j = 0; j < nextCell.children.length; j++) {\n            if (orientation) {\n                diagram.nameTable[nextCell.children[j].id].columnIndex += 1;\n            }\n            else {\n                diagram.nameTable[nextCell.children[j].id].rowIndex += 1;\n            }\n        }\n    }\n    arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell);\n}\nexport function arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell) {\n    var child;\n    var point;\n    var childNode;\n    var parent = diagram.nameTable[parentWrapper.id];\n    var changeCell = (!nextCell) ? prevCell : nextCell;\n    var swimLane = diagram.nameTable[parent.parentId];\n    var padding = swimLane.shape.padding;\n    if (changeCell.children && changeCell.children[0].children.length > 1) {\n        for (var j = 1; j < changeCell.children[0].children.length; j++) {\n            child = changeCell.children[0].children[j];\n            childNode = diagram.nameTable[child.id];\n            point = (orientation) ? { x: child.bounds.x, y: child.bounds.center.y } :\n                { x: child.bounds.center.x, y: child.bounds.top };\n            if (rect.containsPoint(point)) {\n                gridCell.children[0].children.push(child);\n                changeCell.children[0].children.splice(j, 1);\n                j--;\n                diagram.deleteChild(childNode);\n                if (!childNode.isLane) {\n                    childNode.parentId = parentWrapper.id;\n                }\n                if (!parent.children) {\n                    parent.children = [];\n                }\n                if (!nextCell) {\n                    if (orientation) {\n                        childNode.margin.left = childNode.wrapper.bounds.x - changeCell.children[0].bounds.right;\n                    }\n                    else {\n                        childNode.margin.top = childNode.wrapper.bounds.y - changeCell.children[0].bounds.bottom;\n                    }\n                }\n                parent.children.push(child.id);\n                childNode.zIndex = parent.zIndex + 1;\n                diagram.removeElements(childNode);\n            }\n            else if (nextCell) {\n                if (orientation) {\n                    childNode.margin.left -= gridCell.desiredCellWidth;\n                    if (padding > childNode.margin.left) {\n                        childNode.margin.left = padding;\n                    }\n                }\n                else {\n                    childNode.margin.top -= gridCell.desiredCellHeight;\n                    if (padding > childNode.margin.top) {\n                        childNode.margin.top = padding;\n                    }\n                }\n            }\n        }\n    }\n}\nexport function swimLaneSelection(diagram, node, corner) {\n    if (node.shape.type === 'SwimLane' && (corner === 'ResizeSouth' || corner === 'ResizeEast')) {\n        var shape = node.shape;\n        var wrapper = node.wrapper.children[0];\n        var child = void 0;\n        var index = void 0;\n        if (corner === 'ResizeSouth') {\n            if (shape.orientation === 'Vertical') {\n                child = wrapper.rows[wrapper.rows.length - 1].cells[0];\n            }\n            else {\n                index = wrapper.rows.length - 1;\n                child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n            }\n        }\n        else {\n            index = (shape.header && shape.hasHeader) ? 1 : 0;\n            child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n        }\n        diagram.commandHandler.select(diagram.nameTable[child.children[0].id]);\n    }\n}\nexport function pasteSwimLane(swimLane, diagram, clipboardData, laneNode, isLane, isUndo) {\n    var i;\n    var j;\n    var lane;\n    var phase;\n    var node;\n    var ranId = randomId();\n    var cloneLane;\n    var childX;\n    var childY;\n    var shape = swimLane.shape;\n    var lanes;\n    var phases = shape.phases;\n    var nodeX = swimLane.offsetX - swimLane.wrapper.actualSize.width / 2;\n    var nodeY = swimLane.offsetY - swimLane.wrapper.actualSize.height / 2;\n    if (shape.orientation === 'Vertical') {\n        nodeY += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n    }\n    if (!isUndo) {\n        if (!isLane) {\n            swimLane.id += ranId;\n            if (shape && shape.header && shape.hasHeader) {\n                shape.header.id += ranId;\n            }\n            else {\n                shape.header = undefined;\n            }\n        }\n        for (i = 0; phases && i < phases.length; i++) {\n            phase = phases[i];\n            phase.id += ranId;\n        }\n    }\n    lanes = (isLane) ? [clipboardData.childTable[laneNode.id]] : shape.lanes;\n    for (i = 0; lanes && i < lanes.length; i++) {\n        lane = lanes[i];\n        if (!isUndo) {\n            lane.id += ranId;\n        }\n        for (j = 0; lane.children && j < lane.children.length; j++) {\n            node = lane.children[j];\n            childX = node.wrapper.offsetX - node.width / 2;\n            childY = node.wrapper.offsetY - node.height / 2;\n            node.zIndex = -1;\n            node.inEdges = node.outEdges = [];\n            if (isUndo || (clipboardData && (clipboardData.pasteIndex === 1 || clipboardData.pasteIndex === 0))) {\n                if (shape.orientation === 'Vertical') {\n                    node.margin.top = childY - nodeY;\n                }\n                else {\n                    node.margin.left = childX - nodeX;\n                }\n            }\n            if (!isUndo) {\n                node.id += ranId;\n            }\n        }\n    }\n    if (!isUndo) {\n        if (isLane) {\n            var newShape = {\n                lanes: lanes,\n                phases: phases, phaseSize: shape.phaseSize,\n                type: 'SwimLane', orientation: shape.orientation,\n                header: { annotation: { content: 'Title' }, height: 50 },\n            };\n            cloneLane = { shape: newShape };\n            if (shape.orientation === 'Horizontal') {\n                cloneLane.width = swimLane.wrapper.actualSize.width;\n                cloneLane.height = laneNode.wrapper.actualSize.height + shape.header.height + shape.phaseSize;\n                cloneLane.offsetX = swimLane.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = laneNode.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            else {\n                cloneLane.width = laneNode.wrapper.actualSize.width;\n                cloneLane.height = swimLane.wrapper.actualSize.height;\n                cloneLane.offsetX = laneNode.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = swimLane.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            swimLane = cloneLane;\n        }\n        if (clipboardData.pasteIndex !== 0) {\n            swimLane.offsetX += 10;\n            swimLane.offsetY += 10;\n        }\n        swimLane.zIndex = -1;\n        swimLane = diagram.add(swimLane);\n        if (!isLane) {\n            for (var _i = 0, _a = Object.keys(clipboardData.childTable); _i < _a.length; _i++) {\n                var i_3 = _a[_i];\n                var connector = clipboardData.childTable[i_3];\n                connector.id += ranId;\n                connector.sourceID += ranId;\n                connector.targetID += ranId;\n                connector.zIndex = -1;\n                diagram.add(connector);\n            }\n        }\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n        diagram.select([swimLane]);\n    }\n    return swimLane;\n}\nexport function gridSelection(diagram, selectorModel, id, isSymbolDrag) {\n    var canvas;\n    var node = selectorModel.nodes[0];\n    if (isSymbolDrag || checkParentAsContainer(diagram, node, true)) {\n        var targetnode = void 0;\n        var wrapper = void 0;\n        var parentNode = void 0;\n        var bounds = void 0;\n        var swimLaneId = void 0;\n        var element = new DiagramElement();\n        if (id) {\n            swimLaneId = (diagram.nameTable[id].parentId);\n            targetnode = node = diagram.nameTable[id];\n        }\n        wrapper = !id ? node.wrapper : targetnode.wrapper;\n        parentNode = diagram.nameTable[swimLaneId || node.parentId];\n        if (parentNode && parentNode.container.type === 'Grid') {\n            canvas = new Canvas();\n            canvas.children = [];\n            if (isSymbolDrag || !(node.isHeader)) {\n                if ((parentNode.container.orientation === 'Horizontal' && node.isPhase) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        (node.rowIndex > 0 && node.columnIndex > 0 || node.isLane))) {\n                    bounds = findBounds(parentNode, (targetnode) ? targetnode.columnIndex : node.columnIndex, (parentNode.shape.header && parentNode.shape.hasHeader) ? true : false);\n                    canvas.offsetX = bounds.center.x;\n                    canvas.offsetY = bounds.center.y;\n                    element.width = bounds.width;\n                    element.height = bounds.height;\n                }\n                else {\n                    canvas.offsetX = parentNode.offsetX;\n                    canvas.offsetY = wrapper.offsetY;\n                    element.width = parentNode.wrapper.actualSize.width;\n                    element.height = wrapper.actualSize.height;\n                }\n            }\n            canvas.children.push(element);\n            canvas.measure(new Size());\n            canvas.arrange(canvas.desiredSize);\n        }\n    }\n    return canvas;\n}\nexport function removeLaneChildNode(diagram, swimLaneNode, currentObj, isChildNode) {\n    var laneIndex = findLaneIndex(swimLaneNode, currentObj);\n    var preventHistory = false;\n    var lanenode = swimLaneNode.shape.lanes[laneIndex];\n    for (var j = lanenode.children.length - 1; j >= 0; j--) {\n        if (isChildNode) {\n            if (isChildNode.id === lanenode.children[j].id) {\n                lanenode.children.splice(j, 1);\n            }\n        }\n        else {\n            diagram.removeDependentConnector(lanenode.children[j]);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n                preventHistory = true;\n            }\n            diagram.remove(lanenode.children[j]);\n            lanenode.children.splice(j, 1);\n            if (preventHistory) {\n                diagram.diagramActions = diagram.diagramActions & ~DiagramAction.UndoRedo;\n            }\n        }\n    }\n}\nexport function getGridChildren(obj) {\n    var children = obj.children[0];\n    return children;\n}\nexport function removeSwimLane(diagram, obj) {\n    var rows = obj.wrapper.children[0].rows;\n    var preventHistory = false;\n    var node;\n    var i;\n    var j;\n    var k;\n    var child;\n    var removeNode;\n    for (i = 0; i < rows.length; i++) {\n        for (j = 0; j < rows[i].cells.length; j++) {\n            child = getGridChildren(rows[i].cells[j]);\n            if (child && child.children) {\n                for (k = 0; k < child.children.length; k++) {\n                    if (child.children[k].children) {\n                        removeNode = diagram.nameTable[child.children[k].id];\n                        if (removeNode) {\n                            if (removeNode.isLane) {\n                                deleteNode(diagram, removeNode);\n                            }\n                            else {\n                                diagram.removeDependentConnector(removeNode);\n                                diagram.diagramActions |= DiagramAction.PreventHistory;\n                                diagram.remove(removeNode);\n                                diagram.diagramActions &= ~DiagramAction.PreventHistory;\n                                k--;\n                            }\n                        }\n                    }\n                }\n            }\n            if (child) {\n                node = diagram.nameTable[child.id];\n                if (node) {\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n}\nfunction deleteNode(diagram, node) {\n    diagram.nodes.splice(diagram.nodes.indexOf(node), 1);\n    diagram.removeFromAQuad(node);\n    diagram.removeObjectsFromLayer(node);\n    delete diagram.nameTable[node.id];\n    diagram.removeElements(node);\n}\nexport function removeLane(diagram, lane, swimLane) {\n    var shape = swimLane.shape;\n    if (shape.lanes.length === 1) {\n        diagram.remove(swimLane);\n    }\n    else {\n        var x = swimLane.wrapper.bounds.x;\n        var y = swimLane.wrapper.bounds.y;\n        var row = void 0;\n        var i = void 0;\n        var cell = void 0;\n        var j = void 0;\n        var child = void 0;\n        var grid = swimLane.wrapper.children[0];\n        var laneIndex = findLaneIndex(swimLane, lane);\n        var undoObj = cloneObject(shape.lanes[laneIndex]);\n        removeLaneChildNode(diagram, swimLane, lane);\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            var entry = {\n                type: 'LaneCollectionChanged', changeType: 'Remove', undoObject: undoObj,\n                redoObject: cloneObject(lane), category: 'Internal'\n            };\n            diagram.addHistoryEntry(entry);\n        }\n        shape.lanes.splice(laneIndex, 1);\n        if (shape.orientation === 'Horizontal') {\n            row = grid.rows[lane.rowIndex];\n            for (i = 0; i < row.cells.length; i++) {\n                cell = row.cells[i];\n                if (cell && cell.children.length > 0) {\n                    for (j = 0; j < cell.children.length; j++) {\n                        child = cell.children[j];\n                        removeChildren(diagram, child);\n                    }\n                }\n            }\n            grid.removeRow(lane.rowIndex);\n        }\n        else {\n            swimLane.width = (swimLane.width !== undefined) ?\n                swimLane.width - grid.rows[0].cells[lane.columnIndex].actualSize.width : swimLane.width;\n            for (i = 0; i < grid.rows.length; i++) {\n                cell = grid.rows[i].cells[lane.columnIndex];\n                if (cell && cell.children.length > 0) {\n                    for (j = 0; j < cell.children.length; j++) {\n                        child = cell.children[j];\n                        removeChildren(diagram, child);\n                    }\n                }\n            }\n            grid.removeColumn(lane.columnIndex);\n        }\n        swimLane.width = swimLane.wrapper.width = grid.width;\n        swimLane.height = swimLane.wrapper.height = grid.height;\n        swimLaneMeasureAndArrange(swimLane);\n        ChangeLaneIndex(diagram, swimLane, lane.rowIndex);\n        diagram.drag(swimLane, x - swimLane.wrapper.bounds.x, y - swimLane.wrapper.bounds.y);\n        diagram.updateDiagramObject(swimLane);\n    }\n}\nexport function removeChildren(diagram, canvas) {\n    var i;\n    var node;\n    if (canvas instanceof Canvas) {\n        if (canvas.children.length > 0) {\n            for (i = 0; i < canvas.children.length; i++) {\n                if (canvas.children[i] instanceof Canvas) {\n                    removeChildren(diagram, canvas.children[i]);\n                }\n            }\n        }\n        node = diagram.getObject(canvas.id);\n        deleteNode(diagram, node);\n    }\n}\nexport function removePhase(diagram, phase, swimLane) {\n    diagram.protectPropertyChange(true);\n    var x = swimLane.wrapper.bounds.x;\n    var y = swimLane.wrapper.bounds.y;\n    var isLastPhase = false;\n    var previousPhase;\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var phaseIndex = findPhaseIndex(phase, swimLane);\n    var phaseLength = shape.phases.length;\n    if (shape.phases.length > 1) {\n        if (phaseIndex === phaseLength - 1) {\n            isLastPhase = true;\n            previousPhase = cloneObject(shape.phases[phaseIndex - 1]);\n        }\n        var undoObj = cloneObject(shape.phases[phaseIndex]);\n        shape.phases.splice(phaseIndex, 1);\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            var entry = {\n                type: 'PhaseCollectionChanged', changeType: 'Remove', undoObject: undoObj, previousPhase: previousPhase,\n                redoObject: cloneObject(phase), category: 'Internal', isLastPhase: isLastPhase\n            };\n            diagram.addHistoryEntry(entry);\n        }\n        if (shape.orientation === 'Horizontal') {\n            removeHorizontalPhase(diagram, grid, phase);\n        }\n        else {\n            removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        ChangeLaneIndex(diagram, swimLane, 1);\n        checkPhaseOffset(swimLane, diagram);\n        diagram.protectPropertyChange(false);\n        diagram.updateDiagramObject(swimLane);\n    }\n}\nexport function removeHorizontalPhase(diagram, grid, phase) {\n    var row;\n    var cell;\n    var prevCell;\n    var actualChild;\n    var prevChild;\n    var prevCanvas;\n    var width;\n    var i;\n    var j;\n    var k;\n    var child;\n    var node;\n    var object;\n    for (i = 0; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        if (row.cells.length > 1) {\n            cell = row.cells[phase.columnIndex];\n            prevCell = (row.cells.length - 1 === phase.columnIndex) ? row.cells[phase.columnIndex - 1] :\n                row.cells[phase.columnIndex + 1];\n            prevCanvas = prevCell.children[0];\n            if (cell.children.length > 0) {\n                actualChild = cell.children[0];\n                node = diagram.nameTable[actualChild.id];\n                if (prevCell.children.length === 0 && cell.children.length > 0) {\n                    prevCell.children = cell.children;\n                    prevCell.columnSpan = cell.columnSpan - 1;\n                }\n                else {\n                    for (j = 0; j < actualChild.children.length; j++) {\n                        child = actualChild.children[j];\n                        if (child instanceof Canvas) {\n                            object = diagram.nameTable[child.id];\n                            if (!object.isLane) {\n                                object.parentId = prevCanvas.id;\n                            }\n                            if ((row.cells.length - 1 === phase.columnIndex)) {\n                                object.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                                child.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                            }\n                            prevCanvas.children.push(child);\n                            if (diagram.nameTable[prevCanvas.id]) {\n                                var parentNode = diagram.nameTable[prevCanvas.id];\n                                if (!parentNode.children) {\n                                    parentNode.children = [];\n                                }\n                                parentNode.children.push(child.id);\n                            }\n                            actualChild.children.splice(j, 1);\n                            j--;\n                            if (node && node.children && node.children.indexOf(object.id) !== -1) {\n                                node.children.splice(node.children.indexOf(object.id), 1);\n                            }\n                        }\n                        if ((row.cells.length - 1 !== phase.columnIndex)) {\n                            for (k = 0; k < prevCanvas.children.length; k++) {\n                                var prevChild_1 = prevCanvas.children[k];\n                                if (prevChild_1 instanceof Canvas) {\n                                    var prevNode = diagram.nameTable[prevChild_1.id];\n                                    prevNode.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                    prevChild_1.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                }\n                            }\n                        }\n                    }\n                    if (node && node.isPhase) {\n                        var object_1 = diagram.nameTable[prevCanvas.id];\n                        if (object_1) {\n                            prevCanvas.maxWidth = object_1.wrapper.maxWidth = object_1.wrapper.maxWidth += node.wrapper.maxWidth;\n                        }\n                    }\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n    grid.removeColumn(phase.columnIndex);\n    if ((phase.columnIndex < grid.columnDefinitions().length)) {\n        width = grid.columnDefinitions()[phase.columnIndex].width;\n        width += phase.wrapper.actualSize.width;\n        grid.updateColumnWidth(phase.columnIndex, width, true);\n    }\n    else {\n        width = grid.columnDefinitions()[phase.columnIndex - 1].width;\n        width += phase.wrapper.actualSize.width;\n        grid.updateColumnWidth(phase.columnIndex - 1, width, true);\n    }\n}\nexport function removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane) {\n    var row;\n    var cell;\n    var prevRow;\n    var height;\n    var i;\n    var j;\n    var k;\n    row = grid.rows[phase.rowIndex];\n    var prevCell;\n    var prevChild;\n    var shape = swimLane.shape;\n    var child;\n    var object;\n    var top = swimLane.wrapper.bounds.y;\n    var phaseCount = shape.phases.length;\n    if (shape.header !== undefined && shape.hasHeader) {\n        top += grid.rowDefinitions()[0].height;\n    }\n    prevRow = (phaseIndex === phaseCount) ? grid.rows[phase.rowIndex - 1] : grid.rows[phase.rowIndex + 1];\n    for (i = 0; i < row.cells.length; i++) {\n        cell = row.cells[i];\n        prevCell = prevRow.cells[i];\n        prevChild = prevCell.children[0];\n        if (cell.children.length > 0) {\n            var children = cell.children[0];\n            var node = diagram.nameTable[children.id];\n            if (phaseIndex < phaseCount) {\n                for (k = 0; k < prevChild.children.length; k++) {\n                    child = prevChild.children[k];\n                    if (child instanceof Canvas) {\n                        object = diagram.nameTable[child.id];\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                    }\n                }\n            }\n            for (j = 0; j < children.children.length; j++) {\n                child = children.children[j];\n                if (child instanceof Canvas) {\n                    object = diagram.nameTable[child.id];\n                    object.parentId = prevChild.id;\n                    if (phaseIndex === phaseCount) {\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                    }\n                    prevChild.children.push(child);\n                    children.children.splice(j, 1);\n                    j--;\n                    if (node.children && node.children.indexOf(object.id) !== -1) {\n                        node.children.splice(node.children.indexOf(object.id), 1);\n                    }\n                }\n            }\n            deleteNode(diagram, node);\n        }\n    }\n    grid.removeRow(phase.rowIndex);\n    if ((phase.rowIndex < grid.rowDefinitions().length)) {\n        height = grid.rowDefinitions()[phase.rowIndex].height;\n        height += phase.wrapper.actualSize.height;\n        grid.updateRowHeight(phase.rowIndex, height, true);\n    }\n    else {\n        height = grid.rowDefinitions()[phase.rowIndex - 1].height;\n        height += phase.wrapper.actualSize.height;\n        grid.updateRowHeight(phase.rowIndex - 1, height, true);\n    }\n}\n/**\n * @private\n */\nexport function considerSwimLanePadding(diagram, node, padding) {\n    var lane = diagram.nameTable[node.parentId];\n    if (lane && lane.isLane) {\n        var swimLane = diagram.nameTable[lane.parentId];\n        var grid = swimLane.wrapper.children[0];\n        var x = swimLane.wrapper.bounds.x;\n        var y = swimLane.wrapper.bounds.y;\n        grid.updateColumnWidth(lane.columnIndex, grid.columnDefinitions()[lane.columnIndex].width, true, padding);\n        grid.updateRowHeight(lane.rowIndex, grid.rowDefinitions()[lane.rowIndex].height, true, padding);\n        var canvas = lane.wrapper;\n        var laneHeader = void 0;\n        var isConsiderHeader = false;\n        if (node.margin.left < padding) {\n            node.margin.left = padding;\n        }\n        if (node.margin.top < padding) {\n            node.margin.top = padding;\n        }\n        for (var i = 0; i < canvas.children.length; i++) {\n            var child = canvas.children[i];\n            if (child instanceof Canvas) {\n                var childNode = diagram.nameTable[child.id];\n                if (childNode.isLane) {\n                    laneHeader = childNode.wrapper;\n                    isConsiderHeader = true;\n                    break;\n                }\n            }\n        }\n        if (laneHeader) {\n            if (swimLane.shape.orientation === 'Horizontal') {\n                if (node.margin.left < padding + laneHeader.actualSize.width) {\n                    node.margin.left = padding + laneHeader.actualSize.width;\n                }\n            }\n            else {\n                if (node.margin.top < padding + laneHeader.actualSize.height) {\n                    node.margin.top = padding + laneHeader.actualSize.height;\n                }\n            }\n        }\n        swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n        swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n        node.offsetX = node.wrapper.offsetX;\n        node.offsetY = node.wrapper.offsetY;\n        diagram.nodePropertyChange(node, {}, { margin: { left: node.margin.left, top: node.margin.top } });\n        grid.measure(new Size(grid.width, grid.height));\n        grid.arrange(grid.desiredSize);\n        swimLane.width = swimLane.wrapper.width = swimLane.wrapper.children[0].actualSize.width;\n        swimLane.height = swimLane.wrapper.height = swimLane.wrapper.children[0].actualSize.height;\n    }\n}\n/**\n * @private\n */\nexport function checkLaneChildrenOffset(swimLane) {\n    if (swimLane.shape.type === 'SwimLane') {\n        var lanes = swimLane.shape.lanes;\n        var lane = void 0;\n        var child = void 0;\n        for (var i = 0; i < lanes.length; i++) {\n            lane = lanes[i];\n            for (var j = 0; j < lane.children.length; j++) {\n                child = lane.children[j];\n                child.offsetX = child.wrapper.offsetX;\n                child.offsetY = child.wrapper.offsetY;\n            }\n        }\n    }\n}\n","import { Size } from './../primitives/size';\nimport { Rect } from './../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Container } from './../core/containers/container';\nimport { StrokeStyle, Stop } from './../core/appearance';\nimport { Point } from './../primitives/point';\nimport { ConnectorConstraints, NodeConstraints, PortConstraints, DiagramConstraints, DiagramTools, Transform } from './../enum/enum';\nimport { SelectorConstraints, ThumbsConstraints } from './../enum/enum';\nimport { PathElement } from './../core/elements/path-element';\nimport { DiagramNativeElement } from './../core/elements/native-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { PathAnnotation, ShapeAnnotation } from './../objects/annotation';\nimport { Node, FlowShape, BasicShape, Native, Html, UmlActivityShape, BpmnGateway, BpmnDataObject, BpmnEvent, BpmnSubEvent, BpmnActivity, BpmnAnnotation, MethodArguments, UmlClassAttribute, UmlClassMethod, UmlClass, UmlInterface, UmlEnumerationMember, UmlEnumeration, Lane, Phase, ChildContainer, SwimLane, Path, Image, Text, BpmnShape, UmlClassifierShape, Header } from './../objects/node';\nimport { Connector, bezierPoints, BezierSegment, StraightSegment, OrthogonalSegment } from './../objects/connector';\nimport { getBasicShape } from './../objects/dictionary/basic-shapes';\nimport { getFlowShape } from './../objects/dictionary/flow-shapes';\nimport { Diagram } from './../diagram';\nimport { findAngle } from './connector';\nimport { getContent, removeElement, hasClass, getDiagramElement } from './dom-util';\nimport { getBounds, cloneObject, rotatePoint, getFunction } from './base-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { getRulerSize } from '../ruler/ruler';\nimport { canResize } from './constraints-util';\nimport { UserHandle } from '../interaction/selector';\nimport { getUMLActivityShape } from '../objects/dictionary/umlactivity-shapes';\nimport { Canvas } from '../core/containers/canvas';\nimport { PointPort } from '../objects/port';\nimport { Command } from '../diagram/keyboard-commands';\nimport { pasteSwimLane } from './swim-lane-util';\n/** @private */\nexport function completeRegion(region, selectedObjects) {\n    var collection = [];\n    for (var i = 0; i < selectedObjects.length; i++) {\n        var obj = selectedObjects[i];\n        if (region.containsRect(obj.wrapper.bounds)) {\n            collection.push(obj);\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function findNodeByName(nodes, name) {\n    for (var i = 0; i < nodes.length; i++) {\n        if (nodes[i].id === name) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @private\n */\nexport function findObjectType(drawingObject) {\n    var type;\n    if (drawingObject) {\n        if (drawingObject.type) {\n            type = 'Connector';\n        }\n        else if (drawingObject.shape && !drawingObject.type) {\n            type = 'Node';\n        }\n    }\n    return type;\n}\n/**\n * @private\n */\nexport function setSwimLaneDefaults(child, node) {\n    if (node instanceof Node) {\n        if (!child.shape.header) {\n            node.shape.hasHeader = false;\n        }\n    }\n}\n/**\n * @private\n */\nexport function setUMLActivityDefaults(child, node) {\n    if (node instanceof Node) {\n        switch (child.shape.shape) {\n            case 'JoinNode':\n                if (!child.width) {\n                    node.width = 20;\n                }\n                if (!child.height) {\n                    node.height = 90;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'ForkNode':\n                if (!child.width) {\n                    node.width = 90;\n                }\n                if (!child.height) {\n                    node.height = 20;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'InitialNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'FinalNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n        }\n    }\n    else {\n        switch (child.shape.flow) {\n            case 'Object':\n                if (!child.style || !child.style.strokeDashArray) {\n                    node.style.strokeDashArray = '8 4';\n                }\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                break;\n            case 'Control':\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                if (!child.sourceDecorator || !child.sourceDecorator.shape) {\n                    node.sourceDecorator.shape = 'None';\n                }\n                break;\n        }\n    }\n}\n/** @private */\nexport function findNearestPoint(reference, start, end) {\n    var shortestPoint;\n    var shortest = Point.findLength(start, reference);\n    var shortest1 = Point.findLength(end, reference);\n    if (shortest > shortest1) {\n        shortestPoint = end;\n    }\n    else {\n        shortestPoint = start;\n    }\n    var angleBWStAndEnd = Point.findAngle(start, end);\n    var angleBWStAndRef = Point.findAngle(shortestPoint, reference);\n    var r = Point.findLength(shortestPoint, reference);\n    var vaAngle = angleBWStAndRef + ((angleBWStAndEnd - angleBWStAndRef) * 2);\n    return {\n        x: (shortestPoint.x + r * Math.cos(vaAngle * Math.PI / 180)),\n        y: (shortestPoint.y + r * Math.sin(vaAngle * Math.PI / 180))\n    };\n}\nfunction pointsForBezier(connector) {\n    var points = [];\n    if (connector.type === 'Bezier') {\n        var k = 0;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var tolerance = 1.5;\n            var segment = connector.segments[i];\n            var pt = { x: 0, y: 0 };\n            var point1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n            var point2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n            var max = Number((connector.distance(point1, segment.points[0]) +\n                connector.distance(point2, point1) +\n                connector.distance(segment.points[1], point2)) / tolerance);\n            for (var j = 0; j < max - 1; j = j + 10) {\n                points[k] =\n                    bezierPoints(connector, segment.points[0], !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, segment.points[1], j, max);\n                k++;\n            }\n        }\n    }\n    return points;\n}\n/** @private */\nexport function isDiagramChild(htmlLayer) {\n    var element = htmlLayer.parentElement;\n    do {\n        if (hasClass(element, 'e-diagram')) {\n            return true;\n        }\n        element = element.parentElement;\n    } while (element);\n    return false;\n}\n/** @private */\nexport function groupHasType(node, type, nameTable) {\n    var contains = false;\n    if (node && node.children && node.children.length > 0) {\n        var child = void 0;\n        var i = 0;\n        for (; i < node.children.length; i++) {\n            child = nameTable[node.children[i]];\n            if (child.shape.type === type) {\n                return true;\n            }\n            return groupHasType(child, type, nameTable);\n        }\n    }\n    return contains;\n}\n/** @private */\nexport function isPointOverConnector(connector, reference) {\n    var intermediatePoints;\n    intermediatePoints = connector.type === 'Bezier' ? pointsForBezier(connector) :\n        connector.intermediatePoints;\n    for (var i = 0; i < intermediatePoints.length - 1; i++) {\n        var start = intermediatePoints[i];\n        var end = intermediatePoints[i + 1];\n        var rect = Rect.toBounds([start, end]);\n        rect.Inflate(connector.hitPadding);\n        if (rect.containsPoint(reference)) {\n            var intersectinPt = findNearestPoint(reference, start, end);\n            var segment1 = { x1: start.x, x2: end.x, y1: start.y, y2: end.y };\n            var segment2 = { x1: reference.x, x2: intersectinPt.x, y1: reference.y, y2: intersectinPt.y };\n            var intersectDetails = intersect3(segment1, segment2);\n            if (intersectDetails.enabled) {\n                var distance = Point.findLength(reference, intersectDetails.intersectPt);\n                if (Math.abs(distance) < connector.hitPadding) {\n                    return true;\n                }\n            }\n            else {\n                var rect_1 = Rect.toBounds([reference, reference]);\n                rect_1.Inflate(3);\n                if (rect_1.containsPoint(start) || rect_1.containsPoint(end)) {\n                    return true;\n                }\n            }\n            if (Point.equals(reference, intersectinPt)) {\n                return true;\n            }\n        }\n    }\n    if (connector.annotations.length > 0) {\n        var container = connector.wrapper.children;\n        for (var i = 3; i < container.length; i++) {\n            var textElement = container[i];\n            if (textElement.bounds.containsPoint(reference)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/** @private */\nexport function intersect3(lineUtil1, lineUtil2) {\n    var point = { x: 0, y: 0 };\n    var l1 = lineUtil1;\n    var l2 = lineUtil2;\n    var d = (l2.y2 - l2.y1) * (l1.x2 - l1.x1) - (l2.x2 - l2.x1) * (l1.y2 - l1.y1);\n    var na = (l2.x2 - l2.x1) * (l1.y1 - l2.y1) - (l2.y2 - l2.y1) * (l1.x1 - l2.x1);\n    var nb = (l1.x2 - l1.x1) * (l1.y1 - l2.y1) - (l1.y2 - l1.y1) * (l1.x1 - l2.x1);\n    if (d === 0) {\n        return { enabled: false, intersectPt: point };\n    }\n    var ua = na / d;\n    var ub = nb / d;\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n        point.x = l1.x1 + (ua * (l1.x2 - l1.x1));\n        point.y = l1.y1 + (ua * (l1.y2 - l1.y1));\n        return { enabled: true, intersectPt: point };\n    }\n    return { enabled: false, intersectPt: point };\n}\n/** @private */\nexport function intersect2(start1, end1, start2, end2) {\n    var point = { x: 0, y: 0 };\n    var lineUtil1 = getLineSegment(start1.x, start1.y, end1.x, end1.y);\n    var lineUtil2 = getLineSegment(start2.x, start2.y, end2.x, end2.y);\n    var line3 = intersect3(lineUtil1, lineUtil2);\n    if (line3.enabled) {\n        return line3.intersectPt;\n    }\n    else {\n        return point;\n    }\n}\n/** @private */\nexport function getLineSegment(x1, y1, x2, y2) {\n    return { 'x1': Number(x1) || 0, 'y1': Number(y1) || 0, 'x2': Number(x2) || 0, 'y2': Number(y2) || 0 };\n}\n/** @private */\nexport function getPoints(element, corners, padding) {\n    var line = [];\n    padding = padding || 0;\n    var left = { x: corners.topLeft.x - padding, y: corners.topLeft.y };\n    var right = { x: corners.topRight.x + padding, y: corners.topRight.y };\n    var top = { x: corners.bottomRight.x, y: corners.bottomRight.y - padding };\n    var bottom = { x: corners.bottomLeft.x, y: corners.bottomLeft.y + padding };\n    line.push(left);\n    line.push(right);\n    line.push(top);\n    line.push(bottom);\n    return line;\n}\n/**\n * @private\n * sets the offset of the tooltip.\n * @param diagram\n * @param mousePosition\n * @param node\n */\nexport function getTooltipOffset(diagram, mousePosition, node) {\n    var offset;\n    var inheritTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.InheritTooltip)\n        : (node.constraints & ConnectorConstraints.InheritTooltip);\n    var objectTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.Tooltip)\n        : (node.constraints & ConnectorConstraints.Tooltip);\n    var isMouseBased = ((!inheritTooltip && objectTooltip ? node.tooltip.relativeMode\n        : diagram.tooltip.relativeMode) === 'Mouse') ? true : false;\n    offset = tooltipOffset(node, mousePosition, diagram, isMouseBased);\n    var rulerSize = getRulerSize(diagram);\n    return { x: offset.x + rulerSize.width, y: offset.y + rulerSize.height };\n}\nfunction tooltipOffset(node, mousePosition, diagram, isMouseBased) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var element = document.getElementById(diagram.element.id);\n    var bounds = node.wrapper.bounds;\n    var rect = element.getBoundingClientRect();\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    switch (diagram.tooltipObject.position) {\n        case 'BottomCenter':\n            point = offsetPoint(mousePosition, bounds.bottomCenter, diagram, isMouseBased, (rect.width / 2), rect.height);\n            break;\n        case 'BottomLeft':\n        case 'LeftBottom':\n            point = offsetPoint(mousePosition, bounds.bottomLeft, diagram, isMouseBased, 0, rect.height);\n            break;\n        case 'BottomRight':\n        case 'RightBottom':\n            point = offsetPoint(mousePosition, bounds.bottomRight, diagram, isMouseBased, rect.width, rect.height);\n            break;\n        case 'LeftCenter':\n            point = offsetPoint(mousePosition, bounds.middleLeft, diagram, isMouseBased, 0, (rect.height / 2));\n            break;\n        case 'LeftTop':\n        case 'TopLeft':\n            point = offsetPoint(mousePosition, bounds.topLeft, diagram, isMouseBased, 0, 0);\n            break;\n        case 'RightCenter':\n            point = offsetPoint(mousePosition, bounds.middleRight, diagram, isMouseBased, rect.width, (rect.height / 2));\n            break;\n        case 'RightTop':\n        case 'TopRight':\n            point = offsetPoint(mousePosition, bounds.topRight, diagram, isMouseBased, rect.width, 0);\n            break;\n        case 'TopCenter':\n            point = offsetPoint(mousePosition, bounds.topCenter, diagram, isMouseBased, (rect.width / 2), 0);\n            break;\n    }\n    return point;\n}\nfunction offsetPoint(mousePosition, bound, diagram, isMouseBased, x, y) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    point.x = (isMouseBased ? mousePosition.x : bound.x) * scale + horizontalOffset - x;\n    point.y = (isMouseBased ? mousePosition.y : bound.y) * scale + verticalOffset - y;\n    return point;\n}\n/** @private */\nexport function sort(objects, option) {\n    var i = 0;\n    var j = 0;\n    var temp;\n    for (i = 0; i < objects.length; i++) {\n        var b = getBounds(objects[i].wrapper);\n        for (j = 0; j < objects.length; j++) {\n            var bounds = getBounds(objects[j].wrapper);\n            if (option === 'Top' || option === 'Bottom' || option === 'BottomToTop' || option === 'Middle') {\n                if (b.center.y > bounds.center.y) {\n                    temp = objects[i];\n                    objects[i] = objects[j];\n                    objects[j] = temp;\n                }\n            }\n            else {\n                if (b.center.x > bounds.center.x) {\n                    temp = objects[i];\n                    objects[i] = objects[j];\n                    objects[j] = temp;\n                }\n            }\n        }\n    }\n    return objects;\n}\n/** @private */\nexport function getAnnotationPosition(pts, annotation, bound) {\n    var angle;\n    var getloop;\n    var point;\n    getloop = getOffsetOfConnector(pts, annotation, bound);\n    angle = Point.findAngle(pts[getloop.index], pts[getloop.index + 1]);\n    var alignednumber = getAlignedPosition(annotation);\n    point = Point.transform(getloop.point, angle + 45, alignednumber);\n    getloop.point = point;\n    getloop.angle = angle;\n    return getloop;\n}\n/** @private */\nexport function getOffsetOfConnector(points, annotation, bounds) {\n    var length = 0;\n    var offset = annotation.offset;\n    var point;\n    var angle;\n    var offsetLength;\n    var lengths = [];\n    var prevLength;\n    var kCount;\n    for (var j = 0; j < points.length - 1; j++) {\n        length += Point.distancePoints(points[j], points[j + 1]);\n        lengths.push(length);\n    }\n    offsetLength = offset * length;\n    for (var k = 0; k < lengths.length; k++) {\n        if (lengths[k] >= offsetLength) {\n            angle = Point.findAngle(points[k], points[k + 1]);\n            point = Point.transform(points[k], angle, offsetLength - (prevLength || 0));\n            kCount = k;\n            return { point: point, index: kCount };\n        }\n        prevLength = lengths[k];\n    }\n    return { point: point, index: kCount };\n}\n/** @private */\nexport function getAlignedPosition(annotation) {\n    var cnst = annotation.content === undefined ? 10 : 0;\n    var state = 0;\n    switch (annotation.alignment) {\n        case 'Center':\n            state = 0;\n            break;\n        case 'Before':\n            state = -((0) / 2 + cnst);\n            break;\n        case 'After':\n            state = ((0) / 2 + cnst);\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function alignLabelOnSegments(obj, ang, pts) {\n    var angle = ang % 360;\n    ang %= 360;\n    var fourty5 = 45;\n    var one35 = 135;\n    var two25 = 225;\n    var three15 = 315;\n    var vAlign;\n    var hAlign;\n    switch (obj.alignment) {\n        case 'Before':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'bottom';\n                hAlign = (obj.offset === 0.5) ? 'center' : 'left';\n            }\n            break;\n        case 'After':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'bottom';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'left';\n            }\n            break;\n        case 'Center':\n            hAlign = 'center';\n            vAlign = 'center';\n            break;\n    }\n    if (obj.offset === 0 || obj.offset === 1) {\n        var direction = void 0;\n        direction = getBezierDirection(pts[0], pts[1]);\n        switch (direction) {\n            case 'left':\n                hAlign = obj.offset === 0 ? 'right' : 'left';\n                break;\n            case 'right':\n                hAlign = obj.offset === 0 ? 'left' : 'right';\n                break;\n            case 'bottom':\n                vAlign = obj.offset === 0 ? 'top' : 'bottom';\n                break;\n            case 'top':\n                vAlign = obj.offset === 0 ? 'bottom' : 'top';\n                break;\n        }\n    }\n    return { hAlign: hAlign, vAlign: vAlign };\n}\n/** @private */\nexport function getBezierDirection(src, tar) {\n    if (Math.abs(tar.x - src.x) > Math.abs(tar.y - src.y)) {\n        return src.x < tar.x ? 'right' : 'left';\n    }\n    else {\n        return src.y < tar.y ? 'bottom' : 'top';\n    }\n}\n/** @private */\nexport function removeChildNodes(node, diagram) {\n    if (node instanceof Node && node.children) {\n        for (var i = 0; i < node.children.length; i++) {\n            if (diagram.nameTable[node.children[i]].children) {\n                removeChildNodes(node, diagram);\n            }\n            diagram.removeFromAQuad(diagram.nameTable[node.children[i]]);\n            diagram.removeObjectsFromLayer(diagram.nameTable[node.children[i]]);\n            delete diagram.nameTable[node.children[i]];\n        }\n    }\n}\nfunction getChild(child, children) {\n    if (child && child.children && child.children.length > 0) {\n        for (var j = 0; j < child.children.length; j++) {\n            var subChild = child.children[j];\n            if (subChild instanceof Canvas) {\n                getChild(subChild, children);\n            }\n        }\n    }\n    if (children.indexOf(child.id) === -1) {\n        children.push(child.id);\n    }\n    return children;\n}\nfunction getSwimLaneChildren(nodes) {\n    var children = [];\n    var node;\n    var grid;\n    var childTable;\n    var child;\n    var gridChild = 'childTable';\n    for (var i = 0; i < nodes.length; i++) {\n        node = nodes[i];\n        if (node.shape.type === 'SwimLane') {\n            grid = node.wrapper.children[0];\n            childTable = grid[gridChild];\n            for (var _i = 0, _a = Object.keys(childTable); _i < _a.length; _i++) {\n                var key = _a[_i];\n                child = childTable[key];\n                children = getChild(child, children);\n            }\n        }\n    }\n    return children;\n}\nfunction removeUnnecessaryNodes(children, diagram) {\n    var nodes = diagram.nodes;\n    if (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            if (children.indexOf(nodes[i].id) !== -1) {\n                nodes.splice(i, 1);\n                i--;\n            }\n        }\n    }\n}\n/** @private */\nexport function serialize(model) {\n    var removeNodes = getSwimLaneChildren(model.nodes);\n    var clonedObject = cloneObject(model, model.getCustomProperty);\n    clonedObject.selectedItems.nodes = [];\n    clonedObject.selectedItems.connectors = [];\n    clonedObject.selectedItems.wrapper = null;\n    if (model.serializationSettings.preventDefaults) {\n        clonedObject = preventDefaults(clonedObject, model);\n    }\n    removeUnnecessaryNodes(removeNodes, clonedObject);\n    return JSON.stringify(clonedObject);\n}\nfunction preventDefaults(clonedObject, model, defaultObject, isNodeShape) {\n    defaultObject = getConstructor(model, defaultObject);\n    var properties = [];\n    properties = properties.concat(Object.keys(clonedObject));\n    for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n        var property = properties_1[_i];\n        if (model instanceof Node) {\n            isNodeShape = (property === 'shape') ? true : false;\n        }\n        if (clonedObject[property] instanceof Array) {\n            preventArrayDefaults(clonedObject, defaultObject, model, property);\n        }\n        else if (clonedObject[property] instanceof Object) {\n            if (property !== 'wrapper') {\n                clonedObject[property] = preventDefaults(clonedObject[property], model[property], defaultObject[property], isNodeShape);\n            }\n        }\n        else if ((defaultObject && clonedObject[property] === defaultObject[property]) || clonedObject[property] === undefined) {\n            if (!(isNodeShape && property === 'type') && !(model instanceof SwimLane && property === 'orientation')) {\n                delete clonedObject[property];\n            }\n        }\n        if (JSON.stringify(clonedObject[property]) === '[]' ||\n            JSON.stringify(clonedObject[property]) === '{}' ||\n            clonedObject[property] === undefined) {\n            delete clonedObject[property];\n        }\n    }\n    return clonedObject;\n}\nfunction preventArrayDefaults(clonedObject, defaultObject, model, property) {\n    if (clonedObject[property].length === 0) {\n        delete clonedObject[property];\n        // tslint:disable-next-line:no-any\n    }\n    else if (clonedObject[property].every(function (element) { return typeof element === 'number'; })) {\n        var i = void 0;\n        var isSameArray = true;\n        for (i = 0; i < clonedObject[property].length; i++) {\n            if (isSameArray && clonedObject[property][i] === defaultObject[property][i]) {\n                isSameArray = true;\n            }\n            else {\n                isSameArray = false;\n            }\n        }\n        if (isSameArray) {\n            delete clonedObject[property];\n        }\n    }\n    else {\n        var i = void 0;\n        if (property === 'layers') {\n            clonedObject[property].splice(0, 1);\n            if (clonedObject[property].length === 0) {\n                delete clonedObject[property];\n            }\n        }\n        if (clonedObject[property]) {\n            for (i = clonedObject[property].length - 1; i >= 0; i--) {\n                if (property === 'nodes' || property === 'connectors') {\n                    clonedObject[property][i].wrapper = null;\n                }\n                if (property !== 'dataManager') {\n                    clonedObject[property][i] = preventDefaults(clonedObject[property][i], model[property][i], (defaultObject[property] !== undefined ? defaultObject[property][i] : undefined));\n                    if (JSON.stringify(clonedObject[property][i]) === '[]' ||\n                        JSON.stringify(clonedObject[property][i]) === '{}' ||\n                        clonedObject[property][i] === undefined) {\n                        clonedObject[property].splice(i, 1);\n                    }\n                }\n            }\n        }\n    }\n}\n/* tslint:disable */\nfunction getConstructor(model, defaultObject) {\n    var obj = [];\n    var constructor;\n    var parent = new Diagram();\n    var getClassName = 'getClassName';\n    if (model[getClassName]) {\n        switch (model[getClassName]()) {\n            case 'Diagram':\n                constructor = new Diagram();\n                break;\n            case 'Node':\n                constructor = new Node(parent, '', obj);\n                break;\n            case 'Path':\n                constructor = new Path(parent, '', obj);\n                break;\n            case 'Native':\n                constructor = new Native(parent, '', obj);\n                break;\n            case 'Html':\n                constructor = new Html(parent, '', obj);\n                break;\n            case 'Image':\n                constructor = new Image(parent, '', obj);\n                break;\n            case 'Text':\n                constructor = new Text(parent, '', obj);\n                break;\n            case 'BasicShape':\n                constructor = new BasicShape(parent, '', obj);\n                break;\n            case 'FlowShape':\n                constructor = new FlowShape(parent, '', obj);\n                break;\n            case 'BpmnShape':\n                constructor = new BpmnShape(parent, '', obj);\n                break;\n            case 'UmlActivityShape':\n                constructor = new UmlActivityShape(parent, '', obj);\n                break;\n            case 'UmlClassifierShape':\n                constructor = new UmlClassifierShape(parent, '', obj);\n                break;\n            case 'SwimLane':\n                constructor = new SwimLane(parent, '', obj);\n                if (model.header) {\n                    constructor.header = new Header(parent, '', obj);\n                    constructor.header.style.fill = '';\n                }\n                break;\n            case 'ShapeAnnotation':\n                constructor = new ShapeAnnotation(parent, '', obj);\n                break;\n            case 'PointPort':\n                constructor = new PointPort(parent, '', obj);\n                break;\n            case 'BpmnGateway':\n                constructor = new BpmnGateway(parent, '', obj);\n                break;\n            case 'BpmnDataObject':\n                constructor = new BpmnDataObject(parent, '', obj);\n                break;\n            case 'BpmnEvent':\n                constructor = new BpmnEvent(parent, '', obj);\n                break;\n            case 'BpmnSubEvent':\n                constructor = new BpmnSubEvent(parent, '', obj);\n                break;\n            case 'BpmnActivity':\n                constructor = new BpmnActivity(parent, '', obj);\n                break;\n            case 'BpmnAnnotation':\n                constructor = new BpmnAnnotation(parent, '', obj);\n                break;\n            case 'MethodArguments':\n                constructor = new MethodArguments(parent, '', obj);\n                break;\n            case 'UmlClassAttribute':\n                constructor = new UmlClassAttribute(parent, '', obj);\n                break;\n            case 'UmlClassMethod':\n                constructor = new UmlClassMethod(parent, '', obj);\n                break;\n            case 'UmlClass':\n                constructor = new UmlClass(parent, '', obj);\n                break;\n            case 'UmlInterface':\n                constructor = new UmlInterface(parent, '', obj);\n                break;\n            case 'UmlEnumerationMember':\n                constructor = new UmlEnumerationMember(parent, '', obj);\n                break;\n            case 'UmlEnumeration':\n                constructor = new UmlEnumeration(parent, '', obj);\n                break;\n            case 'Lane':\n                constructor = new Lane(parent, '', obj);\n                break;\n            case 'Phase':\n                constructor = new Phase(parent, '', obj);\n                break;\n            case 'ChildContainer':\n                constructor = new ChildContainer();\n                break;\n            case 'Connector':\n                constructor = new Connector(parent, '', obj);\n                break;\n            case 'StraightSegment':\n                constructor = new StraightSegment(parent, '', obj);\n                break;\n            case 'BezierSegment':\n                constructor = new BezierSegment(parent, '', obj);\n                break;\n            case 'OrthogonalSegment':\n                constructor = new OrthogonalSegment(parent, '', obj);\n                break;\n            case 'PathAnnotation':\n                constructor = new PathAnnotation(parent, '', obj);\n                break;\n            case 'Stop':\n                constructor = new Stop(parent, '', obj);\n                break;\n            case 'Point':\n                if (!defaultObject) {\n                    constructor = new Point(parent, '', obj);\n                }\n                else {\n                    constructor = defaultObject;\n                }\n                break;\n            case 'UserHandle':\n                constructor = new UserHandle(parent, '', obj);\n                break;\n            case 'Command':\n                constructor = new Command(parent, '', obj);\n                break;\n        }\n    }\n    else {\n        constructor = defaultObject;\n    }\n    return constructor;\n}\n/* tslint:enable */\n/** @private */\nexport function deserialize(model, diagram) {\n    diagram.clear();\n    diagram.protectPropertyChange(true);\n    var map = diagram.dataSourceSettings.doBinding;\n    var nodeTemp = diagram.setNodeTemplate;\n    var getDescription = diagram.getDescription;\n    var getCustomProperty = diagram.getCustomProperty;\n    var commands = {};\n    for (var _i = 0, _a = diagram.commandManager.commands; _i < _a.length; _i++) {\n        var command = _a[_i];\n        commands[command.name] = { execute: command.execute, canExecute: command.canExecute };\n    }\n    var arrangeTickHorizontal = diagram.rulerSettings.horizontalRuler.arrangeTick;\n    var arrangeTickVertical = diagram.rulerSettings.verticalRuler.arrangeTick;\n    var getLayoutInfo = diagram.layout.getLayoutInfo;\n    var getBranch = diagram.layout.getBranch;\n    var nodeDefaults = diagram.getNodeDefaults;\n    var connectorDefaults = diagram.getConnectorDefaults;\n    var dataObj = JSON.parse(model);\n    dataObj = upgrade(dataObj);\n    diagram.contextMenuSettings = dataObj.contextMenuSettings || {};\n    diagram.constraints = dataObj.constraints || DiagramConstraints.Default;\n    diagram.tool = dataObj.tool || DiagramTools.Default;\n    diagram.bridgeDirection = dataObj.bridgeDirection || 'Top';\n    diagram.pageSettings = dataObj.pageSettings || {};\n    diagram.drawingObject = dataObj.drawingObject || undefined;\n    diagram.tooltip = dataObj.tooltip || {};\n    diagram.addInfo = dataObj.addInfo || undefined;\n    diagram.getDescription = getDescription;\n    diagram.scrollSettings = dataObj.scrollSettings || {};\n    diagram.commandManager = dataObj.commandManager || {};\n    diagram.layers = dataObj.layers || [];\n    diagram.rulerSettings.horizontalRuler.arrangeTick = arrangeTickHorizontal;\n    diagram.rulerSettings.verticalRuler.arrangeTick = arrangeTickVertical;\n    for (var _b = 0, _c = diagram.commandManager.commands; _b < _c.length; _b++) {\n        var cmd = _c[_b];\n        if (commands[cmd.name]) {\n            cmd.execute = commands[cmd.name].execute;\n            cmd.canExecute = commands[cmd.name].canExecute;\n        }\n    }\n    diagram.backgroundColor = dataObj.backgroundColor || 'transparent';\n    diagram.basicElements = dataObj.basicElements || [];\n    diagram.connectors = dataObj.connectors || [];\n    diagram.dataSourceSettings = dataObj.dataSourceSettings || {};\n    diagram.dataSourceSettings.doBinding = map;\n    diagram.height = dataObj.height || '100%';\n    diagram.setNodeTemplate = nodeTemp;\n    diagram.getConnectorDefaults = connectorDefaults;\n    diagram.getNodeDefaults = nodeDefaults;\n    diagram.getCustomProperty = getCustomProperty;\n    diagram.mode = dataObj.mode || 'SVG';\n    if (dataObj.nodes.length) {\n        for (var i = 0; i < dataObj.nodes.length; i++) {\n            if (dataObj.nodes[i].shape && dataObj.nodes[i].shape.type === 'SwimLane') {\n                pasteSwimLane(dataObj.nodes[i], undefined, undefined, undefined, undefined, true);\n            }\n        }\n    }\n    diagram.nodes = dataObj.nodes || [];\n    diagram.rulerSettings = dataObj.rulerSettings || {};\n    diagram.snapSettings = dataObj.snapSettings || {};\n    diagram.width = dataObj.width || '100%';\n    diagram.layout = dataObj.layout || {};\n    diagram.layout.getLayoutInfo = getFunction(getLayoutInfo);\n    diagram.layout.getBranch = getFunction(getBranch);\n    diagram.diagramActions = 0;\n    diagram.isLoading = true;\n    diagram.protectPropertyChange(false);\n    var key = 'refresh';\n    var component;\n    for (var i = 0; i < diagram.views.length; i++) {\n        component = diagram.views[diagram.views[i]];\n        component.refresh();\n        if (component instanceof Diagram) {\n            diagram.element.classList.add('e-diagram');\n        }\n    }\n    if (dataObj.selectedItems) {\n        dataObj.selectedItems.nodes = [];\n        dataObj.selectedItems.connectors = [];\n    }\n    diagram.selectedItems = dataObj.selectedItems;\n    return dataObj;\n}\n/** @private */\nexport function upgrade(dataObj) {\n    if (dataObj && (dataObj.version === undefined || (dataObj.version < 17.1))) {\n        var nodes = dataObj.nodes;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node && node.ports.length > 0) {\n                for (var _a = 0, _b = node.ports; _a < _b.length; _a++) {\n                    var port = _b[_a];\n                    if (port && port.constraints && port.constraints === PortConstraints.None) {\n                        port.constraints = PortConstraints.Default;\n                    }\n                }\n            }\n        }\n    }\n    return dataObj;\n}\n/** @private */\nexport function updateStyle(changedObject, target) {\n    //since text style model is the super set of shape style model, we used text style model\n    var style = target.style;\n    var textElement = target;\n    target.canApplyStyle = true;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'fill':\n                style.fill = changedObject.fill;\n                if (style instanceof StrokeStyle) {\n                    /* tslint:disable:no-string-literal */\n                    style['fill'] = 'transparent';\n                }\n                break;\n            case 'textOverflow':\n                style.textOverflow = changedObject.textOverflow;\n                break;\n            case 'opacity':\n                style.opacity = changedObject.opacity;\n                break;\n            case 'strokeColor':\n                style.strokeColor = changedObject.strokeColor;\n                break;\n            case 'strokeDashArray':\n                style.strokeDashArray = changedObject.strokeDashArray;\n                break;\n            case 'strokeWidth':\n                style.strokeWidth = changedObject.strokeWidth;\n                break;\n            case 'bold':\n                style.bold = changedObject.bold;\n                break;\n            case 'color':\n                style.color = changedObject.color;\n                break;\n            case 'textWrapping':\n                style.textWrapping = changedObject.textWrapping;\n                break;\n            case 'fontFamily':\n                style.fontFamily = changedObject.fontFamily;\n                break;\n            case 'fontSize':\n                style.fontSize = changedObject.fontSize;\n                break;\n            case 'italic':\n                style.italic = changedObject.italic;\n                break;\n            case 'textAlign':\n                style.textAlign = changedObject.textAlign;\n                break;\n            case 'whiteSpace':\n                style.whiteSpace = changedObject.whiteSpace;\n                break;\n            case 'textDecoration':\n                style.textDecoration = changedObject.textDecoration;\n                break;\n            case 'gradient':\n                updateGradient(changedObject.gradient, style.gradient);\n                break;\n        }\n    }\n    if (target instanceof TextElement) {\n        textElement.refreshTextElement();\n    }\n}\nfunction updateGradient(changedGradient, targetGradient) {\n    for (var _i = 0, _a = Object.keys(changedGradient); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'type':\n                targetGradient.type = changedGradient.type;\n                break;\n            case 'x1':\n                targetGradient.x1 = changedGradient.x1;\n                break;\n            case 'x2':\n                targetGradient.x2 = changedGradient.x2;\n                break;\n            case 'y1':\n                targetGradient.y1 = changedGradient.y1;\n                break;\n            case 'y2':\n                targetGradient.y2 = changedGradient.y2;\n                break;\n            case 'cx':\n                targetGradient.cx = changedGradient.cx;\n                break;\n            case 'cy':\n                targetGradient.cy = changedGradient.cy;\n                break;\n            case 'fx':\n                targetGradient.fx = changedGradient.fx;\n                break;\n            case 'fy':\n                targetGradient.fy = changedGradient.fy;\n                break;\n            case 'r':\n                targetGradient.r = changedGradient.r;\n                break;\n            case 'stops':\n                targetGradient.stops = changedGradient.stops;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateHyperlink(changedObject, target, actualAnnotation) {\n    var textElement = target;\n    var hyperlink = textElement.hyperlink;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'color':\n                textElement.style.color = hyperlink.color = changedObject.color;\n                break;\n            case 'content':\n                textElement.content = hyperlink.content = changedObject.content || hyperlink.link;\n                break;\n            case 'link':\n                var labelStyle = actualAnnotation.style;\n                textElement.style.color = changedObject.link ? hyperlink.color : labelStyle.color;\n                textElement.style.textDecoration = changedObject.link ? hyperlink.textDecoration : actualAnnotation.style.textDecoration;\n                textElement.content = changedObject.link ? hyperlink.content || changedObject.link : actualAnnotation.content;\n                hyperlink.link = changedObject.link;\n                break;\n            case 'textDecoration':\n                textElement.style.textDecoration = hyperlink.textDecoration = changedObject.textDecoration;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateShapeContent(content, actualObject, diagram) {\n    content.width = actualObject.width;\n    content.height = actualObject.height;\n    content.minHeight = actualObject.minHeight;\n    content.maxHeight = actualObject.maxHeight;\n    content.minWidth = actualObject.minWidth;\n    content.maxWidth = actualObject.maxWidth;\n    content.horizontalAlignment = actualObject.wrapper.children[0].horizontalAlignment;\n    content.verticalAlignment = actualObject.wrapper.children[0].verticalAlignment;\n    content.relativeMode = actualObject.wrapper.children[0].relativeMode;\n    content.visible = actualObject.wrapper.children[0].visible;\n    if (actualObject.shape instanceof Text) {\n        content.margin = actualObject.shape.margin;\n    }\n    content.id = actualObject.wrapper.children[0].id;\n    content.style = actualObject.style;\n    var view;\n    for (var _i = 0, _a = diagram.views; _i < _a.length; _i++) {\n        var elementId = _a[_i];\n        removeElement(actualObject.id + '_groupElement', elementId);\n        removeElement(actualObject.id + '_content_groupElement', elementId);\n        removeElement(actualObject.id + '_content_html_element', elementId);\n    }\n    actualObject.wrapper.children.splice(0, 1);\n    actualObject.wrapper.children.splice(0, 0, content);\n}\n/** @private */\nexport function updateShape(node, actualObject, oldObject, diagram) {\n    var content = new DiagramElement();\n    var i;\n    var textStyle;\n    var nodeStyle;\n    switch (node.shape.type) {\n        case 'Path':\n            var pathContent = new PathElement();\n            pathContent.data = actualObject.shape.data;\n            content = pathContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Image':\n            var imageContent = new ImageElement();\n            imageContent.source = actualObject.shape.source;\n            imageContent.imageAlign = actualObject.shape.align;\n            imageContent.imageScale = actualObject.shape.scale;\n            content = imageContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Text':\n            //issue\n            var textContent = new TextElement();\n            //  (textContent as TextElement).content = (node.shape as TextModel).content;\n            content = textContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Basic':\n            var element = void 0;\n            element = actualObject.shape.shape === 'Rectangle' ? new DiagramElement() : new PathElement();\n            if (actualObject.shape.shape === 'Polygon') {\n                element.data = getPolygonPath(actualObject.shape.points);\n            }\n            else {\n                element.data = getBasicShape(actualObject.shape.shape);\n            }\n            updateShapeContent(content, actualObject, diagram);\n            if (actualObject.shape.shape === 'Rectangle') {\n                element.cornerRadius = actualObject.shape.cornerRadius;\n            }\n            content = element;\n            break;\n        case 'Flow':\n            var flowShapeElement = new PathElement();\n            flowShapeElement.data = getFlowShape(actualObject.shape.shape);\n            content = flowShapeElement;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Native':\n            var nativeContent = new DiagramNativeElement(node.id, diagram.element.id);\n            nativeContent.content = actualObject.shape.content;\n            nativeContent.scale = actualObject.shape.scale;\n            content = nativeContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'HTML':\n            var htmlContent = new DiagramHtmlElement(node.id, diagram.element.id);\n            htmlContent.content = actualObject.shape.content;\n            content = htmlContent;\n            updateShapeContent(content, actualObject, diagram);\n    }\n    if (node.shape.type === undefined || node.shape.type === oldObject.shape.type) {\n        updateContent(node, actualObject, diagram);\n    }\n    else {\n        content.width = actualObject.wrapper.children[0].width;\n        content.height = actualObject.wrapper.children[0].height;\n        if (actualObject.shape instanceof Text) {\n            content.margin = actualObject.shape.margin;\n        }\n        content.style = actualObject.style;\n        actualObject.wrapper.children[0] = content;\n    }\n}\n/** @private */\nexport function updateContent(newValues, actualObject, diagram) {\n    if (Object.keys(newValues.shape).length > 0) {\n        if (actualObject.shape.type === 'Path' && newValues.shape.data !== undefined) {\n            actualObject.wrapper.children[0].data = newValues.shape.data;\n        }\n        else if (actualObject.shape.type === 'Text' && newValues.shape.content !== undefined) {\n            actualObject.wrapper.children[0].content = newValues.shape.content;\n        }\n        else if (actualObject.shape.type === 'Image' && newValues.shape.source !== undefined) {\n            actualObject.wrapper.children[0].source = newValues.shape.source;\n        }\n        else if (actualObject.shape.type === 'Native') {\n            var nativeElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                nativeElement = getDiagramElement(actualObject.wrapper.children[0].id + '_native_element', diagram.views[i]);\n                if (newValues.shape.content !== undefined && nativeElement) {\n                    nativeElement.removeChild(nativeElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    nativeElement.appendChild(getContent(actualObject.wrapper.children[0], false));\n                }\n            }\n            actualObject.wrapper.children[0].scale = newValues.shape.scale ?\n                newValues.shape.scale : actualObject.wrapper.children[0].scale;\n        }\n        else if (actualObject.shape.type === 'HTML') {\n            var htmlElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                htmlElement = getDiagramElement(actualObject.wrapper.children[0].id + '_html_element', diagram.views[i]);\n                if (htmlElement) {\n                    htmlElement.removeChild(htmlElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    htmlElement.appendChild(getContent(actualObject.wrapper.children[0], true));\n                }\n            }\n        }\n        else if (actualObject.shape.type === 'Flow' && newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var flowshapedata = getFlowShape(shapes.toString());\n            actualObject.wrapper.children[0].data = flowshapedata;\n        }\n        else if (actualObject.shape.type === 'UmlActivity' && newValues.shape.shape !== undefined) {\n            updateUmlActivityNode(actualObject, newValues);\n        }\n        else if (newValues.shape.cornerRadius !== undefined) {\n            actualObject.wrapper.children[0].cornerRadius = newValues.shape.cornerRadius;\n        }\n        else if (newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var basicShapeData = getBasicShape(shapes.toString());\n            actualObject.wrapper.children[0].data = basicShapeData;\n        }\n    }\n    actualObject.wrapper.children[0].canMeasurePath = true;\n}\n/** @private */\nexport function updateUmlActivityNode(actualObject, newValues) {\n    actualObject.shape.shape = newValues.shape.shape;\n    var shapes = actualObject.shape.shape;\n    var umlActivityShapeData = getUMLActivityShape(shapes.toString());\n    if (actualObject.shape.shape === 'InitialNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'ForkNode' ||\n        actualObject.shape.shape === 'JoinNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'FinalNode') {\n        if (actualObject instanceof Node) {\n            actualObject.wrapper = getUMLFinalNode(actualObject);\n        }\n        actualObject.wrapper.children[0].data = umlActivityShapeData;\n    }\n}\n/** @private */\nexport function getUMLFinalNode(node) {\n    var finalNodeShape = new Canvas();\n    finalNodeShape.style.fill = 'transparent';\n    //childNode0\n    var pathData = 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25' +\n        ' C 50 38.79 38.78 50 25 50';\n    var innerFinalNode = new PathElement();\n    innerFinalNode.data = pathData;\n    innerFinalNode.id = node.id + '_0_finalNode';\n    innerFinalNode.horizontalAlignment = 'Center';\n    innerFinalNode.verticalAlignment = 'Center';\n    innerFinalNode.relativeMode = 'Object';\n    innerFinalNode.style.strokeColor = node.style.strokeColor;\n    innerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //childNode1\n    var outerFinalNode = new PathElement();\n    outerFinalNode.data = pathData;\n    outerFinalNode.id = node.id + '_1_finalNode';\n    outerFinalNode.horizontalAlignment = 'Center';\n    outerFinalNode.verticalAlignment = 'Center';\n    outerFinalNode.relativeMode = 'Object';\n    outerFinalNode.style.fill = node.style.fill;\n    outerFinalNode.style.strokeColor = node.style.strokeColor;\n    outerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //append child and set style\n    finalNodeShape.children = [innerFinalNode, outerFinalNode];\n    finalNodeShape.children[0].width = node.width;\n    finalNodeShape.children[0].height = node.height;\n    finalNodeShape.children[1].height = node.height / 1.5;\n    finalNodeShape.children[1].width = node.width / 1.5;\n    finalNodeShape.style.strokeWidth = 0;\n    finalNodeShape.style.strokeColor = 'transparent';\n    return finalNodeShape;\n}\n/** @private */\nexport function getUMLActivityShapes(umlActivityShape, content, node) {\n    var umlActivityShapeData = getUMLActivityShape(node.shape.shape);\n    umlActivityShape.data = umlActivityShapeData;\n    content = umlActivityShape;\n    switch (node.shape.shape) {\n        case 'StructuredNode':\n            if (node.annotations) {\n                for (var i = 0; i < node.annotations.length; i++) {\n                    node.annotations[i].content = '<<' + node.annotations[i].content + '>>';\n                }\n            }\n            content = umlActivityShape;\n            break;\n        case 'FinalNode':\n            content = getUMLFinalNode(node);\n            break;\n    }\n    return content;\n}\n/**   @private  */\nexport function removeGradient(svgId) {\n    removeElement(svgId + '_linear');\n    removeElement(svgId + '_radial');\n}\n/** @private */\nexport function removeItem(array, item) {\n    var index = array.indexOf(item);\n    if (index >= 0) {\n        array.splice(index, 1);\n    }\n}\n/** @private */\nexport function updateConnector(connector, points) {\n    var srcPoint;\n    var anglePoint;\n    var srcDecorator;\n    var tarDecorator;\n    var targetPoint;\n    connector.intermediatePoints = points;\n    connector.updateSegmentElement(connector, points, connector.wrapper.children[0]);\n    srcPoint = connector.sourcePoint;\n    srcDecorator = connector.sourceDecorator;\n    if (connector.type === 'Bezier') {\n        var firstSegment = connector.segments[0];\n        var lastSegment = connector.segments[connector.segments.length - 1];\n        anglePoint = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n            !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n    }\n    else {\n        anglePoint = connector.intermediatePoints;\n    }\n    points = connector.clipDecorators(connector, points);\n    var element = connector.wrapper.children[0];\n    element.canMeasurePath = true;\n    element = connector.wrapper.children[1];\n    connector.updateDecoratorElement(element, points[0], anglePoint[1], srcDecorator);\n    targetPoint = connector.targetPoint;\n    tarDecorator = connector.targetDecorator;\n    element = connector.wrapper.children[2];\n    connector.updateDecoratorElement(element, points[points.length - 1], anglePoint[anglePoint.length - 2], tarDecorator);\n    connector.updateShapeElement(connector);\n}\n/** @private */\nexport function getUserHandlePosition(selectorItem, handle, transform) {\n    var wrapper = selectorItem.wrapper;\n    var positionPoints;\n    var bounds = wrapper.bounds;\n    var offset = handle.offset;\n    var size = handle.size / transform.scale;\n    var margin = handle.margin;\n    var point;\n    var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n    var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n    point = { x: 0, y: 0 };\n    if (selectorItem.nodes.length > 0) {\n        switch (handle.side) {\n            case 'Top':\n                point.x += left + bounds.width * offset;\n                point.y += top - size;\n                break;\n            case 'Bottom':\n                point.x += left + offset * bounds.width;\n                point.y += top + wrapper.actualSize.height + size;\n                break;\n            case 'Left':\n                point.x += left - size;\n                point.y += top + offset * bounds.height;\n                break;\n            case 'Right':\n                point.x += left + wrapper.actualSize.width + size;\n                point.y += top + offset * bounds.height;\n                break;\n        }\n        point.x += ((margin.left - margin.right) / transform.scale) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += ((margin.top - margin.bottom) / transform.scale) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n    }\n    else if (selectorItem.connectors.length > 0) {\n        var connector = selectorItem.connectors[0];\n        var annotation = { offset: offset };\n        var connectorOffset = getOffsetOfConnector(connector.intermediatePoints, annotation, bounds);\n        var index = connectorOffset.index;\n        point = connectorOffset.point;\n        var getPointloop = getAnnotationPosition(connector.intermediatePoints, annotation, bounds);\n        var points = connector.intermediatePoints;\n        var offsetLength = void 0;\n        var angle = getPointloop.angle;\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, -angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n        matrix = identityMatrix();\n        rotateMatrix(matrix, angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n    }\n    if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n        point = transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function canResizeCorner(selectorConstraints, action, thumbsConstraints, selectedItems) {\n    if (selectedItems.annotation) {\n        if (canResize(selectedItems.annotation)) {\n            return true;\n        }\n    }\n    else if ((SelectorConstraints[action] & selectorConstraints) && (ThumbsConstraints[action] & thumbsConstraints)) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function canShowCorner(selectorConstraints, action) {\n    if (SelectorConstraints[action] & selectorConstraints) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkPortRestriction(port, portVisibility) {\n    return port.visibility & portVisibility;\n}\n/** @private */\nexport function findAnnotation(node, id) {\n    var annotation;\n    if (node.shape.type === 'Text') {\n        annotation = (node.shape);\n    }\n    else {\n        var annotationId = id.split('_');\n        id = annotationId[annotationId.length - 1];\n        for (var i = 0; i < node.annotations.length; i++) {\n            if (id === node.annotations[i].id) {\n                annotation = node.annotations[i];\n            }\n        }\n    }\n    return annotation;\n}\n/** @private */\nexport function findPort(node, id) {\n    var port;\n    var portId = id.split('_');\n    id = portId[portId.length - 1];\n    for (var i = 0; i < node.ports.length; i++) {\n        if (id === node.ports[i].id) {\n            return node.ports[i];\n        }\n    }\n    return port;\n}\n/** @private */\nexport function getInOutConnectPorts(node, isInConnect) {\n    var port = {};\n    var i = 0;\n    if (node.ports) {\n        var ports = node.ports;\n        for (i = 0; i < ports.length; i++) {\n            if (isInConnect) {\n                if ((ports[i].constraints & PortConstraints.InConnect)) {\n                    port = ports[i];\n                }\n            }\n            else {\n                if ((ports[i].constraints & PortConstraints.OutConnect)) {\n                    port = ports[i];\n                }\n            }\n        }\n    }\n    return port;\n}\n/** @private */\nexport function findObjectIndex(node, id, annotation) {\n    var index;\n    var collection = (annotation) ? node.annotations : node.ports;\n    for (var i = 0; i < collection.length; i++) {\n        if (collection[i].id === id) {\n            return (i).toString();\n        }\n    }\n    return null;\n}\n/** @private */\nexport function getObjectFromCollection(obj, id) {\n    var i;\n    for (i = 0; i < obj.length; i++) {\n        if (id === obj[i].id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function scaleElement(element, sw, sh, refObject) {\n    if (element.width !== undefined && element.height !== undefined) {\n        element.width *= sw;\n        element.height *= sh;\n    }\n    if (element instanceof Container) {\n        var matrix = identityMatrix();\n        var width = refObject.width || refObject.actualSize.width;\n        var height = refObject.height || refObject.actualSize.height;\n        if (width !== undefined && height !== undefined) {\n            var x = refObject.offsetX - width * refObject.pivot.x;\n            var y = refObject.offsetY - height * refObject.pivot.y;\n            var refPoint = {\n                x: x + width * refObject.pivot.x,\n                y: y + height * refObject.pivot.y\n            };\n            refPoint = rotatePoint(refObject.rotateAngle, refObject.offsetX, refObject.offsetY, refPoint);\n            rotateMatrix(matrix, -refObject.rotateAngle, refPoint.x, refPoint.y);\n            scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refObject.rotateAngle, refPoint.x, refPoint.y);\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.width !== undefined && child.height !== undefined) {\n                    var newPosition = transformPointByMatrix(matrix, { x: child.offsetX, y: child.offsetY });\n                    child.offsetX = newPosition.x;\n                    child.offsetY = newPosition.y;\n                    scaleElement(child, sw, sh, refObject);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChild(obj, x, y, nameTable, drop, diagram) {\n    var child = obj.children;\n    var node;\n    for (var i = 0; i < child.length; i++) {\n        node = nameTable[child[i]];\n        if (node) {\n            if (node.children) {\n                arrangeChild(node, x, y, nameTable, drop, diagram);\n            }\n            else {\n                node.offsetX -= x;\n                node.offsetY -= y;\n                if (!drop) {\n                    var content = void 0;\n                    var container = void 0;\n                    nameTable[node.id] = node;\n                    container = node.initContainer();\n                    if (!container.children) {\n                        container.children = [];\n                    }\n                    content = node.init(diagram);\n                    container.children.push(content);\n                    container.measure(new Size(node.width, node.height));\n                    container.arrange(container.desiredSize);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function insertObject(obj, key, collection) {\n    if (collection.length === 0) {\n        collection.push(obj);\n    }\n    else if (collection.length === 1) {\n        if (collection[0][key] > obj[key]) {\n            collection.splice(0, 0, obj);\n        }\n        else {\n            collection.push(obj);\n        }\n    }\n    else if (collection.length > 1) {\n        var low = 0;\n        var high = collection.length - 1;\n        var mid = Math.floor((low + high) / 2);\n        while (mid !== low) {\n            if (collection[mid][key] < obj[key]) {\n                low = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n            else if (collection[mid][key] > obj[key]) {\n                high = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n        }\n        if (collection[high][key] < obj[key]) {\n            collection.push(obj);\n        }\n        else if (collection[low][key] > obj[key]) {\n            collection.splice(low, 0, obj);\n        }\n        else if ((collection[low][key] < obj[key]) && collection[high][key] > obj[key]) {\n            collection.splice(high, 0, obj);\n        }\n    }\n}\n/** @private */\nexport function getElement(element) {\n    var diagramElement = document.getElementById(element.diagramId);\n    var instance = 'ej2_instances';\n    var node = {};\n    var nodes = diagramElement[instance][0].nodes;\n    if (nodes === undefined) {\n        nodes = getPaletteSymbols(diagramElement[instance][0]);\n    }\n    var length = 'length';\n    for (var i = 0; nodes && i < nodes[length]; i++) {\n        if (nodes[i].id === element.nodeId) {\n            return getAnnotation(nodes[i], element);\n        }\n    }\n    var connectors = diagramElement[instance][0].connectors;\n    for (var i = 0; connectors && i < connectors[length]; i++) {\n        if (connectors[i].id === element.nodeId) {\n            return getAnnotation(connectors[i], element);\n        }\n    }\n    var enterObject = diagramElement[instance][0].enterObject;\n    if (enterObject && (enterObject['id'] === element.nodeId || enterObject['children'])) {\n        if (enterObject['children'] && groupHasType(enterObject, 'HTML', diagramElement[instance][0].enterTable)) {\n            return diagramElement[instance][0].enterTable[element.nodeId];\n        }\n        else {\n            return enterObject;\n        }\n    }\n    return null;\n}\nfunction getAnnotation(obj, element) {\n    var annotations = obj.annotations;\n    var length = 'length';\n    var j;\n    for (j = 0; annotations && j < annotations[length]; j++) {\n        if (element.annotationId && annotations[j].id === element.annotationId) {\n            return annotations[j];\n        }\n    }\n    return obj;\n}\n/** @private */\nfunction getPaletteSymbols(symbolPalette) {\n    var nodes = [];\n    for (var i = 0; i < symbolPalette.palettes.length; i++) {\n        var symbols = symbolPalette.palettes[i].symbols;\n        for (var j = 0; j < symbols.length; j++) {\n            if (symbols[j] instanceof Node) {\n                nodes.push(symbols[j]);\n            }\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function getPoint(x, y, w, h, angle, offsetX, offsetY, cornerPoint) {\n    var pivot = { x: 0, y: 0 };\n    var trans = identityMatrix();\n    rotateMatrix(trans, angle, offsetX, offsetY);\n    switch (cornerPoint.x) {\n        case 0:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h }));\n                    break;\n            }\n            break;\n        case 0.5:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h }));\n                    break;\n            }\n            break;\n        case 1:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h }));\n                    break;\n            }\n            break;\n    }\n    return { x: pivot.x, y: pivot.y };\n}\n/**\n * Get the object as Node | Connector\n * @param obj\n */\nexport var getObjectType = function (obj) {\n    if (obj) {\n        if (obj.sourceID !== undefined || obj.sourcePoint !== undefined ||\n            obj.targetID !== undefined || obj.targetPoint !== undefined ||\n            obj.type !== undefined) {\n            obj = Connector;\n        }\n        else {\n            obj = Node;\n        }\n    }\n    return obj;\n};\n/** @private */\nexport var flipConnector = function (connector) {\n    if (!connector.sourceID && !connector.targetID) {\n        var source = { x: connector.sourcePoint.x, y: connector.sourcePoint.y };\n        var target = { x: connector.targetPoint.x, y: connector.targetPoint.y };\n        if (connector.flip === 'Horizontal') {\n            connector.sourcePoint.x = target.x;\n            connector.targetPoint.x = source.x;\n        }\n        else if (connector.flip === 'Vertical') {\n            connector.sourcePoint.y = target.y;\n            connector.targetPoint.y = source.y;\n        }\n        else if (connector.flip === 'Both') {\n            connector.sourcePoint = target;\n            connector.targetPoint = source;\n        }\n    }\n};\n/** @private */\nexport var updatePortEdges = function (portContent, flip, port) {\n    var offsetX = port.offset.x;\n    var offsetY = port.offset.y;\n    if (flip === 'Horizontal') {\n        offsetX = 1 - port.offset.x;\n        offsetY = port.offset.y;\n    }\n    else if (flip === 'Vertical') {\n        offsetX = port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    else if (flip === 'Both') {\n        offsetX = 1 - port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    portContent.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n    return portContent;\n};\n/** @private */\nexport var alignElement = function (element, offsetX, offsetY, diagram, flip) {\n    if (element.hasChildren()) {\n        for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            var childX = ((offsetX - child.offsetX) + offsetX);\n            var childY = ((offsetY - child.offsetY) + offsetY);\n            if (flip === 'Horizontal' || flip === 'Both') {\n                child.offsetX = childX;\n                child.flipOffset.x = childX - child.desiredSize.width / 2;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                child.offsetY = childY;\n                child.flipOffset.y = childY - child.desiredSize.height / 2;\n            }\n            if (child instanceof Canvas || child instanceof Container) {\n                alignElement(child, offsetX, offsetY, diagram, flip);\n            }\n            child.measure(new Size(child.bounds.width, child.bounds.height));\n            child.arrange(child.desiredSize);\n            var node = diagram.nameTable[child.id];\n            if (node) {\n                diagram.updateConnectorEdges(node);\n            }\n        }\n    }\n};\n/** @private */\nexport var updatePathElement = function (anglePoints, connector) {\n    var pathElement = new PathElement();\n    var pathseqData;\n    for (var j = 0; j < anglePoints.length - 1; j++) {\n        pathseqData = findPath(anglePoints[j], anglePoints[j + 1]);\n        pathElement.data = pathseqData[0];\n        pathElement.id = connector.id + '_' + (connector.shape.sequence);\n        pathElement.offsetX = pathseqData[1].x;\n        pathElement.offsetY = pathseqData[1].y;\n        pathElement.rotateAngle = 45;\n        pathElement.transform = Transform.Self;\n    }\n    return pathElement;\n};\n/** @private */\nexport var findPath = function (sourcePoint, targetPoint) {\n    var beginningpoint = { x: sourcePoint.x, y: sourcePoint.y };\n    var distance = findDistance(sourcePoint, targetPoint);\n    distance = Math.min(30, distance / 2);\n    var angle = findAngle(sourcePoint, targetPoint);\n    var transferpt = Point.transform({ x: beginningpoint.x, y: beginningpoint.y }, angle, distance);\n    var startpoint = Point.transform({ x: transferpt.x, y: transferpt.y }, angle, -12);\n    var endpoint = Point.transform({ x: startpoint.x, y: startpoint.y }, angle, 12 * 2);\n    var path = 'M' + startpoint.x + ' ' + startpoint.y + ' L' + endpoint.x + ' ' + endpoint.y;\n    return [path, transferpt];\n};\n/** @private */\nexport var findDistance = function (point1, point2) {\n    return Math.sqrt(Math.pow(point2.x - point1.x, 2) + Math.pow(point2.y - point1.y, 2));\n};\n","import { NodeConstraints, AnnotationConstraints } from '../enum/enum';\nimport { Node } from '../objects/node';\nimport { randomId } from './../utility/base-util';\n/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function getULMClassifierShapes(content, node, diagram) {\n    var classifier;\n    var textWrap = 'NoWrap';\n    if (node.shape.classifier === 'Class') {\n        classifier = node.shape.classShape;\n    }\n    else if (node.shape.classifier === 'Enumeration') {\n        classifier = node.shape.enumerationShape;\n    }\n    else if (node.shape.classifier === 'Interface') {\n        classifier = node.shape.interfaceShape;\n    }\n    var attributeText = '';\n    node.container = { type: 'Stack', orientation: 'Vertical' };\n    node.constraints = (NodeConstraints.Default | NodeConstraints.HideThumbs) &\n        ~(NodeConstraints.Rotate | NodeConstraints.Resize);\n    node.style = {\n        fill: node.style.fill, strokeColor: 'black',\n        strokeWidth: 1.5\n    };\n    node.children = [];\n    if (node.maxWidth) {\n        textWrap = 'Wrap';\n    }\n    var newObj = new Node(diagram, 'nodes', {\n        id: node.id + '_umlClass_header',\n        annotations: [\n            {\n                id: 'name', content: classifier.name,\n                offset: { x: 0.5, y: 0.65 }, margin: { left: 10, right: 10 },\n                style: {\n                    bold: true, fontSize: 14, color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }\n            }, {\n                content: '<<' + node.shape.classifier + '>>', margin: { left: 10, right: 10 },\n                id: 'class', style: {\n                    fontSize: classifier.style.fontSize,\n                    color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }, offset: { x: 0.5, y: 0.3 }, constraints: AnnotationConstraints.ReadOnly\n            },\n        ],\n        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n        verticalAlignment: 'Stretch',\n        horizontalAlignment: 'Stretch',\n        style: { fill: node.style.fill, strokeColor: '#ffffff00' }\n    }, true);\n    diagram.initObject(newObj);\n    diagram.nodes.push(newObj);\n    node.children.push(newObj.id);\n    getClassNodes(node, diagram, classifier, textWrap);\n    getClassMembers(node, diagram, classifier, textWrap);\n    node.offsetX = node.offsetX;\n    node.offsetY = node.offsetY;\n    node.style.fill = node.style.fill;\n    node.borderColor = node.borderColor;\n    diagram.initObject(node);\n    return content;\n}\n/** @private */\nexport function getClassNodes(node, diagram, classifier, textWrap) {\n    if (node.shape.classifier === 'Enumeration') {\n        var member = classifier.members;\n        if (member && member.length) {\n            addSeparator(node, diagram);\n            var memberText = '';\n            for (var i = 0; i < member.length; i++) {\n                var members = member[i];\n                if (members.name !== '') {\n                    memberText += members.name;\n                }\n                if (i !== member.length) {\n                    var style = getStyle(node, members);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlMember',\n                        annotations: [\n                            {\n                                id: 'name', content: memberText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        style: { fill: node.style.fill, strokeColor: '#ffffff00', textWrapping: textWrap },\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    memberText = '';\n                    if (members.isSeparator && (i !== member.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n    else {\n        var attributes = classifier.attributes;\n        if (attributes.length) {\n            var attributeText = '';\n            addSeparator(node, diagram);\n            for (var i = 0; i < attributes.length; i++) {\n                var text = void 0;\n                var attribute = attributes[i];\n                if (attribute.scope && (attribute).scope === 'Public') {\n                    text = ' +';\n                }\n                else if (attribute.scope && attribute.scope === 'Private') {\n                    text = '-';\n                }\n                else if (attribute.scope && attribute.scope === 'Protected') {\n                    text = '#';\n                }\n                else {\n                    text = '~';\n                }\n                if (attribute.name !== '') {\n                    if (text) {\n                        attributeText += text + ' ' + attribute.name + ' ' + ': ' + attribute.type;\n                    }\n                }\n                if (i !== attributes.length) {\n                    var style = getStyle(node, attribute);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlProperty', style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                        annotations: [\n                            {\n                                id: 'name', content: attributeText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    attributeText = '';\n                    if (attribute.isSeparator && (i !== attributes.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function getClassMembers(node, diagram, classifier, textWrap) {\n    if (classifier.methods && classifier.methods.length) {\n        var methods = classifier.methods;\n        addSeparator(node, diagram);\n        var argumentText = '';\n        var methodText = '';\n        var text = void 0;\n        for (var i = 0; i < methods.length; i++) {\n            var method = methods[i];\n            if (method.scope && method.scope === 'Public') {\n                text = ' +';\n            }\n            else if (method.scope && method.scope === 'Private') {\n                text = '-';\n            }\n            else if (method.scope && method.scope === 'Protected') {\n                text = '#';\n            }\n            else {\n                text = '~';\n            }\n            if (method.parameters) {\n                for (var j = 0; j < method.parameters.length; j++) {\n                    if (method.parameters[j].type) {\n                        argumentText += method.parameters[j].name + ':' + method.parameters[j].type;\n                    }\n                    else {\n                        argumentText += method.parameters[j].name;\n                    }\n                    if (j !== method.parameters.length - 1) {\n                        argumentText += ',';\n                    }\n                }\n            }\n            if (method.name !== '') {\n                if (text) {\n                    methodText += text + ' ' + method.name + '(' + argumentText + ')' + ' ' + ':' + ' ' + method.type;\n                }\n            }\n            if (i !== methods.length) {\n                var style = getStyle(node, method);\n                var temp = new Node(diagram, 'nodes', {\n                    id: randomId() + '_umlMethods', verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    annotations: [\n                        {\n                            id: 'name', content: methodText, offset: { x: 0, y: 0.5 },\n                            style: {\n                                bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                textWrapping: textWrap\n                            },\n                            margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                        }\n                    ],\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' }, minHeight: 25,\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize)\n                }, true);\n                diagram.initObject(temp);\n                diagram.nodes.push(temp);\n                node.children.push(temp.id);\n                methodText = '';\n                if (method.isSeparator && (i !== methods.length - 1)) {\n                    addSeparator(node, diagram);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function addSeparator(stack, diagram) {\n    var lineObject = new Node(diagram, 'nodes', {\n        id: randomId() + '_path', height: 1, constraints: NodeConstraints.Default & ~(NodeConstraints.Select),\n        verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n    }, true);\n    diagram.initObject(lineObject);\n    diagram.nodes.push(lineObject);\n    stack.children.push(lineObject.id);\n}\n/** @private */\nexport function getStyle(stack, node) {\n    var newStyle = {};\n    var style = node.style;\n    newStyle.fill = (style.fill !== 'transparent') ? style.fill : stack.style.fill;\n    newStyle.color = style.color;\n    newStyle.fontSize = (style.fontSize !== 12) ? style.fontSize : stack.style.fontSize;\n    newStyle.strokeColor = (style.strokeColor !== 'black') ? style.strokeColor : stack.style.strokeColor;\n    newStyle.strokeWidth = (style.strokeWidth !== 1) ? style.strokeWidth : stack.style.strokeWidth;\n    return newStyle;\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { processPathData, splitArrayCollection, transformPath } from './path-util';\nimport { whiteSpaceToString, wordBreakToString, textAlignToString, bBoxText } from './base-util';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { compile, createElement, Browser } from '@syncfusion/ej2-base';\nimport { Node } from '../objects/node';\nimport { getElement } from './diagram-util';\n/**\n * Defines the functionalities that need to access DOM\n */\n/** @private */\nexport function removeElementsByClass(className) {\n    var elements = document.getElementsByClassName(className);\n    while (elements.length > 0) {\n        elements[0].parentNode.removeChild(elements[0]);\n    }\n}\n/** @private */\nexport function findSegmentPoints(element) {\n    var pts = [];\n    var sample;\n    var sampleLength;\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var pathNode = getChildNode(svg)[0];\n    pathNode.setAttributeNS(null, 'd', element.data);\n    var pathBounds = element.absoluteBounds; // || pathNode.getBBox();\n    var pathData = updatePath(element, pathBounds, element);\n    pathNode.setAttributeNS(null, 'd', pathData);\n    var pathLength = pathNode.getTotalLength();\n    for (sampleLength = 0; sampleLength <= pathLength; sampleLength += 10) {\n        sample = pathNode.getPointAtLength(sampleLength);\n        pts.push({ x: sample.x, y: sample.y });\n    }\n    window[measureElement].style.visibility = 'hidden';\n    return pts;\n}\nexport function getChildNode(node) {\n    var child;\n    var collection = [];\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        for (var i = 0; i < node.childNodes.length; i++) {\n            child = node.childNodes[i];\n            if (child.nodeType === 1) {\n                collection.push(child);\n            }\n        }\n    }\n    else {\n        collection = node.children;\n    }\n    return collection;\n}\nexport function translatePoints(element, points) {\n    var translatedPts = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        var pt1 = {\n            x: element.offsetX - element.actualSize.width * element.pivot.x + point.x,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + point.y\n        };\n        var matrix = void 0;\n        var angle = element.rotateAngle + element.parentTransform;\n        if (angle) {\n            matrix = identityMatrix();\n            rotateMatrix(matrix, angle, element.offsetX, element.offsetY);\n        }\n        if (matrix) {\n            pt1 = transformPointByMatrix(matrix, pt1);\n        }\n        translatedPts.push(pt1);\n    }\n    return translatedPts;\n}\n/** @private */\nexport function measurePath(data) {\n    if (data) {\n        var measureElement = 'measureElement';\n        window[measureElement].style.visibility = 'visible';\n        var svg = window[measureElement].children[2];\n        var element = getChildNode(svg)[0];\n        element.setAttribute('d', data);\n        var bounds = element.getBBox();\n        var svgBounds = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        window[measureElement].style.visibility = 'hidden';\n        return svgBounds;\n    }\n    return new Rect(0, 0, 0, 0);\n}\nfunction getTextOptions(element, maxWidth) {\n    var options = {\n        fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n        pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n        dashArray: element.style.strokeDashArray, opacity: element.style.opacity, shadow: element.shadow,\n        gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        width: maxWidth || element.actualSize.width, height: element.actualSize.height,\n        x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n        y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5\n    };\n    options.fontSize = element.style.fontSize;\n    options.fontFamily = element.style.fontFamily;\n    options.textOverflow = element.style.textOverflow;\n    options.textDecoration = element.style.textDecoration;\n    options.doWrap = element.doWrap;\n    options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n    options.content = element.content;\n    options.textWrapping = element.style.textWrapping;\n    options.breakWord = wordBreakToString(element.style.textWrapping);\n    options.textAlign = textAlignToString(element.style.textAlign);\n    options.color = element.style.color;\n    options.italic = element.style.italic;\n    options.bold = element.style.bold;\n    options.dashArray = '';\n    options.strokeWidth = 0;\n    options.fill = '';\n    return options;\n}\nfunction wrapSvgText(text, textValue, laneWidth) {\n    var childNodes = [];\n    var k = 0;\n    var txtValue;\n    var bounds1;\n    var content = textValue || text.content;\n    if (text.whiteSpace !== 'nowrap' && text.whiteSpace !== 'pre') {\n        if (text.breakWord === 'breakall') {\n            txtValue = '';\n            txtValue += content[0];\n            for (k = 0; k < content.length; k++) {\n                bounds1 = bBoxText(txtValue, text);\n                if (bounds1 >= text.width && txtValue.length > 0) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bounds1 };\n                    txtValue = '';\n                }\n                else {\n                    txtValue = txtValue + (content[k + 1] || '');\n                    if (txtValue.indexOf('\\n') > -1) {\n                        txtValue = txtValue.replace('\\n', '');\n                    }\n                    var width = bBoxText(txtValue, text);\n                    if (Math.ceil(width) + 2 >= text.width && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                    if (k === content.length - 1 && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                }\n            }\n        }\n        else {\n            childNodes = wordWrapping(text, textValue, laneWidth);\n        }\n    }\n    else {\n        childNodes[childNodes.length] = { text: content, x: 0, dy: 0, width: bBoxText(content, text) };\n    }\n    return childNodes;\n}\nfunction wordWrapping(text, textValue, laneWidth) {\n    var childNodes = [];\n    var txtValue = '';\n    var j = 0;\n    var i = 0;\n    var wrap = text.whiteSpace !== 'nowrap' ? true : false;\n    var content = textValue || text.content;\n    var eachLine = content.split('\\n');\n    var txt;\n    var words;\n    var newText;\n    var existingWidth;\n    var existingText;\n    for (j = 0; j < eachLine.length; j++) {\n        txt = '';\n        words = text.textWrapping !== 'NoWrap' ? eachLine[j].split(' ') : eachLine;\n        for (i = 0; i < words.length; i++) {\n            txtValue += (((i !== 0 || words.length === 1) && wrap && txtValue.length > 0) ? ' ' : '') + words[i];\n            newText = txtValue + (words[i + 1] || '');\n            var width = bBoxText(newText, text);\n            if (Math.floor(width) > (laneWidth || text.width) - 2 && txtValue.length > 0) {\n                childNodes[childNodes.length] = {\n                    text: txtValue, x: 0, dy: 0,\n                    width: newText === txtValue ? width : (txtValue === existingText) ? existingWidth : bBoxText(txtValue, text)\n                };\n                txtValue = '';\n            }\n            else {\n                if (i === words.length - 1) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                    txtValue = '';\n                }\n            }\n            existingText = newText;\n            existingWidth = width;\n        }\n    }\n    return childNodes;\n}\nfunction wrapSvgTextAlign(text, childNodes) {\n    var wrapBounds = { x: 0, width: 0 };\n    var k = 0;\n    var txtWidth;\n    var width;\n    for (k = 0; k < childNodes.length; k++) {\n        txtWidth = childNodes[k].width;\n        width = txtWidth;\n        if (text.textAlign === 'left') {\n            txtWidth = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (txtWidth > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                txtWidth = 0;\n            }\n            else {\n                txtWidth = -txtWidth / 2;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            txtWidth = -txtWidth;\n        }\n        else {\n            txtWidth = childNodes.length > 1 ? 0 : -txtWidth / 2;\n        }\n        childNodes[k].dy = text.fontSize * 1.2;\n        childNodes[k].x = txtWidth;\n        if (!wrapBounds) {\n            wrapBounds = {\n                x: txtWidth,\n                width: width\n            };\n        }\n        else {\n            wrapBounds.x = Math.min(wrapBounds.x, txtWidth);\n            wrapBounds.width = Math.max(wrapBounds.width, width);\n        }\n    }\n    return wrapBounds;\n}\nexport function measureHtmlText(style, content, width, height, maxWidth) {\n    var bounds = new Size();\n    var text = createHtmlElement('span', { 'style': 'display:inline-block; line-height: normal' });\n    if (style.bold) {\n        text.style.fontWeight = 'bold';\n    }\n    if (style.italic) {\n        text.style.fontStyle = 'italic';\n    }\n    if (width !== undefined) {\n        text.style.width = width.toString() + 'px';\n    }\n    if (height !== undefined) {\n        text.style.height = height.toString() + 'px';\n    }\n    if (maxWidth !== undefined) {\n        text.style.maxWidth = maxWidth.toString() + 'px';\n    }\n    text.style.fontFamily = style.fontFamily;\n    text.style.fontSize = style.fontSize + 'px';\n    text.style.color = style.color;\n    text.textContent = content;\n    text.style.whiteSpace = whiteSpaceToString(style.whiteSpace, style.textWrapping);\n    if (maxWidth !== undefined) {\n        text.style.wordBreak = 'break-word';\n    }\n    else {\n        text.style.wordBreak = wordBreakToString(style.textWrapping);\n    }\n    document.body.appendChild(text);\n    bounds.width = text.offsetWidth;\n    bounds.height = text.offsetHeight;\n    document.body.removeChild(text);\n    return bounds;\n}\n/** @private */\nexport function measureText(text, style, content, maxWidth, textValue) {\n    var bounds = new Size(0, 0);\n    var childNodes;\n    var wrapBounds;\n    var options = getTextOptions(text, maxWidth);\n    text.childNodes = childNodes = wrapSvgText(options, textValue, text.isLaneOrientation ? maxWidth : undefined);\n    text.wrapBounds = wrapBounds = wrapSvgTextAlign(options, childNodes);\n    bounds.width = wrapBounds.width;\n    if (text.wrapBounds.width >= maxWidth && options.textOverflow !== 'Wrap') {\n        bounds.width = maxWidth;\n    }\n    bounds.height = childNodes.length * text.style.fontSize * 1.2;\n    return bounds;\n}\n/** @private */\nexport function measureImage(source, contentSize) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var imageElement = window[measureElement].children[1];\n    imageElement.setAttribute('src', source);\n    var bounds = imageElement.getBoundingClientRect();\n    var width = bounds.width;\n    var height = bounds.height;\n    contentSize = new Size(width, height);\n    window[measureElement].style.visibility = 'hidden';\n    return contentSize;\n}\n/** @private */\nexport function measureNativeContent(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var bounds = nativeContent.getBoundingClientRect();\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    var rect = bounds;\n    rect.x = bounds.left - svgBounds.left;\n    rect.y = bounds.top - svgBounds.top;\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return rect;\n}\n/**\n * @private\n */\nexport function measureNativeSvg(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return svgBounds;\n}\n/** @private */\nexport function updatePath(element, bounds, child, options) {\n    var initX = 0;\n    var initY = 0;\n    var scaleX = 0;\n    var scaleY = 0;\n    var isScale = false;\n    var bBox;\n    var isInit;\n    var isResizing = true;\n    var newPathString = '';\n    var arrayCollection = [];\n    bBox = bounds;\n    if (initX !== bBox.x || initY !== bBox.y) {\n        scaleX = initX - Number(bBox.x);\n        scaleY = initY - Number(bBox.y);\n    }\n    if (element.actualSize.width !== bBox.width || element.actualSize.height !== bBox.height || options) {\n        scaleX = (options && options.width || element.actualSize.width) / Number(bBox.width ? bBox.width : 1);\n        scaleY = (options && options.height || element.actualSize.height) / Number(bBox.height ? bBox.height : 1);\n        isScale = true;\n    }\n    arrayCollection = processPathData(element.data);\n    arrayCollection = splitArrayCollection(arrayCollection);\n    newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bBox.x, bBox.y, initX, initY);\n    isScale = false;\n    return newPathString;\n}\n/** @private */\nexport function getDiagramLayerSvg(diagramId) {\n    var diagramLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-diagram-layer');\n    diagramLayerSvg = elementcoll[0];\n    return diagramLayerSvg;\n}\n/** @private */\nexport function getDiagramElement(elementId, contentId) {\n    var diagramElement;\n    var element;\n    if (contentId) {\n        element = document.getElementById(contentId);\n    }\n    diagramElement = (element) ? element.querySelector('#' + elementId) : document.getElementById(elementId);\n    return diagramElement;\n}\n/** @private */\nexport function getDomIndex(viewId, elementId, layer) {\n    var index = undefined;\n    var parentElement;\n    var postId = '';\n    if (layer === 'native') {\n        parentElement = getNativeLayer(viewId);\n        postId = '_content_groupElement';\n    }\n    else if (layer === 'html') {\n        parentElement = getHTMLLayer(viewId).childNodes[0];\n        postId = '_content_html_element';\n    }\n    else {\n        parentElement = getDiagramLayer(viewId);\n        postId = '_groupElement';\n    }\n    var childElement;\n    for (var i = 0; parentElement.childNodes && i < parentElement.childNodes.length; i++) {\n        childElement = parentElement.childNodes[i];\n        if (childElement && childElement.id === elementId + postId) {\n            index = i;\n            break;\n        }\n    }\n    return index;\n}\n/**\n * @private\n */\nexport function getAdornerLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-adorner-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getSelectorElement(diagramId) {\n    var adornerLayer = null;\n    var adornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n    return adornerLayer;\n}\n/**\n * @private\n */\nexport function getAdornerLayer(diagramId) {\n    var adornerLayer = null;\n    var diagramAdornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = diagramAdornerSvg.getElementById(diagramId + '_diagramAdorner');\n    return adornerLayer;\n}\n/** @private */\nexport function getDiagramLayer(diagramId) {\n    var diagramLayer;\n    var diagramLayerSvg = getDiagramLayerSvg(diagramId);\n    diagramLayer = diagramLayerSvg.getElementById(diagramId + '_diagramLayer');\n    return diagramLayer;\n}\n/** @private */\nexport function getPortLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-ports-expand-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getNativeLayerSvg(diagramId) {\n    var nativeLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-native-layer');\n    nativeLayerSvg = elementcoll[0];\n    return nativeLayerSvg;\n}\n/** @private */\nexport function getGridLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-grid-layer');\n    gridLayerSvg = elementcoll[0];\n    return gridLayerSvg;\n}\n/** @private */\nexport function getBackgroundLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    return elementcoll[0].parentNode;\n}\n/** @private */\nexport function getBackgroundImageLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-image-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getBackgroundLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getGridLayer(diagramId) {\n    var expandCollapse = null;\n    var diagramGridSvg = getGridLayerSvg(diagramId);\n    expandCollapse = diagramGridSvg.getElementById(diagramId + '_gridline');\n    return expandCollapse;\n}\n// /** @private */\n// export function getExpandCollapseLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramExpander') as SVGElement;\n//     return expandCollapse;\n// }\n// /** @private */\n// export function getPortsLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramPorts') as SVGElement;\n//     return expandCollapse;\n// }\n/** @private */\nexport function getNativeLayer(diagramId) {\n    var nativeLayer = null;\n    var nativeLayerSvg = getNativeLayerSvg(diagramId);\n    nativeLayer = nativeLayerSvg.getElementById(diagramId + '_nativeLayer');\n    return nativeLayer;\n}\n/** @private */\nexport function getHTMLLayer(diagramId) {\n    var htmlLayer = null;\n    var element = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = element.getElementsByClassName('e-html-layer');\n    htmlLayer = elementcoll[0];\n    return htmlLayer;\n}\n/** @private */\nexport function createHtmlElement(elementType, attribute) {\n    var element = createElement(elementType);\n    setAttributeHtml(element, attribute);\n    return element;\n}\n/** @private */\nexport function createSvgElement(elementType, attribute) {\n    var element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n    setAttributeSvg(element, attribute);\n    return element;\n}\n/** @hidden */\nexport function parentsUntil(elem, selector, isID) {\n    var parent = elem;\n    while (parent) {\n        if (isID ? parent.id === selector : hasClass(parent, selector)) {\n            break;\n        }\n        parent = parent.parentNode;\n    }\n    return parent;\n}\nexport function hasClass(element, className) {\n    var eClassName = (typeof element.className === 'object') ? element.className.animVal : element.className;\n    return ((' ' + eClassName + ' ').indexOf(' ' + className + ' ') > -1) ? true : false;\n}\n/** @hidden */\nexport function getScrollerWidth() {\n    var outer = createHtmlElement('div', { 'style': 'visibility:hidden; width: 100px' });\n    document.body.appendChild(outer);\n    var widthNoScroll = outer.getBoundingClientRect().width;\n    // force scrollbars\n    outer.style.overflow = 'scroll';\n    // add innerdiv\n    var inner = createHtmlElement('div', { 'style': 'width:100%' });\n    outer.appendChild(inner);\n    var widthWithScroll = inner.getBoundingClientRect().width;\n    // remove divs\n    outer.parentNode.removeChild(outer);\n    return widthNoScroll - widthWithScroll;\n}\n/**\n * Handles the touch pointer.\n * @return {boolean}\n * @private\n */\nexport function addTouchPointer(touchList, e, touches) {\n    touchList = [];\n    for (var i = 0, length_1 = touches.length; i < length_1; i++) {\n        touchList.push({ pageX: touches[i].clientX, pageY: touches[i].clientY, pointerId: null });\n    }\n    return touchList;\n}\n/**\n * removes the element from dom\n * @param elementId\n */\nexport function removeElement(elementId, contentId) {\n    var div = getDiagramElement(elementId, contentId);\n    if (div) {\n        div.parentNode.removeChild(div);\n    }\n}\nexport function getContent(element, isHtml) {\n    var div;\n    if (isHtml) {\n        var attr = { 'style': 'height: 100%; width: 100%' };\n        div = createHtmlElement('div', attr);\n    }\n    else {\n        div = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n    }\n    var node = getElement(element);\n    var content = '';\n    var sentNode = {};\n    if (node instanceof Node) {\n        sentNode = node;\n        var blazor = 'Blazor';\n        if (window[blazor]) {\n            sentNode = {};\n            var id = 'id';\n            var height = 'height';\n            var width = 'width';\n            var offsetX = 'offsetX';\n            var offsetY = 'offsetY';\n            var text = 'content';\n            var annotations = 'annotations';\n            var addInfo = 'addInfo';\n            content = element.diagramId + 'content_diagram';\n            sentNode[id] = node[id];\n            sentNode[height] = node[height];\n            sentNode[width] = node[width];\n            sentNode[offsetX] = node[offsetX];\n            sentNode[offsetY] = node[offsetY];\n            sentNode[addInfo] = node[addInfo];\n            if (node.annotations && node.annotations.length > 0) {\n                sentNode[annotations] = [];\n                for (var i = 0; i < node.annotations.length; i++) {\n                    sentNode[annotations][i] = { content: node.annotations[i][text] };\n                }\n            }\n        }\n    }\n    else {\n        sentNode = node;\n        content = element.diagramId + 'template_diagram';\n    }\n    var item;\n    if (typeof element.content === 'string') {\n        var compiledString = void 0;\n        compiledString = compile(element.content);\n        for (var _i = 0, _a = compiledString(sentNode, null, null, content); _i < _a.length; _i++) {\n            item = _a[_i];\n            div.appendChild(item);\n        }\n    }\n    else {\n        div.appendChild(element.content);\n    }\n    return isHtml ? div.cloneNode(true) : div.cloneNode(true);\n}\n/** @private */\nexport function setAttributeSvg(svg, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        svg.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function setAttributeHtml(element, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        element.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function createMeasureElements() {\n    var measureElement = 'measureElement';\n    if (!window[measureElement]) {\n        var divElement = createHtmlElement('div', {\n            id: 'measureElement',\n            style: 'visibility:hidden ; height: 0px ; width: 0px; overflow: hidden;'\n        });\n        var text = createHtmlElement('span', { 'style': 'display:inline-block ; line-height: normal' });\n        divElement.appendChild(text);\n        var imageElement = void 0;\n        imageElement = createHtmlElement('img', {});\n        divElement.appendChild(imageElement);\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        divElement.appendChild(svg);\n        var element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        svg.appendChild(element);\n        var data = document.createTextNode('');\n        var tSpan = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        svg.appendChild(tSpan);\n        window[measureElement] = divElement;\n        window[measureElement].usageCount = 1;\n        document.body.appendChild(divElement);\n    }\n    else {\n        window[measureElement].usageCount += 1;\n    }\n}\n/** @private */\nexport function setChildPosition(temp, childNodes, i, options) {\n    if (childNodes.length > 1 && temp.x === 0 &&\n        (options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') &&\n        options.textWrapping === 'Wrap') {\n        temp.x = childNodes[i - 1] ? childNodes[i - 1].x : -(temp.width / 2);\n        return temp.x;\n    }\n    return temp.x;\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getValue } from '@syncfusion/ej2-base';\nimport { getChildNode } from './dom-util';\n/**\n * Implements the basic functionalities\n */\n/** @private */\nexport function randomId() {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n    var id = '';\n    var num;\n    for (var i = 0; i < 5; i++) {\n        if ('crypto' in window && 'getRandomValues' in crypto) {\n            var count = new Uint16Array(1);\n            // tslint:disable-next-line:no-any\n            var intCrypto = window.msCrypto || window.crypto;\n            num = intCrypto.getRandomValues(count)[0] % (chars.length - 1);\n        }\n        else {\n            num = Math.floor(Math.random() * chars.length);\n        }\n        if (i === 0 && num < 10) {\n            i--;\n            continue;\n        }\n        id += chars.substring(num, num + 1);\n    }\n    return id;\n}\n/** @private */\nexport function cornersPointsBeforeRotation(ele) {\n    var bounds = new Rect();\n    var top = ele.offsetY - ele.actualSize.height * ele.pivot.y;\n    var bottom = ele.offsetY + ele.actualSize.height * (1 - ele.pivot.y);\n    var left = ele.offsetX - ele.actualSize.width * ele.pivot.x;\n    var right = ele.offsetX + ele.actualSize.width * (1 - ele.pivot.x);\n    var topLeft = { x: left, y: top };\n    var topCenter = { x: (left + right) / 2, y: top };\n    var topRight = { x: right, y: top };\n    var middleLeft = { x: left, y: (top + bottom) / 2 };\n    var middleRight = { x: right, y: (top + bottom) / 2 };\n    var bottomLeft = { x: left, y: bottom };\n    var bottomCenter = { x: (left + right) / 2, y: bottom };\n    var bottomRight = { x: right, y: bottom };\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    return bounds;\n}\n/** @private */\nexport function getBounds(element) {\n    var bounds = new Rect();\n    var corners;\n    corners = cornersPointsBeforeRotation(element);\n    var middleLeft = corners.middleLeft;\n    var topCenter = corners.topCenter;\n    var bottomCenter = corners.bottomCenter;\n    var middleRight = corners.middleRight;\n    var topLeft = corners.topLeft;\n    var topRight = corners.topRight;\n    var bottomLeft = corners.bottomLeft;\n    var bottomRight = corners.bottomRight;\n    element.corners = {\n        topLeft: topLeft, topCenter: topCenter, topRight: topRight, middleLeft: middleLeft,\n        middleRight: middleRight, bottomLeft: bottomLeft, bottomCenter: bottomCenter, bottomRight: bottomRight\n    };\n    if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n        element.corners.topLeft = topLeft = transformPointByMatrix(matrix, topLeft);\n        element.corners.topCenter = topCenter = transformPointByMatrix(matrix, topCenter);\n        element.corners.topRight = topRight = transformPointByMatrix(matrix, topRight);\n        element.corners.middleLeft = middleLeft = transformPointByMatrix(matrix, middleLeft);\n        element.corners.middleRight = middleRight = transformPointByMatrix(matrix, middleRight);\n        element.corners.bottomLeft = bottomLeft = transformPointByMatrix(matrix, bottomLeft);\n        element.corners.bottomCenter = bottomCenter = transformPointByMatrix(matrix, bottomCenter);\n        element.corners.bottomRight = bottomRight = transformPointByMatrix(matrix, bottomRight);\n        //Set corners based on rotate angle\n    }\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    element.corners.left = bounds.left;\n    element.corners.right = bounds.right;\n    element.corners.top = bounds.top;\n    element.corners.bottom = bounds.bottom;\n    element.corners.center = bounds.center;\n    element.corners.width = bounds.width;\n    element.corners.height = bounds.height;\n    return bounds;\n}\n/** @private */\nexport function cloneObject(obj, additionalProp, key) {\n    var newObject = {};\n    var keys = 'properties';\n    var prop = 'propName';\n    if (obj) {\n        key = obj[prop];\n        var sourceObject = obj[keys] || obj;\n        var properties = [];\n        properties = properties.concat(Object.keys(sourceObject));\n        var customProperties = [];\n        properties.push('version');\n        if (key) {\n            var propAdditional = getFunction(additionalProp);\n            if (propAdditional) {\n                customProperties = propAdditional(key);\n            }\n            else {\n                customProperties = [];\n            }\n            properties = properties.concat(customProperties);\n        }\n        var internalProp = getInternalProperties(key);\n        properties = properties.concat(internalProp);\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var property = properties_1[_i];\n            if (property !== 'historyManager') {\n                if (property !== 'wrapper') {\n                    var constructorId = 'constructor';\n                    var name_1 = 'name';\n                    var isEventEmmitter = obj[property] && obj.hasOwnProperty('observers') ? true : false;\n                    if (!isEventEmmitter) {\n                        if (obj[property] instanceof Array) {\n                            newObject[property] = cloneArray((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], additionalProp, property);\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof HTMLElement) {\n                            newObject[property] = obj[property].cloneNode(true).innerHtml;\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof Object) {\n                            newObject[property] = cloneObject((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property]);\n                        }\n                        else {\n                            newObject[property] = obj[property];\n                        }\n                    }\n                }\n                else {\n                    if (obj[property]) {\n                        newObject[property] = {\n                            actualSize: {\n                                width: obj[property].actualSize.width, height: obj[property].actualSize.height\n                            }, offsetX: obj[property].offsetX, offsetY: obj[property].offsetY\n                        };\n                    }\n                }\n            }\n        }\n    }\n    return newObject;\n}\n/** @private */\nexport function getInternalProperties(propName) {\n    switch (propName) {\n        case 'nodes':\n        case 'children':\n            return ['inEdges', 'outEdges', 'parentId', 'processId', 'nodeId', 'umlIndex', 'isPhase', 'isLane'];\n        case 'connectors':\n            return ['parentId'];\n        case 'annotation':\n            return ['nodeId'];\n        case 'annotations':\n            return ['nodeId'];\n        case 'shape':\n            return ['hasHeader'];\n    }\n    return [];\n}\n/** @private */\nexport function cloneArray(sourceArray, additionalProp, key) {\n    var clonedArray;\n    if (sourceArray) {\n        clonedArray = [];\n        for (var i = 0; i < sourceArray.length; i++) {\n            if (sourceArray[i] instanceof Array) {\n                clonedArray.push(sourceArray[i]);\n            }\n            else if (sourceArray[i] instanceof Object) {\n                clonedArray.push(cloneObject(sourceArray[i], additionalProp, key));\n            }\n            else {\n                clonedArray.push(sourceArray[i]);\n            }\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function extendObject(options, childObject) {\n    var properties = 'properties';\n    if (options) {\n        if (!childObject) {\n            childObject = { properties: {} };\n        }\n        var target = childObject;\n        for (var _i = 0, _a = Object.keys(options); _i < _a.length; _i++) {\n            var property = _a[_i];\n            if (options[property] instanceof Array) {\n                var extendeArray = extendArray(options[property], childObject[properties][property]);\n                if (!childObject[properties][property] || !childObject[properties][property].length) {\n                    childObject[property] = extendeArray;\n                }\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof HTMLElement) {\n                childObject[property] = options[property].cloneNode(true).innerHtml;\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof Object) {\n                var extendedObject = extendObject(options[property], childObject[properties][property]);\n                if (extendedObject[properties] && !Object.keys(extendedObject[properties]).length) {\n                    delete extendedObject[properties];\n                }\n                childObject[property] = extendedObject;\n            }\n            else {\n                childObject[property] = childObject[properties][property] !== undefined ?\n                    childObject[property] : options[property];\n            }\n        }\n    }\n    return childObject;\n}\n/** @private */\nexport function extendArray(sourceArray, childArray) {\n    var clonedArray = [];\n    var reset = false;\n    if (!childArray) {\n        childArray = [];\n    }\n    if (!childArray.length) {\n        reset = true;\n    }\n    for (var i = 0; i < sourceArray.length; i++) {\n        if (sourceArray[i] instanceof Array) {\n            var extendedArray = extendArray(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendArray);\n            }\n        }\n        else if (sourceArray[i] instanceof Object) {\n            var extendedObject = extendObject(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendedObject);\n            }\n        }\n        else {\n            clonedArray.push(sourceArray[i]);\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function textAlignToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Center':\n            state = 'center';\n            break;\n        case 'Left':\n            state = 'left';\n            break;\n        case 'Right':\n            state = 'right';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function wordBreakToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Wrap':\n            state = 'breakall';\n            break;\n        case 'NoWrap':\n            state = 'keepall';\n            break;\n        case 'WrapWithOverflow':\n            state = 'normal';\n            break;\n        case 'LineThrough':\n            state = 'line-through';\n            break;\n    }\n    return state;\n}\nexport function bBoxText(textContent, options) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var text = getChildNode(svg)[1];\n    text.textContent = textContent;\n    text.setAttribute('style', 'font-size:' + options.fontSize + 'px; font-family:'\n        + options.fontFamily + ';font-weight:' + (options.bold ? 'bold' : 'normal'));\n    var bBox = text.getBBox().width;\n    window[measureElement].style.visibility = 'hidden';\n    return bBox;\n}\n/** @private */\nexport function middleElement(i, j) {\n    var m = 0;\n    m = (i + j) / 2;\n    return m;\n}\n/** @private */\nexport function overFlow(text, options) {\n    var i = 0;\n    var j = 0;\n    var middle = 0;\n    var bounds = 0;\n    var temp = '';\n    j = text.length;\n    var t = 0;\n    do {\n        if (bounds > 0) {\n            i = middle;\n        }\n        middle = Math.floor(middleElement(i, j));\n        temp += text.substr(i, middle);\n        bounds = bBoxText(temp, options);\n    } while (bounds <= options.width);\n    temp = temp.substr(0, i);\n    for (t = i; t < j; t++) {\n        temp += text[t];\n        bounds = bBoxText(temp, options);\n        if (bounds >= options.width) {\n            text = text.substr(0, temp.length - 1);\n            break;\n        }\n    }\n    if (options.textOverflow === 'Ellipsis') {\n        text = text.substr(0, text.length - 3);\n        text += '...';\n    }\n    else {\n        text = text.substr(0, text.length);\n    }\n    return text;\n}\n/** @private */\nexport function whiteSpaceToString(value, wrap) {\n    if (wrap === 'NoWrap' && value === 'PreserveAll') {\n        return 'pre';\n    }\n    var state = '';\n    switch (value) {\n        case 'CollapseAll':\n            state = 'nowrap';\n            break;\n        case 'CollapseSpace':\n            state = 'pre-line';\n            break;\n        case 'PreserveAll':\n            state = 'pre-wrap';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function rotateSize(size, angle) {\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, 0, 0);\n    var topLeft = transformPointByMatrix(matrix, { x: 0, y: 0 });\n    var topRight = transformPointByMatrix(matrix, { x: size.width, y: 0 });\n    var bottomLeft = transformPointByMatrix(matrix, { x: 0, y: size.height });\n    var bottomRight = transformPointByMatrix(matrix, { x: size.width, y: size.height });\n    var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    return new Size(maxX - minX, maxY - minY);\n}\n/** @private */\nexport function rotatePoint(angle, pivotX, pivotY, point) {\n    if (angle !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivotX, pivotY);\n        return transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function getOffset(topLeft, obj) {\n    var offX = topLeft.x + obj.desiredSize.width * obj.pivot.x;\n    var offY = topLeft.y + obj.desiredSize.height * obj.pivot.y;\n    return {\n        x: offX, y: offY\n    };\n}\n/**\n * Get function\n */\nexport function getFunction(value) {\n    if (value !== undefined) {\n        if (typeof value === 'string') {\n            value = getValue(value, window);\n        }\n    }\n    return value;\n}\n","import { Connector } from '../objects/connector';\nimport { Node } from '../objects/node';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getUserHandlePosition, checkPortRestriction } from '../utility/diagram-util';\nimport { canMove, canDragSourceEnd, canDragTargetEnd, canContinuousDraw, canDragSegmentThumb } from '../utility/constraints-util';\nimport { canZoomPan, defaultTool, canDrawOnce, canDrag, canDraw, canSelect, canRotate } from '../utility/constraints-util';\nimport { canShowCorner, canResizeCorner } from '../utility/diagram-util';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { PortConstraints, DiagramTools, PortVisibility, ThumbsConstraints } from '../enum/enum';\nimport { Selector } from './selector';\nimport { PointPort } from './../objects/port';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { checkParentAsContainer } from '../interaction/container-interaction';\n/**\n * Finds the action to be taken for the object under mouse\n *\n */\n/** @private */\nexport function findToolToActivate(obj, wrapper, position, diagram, touchStart, touchMove, target) {\n    var conn = diagram.selectedItems.connectors[0];\n    if (touchMove && touchMove.length > 1 && touchStart && touchStart.length > 1) {\n        return 'PinchZoom';\n    }\n    if (diagram.currentSymbol) {\n        return 'Drag';\n    }\n    var eventHandler = 'eventHandler';\n    if (diagram[eventHandler].action === 'PortDraw') {\n        diagram.tool &= ~DiagramTools.DrawOnce;\n    }\n    //Drawing Tools\n    if ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && diagram.drawingObject) {\n        return 'Draw';\n    }\n    if (hasSelection(diagram)) {\n        var handle = diagram.selectedItems;\n        if (handle.wrapper && canShowCorner(handle.constraints, 'UserHandle')) {\n            for (var _i = 0, _a = handle.userHandles; _i < _a.length; _i++) {\n                var obj_1 = _a[_i];\n                if (obj_1.visible) {\n                    var paddedBounds = getUserHandlePosition(handle, obj_1, diagram.scroller.transform);\n                    if (contains(position, paddedBounds, obj_1.size / 2)) {\n                        return obj_1.name;\n                    }\n                }\n            }\n        }\n    }\n    if (hasSelection(diagram)) {\n        var element = (diagram.selectedItems.annotation) ?\n            diagram.selectedItems.wrapper.children[0] : diagram.selectedItems.wrapper;\n        var selectorBnds = element.bounds;\n        var handle = diagram.selectedItems;\n        var paddedBounds = new Rect(selectorBnds.x, selectorBnds.y, selectorBnds.width, selectorBnds.height);\n        if (hasSingleConnection(diagram) && !diagram.selectedItems.annotation) {\n            var conn_1 = diagram.selectedItems.connectors[0];\n            var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            if (canShowCorner(handle.constraints, 'ResizeAll')) {\n                if ((canShowCorner(handle.constraints, 'ConnectorSourceThumb'))\n                    && canDragSourceEnd(conn_1) && contains(position, conn_1.sourcePoint, sourcePaddingValue)) {\n                    return 'ConnectorSourceEnd';\n                }\n                if ((canShowCorner(handle.constraints, 'ConnectorTargetThumb'))\n                    && canDragTargetEnd(conn_1) && contains(position, conn_1.targetPoint, targetPaddingValue)) {\n                    return 'ConnectorTargetEnd';\n                }\n                var action = checkForConnectorSegment(conn_1, handle, position, diagram);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n        else {\n            var ten = 10 / diagram.scroller.currentZoom;\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n            //check for resizing tool\n            var x = element.offsetX - element.pivot.x * element.actualSize.width;\n            var y = element.offsetY - element.pivot.y * element.actualSize.height;\n            var rotateThumb = {\n                x: x + ((element.pivot.x === 0.5 ? element.pivot.x * 2 : element.pivot.x) * element.actualSize.width / 2),\n                y: y - 30 / diagram.scroller.currentZoom\n            };\n            rotateThumb = transformPointByMatrix(matrix, rotateThumb);\n            var labelSelection = diagram.selectedItems.annotation ? true : false;\n            var labelRotate = (labelSelection && (canRotate(diagram.selectedItems.annotation))) ? true : false;\n            if (canShowCorner(handle.constraints, 'Rotate') && contains(position, rotateThumb, ten) &&\n                (diagram.selectedItems.thumbsConstraints & ThumbsConstraints.Rotate)) {\n                if (labelSelection && labelRotate) {\n                    return 'LabelRotate';\n                }\n                else if (!labelSelection) {\n                    return 'Rotate';\n                }\n            }\n            paddedBounds.Inflate(ten);\n            if (paddedBounds.containsPoint(position)) {\n                var action = checkResizeHandles(diagram, element, position, matrix, x, y);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    //Panning\n    if (canZoomPan(diagram) && !obj) {\n        return 'Pan';\n    }\n    if (target instanceof PointPort && (!canZoomPan(diagram))) {\n        var action = findPortToolToActivate(diagram, target);\n        if (action !== 'None') {\n            return action;\n        }\n    }\n    if ((target instanceof ShapeAnnotation || target instanceof PathAnnotation) && (!canZoomPan(diagram) && (canSelect(target)))) {\n        if (isSelected(diagram, target, undefined, wrapper) && canMove(target)) {\n            return 'LabelDrag';\n        }\n        return 'LabelSelect';\n    }\n    if (obj !== null) {\n        if (obj instanceof Node || obj instanceof Connector) {\n            if (wrapper && wrapper.id) {\n                var id = wrapper.id.split(obj.id)[1];\n                if (id && id.match('^_icon')) {\n                    return 'LayoutAnimation';\n                }\n            }\n            if (canMove(obj) && wrapper instanceof TextElement && wrapper.hyperlink.link) {\n                return 'Hyperlink';\n            }\n            if (canMove(obj) && isSelected(diagram, obj, false) && diagram.selectedItems.annotation === undefined) {\n                if ((obj instanceof Connector && !(contains(position, obj.sourcePoint, obj.hitPadding) ||\n                    contains(position, obj.targetPoint, obj.hitPadding))) ||\n                    !(obj instanceof Connector)) {\n                    return 'Drag';\n                }\n            }\n            else if (obj && canZoomPan(diagram) && !defaultTool(diagram)) {\n                return 'Pan';\n            }\n            else if (diagram.selectedItems.nodes.length && diagram.selectedItems.nodes[0].isLane &&\n                diagram.selectedItems.wrapper && diagram.selectedItems.wrapper.bounds.containsPoint(position)) {\n                return 'Drag';\n            }\n            else {\n                return 'Select';\n            }\n        }\n        else {\n            return 'Select';\n        }\n    }\n    return 'Select';\n}\nfunction checkResizeHandles(diagram, element, position, matrix, x, y) {\n    var action;\n    if ((diagram.selectedItems.nodes.length === 1 && diagram.selectedItems.connectors.length === 0)\n        && diagram.selectedItems.nodes[0].container) {\n        action = checkResizeHandleForContainer(diagram, element, position, x, y);\n    }\n    if (!action && (!diagram.selectedItems.nodes[0] || (!diagram.selectedItems.nodes[0].isPhase &&\n        !diagram.selectedItems.nodes[0].isLane && diagram.selectedItems.nodes[0].shape.type !== 'SwimLane'))) {\n        action = checkForResizeHandles(diagram, element, position, matrix, x, y);\n    }\n    if (action) {\n        return action;\n    }\n    return null;\n}\nfunction checkForConnectorSegment(conn, handle, position, diagram) {\n    var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    if (conn.type === 'Bezier') {\n        for (var i = 0; i < conn.segments.length; i++) {\n            var segment = (conn.segments)[i];\n            if (contains(position, !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, sourcePaddingValue)) {\n                return 'BezierSourceThumb';\n            }\n            if (contains(position, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, targetPaddingValue)) {\n                return 'BezierTargetThumb';\n            }\n        }\n    }\n    if (diagram.connectorEditingToolModule && canDragSegmentThumb(conn)) {\n        if (conn.type === 'Straight' || conn.type === 'Bezier') {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                segment = (conn.segments)[i];\n                if (contains(position, segment.point, 10)) {\n                    return 'SegmentEnd';\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                var segPoint = { x: 0, y: 0 };\n                segment = (conn.segments)[i];\n                if (segment.allowDrag) {\n                    for (var j = 0; j < segment.points.length - 1; j++) {\n                        var length_1 = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n                        if (length_1 >= 50) {\n                            segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                            segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                            if (contains(position, segPoint, 30)) {\n                                return 'OrthoThumb';\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return null;\n}\n/** @private */\nexport function findPortToolToActivate(diagram, target, touchStart, touchMove) {\n    if (canDrag(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if ((target.constraints & PortConstraints.Drag)) {\n            return 'PortDrag';\n        }\n    }\n    else if (canDraw(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if (target.constraints & PortConstraints.Draw) {\n            diagram.drawingObject = {};\n            var connector = { type: 'Orthogonal', sourcePortID: target.id };\n            diagram.drawingObject = connector;\n            diagram.tool |= DiagramTools.DrawOnce;\n            diagram.currentDrawingObject = connector;\n            return 'PortDraw';\n        }\n    }\n    return 'None';\n}\n/**\n * Resize handle for container and also object.\n * @private\n */\nfunction checkResizeHandleForContainer(diagram, element, position, x, y) {\n    var ten = 10 / diagram.scroller.currentZoom;\n    var forty = 40 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var width = element.actualSize.width;\n    var height = element.actualSize.height;\n    var left = new Rect(x, y + 20, element.style.strokeWidth, height - 40);\n    var right = new Rect(x + width, y + 20, element.style.strokeWidth, height - 40);\n    var top = new Rect(x + 20, y, width - 40, element.style.strokeWidth);\n    var bottom = new Rect(x + 20, y + height, width - 40, element.style.strokeWidth);\n    var container = checkParentAsContainer(diagram, diagram.selectedItems.nodes[0], true) ?\n        diagram.nameTable[diagram.selectedItems.nodes[0].parentId] : diagram.selectedItems.nodes[0];\n    if (width >= forty && height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) &&\n            right.containsPoint(position, ten)) {\n            return 'ResizeEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) &&\n            bottom.containsPoint(position, ten)) {\n            return 'ResizeSouth';\n        }\n        if (container.container.type !== 'Grid') {\n            if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n                left.containsPoint(position, ten)) {\n                return 'ResizeWest';\n            }\n            if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n                top.containsPoint(position, ten)) {\n                return 'ResizeNorth';\n            }\n        }\n    }\n    return null;\n}\nfunction checkForResizeHandles(diagram, element, position, matrix, x, y) {\n    var forty = 40 / diagram.scroller.currentZoom;\n    var ten = 10 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var labelSelection = (selectedItems.annotation) ? true : false;\n    if (element.actualSize.width >= forty && element.actualSize.height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthEast' : 'ResizeSouthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthWest' : 'ResizeSouthWest';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthEast', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthEast' : 'ResizeNorthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthWest' : 'ResizeNorthWest';\n        }\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeEast' : 'ResizeEast';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeWest' : 'ResizeWest';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y + element.actualSize.height }), ten)) {\n        return (labelSelection) ? 'LabelResizeSouth' : 'ResizeSouth';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y }), ten)) {\n        return (labelSelection) ? 'LabelResizeNorth' : 'ResizeNorth';\n    }\n    return null;\n}\n/** @private */\nexport function contains(mousePosition, corner, padding) {\n    if (mousePosition.x >= corner.x - padding && mousePosition.x <= corner.x + padding) {\n        if (mousePosition.y >= corner.y - padding && mousePosition.y <= corner.y + padding) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function hasSelection(diagram) {\n    if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function hasSingleConnection(diagram) {\n    if (diagram.selectedItems.connectors.length === 1 && !diagram.selectedItems.nodes.length) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function isSelected(diagram, element, firstLevel, wrapper) {\n    if (firstLevel === void 0) { firstLevel = true; }\n    if (element instanceof Selector) {\n        return true;\n    }\n    if (element instanceof Node) {\n        while (element) {\n            if (diagram.selectedItems.nodes.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n                return true;\n            }\n            if (!firstLevel) {\n                element = diagram.nameTable[element.parentId];\n            }\n            else {\n                break;\n            }\n        }\n    }\n    else if (element instanceof Connector) {\n        if (diagram.selectedItems.connectors.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n            return true;\n        }\n    }\n    else if (element instanceof ShapeAnnotation || element instanceof PathAnnotation) {\n        if (diagram.selectedItems.annotation && diagram.selectedItems.wrapper.children[0].id === wrapper.id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function getCursor(cursor, angle) {\n    //to avoid angles less than 0 & angles greater than 360\n    angle += 360;\n    angle %= 360;\n    if (cursor.indexOf('Resize') === -1) {\n        return cursors[cursor];\n    }\n    else {\n        var dir = cursors[cursor];\n        if ((angle >= 0 && angle < 25) || (angle >= 160 && angle <= 205) || (angle >= 340 && angle <= 360)) {\n            return dir;\n        }\n        else if ((angle >= 25 && angle <= 70) || (angle >= 205 && angle <= 250)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'n-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'nw-resize';\n            }\n            else {\n                return 'e-resize';\n            }\n        }\n        else if ((angle >= 70 && angle <= 115) || (angle >= 250 && angle <= 295)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'n-resize';\n            }\n            else {\n                return 'nw-resize';\n            }\n        }\n        else if ((angle >= 115 && angle <= 155) || (angle >= 295 && angle <= 340)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'nw-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'ne-resize';\n            }\n        }\n        else {\n            return 'n-resize';\n        }\n    }\n    return cursors[cursor];\n}\nvar cursors = {\n    'None': 'default',\n    'Rotate': 'crosshair',\n    'Select': 'default',\n    'Drag': 'move',\n    'ResizeWest': 'w-resize',\n    'ResizeEast': 'e-resize',\n    'ResizeSouth': 's-resize',\n    'ResizeNorth': 'n-resize',\n    'Draw': 'crosshair',\n    'PortDraw': 'crosshair',\n    'ResizeNorthEast': 'ne-resize',\n    'ResizeNorthWest': 'nw-resize',\n    'ResizeSouthEast': 'se-resize',\n    'ResizeSouthWest': 'sw-resize',\n    'ConnectorSourceEnd': 'move',\n    'ConnectorTargetEnd': 'move',\n    'BezierSourceThumb': 'move',\n    'BezierTargetThumb': 'move',\n    'OrthoThumb': 'move',\n    'SegmentEnd': 'move',\n    'Pan': 'pointer',\n    'Hyperlink': 'pointer',\n    'PortDrag': 'pointer',\n    'LabelSelect': 'pointer',\n    'LabelDrag': 'move',\n    'LabelRotate': 'crosshair',\n    'LabelResizeWest': 'w-resize',\n    'LabelResizeEast': 'e-resize',\n    'LabelResizeSouth': 's-resize',\n    'LabelResizeNorth': 'n-resize',\n    'LabelResizeNorthEast': 'ne-resize',\n    'LabelResizeNorthWest': 'nw-resize',\n    'LabelResizeSouthEast': 'se-resize',\n    'LabelResizeSouthWest': 'sw-resize',\n};\n","import { Node } from './../objects/node';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Canvas } from './../core/containers/canvas';\nimport { Container } from './../core/containers/container';\nimport { PathElement } from './../core/elements/path-element';\nimport { TextElement } from './../core/elements/text-element';\nimport { updateStyle } from './../../diagram/utility/diagram-util';\nimport { randomId, cloneObject } from './../utility/base-util';\nimport { Connector } from './../objects/connector';\nimport { BpmnAnnotation } from './../objects/node';\nimport { Transform, DiagramAction } from '../enum/enum';\nimport { findAngle, getIntersectionPoints, getPortDirection } from '../utility/connector';\nimport { Point } from '../primitives/point';\nimport { NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { getDiagramElement } from '../utility/dom-util';\n/**\n * BPMN Diagrams contains the BPMN functionalities\n */\nvar BpmnDiagrams = /** @class */ (function () {\n    //End size region\n    /**\n     * Constructor for the BpmnDiagrams module\n     * @private\n     */\n    function BpmnDiagrams() {\n        //Code conversion for Bpmn Shapes\n        //Start Region\n        /**   @private  */\n        this.annotationObjects = {};\n        //constructs the BpmnDiagrams module\n    }\n    Object.defineProperty(BpmnDiagrams.prototype, \"textAnnotationConnectors\", {\n        /**   @private  */\n        get: function () {\n            var connectors = [];\n            for (var _i = 0, _a = Object.keys(this.annotationObjects); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var entry = this.annotationObjects[key];\n                for (var _b = 0, _c = Object.keys(entry); _b < _c.length; _b++) {\n                    var annotation = _c[_b];\n                    var key_1 = 'connector';\n                    connectors.push(entry[annotation][key_1]);\n                }\n            }\n            return connectors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationConn = function (obj) {\n        var connectors = [];\n        if (obj.shape.type === 'Bpmn' && obj.shape.annotations.length !== 0) {\n            var entry = this.annotationObjects[obj.id];\n            for (var _i = 0, _a = Object.keys(entry); _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                var key = 'connector';\n                connectors.push(entry[annotation][key]);\n            }\n        }\n        return connectors;\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.getSize = function (node, content) {\n        var size = new Size(node.width, node.height);\n        if (size.width === undefined || size.height === undefined) {\n            if (!(content instanceof PathElement)) {\n                size.width = size.width || 50;\n                size.height = size.height || 50;\n            }\n            if (content.actualSize.width && content.actualSize.height) {\n                return content.actualSize;\n            }\n            else {\n                content.measure(new Size());\n                size.width = size.width || content.desiredSize.width;\n                size.height = size.height || content.desiredSize.height;\n            }\n            if (node.maxWidth !== undefined) {\n                size.width = Math.min(size.width, node.maxWidth);\n            }\n            if (node.maxHeight !== undefined) {\n                size.height = Math.min(size.height, node.maxHeight);\n            }\n            if (node.minWidth !== undefined) {\n                size.width = Math.max(size.width, node.minWidth);\n            }\n            if (node.minHeight !== undefined) {\n                size.height = Math.max(size.height, node.minHeight);\n            }\n        }\n        return size;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.initBPMNContent = function (content, node, diagram) {\n        var shape = node.shape;\n        if (shape.shape === 'Event') {\n            content = this.getBPMNEventShape(node, shape.event);\n        }\n        if (shape.shape === 'Gateway') {\n            content = this.getBPMNGatewayShape(node);\n        }\n        if (shape.shape === 'DataObject') {\n            content = this.getBPMNDataObjectShape(node);\n        }\n        if (shape.shape === 'Message' || shape.shape === 'DataSource') {\n            content = this.getBPMNShapes(node);\n        }\n        // if (shape.shape === 'Group') {\n        //     content = this.getBPMNGroup(node, diagram);\n        //     content.style.strokeDashArray = '2 2 6 2';\n        //     content.horizontalAlignment = 'Center';\n        //     content.verticalAlignment = 'Center';\n        // }\n        if (shape.shape === 'Activity') {\n            content = this.getBPMNActivityShape(node);\n        }\n        if (shape.shape === 'TextAnnotation') {\n            content = this.renderBPMNTextAnnotation(diagram, node, content);\n        }\n        var annotations = {};\n        if (shape.annotations.length > 0) {\n            for (var i = 0; i < shape.annotations.length && shape.annotations[i].text; i++) {\n                content.children.push(this.getBPMNTextAnnotation(node, diagram, shape.annotations[i], content));\n            }\n            content.style.strokeDashArray = '2 2 6 2';\n        }\n        return content;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNShapes = function (node) {\n        var bpmnShape = new PathElement();\n        //set style\n        this.setStyle(bpmnShape, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            bpmnShape.shadow = node.shadow;\n        }\n        var bpmnShapeData = getBpmnShapePathData(node.shape.shape);\n        bpmnShape.data = bpmnShapeData;\n        bpmnShape.id = node.id + '_' + node.shape.shape;\n        if (node.width !== undefined && node.height !== undefined) {\n            bpmnShape.width = node.width;\n            bpmnShape.height = node.height;\n        }\n        return bpmnShape;\n    };\n    /** @private */\n    // public getBPMNGroup(node: Node, diagram: Diagram): Container {\n    //     let group: Container = new Container();\n    //     group.id = node.id + '_group';\n    //     //group.style.strokeDashArray = '2 2 6 2';\n    //     if (!group.children) { group.children = []; }\n    //     let grp: BpmnGroup = ((node.shape as BpmnShape).group as BpmnGroup);\n    //     if ((node.shape as BpmnShape).group as BpmnGroup) {\n    //         for (let i: number = 0; i < grp.children.length; i++) {\n    //             let b: Node | Connector = diagram.nameTable[grp.children[i]];\n    //             group.children.push(b.wrapper);\n    //         }\n    //     }\n    //     return group;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNGatewayShape = function (node) {\n        var gatewayshape = new Canvas();\n        //childNode0\n        var gatewayNode = new PathElement();\n        gatewayNode.id = node.id + '_0_gateway';\n        gatewayNode.offsetX = node.offsetX;\n        gatewayNode.offsetY = node.offsetY;\n        gatewayNode.data = 'M 40 20 L 20 40 L 0 20 L 20 0 L 40 20 Z';\n        this.setStyle(gatewayNode, node);\n        //childNode1\n        var gatewayTypeNode = new PathElement();\n        gatewayTypeNode.id = node.id + '_1_gatewayType';\n        //set style - opacity\n        gatewayTypeNode.style.opacity = node.style.opacity;\n        gatewayTypeNode.style.strokeColor = node.style.strokeColor;\n        gatewayTypeNode.horizontalAlignment = 'Center';\n        gatewayTypeNode.verticalAlignment = 'Center';\n        gatewayTypeNode.relativeMode = 'Object';\n        var shapeType = node.shape.gateway;\n        var gatewayTypeNodeShapeData;\n        gatewayTypeNodeShapeData = getBpmnGatewayShapePathData(shapeType.type);\n        if (shapeType.type === 'EventBased' || shapeType.type === 'ExclusiveEventBased' || shapeType.type === 'ParallelEventBased') {\n            gatewayTypeNode.style.fill = 'white';\n        }\n        else {\n            gatewayTypeNode.style.fill = 'black';\n        }\n        gatewayTypeNode.data = gatewayTypeNodeShapeData;\n        // append child and set style\n        gatewayshape.style.fill = 'transparent';\n        gatewayshape.style.strokeColor = 'transparent';\n        gatewayshape.style.strokeWidth = 0;\n        gatewayshape.children = [gatewayNode, gatewayTypeNode];\n        var size = this.getSize(node, gatewayNode);\n        this.setSizeForBPMNGateway(node.shape.gateway, gatewayshape, size.width, size.height);\n        return gatewayshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNDataObjectShape = function (node) {\n        var dataObjectshape = new Canvas();\n        var shape = node.shape.dataObject;\n        //childNode0\n        var dataobjNode = new PathElement();\n        dataobjNode.id = node.id + '_0_dataobj';\n        dataobjNode.data = 'M29.904,5 L7.853,5 L7.853,45 L42.147,45 L42.147,17.242,L29.932,5,L29.932,17.242,L42.147,17.242';\n        var size = this.getSize(node, dataobjNode);\n        dataobjNode.width = size.width;\n        dataobjNode.height = size.height;\n        this.setStyle(dataobjNode, node);\n        //childNode1\n        var dataobjTypeNode = new PathElement();\n        dataobjTypeNode.id = node.id + '_1_type';\n        dataobjTypeNode.width = 25;\n        dataobjTypeNode.height = 20;\n        dataobjTypeNode.margin.left = 5;\n        dataobjTypeNode.margin.top = 5;\n        dataobjTypeNode.data = 'M 3 9.4 l 6 0 v 2.4 l 3.6 -4 L 9 4 v 2.5 H 3 V 9.4 Z';\n        //set style - opacity\n        dataobjTypeNode.style.opacity = node.style.opacity;\n        //childNode2\n        var dataobjCollectionNode = new PathElement();\n        dataobjCollectionNode.id = node.id + '_2_collection';\n        dataobjCollectionNode.width = 7.5;\n        dataobjCollectionNode.height = 15;\n        dataobjCollectionNode.style.fill = 'black';\n        dataobjCollectionNode.visible = true;\n        dataobjCollectionNode.horizontalAlignment = 'Center';\n        dataobjCollectionNode.verticalAlignment = 'Bottom';\n        dataobjCollectionNode.relativeMode = 'Object';\n        //set style - opacity\n        dataobjCollectionNode.style.opacity = node.style.opacity;\n        dataobjCollectionNode.data = 'M 0 0 L 0.1 0 L 0.1 2 L 0 2 Z M 0.4 0 L 0.6 0 L 0.6 2 L0.4 2 Z M 0.9 0 L 1 0 L 1 2 L 0.9 2 Z';\n        switch (shape.type) {\n            case 'None':\n                dataobjTypeNode.visible = false;\n                break;\n            case 'Input':\n                dataobjTypeNode.style.fill = 'white';\n                break;\n            case 'Output':\n                dataobjTypeNode.style.fill = 'black';\n                break;\n        }\n        if (shape.collection === false) {\n            dataobjCollectionNode.visible = false;\n        }\n        //append child and set style\n        dataObjectshape.style.fill = 'transparent';\n        dataObjectshape.style.strokeColor = 'transparent';\n        dataObjectshape.style.strokeWidth = 0;\n        dataObjectshape.children = [dataobjNode, dataobjTypeNode, dataobjCollectionNode];\n        return dataObjectshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTaskShape = function (node) {\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var taskShapes = new Canvas();\n        //childNode0\n        var taskNode = new DiagramElement();\n        taskNode.cornerRadius = 10;\n        var size = this.getSize(node, taskNode);\n        taskNode.id = node.id + '_0_task';\n        taskNode.width = size.width;\n        taskNode.height = size.height;\n        this.setStyle(taskNode, node);\n        // if task as call \n        if ((task.call !== undefined) && task.call === true) {\n            taskNode.style.strokeWidth = 4;\n        }\n        taskShapes.width = size.width;\n        taskShapes.height = size.height;\n        var childCount = this.getTaskChildCount(node);\n        var x;\n        var childSpace = childCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (childCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (childCount - 1) * 8;\n        }\n        //childNode1\n        var taskTypeNode = new PathElement();\n        var taskTypeNodeData;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            taskTypeNode.width = 18;\n            taskTypeNode.height = 16;\n        }\n        else {\n            taskTypeNode.width = 20;\n            taskTypeNode.height = 20;\n        }\n        taskTypeNode.id = node.id + '_1_tasktType';\n        taskTypeNode.margin.left = 5;\n        taskTypeNode.margin.top = 5;\n        taskTypeNodeData = getBpmnTaskShapePathData(task.type);\n        taskTypeNode.data = taskTypeNodeData;\n        taskTypeNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        // append child and set style\n        taskShapes.style.fill = 'transparent';\n        taskShapes.style.strokeColor = 'transparent';\n        taskShapes.style.strokeWidth = 0;\n        taskShapes.children = [taskNode, taskTypeNode];\n        //childnode for service\n        if (task.type === 'Service') {\n            var taskTypeNodeService = new PathElement();\n            taskTypeNodeService.id = node.id + '_1_taskTypeService';\n            taskTypeNodeService.data = taskTypeNodeData;\n            taskTypeNodeService.margin.left = taskTypeNode.margin.left + 9;\n            taskTypeNodeService.margin.top = taskTypeNode.margin.top + 9;\n            taskTypeNodeService.style.fill = 'white';\n            taskTypeNodeService.style.opacity = node.style.opacity;\n            taskShapes.children.push(taskTypeNodeService);\n        }\n        // if task as loop\n        var loopType = task.loop;\n        var taskLoopNode = new PathElement();\n        var childNode2data;\n        childNode2data = getBpmnLoopShapePathData(loopType);\n        taskLoopNode.data = childNode2data;\n        taskLoopNode.style.fill = 'black';\n        if (loopType !== 'None') {\n            taskLoopNode.visible = true;\n        }\n        else {\n            taskLoopNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskLoopNode.margin.left = x;\n        if (taskLoopNode.visible === true) {\n            x += 12 + 8;\n        }\n        taskLoopNode.width = 12;\n        taskLoopNode.height = 12;\n        taskLoopNode.margin.bottom = 5;\n        taskLoopNode.id = node.id + '_2_loop';\n        taskLoopNode.horizontalAlignment = 'Left';\n        taskLoopNode.verticalAlignment = 'Bottom';\n        taskLoopNode.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        taskLoopNode.relativeMode = 'Point';\n        taskLoopNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        taskShapes.children.push(taskLoopNode);\n        //if task as compensation\n        var taskCompNode = new PathElement();\n        taskCompNode = this.getBPMNCompensationShape(node, taskCompNode);\n        if (task.compensation === true) {\n            taskCompNode.visible = true;\n        }\n        else {\n            taskCompNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskCompNode.margin.left = x - 3;\n        x += 12 + 6;\n        taskShapes.children.push(taskCompNode);\n        return taskShapes;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNEventShape = function (node, subEvent, sub, id) {\n        var eventshape = new Canvas();\n        var event;\n        var trigger;\n        var width;\n        var height;\n        id = id || node.id;\n        var pathdata = 'M164.1884,84.6909000000001C156.2414,84.6909000000001,149.7764,78.2259000000001,149.7764,70.2769000000001' +\n            'C149.7764,62.3279000000001,156.2414,55.8629000000001,164.1884,55.8629000000001C172.1354,55.8629000000001,178.6024,' +\n            '62.3279000000001,178.6024,70.2769000000001C178.6024,78.2259000000001,172.1354,84.6909000000001,164.1884,84.6909000000001';\n        var shapeEvent = node.shape.event;\n        if (node.shape.shape === 'Event') {\n            event = shapeEvent.event;\n            trigger = shapeEvent.trigger;\n        }\n        width = subEvent.width;\n        height = subEvent.height;\n        if (sub) {\n            width = width || 20;\n            height = height || 20;\n        }\n        else if (subEvent.width === undefined || subEvent.height === undefined) {\n            var pathElement = new PathElement();\n            pathElement.data = pathdata;\n            var size = this.getSize(node, pathElement);\n            width = size.width;\n            height = size.height;\n        }\n        var shapeActivity = node.shape.activity;\n        if (node.shape.shape === 'Activity') {\n            var subProcess = shapeActivity.subProcess;\n            event = subEvent.event;\n            trigger = subEvent.trigger;\n        }\n        //childNode0\n        var innerEvtNode = new PathElement();\n        innerEvtNode.data = pathdata;\n        innerEvtNode.id = id + '_0_event';\n        innerEvtNode.width = width;\n        innerEvtNode.height = height;\n        innerEvtNode.horizontalAlignment = 'Center';\n        innerEvtNode.verticalAlignment = 'Center';\n        innerEvtNode.relativeMode = 'Object';\n        this.setStyle(innerEvtNode, node);\n        //childNode1\n        var outerEvtNode = new PathElement();\n        outerEvtNode.data = pathdata;\n        outerEvtNode.id = id + '_1_event';\n        outerEvtNode.style.gradient = node.style.gradient;\n        outerEvtNode.horizontalAlignment = 'Center';\n        outerEvtNode.verticalAlignment = 'Center';\n        outerEvtNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        outerEvtNode.style.strokeColor = node.style.strokeColor;\n        outerEvtNode.style.opacity = node.style.opacity;\n        //childNode2\n        var triggerNode = new PathElement();\n        var triggerNodeData = getBpmnTriggerShapePathData(trigger);\n        triggerNode.data = triggerNodeData;\n        triggerNode.id = id + '_2_trigger';\n        triggerNode.horizontalAlignment = 'Center';\n        triggerNode.verticalAlignment = 'Center';\n        triggerNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        triggerNode.style.strokeColor = node.style.strokeColor;\n        triggerNode.style.opacity = node.style.opacity;\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n            case 'Intermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                break;\n            case 'NonInterruptingIntermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.style.strokeDashArray = '2 3';\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                innerEvtNode.style.fill = event !== 'End' ? 'white' : 'black';\n                innerEvtNode.style.gradient = null;\n                triggerNode.style.fill = 'black';\n                triggerNode.style.strokeColor = node.style.strokeColor;\n                break;\n        }\n        //append child and set style\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        eventshape.children = [innerEvtNode, outerEvtNode, triggerNode];\n        this.setSizeForBPMNEvents(shapeEvent, eventshape, width, height);\n        return eventshape;\n    };\n    BpmnDiagrams.prototype.setEventVisibility = function (node, canvas) {\n        var event = node.shape.event.event;\n        var innerEvtNode = canvas[0];\n        var outerEvtNode = canvas[1];\n        var triggerNode = canvas[2];\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n        }\n    };\n    BpmnDiagrams.prototype.setSubProcessVisibility = function (node) {\n        var subProcess = node.shape.activity.subProcess;\n        var eventLength = subProcess.events.length;\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index + eventLength].visible = false;\n        }\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index + eventLength].visible = false;\n        }\n        if (eventLength > 0) {\n            for (var i = 0; i < eventLength; i++) {\n                this.setEventVisibility(node, elementWrapper.children[2 + i].children);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessShape = function (node) {\n        var subProcessShapes = new Canvas();\n        var loopType;\n        var events;\n        var event;\n        var subprocessAdhoc = new PathElement();\n        var subProcessEventsShapes = new Canvas();\n        var subProcessLoopShapes = new PathElement();\n        var shape = node.shape.activity;\n        var subProcess = shape.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var subprocessNode = new DiagramElement();\n        subprocessNode.id = node.id + '_0_Subprocess';\n        subprocessNode.style.fill = 'transparent';\n        subprocessNode.cornerRadius = 10;\n        var size = this.getSize(node, subprocessNode);\n        subprocessNode.width = size.width;\n        subprocessNode.height = size.height;\n        subProcessShapes.children = [subprocessNode];\n        if (shape.subProcess.type === 'Transaction') {\n            this.getBPMNSubProcessTransaction(node, node.shape, subProcessShapes);\n        }\n        var iconSpace = 4;\n        var subChildSpace = 12;\n        var childSpace = subChildCount * subChildSpace;\n        var area = size.width / 2;\n        if (subChildCount === 1) {\n            x = area - (subChildSpace * 0.5);\n        }\n        else {\n            x = area - (childSpace / 2) - ((subChildCount - 1) * iconSpace) / 2;\n        }\n        //set style\n        this.setStyle(subprocessNode, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            subProcessShapes.shadow = node.shadow;\n        }\n        var collapsedShape = new PathElement();\n        collapsedShape.id = node.id + '_0_collapsed';\n        collapsedShape.width = 12;\n        collapsedShape.height = 12;\n        collapsedShape.style.fill = 'black';\n        collapsedShape.style.strokeColor = node.style.strokeColor;\n        collapsedShape.margin.bottom = 5;\n        collapsedShape.horizontalAlignment = 'Left';\n        collapsedShape.verticalAlignment = 'Bottom';\n        collapsedShape.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        collapsedShape.relativeMode = 'Point';\n        collapsedShape.data = getBpmnShapePathData('collapsedShape');\n        collapsedShape.margin.left = x;\n        if (subProcess.collapsed === true && !subProcess.processes) {\n            collapsedShape.visible = true;\n        }\n        else {\n            collapsedShape.visible = false;\n        }\n        if (collapsedShape.visible === true) {\n            x += 12 + 6;\n        }\n        subProcessShapes.children.push(collapsedShape);\n        if (subProcess.type === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n            events = subProcess.events;\n            for (var i = 0; i < events.length; i++) {\n                event = events[i];\n                this.getBPMNSubEvent(event, node, subProcessShapes);\n            }\n        }\n        // set loop for subprocess\n        subProcessLoopShapes = this.getBPMNSubProcessLoopShape(node);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subProcessLoopShapes.margin.left = x;\n        if (subProcessLoopShapes.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subProcessLoopShapes);\n        // set boundary for subprocess\n        subprocessNode.id = node.id + '_boundary';\n        if (subProcess.boundary === 'Default') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            subprocessNode.style.strokeWidth = 4;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n        }\n        //set adhoc for subprocess\n        subprocessAdhoc = this.getBPMNAdhocShape(node, subprocessAdhoc, subProcess);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessAdhoc.margin.left = x;\n        if (subprocessAdhoc.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessAdhoc);\n        //set compensation for subprocess\n        var subprocessComp = new PathElement();\n        if (subProcess.compensation === true) {\n            subprocessComp.visible = true;\n        }\n        else {\n            subprocessComp.visible = false;\n        }\n        subprocessComp = this.getBPMNCompensationShape(node, subprocessComp);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessComp.margin.left = x;\n        if (subprocessComp.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessComp);\n        //set style for subprocess\n        subProcessShapes.style.strokeColor = 'transparent';\n        subProcessShapes.style.strokeWidth = 0;\n        subProcessShapes.style.fill = 'transparent';\n        return subProcessShapes;\n    };\n    BpmnDiagrams.prototype.getBPMNSubEvent = function (event, node, container, id) {\n        container.children = container.children || [];\n        var eventContainer;\n        eventContainer = this.getBPMNEventShape(node, event, true, id);\n        this.getBPMNSubprocessEvent(node, eventContainer, event);\n        eventContainer.id = id || (node.id + '_subprocessEvents');\n        eventContainer.width = event.width || 20;\n        eventContainer.height = event.height || 20;\n        // set offset for subevents\n        eventContainer.setOffsetWithRespectToBounds(event.offset.x, event.offset.y, 'Fraction');\n        eventContainer.relativeMode = 'Point';\n        //set margin for subevents\n        eventContainer.margin = event.margin;\n        //set alignment for subevents\n        eventContainer.horizontalAlignment = event.horizontalAlignment;\n        eventContainer.verticalAlignment = event.verticalAlignment;\n        // set style for subevent\n        eventContainer.style.fill = 'transparent';\n        eventContainer.style.strokeColor = 'transparent';\n        eventContainer.style.strokeWidth = 0;\n        container.children.push(eventContainer);\n    };\n    BpmnDiagrams.prototype.getBPMNSubProcessTransaction = function (node, shape, container) {\n        var shapeWidth = container.children[0].width;\n        var shapeHeight = container.children[0].height;\n        var innerRect = new DiagramElement();\n        innerRect.margin = { left: 3, right: 0, top: 3, bottom: 0 };\n        innerRect.id = node.id + '_0_Subprocess_innnerRect';\n        innerRect.cornerRadius = 10;\n        innerRect.width = shapeWidth - 6;\n        innerRect.height = shapeHeight - 6;\n        container.children.push(innerRect);\n        var transactionEvents = new Canvas();\n        transactionEvents.id = node.id + '_transaction_events';\n        transactionEvents.style.gradient = node.style.gradient;\n        var transaction = shape.activity.subProcess.transaction;\n        this.getBPMNSubEvent(transaction.success, node, transactionEvents, node.id + '_success');\n        this.getBPMNSubEvent(transaction.cancel, node, transactionEvents, node.id + '_cancel');\n        this.getBPMNSubEvent(transaction.failure, node, transactionEvents, node.id + '_failure');\n        this.updateDiagramContainerVisibility(transactionEvents.children[0], transaction.success.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[1], transaction.cancel.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[2], transaction.failure.visible);\n        transactionEvents.float = true;\n        transactionEvents.width = shapeWidth;\n        transactionEvents.height = shapeHeight;\n        transactionEvents.style.fill = transactionEvents.style.strokeColor = 'transparent';\n        container.children.push(transactionEvents);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessLoopShape = function (node) {\n        var shape = node.shape.activity;\n        var loopType;\n        var subprocessLoop = new PathElement();\n        var subprocessLoopData;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        subprocessLoopData = getBpmnLoopShapePathData(loopType);\n        if (loopType !== 'None') {\n            subprocessLoop.visible = true;\n        }\n        else {\n            subprocessLoop.visible = false;\n        }\n        subprocessLoop.id = node.id + '_loop';\n        subprocessLoop.data = subprocessLoopData;\n        subprocessLoop.style.fill = 'black';\n        subprocessLoop.width = 12;\n        subprocessLoop.height = 12;\n        subprocessLoop.horizontalAlignment = 'Left';\n        subprocessLoop.verticalAlignment = 'Bottom';\n        subprocessLoop.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        subprocessLoop.relativeMode = 'Point';\n        subprocessLoop.margin.bottom = 5;\n        subprocessLoop.style.fill = 'transparent';\n        subprocessLoop.style.strokeColor = node.style.strokeColor;\n        return subprocessLoop;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.drag = function (obj, tx, ty, diagram) {\n        var node = diagram.nameTable[(obj).processId];\n        if (obj.margin.top + ty >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { top: obj.margin.top + ty } });\n        }\n        if (obj.margin.left + tx >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { left: obj.margin.left + tx } });\n        }\n        var diffX = 0;\n        var diffY = 0;\n        var bound = this.getChildrenBound(node, obj.id, diagram);\n        this.updateSubProcessess(bound, obj, diagram);\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        diagram.refreshCanvasLayers();\n        diagram.updateSelector();\n        this.updateDocks(obj, diagram);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.dropBPMNchild = function (target, source, diagram) {\n        if (source && source.shape.type === 'Bpmn' && target.shape.type === 'Bpmn'\n            && source.shape.shape !== 'TextAnnotation') {\n            var subProcess = diagram.nameTable[target.id].shape.activity.subProcess;\n            if (diagram.currentSymbol && target.shape.type === 'Bpmn' && !subProcess.collapsed) {\n                source.processId = target.id;\n                return;\n            }\n            subProcess.processes = subProcess.processes || [];\n            if (subProcess.processes && subProcess.processes.indexOf(source.id) === -1 && !subProcess.collapsed) {\n                subProcess.processes.push(source.id);\n                var redoElement = cloneObject(source);\n                var sources = diagram.nameTable[source.id].wrapper;\n                var targetWrapper = diagram.nameTable[target.id].wrapper;\n                sources.margin.top = (sources.offsetY - (sources.actualSize.height / 2))\n                    - (target.offsetY - (target.actualSize.height / 2));\n                sources.margin.left = (sources.offsetX - (sources.actualSize.width / 2))\n                    - (target.offsetX - (target.actualSize.width / 2));\n                sources.margin.top = (sources.margin.top < 0) ? 0 : sources.margin.top;\n                sources.margin.left = (sources.margin.left < 0) ? 0 : sources.margin.left;\n                diagram.nameTable[source.id].processId = target.id;\n                targetWrapper.children.push(diagram.nameTable[source.id].wrapper);\n                var bound = this.getChildrenBound(target, source.id, diagram);\n                this.updateSubProcessess(bound, source, diagram);\n                targetWrapper.measure(new Size(undefined, undefined));\n                targetWrapper.arrange(targetWrapper.desiredSize);\n                diagram.refreshCanvasLayers();\n                diagram.updateSelector();\n                var edges = [];\n                edges = edges.concat(source.outEdges, source.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    if (diagram.bpmnModule.textAnnotationConnectors.indexOf(diagram.nameTable[edges[i]]) === -1) {\n                        diagram.remove(diagram.nameTable[edges[i]]);\n                    }\n                }\n                var obj = cloneObject(source);\n                var entry = {\n                    type: 'PositionChanged', undoObject: { nodes: [redoElement] },\n                    redoObject: { nodes: [obj] }, category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.mode === 'SVG') {\n                    if (source.zIndex < target.zIndex) {\n                        diagram.updateProcesses(source);\n                    }\n                }\n                this.updateDocks(source, diagram);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateDocks = function (obj, diagram) {\n        if (obj.shape.type === 'Bpmn' && obj.shape.activity.subProcess.processes &&\n            !obj.shape.activity.subProcess.collapsed) {\n            var processTable = obj.shape.activity.subProcess.processes;\n            for (var _i = 0, processTable_1 = processTable; _i < processTable_1.length; _i++) {\n                var i = processTable_1[_i];\n                var actualObject = diagram.nameTable[i];\n                if (actualObject) {\n                    diagram.updateConnectorEdges(actualObject);\n                    actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                    actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                    if (actualObject.shape.activity.subProcess.processes\n                        && actualObject.shape.activity.subProcess.processes.length) {\n                        this.updateDocks(actualObject, diagram);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeBpmnProcesses = function (currentObj, diagram) {\n        var element = diagram.nameTable[currentObj.processId];\n        if (currentObj.shape.type === 'Bpmn' && currentObj.shape.activity.subProcess.processes &&\n            currentObj.shape.activity.subProcess.processes.length > 0) {\n            var processes = currentObj.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                diagram.remove(diagram.nameTable[processes[j]]);\n            }\n        }\n        if (element) {\n            diagram.removeDependentConnector(currentObj);\n            var processes = element.shape.activity.subProcess.processes;\n            this.removeChildFromBPMN(element.wrapper, currentObj.id);\n            var processIndex = processes.indexOf(currentObj.id);\n            processes.splice(processIndex, 1);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeChildFromBPMN = function (wrapper, name) {\n        for (var _i = 0, _a = wrapper.children; _i < _a.length; _i++) {\n            var i = _a[_i];\n            if (i.id === name) {\n                wrapper.children.splice(wrapper.children.indexOf(i), 1);\n            }\n            else if (i.children) {\n                this.removeChildFromBPMN(i, name);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeProcess = function (id, diagram) {\n        var node = diagram.nameTable[id];\n        if (node) {\n            var parent_1 = diagram.nameTable[node.processId];\n            if (parent_1 && parent_1.shape.type === 'Bpmn') {\n                var processes = parent_1.shape.activity.subProcess.processes;\n                diagram.removeDependentConnector(node);\n                this.removeChildFromBPMN(parent_1.wrapper, id);\n                var processIndex = processes.indexOf(id);\n                processes.splice(processIndex, 1);\n                node.processId = '';\n                diagram.refreshDiagramLayer();\n                diagram.updateSelector();\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addProcess = function (process, parentId, diagram) {\n        var id;\n        process.id = process.id || randomId();\n        id = process.id;\n        var node = diagram.nameTable[id];\n        if (!node) {\n            diagram.add(process);\n        }\n        process.processId = parentId;\n        var parentNode = diagram.nameTable[parentId];\n        var subProcess = parentNode.shape.activity.subProcess;\n        if (node && parentNode && parentNode.shape.type === 'Bpmn' && node.shape.type === 'Bpmn' &&\n            subProcess.processes) {\n            node.processId = parentId;\n            var processes = parentNode.shape.activity.subProcess.processes;\n            if (processes.indexOf(id) < 0) {\n                processes.push(id);\n            }\n            parentNode.wrapper.children.push(node.wrapper);\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n            diagram.bpmnModule.updateDocks(parentNode, diagram);\n            diagram.refreshDiagramLayer();\n            if (diagram.mode === 'SVG' && (node.shape && node.shape.activity\n                && !node.shape.activity.subProcess.processes)) {\n                var child = getDiagramElement(parentId + '_groupElement');\n                child.appendChild(getDiagramElement(process.id + '_groupElement'));\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getChildrenBound = function (node, excludeChild, diagram) {\n        var processes = node.shape.activity.subProcess.processes;\n        var bound;\n        if (processes && processes.length) {\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                if (excludeChild !== i) {\n                    if (!bound) {\n                        bound = diagram.nameTable[i].wrapper.bounds;\n                    }\n                    else {\n                        bound = diagram.nameTable[i].wrapper.bounds.uniteRect(bound);\n                    }\n                }\n            }\n        }\n        return bound || diagram.nameTable[excludeChild].wrapper.bounds;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateSubProcessess = function (bound, obj, diagram) {\n        var diffX;\n        var diffY;\n        var node = diagram.nameTable[obj.processId];\n        var right;\n        var bottom;\n        var pivot = { x: 0.5, y: 0.5 };\n        if ((node.wrapper.bounds.left + obj.margin.left + obj.width) > (node.wrapper.bounds.right)) {\n            right = true;\n        }\n        if ((node.wrapper.bounds.top + obj.margin.top + obj.height) > (node.wrapper.bounds.bottom)) {\n            bottom = true;\n        }\n        if (right) {\n            pivot.x = 0;\n        }\n        if (bottom) {\n            pivot.y = 0;\n        }\n        var actualSize = node.wrapper.actualSize;\n        if (right) {\n            diffX = (obj.wrapper.margin.left + obj.wrapper.bounds.width) / actualSize.width;\n        }\n        if (bottom) {\n            diffY = (obj.wrapper.margin.top + obj.wrapper.bounds.height) / actualSize.height;\n        }\n        if (diffX > 0 || diffY > 0) {\n            diagram.commandHandler.scale(diagram.nameTable[obj.processId], diffX || 1, diffY || 1, pivot);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNCompensationShape = function (node, compensationNode) {\n        compensationNode.id = node.id + '_0_compensation';\n        compensationNode.width = 12;\n        compensationNode.height = 12;\n        compensationNode.margin.bottom = 5;\n        compensationNode.style.fill = 'transparent';\n        compensationNode.style.strokeColor = node.style.strokeColor;\n        compensationNode.horizontalAlignment = 'Left';\n        compensationNode.verticalAlignment = 'Bottom';\n        compensationNode.relativeMode = 'Object';\n        compensationNode.data = 'M 22.462 18.754 l -6.79 3.92 l 6.79 3.92 V 22.89 l 6.415 3.705 v -7.841 l -6.415 3.705 V 18.754 Z' +\n            ' M 28.331 19.701 v 5.947 l -5.149 -2.973 L 28.331 19.701 Z M 21.916 25.647 l -5.15 -2.973 l 5.15 -2.973 V 25.647 Z' +\n            ' M 22.275 12.674 c -5.513 0 -9.999 4.486 -9.999 9.999 c 0 5.514 4.486 10.001 9.999 10.001' +\n            ' c 5.514 0 9.999 -4.486 9.999 -10.001 C 32.274 17.16 27.789 12.674 22.275 12.674 Z M 22.275 32.127 ' +\n            ' c -5.212 0 -9.453 -4.241 -9.453 -9.454 c 0 -5.212 4.241 -9.453 9.453 -9.453 c 5.212 0 9.453 4.241 9.453 9.453' +\n            ' C 31.728 27.887 27.487 32.127 22.275 32.127 Z';\n        return compensationNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNActivityShape = function (node) {\n        var eventshape = new Canvas();\n        var content;\n        var shape = node.shape.activity;\n        var task = shape.activity;\n        var subProcess = shape.subProcess;\n        var activityType = shape.activity;\n        if (task === 'Task') {\n            content = this.getBPMNTaskShape(node);\n        }\n        if (task === 'SubProcess' && subProcess) {\n            content = this.getBPMNSubProcessShape(node);\n        }\n        content.id = task + node.id;\n        eventshape.children = [content];\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        return eventshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubprocessEvent = function (node, subProcessEventsShapes, events) {\n        var annotations;\n        var ports;\n        if (events.annotations.length !== 0) {\n            for (var i = 0; i < events.annotations.length; i++) {\n                var annot = events.annotations[i];\n                annotations = node.initAnnotationWrapper(annot);\n                annotations.width = events.width;\n                annotations.height = events.height;\n                subProcessEventsShapes.children.push(annotations);\n            }\n        }\n        if (events.ports.length !== 0) {\n            for (var i = 0; i < events.ports.length; i++) {\n                var port = events.ports[i];\n                ports = node.initPortWrapper(port);\n                subProcessEventsShapes.children.push(ports);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNAdhocShape = function (node, adhocNode, subProcess) {\n        adhocNode.id = node.id + '_0_adhoc';\n        adhocNode.width = 12;\n        adhocNode.height = 8;\n        adhocNode.style.fill = 'black';\n        adhocNode.style.strokeColor = node.style.strokeColor;\n        adhocNode.margin.bottom = 5;\n        adhocNode.horizontalAlignment = 'Left';\n        adhocNode.verticalAlignment = 'Bottom';\n        adhocNode.relativeMode = 'Object';\n        adhocNode.data = 'M 49.832 76.811 v -2.906 c 0 0 0.466 -1.469 1.931 -1.5 c 1.465 -0.031 2.331 1.219 2.897 1.688 ' +\n            's 1.06 0.75 1.526 0.75 c 0.466 0 1.548 -0.521 1.682 -1.208 s 0.083 3.083 0.083 3.083 s -0.76 0.969 -1.859 0.969 ' +\n            'c -1.066 0 -1.865 -0.625 -2.464 -1.438 s -1.359 -0.998 -2.064 -0.906 C 50.598 75.467 49.832 76.811 49.832 76.811 Z';\n        if (subProcess && subProcess.adhoc === true) {\n            adhocNode.visible = true;\n        }\n        else {\n            adhocNode.visible = false;\n        }\n        return adhocNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTextAnnotation = function (node, diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        annotation.nodeId = node.id;\n        var annotationContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textElement = new TextElement();\n        var margin = 10;\n        annotationPath.id = node.id + '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textElement.id = node.id + '_' + annotation.id + '_text';\n        textElement.content = annotation.text;\n        var style = node.style;\n        textElement.style = {\n            fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n            bold: style.bold, textWrapping: style.textWrapping, color: style.color, fill: 'white',\n            fontFamily: style.fontFamily, whiteSpace: style.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textDecoration: style.textDecoration\n        };\n        textElement.horizontalAlignment = 'Center';\n        textElement.verticalAlignment = 'Center';\n        textElement.relativeMode = 'Object';\n        textElement.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationContainer.offsetX = node.offsetX + annotation.length *\n            Math.cos(annotation.angle * (Math.PI / 180));\n        annotationContainer.offsetY = node.offsetY + annotation.length *\n            Math.sin(annotation.angle * (Math.PI / 180));\n        annotationContainer.float = true;\n        annotationContainer.transform = Transform.Self;\n        annotationContainer.id = node.id + '_textannotation_' + annotation.id;\n        annotationContainer.style.strokeColor = 'transparent';\n        annotationContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationContainer.relativeMode = 'Object';\n        annotationContainer.rotateAngle = 0;\n        annotationContainer.children = [annotationPath, textElement];\n        var annotationNode = new Node(node.shape, 'annotations', { id: annotationContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationNode.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationNode.offsetX = annotationContainer.offsetX;\n        annotationNode.offsetY = annotationContainer.offsetY;\n        annotationNode.text = annotation.text;\n        annotationNode.angle = annotation.angle;\n        annotationNode.length = annotation.length;\n        annotationNode.width = annotation.width;\n        annotationNode.height = annotation.height;\n        annotationNode.wrapper = annotationContainer;\n        annotationContainer.children.push(annotationNode.initPortWrapper(annotationNode.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = node.width || node.minWidth || 0;\n        var height = node.height || node.minHeight || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(node.offsetX - width / 2, node.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationContainer, { x: annotationNode.offsetX, y: annotationNode.offsetY }, annotationNode, annotation.length, annotation.angle);\n        var connector = {\n            id: node.id + '_' + annotation.id + '_connector',\n            constraints: ConnectorConstraints.Default & ~(ConnectorConstraints.DragTargetEnd | ConnectorConstraints.Drag),\n            sourceID: node.id, targetID: annotationContainer.id,\n            targetDecorator: { shape: 'None' }\n        };\n        var annotationConnector = new Connector(node.shape, 'annotations', connector, true);\n        annotationConnector.targetPortID = annotationNode.ports[0].id;\n        annotationConnector.init(diagram);\n        annotationConnector.wrapper.float = false;\n        annotationConnector.wrapper.transform = Transform.Self;\n        content.children.push(annotationConnector.wrapper);\n        annotationConnector.zIndex = 10000;\n        var entry = this.annotationObjects[node.id];\n        if (!entry) {\n            entry = {};\n        }\n        if (!entry[annotation.id]) {\n            entry[annotation.id] = {};\n        }\n        var nodeKey = 'node';\n        var connKey = 'connector';\n        entry[annotation.id][nodeKey] = annotationNode;\n        entry[annotation.id][connKey] = annotationConnector;\n        this.annotationObjects[node.id] = entry;\n        diagram.initObject(annotationNode, undefined, false);\n        annotationNode.zIndex = 10000;\n        return annotationContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.renderBPMNTextAnnotation = function (diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        var annotationsContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textObject = new TextElement();\n        var margin = 10;\n        annotationPath.id = '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textObject.id = annotation.id + '_text';\n        textObject.content = annotation.shape.annotation.text;\n        var textStyle = annotation.style;\n        textObject.style = {\n            fontSize: textStyle.fontSize, italic: textStyle.italic, gradient: null, opacity: textStyle.opacity,\n            bold: textStyle.bold, textWrapping: textStyle.textWrapping, color: textStyle.color, fill: 'white',\n            fontFamily: textStyle.fontFamily, whiteSpace: textStyle.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: textStyle.strokeDashArray, textAlign: textStyle.textAlign, textDecoration: textStyle.textDecoration\n        };\n        textObject.horizontalAlignment = 'Left';\n        textObject.verticalAlignment = 'Center';\n        textObject.relativeMode = 'Object';\n        textObject.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationsContainer.offsetX = annotation.offsetX + annotation.shape.annotation.length *\n            Math.cos(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.offsetY = annotation.offsetY + annotation.shape.annotation.length *\n            Math.sin(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.float = true;\n        //    annotationContainer.transform = Transform.Self;\n        annotationsContainer.id = annotation.id + '_textannotation_' + annotation.id;\n        annotationsContainer.style.strokeColor = 'transparent';\n        annotationsContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationsContainer.relativeMode = 'Object';\n        annotationsContainer.rotateAngle = 0;\n        annotationsContainer.children = [annotationPath, textObject];\n        var annotationObject = new Node(annotation.shape, 'annotations', { id: annotationsContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationObject.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationObject.offsetX = annotationsContainer.offsetX;\n        annotationObject.offsetY = annotationsContainer.offsetY;\n        if (annotationObject.shape && annotationObject.shape.annotation) {\n            annotationObject.text = annotation.shape.annotation.text;\n            annotationObject.angle = annotation.shape.annotation.angle;\n            annotationObject.length = annotation.shape.annotation.length;\n        }\n        annotationObject.width = annotation.width;\n        annotationObject.height = annotation.height;\n        annotationObject.wrapper = annotationsContainer;\n        annotationsContainer.children.push(annotationObject.initPortWrapper(annotationObject.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = annotation.width || 0;\n        var height = annotation.height || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(annotation.offsetX - width / 2, annotation.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationsContainer, { x: annotationObject.offsetX, y: annotationObject.offsetY }, annotationObject, annotation.length, annotation.angle);\n        return annotationsContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationWrapper = function (node, id) {\n        if (node && node.shape.type === 'Bpmn') {\n            var shape = node.shape;\n            if (shape.shape === 'TextAnnotation') {\n                return node.wrapper.children[1];\n            }\n            else if (this.annotationObjects[node.id] && this.annotationObjects[node.id][id]) {\n                var annotationNode = this.annotationObjects[node.id][id].node;\n                return this.getTextAnnotationWrapper(annotationNode, id);\n            }\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addAnnotation = function (node, annotation, diagram) {\n        var bpmnShapeContent = node.wrapper.children[0];\n        var shape = node.shape;\n        annotation.nodeId = node.id;\n        var annotationObj = new BpmnAnnotation(shape, 'annotations', annotation, true);\n        shape.annotations.push(annotationObj);\n        bpmnShapeContent.children.push(this.getBPMNTextAnnotation(node, diagram, annotation, bpmnShapeContent));\n        node.wrapper.measure(new Size());\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        return this.annotationObjects[node.id][annotation.id].connector;\n    };\n    BpmnDiagrams.prototype.clearAnnotations = function (obj, diagram) {\n        var bpmnShape = obj.shape;\n        if (bpmnShape.annotations.length) {\n            for (var i = bpmnShape.annotations.length - 1; i >= 0; i--) {\n                var annotation = bpmnShape.annotations[i];\n                this.removeAnnotationObjects(obj, annotation, diagram);\n            }\n        }\n        delete this.annotationObjects[obj.id];\n    };\n    /** @private */\n    BpmnDiagrams.prototype.checkAndRemoveAnnotations = function (node, diagram) {\n        //remove connector path\n        //remove annotation node wrapper\n        //remove from a quad\n        if (node.shape.type === 'Bpmn') {\n            if (node.shape.shape === 'TextAnnotation') {\n                var id = node.id.split('_');\n                var annotationId = id[id.length - 1];\n                var nodeId = id[id.length - 3] || id[0];\n                var parentNode = diagram.nameTable[nodeId];\n                var bpmnShape = parentNode.shape;\n                for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n                    var annotation = _a[_i];\n                    if (annotation.id === annotationId) {\n                        var index = bpmnShape.annotations.indexOf(annotation);\n                        if (index !== -1) {\n                            diagram.removeDependentConnector(node);\n                            this.removeAnnotationObjects(parentNode, annotation, diagram);\n                            return true;\n                        }\n                    }\n                }\n            }\n            else if (node.shape.annotations && node.shape.annotations.length) {\n                this.clearAnnotations(node, diagram);\n            }\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.removeAnnotationObjects = function (parentNode, annotation, diagram) {\n        var bpmnShape = parentNode.shape;\n        var index = bpmnShape.annotations.indexOf(annotation);\n        if (index !== -1) {\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo) && !(diagram.diagramActions & DiagramAction.Group)) {\n                var entry_1 = {\n                    type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry_1);\n            }\n            bpmnShape.annotations.splice(index, 1);\n            var entry = this.annotationObjects[parentNode.id];\n            if (entry && entry[annotation.id]) {\n                var annotationNode = entry[annotation.id].node;\n                var annotationConnector = entry[annotation.id].connector;\n                diagram.removeElements(annotationNode);\n                diagram.removeElements(annotationConnector);\n                var nodeContent = parentNode.wrapper.children[0];\n                index = nodeContent.children.indexOf(annotationNode.wrapper);\n                nodeContent.children.splice(index, 1);\n                index = nodeContent.children.indexOf(annotationConnector.wrapper);\n                nodeContent.children.splice(index, 1);\n                diagram.removeFromAQuad(annotationNode);\n                diagram.removeFromAQuad(annotationConnector);\n                delete diagram.nameTable[annotationNode.id];\n                delete diagram.nameTable[annotationConnector.id];\n                delete entry[annotation.id];\n            }\n        }\n    };\n    BpmnDiagrams.prototype.setAnnotationPath = function (parentBounds, wrapper, position, node, length, angle) {\n        var rotateAngle = this.getAnnotationPathAngle(position, parentBounds);\n        var data = '';\n        var pathElement = wrapper.children[0];\n        var portElement = wrapper.children[2];\n        var textElement = wrapper.children[1];\n        pathElement.horizontalAlignment = 'Stretch';\n        pathElement.verticalAlignment = 'Stretch';\n        textElement.margin.left = textElement.margin.right = 5;\n        textElement.margin.top = textElement.margin.bottom = 5;\n        var point;\n        var segment;\n        if (rotateAngle === 0) {\n            data = 'M10,20 L0,20 L0,0 L10,0';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Left';\n            portElement.setOffsetWithRespectToBounds(0, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleRight;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.right, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 180) {\n            data = 'M0,0 L10,0 L10,20 L0,20';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Right';\n            portElement.setOffsetWithRespectToBounds(1, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleLeft;\n            segment = {\n                x1: parentBounds.left, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 90) {\n            data = 'M20,10 L20,0 L0,0 L0,10';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Top';\n            portElement.setOffsetWithRespectToBounds(0.5, 0, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.bottomCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.bottom,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else {\n            data = 'M0,0 L0,10 L20,10 L20,0';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Bottom';\n            portElement.setOffsetWithRespectToBounds(0.5, 1, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.topCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.top,\n            };\n        }\n        var center = parentBounds.center;\n        var endPoint = Point.transform(position, angle, Math.max(parentBounds.width, parentBounds.height));\n        point = getIntersectionPoints(segment, [center, endPoint], false, center);\n        pathElement.data = data;\n        if (length !== undefined && angle !== undefined) {\n            point = Point.transform(point, angle, length);\n            wrapper.offsetX = node.offsetX = point.x;\n            wrapper.offsetY = node.offsetY = point.y;\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.isBpmnTextAnnotation = function (activeLabel, diagram) {\n        if (this.annotationObjects) {\n            var parentNodeId = activeLabel.parentId;\n            var annotationId = activeLabel.id;\n            var parentNode = diagram.nameTable[parentNodeId];\n            if (parentNode && parentNode.shape.type === 'Bpmn' && this.annotationObjects[parentNodeId] &&\n                this.annotationObjects[parentNodeId][annotationId]) {\n                return parentNode;\n            }\n            return null;\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationContent = function (parentNode, activeLabel, text, diagram) {\n        var parentNodeId = activeLabel.parentId;\n        var annotationId = activeLabel.id;\n        if (this.annotationObjects[parentNodeId] && this.annotationObjects[parentNodeId][annotationId]) {\n            for (var _i = 0, _a = parentNode.shape.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                if (annotation.id === annotationId) {\n                    annotation.text = text;\n                    var wrapper = this.annotationObjects[parentNodeId][annotationId].node.wrapper.children[1];\n                    wrapper.content = text;\n                    wrapper.visible = true;\n                    parentNode.wrapper.measure(new Size());\n                    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.updateQuad = function (actualObject, diagram) {\n        var annotation = actualObject.shape.annotations;\n        var annotationNode;\n        if (annotation && annotation.length > 0) {\n            for (var i = 0; i < annotation.length; i++) {\n                annotationNode = this.annotationObjects[actualObject.id][annotation[i].id].node;\n                diagram.updateQuad(annotationNode);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationProp = function (actualObject, oldObject, diagram) {\n        if (actualObject.shape.type === 'Bpmn') {\n            var annotation = actualObject.shape.annotations;\n            if (annotation && annotation.length > 0) {\n                for (var i = 0; i < actualObject.wrapper.children[0].children.length; i++) {\n                    for (var j = 0; j < annotation.length; j++) {\n                        var annotationId = actualObject.wrapper.children[0].children[i].id.split('_');\n                        var id = annotationId[annotationId.length - 1];\n                        if (id === annotation[j].id) {\n                            var annotationNode = this.annotationObjects[actualObject.id][annotation[j].id].node;\n                            var connector = this.annotationObjects[actualObject.id][annotation[j].id].connector;\n                            var direction = getPortDirection(connector.targetPoint, actualObject.wrapper.bounds, actualObject.wrapper.bounds, false);\n                            var position = connector.sourcePoint;\n                            position = {\n                                x: connector.sourcePoint.x + actualObject.offsetX - (oldObject.offsetX),\n                                y: connector.sourcePoint.y + actualObject.offsetY - (oldObject.offsetY)\n                            };\n                            position = Point.transform(position, annotation[j].angle, annotation[j].length);\n                            actualObject.wrapper.children[0].children[i].offsetX =\n                                annotationNode.offsetX = position.x;\n                            actualObject.wrapper.children[0].children[i].offsetY =\n                                annotationNode.offsetY = position.y;\n                            diagram.updateQuad(annotationNode);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    // /** @private */\n    // public findInteractableObject(obj: ConnectorModel, diagram: Diagram): NodeModel | ConnectorModel {\n    //     if (obj.targetID) {\n    //         let targetNode: NodeModel = diagram.nameTable[obj.targetID];\n    //         if (targetNode.shape.type === 'Bpmn' && (targetNode.shape as BpmnShape).shape === 'TextAnnotation') {\n    //             return targetNode;\n    //         }\n    //     }\n    //     return obj;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getSubprocessChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var loopType;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        if (loopType !== undefined && loopType !== 'None') {\n            count++;\n        }\n        if ((subProcess.compensation !== undefined) &&\n            subProcess.compensation === true) {\n            count++;\n        }\n        if ((subProcess.collapsed !== undefined) &&\n            subProcess.collapsed === true) {\n            count++;\n        }\n        if ((subProcess.adhoc !== undefined) &&\n            subProcess.adhoc === true) {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTaskChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var loopType;\n        if ((task.compensation !== undefined) &&\n            task.compensation === true) {\n            count++;\n        }\n        if ((task.loop !== undefined) &&\n            task.loop !== 'None') {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.setStyle = function (child, node) {\n        //set style\n        child.style.fill = node.style.fill;\n        child.style.strokeColor = node.style.strokeColor;\n        child.style.strokeWidth = node.style.strokeWidth;\n        child.style.strokeDashArray = node.style.strokeDashArray;\n        child.style.opacity = node.style.opacity;\n        child.style.gradient = node.style.gradient;\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            child.shadow = node.shadow;\n        }\n    };\n    //End code conversion region\n    //Update BPMN Shapes on NodePropertyChange\n    //Start region\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMN = function (changedProp, oldObject, actualObject, diagram) {\n        var newShape = changedProp.shape || {};\n        var elementWrapper = actualObject.wrapper.children[0];\n        var actualShape = actualObject.shape.shape;\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (newShape.shape === 'Gateway' && newShape.gateway) {\n            actualObject.wrapper.children[0] = this.getBPMNGatewayShape(actualObject);\n        }\n        else if (newShape.shape === 'DataObject' && newShape.dataObject) {\n            actualObject.wrapper.children[0] = this.getBPMNDataObjectShape(actualObject);\n        }\n        else if (newShape.shape === 'Activity' && newShape.activity) {\n            actualObject.wrapper.children[0] = this.getBPMNActivityShape(actualObject);\n        }\n        else if (newShape.shape === 'Event' && newShape.event) {\n            var shapeEvent = newShape.event;\n            actualObject.wrapper.children[0] = this.getBPMNEventShape(actualObject, shapeEvent);\n        }\n        else if (newShape.shape === 'Message' || newShape.shape === 'DataSource') {\n            actualObject.wrapper.children[0] = this.getBPMNShapes(actualObject);\n            //} \n            // else if (newShape.shape === 'Group') {\n            //     actualObject.wrapper.children[0] = this.getBPMNGroup(actualObject, diagram);\n        }\n        else if (newShape.gateway !== undefined || (actualShape === 'Gateway' && sizeChanged)) {\n            this.updateBPMNGateway(actualObject, changedProp);\n        }\n        else if (newShape.dataObject !== undefined || (actualShape === 'DataObject' && sizeChanged)) {\n            this.updateBPMNDataObject(actualObject, changedProp, oldObject);\n        }\n        else if (newShape.activity !== undefined || (actualShape === 'Activity' && sizeChanged)) {\n            this.updateBPMNActivity(actualObject, changedProp, oldObject, diagram);\n        }\n        else if (newShape.event !== undefined || (actualShape === 'Event' && sizeChanged)) {\n            this.updateBPMNEvent(actualObject, changedProp, oldObject);\n        }\n        if (changedProp.style) {\n            updateStyle(changedProp.style, elementWrapper instanceof Container ? (actualObject.shape.shape === 'Activity') ?\n                elementWrapper.children[0].children[0] :\n                elementWrapper.children[0] : elementWrapper);\n            if (changedProp.style && changedProp.style.strokeColor) {\n                if (elementWrapper.children.length > 0) {\n                    if (actualObject.shape.shape === 'Activity' &&\n                        actualObject.shape.activity.activity === 'SubProcess') {\n                        var child = elementWrapper.children[0];\n                        this.updateBPMNStyle(child, changedProp.style.strokeColor);\n                    }\n                    else if (actualObject.shape.shape === 'Gateway' ||\n                        actualObject.shape.shape === 'Event') {\n                        this.updateBPMNStyle(elementWrapper, changedProp.style.strokeColor);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNStyle = function (elementWrapper, changedProp) {\n        for (var i = 0; i < elementWrapper.children.length; i++) {\n            var child = elementWrapper.children[i];\n            updateStyle({ strokeColor: changedProp }, child);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNGateway = function (node, changedProp) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            updateStyle(node.style, elementWrapper.children[0]);\n            var bpmnshapeGatewaydata = getBpmnGatewayShapePathData(bpmnShape.gateway.type);\n            elementWrapper.children[1].data = bpmnshapeGatewaydata;\n        }\n        if (changedProp.width !== undefined || changedProp.height !== undefined) {\n            this.setSizeForBPMNGateway(node.shape.gateway, elementWrapper, changedProp.width || node.width, changedProp.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNDataObject = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            if (newObject.style !== undefined) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n                elementWrapperChild1.style.opacity = node.style.opacity;\n                elementWrapperChild2.style.opacity = node.style.opacity;\n            }\n            if (bpmnShape.dataObject) {\n                switch (bpmnShape.dataObject.type) {\n                    case 'None':\n                        elementWrapperChild1.visible = false;\n                        break;\n                    case 'Input':\n                        elementWrapperChild1.style.fill = 'white';\n                        break;\n                    case 'Output':\n                        elementWrapperChild1.style.fill = 'black';\n                        break;\n                }\n                if (oldObject.shape.dataObject.type === 'None') {\n                    elementWrapperChild1.visible = true;\n                }\n                if (newObject.shape.dataObject.collection !== undefined) {\n                    elementWrapperChild2.visible = bpmnShape.dataObject.collection;\n                }\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNDataObjects(node.shape.dataObject, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEvent = function (node, oldObject, event, child0, child1, child2) {\n        switch (event) {\n            case 'Start':\n                child1.visible = false;\n                child0.style.strokeDashArray = '';\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.fill = 'white';\n                break;\n            case 'NonInterruptingStart':\n                child0.style.strokeDashArray = '2 3';\n                child2.style.fill = 'white';\n                child0.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child1.visible = false;\n                break;\n            case 'Intermediate':\n                child0.style.strokeDashArray = '';\n                child0.style.fill = 'white';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'NonInterruptingIntermediate':\n                child0.style.fill = 'white';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.strokeDashArray = '2 3';\n                child1.style.strokeDashArray = '2 3';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                child0.style.fill = event !== 'End' ? 'white' : 'black';\n                child0.style.strokeDashArray = '';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                child2.style.strokeColor = node.style.fill;\n                break;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateEventVisibility = function (oldObject, child1) {\n        if (oldObject.shape.activity && oldObject.shape.activity.subProcess &&\n            oldObject.shape.activity.subProcess.events &&\n            oldObject.shape.activity.subProcess.events[0] !== undefined &&\n            oldObject.shape.activity.subProcess.events[0].event !== undefined) {\n            if (oldObject.shape.activity.subProcess.events[0].event === 'NonInterruptingStart' ||\n                oldObject.shape.activity.subProcess.events[0].event === 'Start') {\n                child1.visible = true;\n            }\n        }\n        else if (oldObject.shape.event !== undefined) {\n            if (oldObject.shape.event.event === 'NonInterruptingStart' ||\n                oldObject.shape.event.event === 'Start') {\n                child1.visible = true;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEvent = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var trigger;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild0 = elementWrapper.children[0];\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            var event_1;\n            if (newObject.style !== undefined) {\n                updateStyle(node.style, elementWrapper.children[0]);\n                if (newObject.style.opacity !== undefined || newObject.style.strokeColor !== undefined) {\n                    elementWrapperChild1.style.opacity = node.style.opacity;\n                    elementWrapperChild1.style.strokeColor = node.style.strokeColor;\n                }\n            }\n            event_1 = bpmnShape.event.event;\n            trigger = bpmnShape.event.trigger;\n            if (event_1 !== undefined) {\n                this.getEvent(node, oldObject, event_1, elementWrapperChild0, elementWrapperChild1, elementWrapperChild2);\n            }\n            if (trigger !== undefined) {\n                this.updateBPMNEventTrigger(node, newObject);\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined || trigger !== undefined) {\n            this.setSizeForBPMNEvents(node.shape.event, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEventTrigger = function (node, newObject) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[2];\n        elementWrapper.canMeasurePath = true;\n        if (newObject.style &&\n            (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined)) {\n            updateStyle(node.style, elementWrapper);\n        }\n        var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(bpmnShape.event.trigger);\n        elementWrapper.data = bpmnshapeTriggerdata;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivity = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        if (bpmnShape) {\n            var oldProp = oldObject.shape.activity.activity;\n            var actualObjectProp = node.shape.activity.activity;\n            if ((oldProp === 'SubProcess' || oldProp === 'Task') && (actualObjectProp === 'SubProcess' || actualObjectProp === 'Task')) {\n                diagram.removeElements(node);\n                node.wrapper.children[0] = this.getBPMNActivityShape(node);\n            }\n            else {\n                if (actualObjectProp === 'Task' && bpmnShape.activity.task !== undefined) {\n                    this.updateBPMNActivityTask(node, newObject);\n                    var subChildCount = this.getTaskChildCount(node);\n                    var x = void 0;\n                    var childSpace = subChildCount * 12;\n                    var area = size.width / 2 - childSpace;\n                    if (subChildCount === 1) {\n                        x = area + 8;\n                    }\n                    else {\n                        x = area + (subChildCount - 1) * 8;\n                    }\n                    if (bpmnShape.activity.task.loop !== undefined) {\n                        this.updateBPMNActivityTaskLoop(node, newObject, x, subChildCount, area, 2);\n                    }\n                }\n                if (actualObjectProp === 'SubProcess' && bpmnShape.activity.subProcess !== undefined) {\n                    this.updateBPMNActivitySubProcess(node, newObject, oldObject, diagram);\n                }\n            }\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTask = function (node, newObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var task = bpmnShape.activity.task;\n        for (var i = 0; i < elementWrapper.children.length; i++) {\n            if (elementWrapper.children[i].id === node.id + '_1_taskTypeService') {\n                elementWrapper.children.splice(i, 1);\n                var element = document.getElementById(node.id + '_1_taskTypeService');\n                element.parentNode.removeChild(element);\n            }\n        }\n        if (task.type === 'Receive' || task.type === 'Send') {\n            elementWrapper.children[1].height = 14;\n        }\n        else {\n            elementWrapper.children[1].height = 20;\n        }\n        if (task.type !== undefined) {\n            var bpmnshapeTaskdata = getBpmnTaskShapePathData(task.type);\n            elementWrapper.children[1].data = bpmnshapeTaskdata;\n            if (task.type === 'Service') {\n                for (var i = 0; i < elementWrapper.children.length; i++) {\n                    if (elementWrapper.children[i].id === node.id + '_1_tasktType') {\n                        elementWrapper.children.splice(i, 1);\n                        var element = document.getElementById(node.id + '_1_tasktType');\n                        element.parentNode.removeChild(element);\n                    }\n                }\n                var taskTypeNode = new PathElement();\n                taskTypeNode.id = node.id + '_1_tasktType';\n                taskTypeNode.margin.left = 5;\n                taskTypeNode.margin.top = 5;\n                taskTypeNode.data = bpmnshapeTaskdata;\n                taskTypeNode.style.fill = 'transparent';\n                taskTypeNode.style.opacity = node.style.opacity;\n                taskTypeNode.width = 20;\n                taskTypeNode.height = 20;\n                elementWrapper.children.splice(1, 0, taskTypeNode);\n                var taskTypeNodeService = new PathElement();\n                taskTypeNodeService.id = node.id + '_1_taskTypeService';\n                taskTypeNodeService.data = bpmnshapeTaskdata;\n                taskTypeNodeService.margin.left = elementWrapper.children[1].margin.left + 9;\n                taskTypeNodeService.margin.top = elementWrapper.children[1].margin.top + 9;\n                taskTypeNodeService.style.fill = 'white';\n                taskTypeNodeService.style.opacity = node.style.opacity;\n                elementWrapper.children.splice(2, 0, taskTypeNodeService);\n            }\n        }\n        if (bpmnShape.activity.task.call !== undefined) {\n            if (bpmnShape.activity.task.call !== false) {\n                elementWrapper.children[0].style.strokeWidth = 4;\n            }\n            else {\n                elementWrapper.children[0].style.strokeWidth = 1;\n            }\n        }\n        if (bpmnShape.activity.task.compensation !== undefined) {\n            if (bpmnShape.activity.task.compensation === true) {\n                elementWrapper.children[3].visible = true;\n            }\n            else {\n                elementWrapper.children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTaskLoop = function (node, newObject, x, subChildCount, area, start) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var activity = bpmnShape.activity;\n        var loop;\n        var index = 0;\n        var bpmnshapeLoopdata;\n        if (activity.subProcess !== undefined) {\n            var subProcess = activity.subProcess;\n            index = (activity.subProcess.type === 'Transaction') ? 2 : 0;\n            loop = subProcess.loop;\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(loop);\n            elementWrapper.children[2 + index].data = bpmnshapeLoopdata;\n            elementWrapper.children[2 + index].visible = (loop === 'None') ? false : true;\n        }\n        else if (activity.task !== undefined && activity.task.loop !== undefined) {\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(activity.task.loop);\n            elementWrapper.children[2].data = bpmnshapeLoopdata;\n            elementWrapper.children[2].visible = (activity.task.loop === 'None') ? false : true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, start + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateChildMargin = function (elementWrapper, subChildCount, area, x, start) {\n        if (subChildCount === 1) {\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x = area + 8;\n                }\n            }\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x += 12 + 8;\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivitySubProcess = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        var subProcess = bpmnShape.activity.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var childSpace = subChildCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n        }\n        updateStyle(node.style, elementWrapper.children[0].children[0]);\n        if (subProcess.events !== undefined) {\n            this.updateBPMNSubProcessEvent(node, newObject, oldObject, diagram);\n        }\n        if (subProcess.adhoc !== undefined) {\n            this.updateBPMNSubProcessAdhoc(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.boundary !== undefined) {\n            this.updateBPMNSubProcessBoundary(node, subProcess);\n        }\n        if (subProcess.collapsed !== undefined) {\n            this.updateBPMNSubProcessCollapsed(node, oldObject, subProcess, x, subChildCount, area, diagram);\n        }\n        if (subProcess.compensation !== undefined) {\n            this.updateBPMNSubProcessCompensation(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.loop !== undefined) {\n            this.updateBPMNSubProcessLoop(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.transaction !== undefined) {\n            this.updateBPMNSubProcessTransaction(node, newObject, oldObject, diagram);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessEvent = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var nodeContent = elementWrapper.children[0];\n        var index;\n        var j = 0;\n        var elementWrapperChildLen = elementWrapper.children[0].children.length;\n        var subProcess = bpmnShape.activity.subProcess;\n        var events;\n        var start = 2;\n        for (var _i = 0, _a = Object.keys(subProcess.events); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var eventIndex = Number(key);\n            var eventWrapper = nodeContent.children[eventIndex + start];\n            var actualEvent = node.shape.activity.subProcess.events[eventIndex];\n            this.updateBPMNSubEvent(node, subProcess.events[eventIndex], actualEvent, eventWrapper, newObject, oldObject, diagram);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubEvent = function (node, newEvent, actualEvent, eventWrapper, newObject, oldObject, diagram) {\n        var elementWrapper = node.wrapper.children[0];\n        var bpmnShape = newObject.shape;\n        var child0 = eventWrapper.children[0];\n        var child1 = eventWrapper.children[1];\n        var child2 = eventWrapper.children[2];\n        var eventType;\n        var trigger;\n        if (newObject.style) {\n            if (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined) {\n                elementWrapper.children[0].children[1].style.strokeColor = newObject.style.strokeColor;\n                elementWrapper.children[0].children[1].style.opacity = newObject.style.opacity;\n            }\n        }\n        if (bpmnShape.activity.subProcess !== undefined) {\n            eventType = newEvent.event;\n            trigger = newEvent.trigger;\n        }\n        if (eventType !== undefined) {\n            this.getEvent(newObject, oldObject, eventType, child0, child1, child2);\n        }\n        if (trigger !== undefined) {\n            if (newObject.style) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n            }\n            var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(trigger);\n            eventWrapper.children[2].data = bpmnshapeTriggerdata;\n        }\n        if (newEvent.height !== undefined || newEvent.width !== undefined) {\n            this.getEventSize(newEvent, eventWrapper);\n        }\n        if (newEvent.id !== undefined) {\n            eventWrapper.id = newEvent.id;\n        }\n        if (newEvent.margin !== undefined) {\n            eventWrapper.margin = newEvent.margin;\n        }\n        if (newEvent.horizontalAlignment !== undefined) {\n            eventWrapper.horizontalAlignment = newEvent.horizontalAlignment;\n        }\n        if (newEvent.verticalAlignment !== undefined) {\n            eventWrapper.verticalAlignment = newEvent.verticalAlignment;\n        }\n        if (newEvent.offset !== undefined) {\n            eventWrapper.setOffsetWithRespectToBounds(actualEvent.offset.x, actualEvent.offset.y, 'Fraction');\n            eventWrapper.relativeMode = 'Point';\n        }\n        if (newEvent.annotations !== undefined) {\n            var annotations = void 0;\n            var annotation = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[3] && eventWrapper.children.length > 3) {\n                annotations = eventWrapper.children[3];\n                diagram.updateAnnotation(newEvent.annotations[0], annotations, annotation);\n            }\n        }\n        if (newEvent.ports !== undefined) {\n            var ports = void 0;\n            var port = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[4] && eventWrapper.children.length > 4) {\n                ports = eventWrapper.children[4];\n                diagram.updatePort(newEvent.ports[0], ports, port);\n            }\n        }\n        if (newEvent.visible !== undefined) {\n            this.updateDiagramContainerVisibility(eventWrapper, newEvent.visible);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubProcessTransaction = function (node, newObject, oldObject, diagram) {\n        var transaction = newObject.shape.activity.subProcess.transaction;\n        var eventContainer = node.wrapper.children[0].children[0].children[2];\n        var actualEvent;\n        if (transaction.success !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.success;\n            this.updateBPMNSubEvent(node, transaction.success, actualEvent, eventContainer.children[0], newObject, oldObject, diagram);\n        }\n        if (transaction.cancel !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.cancel;\n            this.updateBPMNSubEvent(node, transaction.cancel, actualEvent, eventContainer.children[1], newObject, oldObject, diagram);\n        }\n        if (transaction.failure !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.failure;\n            this.updateBPMNSubEvent(node, transaction.failure, actualEvent, eventContainer.children[2], newObject, oldObject, diagram);\n        }\n        for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            var connector = diagram.nameTable[edge];\n            switch (connector.sourcePortID) {\n                case 'success':\n                    if (transaction.success && transaction.success.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'success' });\n                    }\n                    break;\n                case 'cancel':\n                    if (transaction.cancel && transaction.cancel.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'cancel' });\n                    }\n                    break;\n                case 'failure':\n                    if (transaction.failure && transaction.failure.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'failure' });\n                    }\n                    break;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEventSize = function (events, wrapperChild) {\n        if (events.height !== undefined) {\n            wrapperChild.height = events.height;\n            wrapperChild.children[0].height = events.height;\n            wrapperChild.children[1].height = events.height * 0.85;\n            wrapperChild.children[2].height = events.height * 0.54;\n        }\n        if (events.width !== undefined) {\n            wrapperChild.width = events.width;\n            wrapperChild.children[0].width = events.width;\n            wrapperChild.children[1].width = events.width * 0.85;\n            wrapperChild.children[2].width = events.width * 0.54;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessAdhoc = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var shape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[3 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessBoundary = function (node, subProcess) {\n        var shape = node.shape;\n        var elementWrapper = (node.wrapper.children[0].children[0].children[0]);\n        if (subProcess.boundary === 'Default') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            elementWrapper.style.strokeWidth = 4;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '2 2';\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateElementVisibility = function (node, visible, diagram) {\n        if (node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                var currentNode = diagram.nameTable[processes[j]];\n                currentNode.visible = visible;\n                diagram.updateElementVisibility(currentNode.wrapper, currentNode, visible);\n                if (visible) {\n                    if (currentNode.shape.shape === 'Event') {\n                        this.setEventVisibility(currentNode, currentNode.wrapper.children[0].children);\n                    }\n                    if (currentNode.shape.activity.activity === 'SubProcess') {\n                        this.setSubProcessVisibility(currentNode);\n                    }\n                }\n                var connectors = currentNode.inEdges.concat(currentNode.outEdges);\n                for (var i = connectors.length - 1; i >= 0; i--) {\n                    var connector = diagram.nameTable[connectors[i]];\n                    connector.visible = visible;\n                    diagram.updateElementVisibility(connector.wrapper, connector, visible);\n                }\n            }\n        }\n        if (visible) {\n            if (node.shape.shape === 'Event') {\n                this.setEventVisibility(node, node.wrapper.children[0].children);\n            }\n            if (node.shape.activity.activity === 'SubProcess') {\n                this.setSubProcessVisibility(node);\n            }\n            if (node.shape.activity.activity === 'Task' &&\n                node.shape.shape === 'Activity' && node.shape.activity.subProcess.loop === 'None') {\n                node.wrapper.children[0].children[0].children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCollapsed = function (node, oldObject, subProcess, x, subChildCount, area, diagram) {\n        var eventLength = node.shape.activity.subProcess.events.length;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 3 : 1;\n        if (subProcess.collapsed === false) {\n            this.updateElementVisibility(node, true, diagram);\n            elementWrapper.children[index + eventLength].visible = false;\n        }\n        else {\n            this.updateElementVisibility(node, false, diagram);\n            elementWrapper.children[index + eventLength].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + eventLength);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCompensation = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[4 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 4 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessLoop = function (node, oldObject, subProcess, x, subChildCount, area) {\n        this.updateBPMNActivityTaskLoop(node, node, x, subChildCount, area, 1);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNConnector = function (actualObject, oldObject, connection, diagram) {\n        var flowType = connection.shape;\n        if (flowType.sequence !== undefined) {\n            actualObject = this.getSequence(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.association !== undefined) {\n            actualObject = this.getAssociation(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.message !== undefined) {\n            actualObject = this.getMessage(actualObject, oldObject, connection, diagram);\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getSequence = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.sequence) === 'Normal') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        if ((connection.shape.sequence) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n            var segment = new PathElement();\n            var pathseq = new PathElement();\n            var pathseqData = void 0;\n            segment = actualObject.getSegmentElement(actualObject, segment);\n            var anglePoints = actualObject.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = actualObject.findPath(anglePoints[j], anglePoints[j + 1]);\n            }\n            actualObject.wrapper.children[3].data = pathseqData[0];\n            actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.sequence);\n            actualObject.wrapper.children[3].offsetX = pathseqData[1].x;\n            actualObject.wrapper.children[3].offsetY = pathseqData[1].y;\n            actualObject.wrapper.children[3].rotateAngle = 45;\n            actualObject.wrapper.children[3].transform = Transform.Self;\n        }\n        if ((connection.shape.sequence) === 'Conditional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Diamond', width: 20, height: 10, style: { fill: 'white' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getAssociation = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.association) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: 'None' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'Directional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'BiDirectional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Arrow', width: 5, height: 10, style: { fill: 'white' } }\n            });\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getMessage = function (actualObject, oldObject, connection, diagram) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        if ((oldObject.shape.message) === 'Default') {\n            if ((connection.shape.message) !== undefined) {\n                if (((connection.shape.message) === 'InitiatingMessage') ||\n                    ((connection.shape.message) === 'NonInitiatingMessage')) {\n                    var segment = new PathElement();\n                    segment = actualObject.getSegmentElement(actualObject, segment);\n                    var anglePoints = actualObject.intermediatePoints;\n                    for (var j = 0; j < anglePoints.length - 1; j++) {\n                        length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                        var offLength = length * segmentOffset;\n                        if (length >= offLength) {\n                            angle = findAngle(anglePoints[j], anglePoints[j + 1]);\n                            pt = Point.transform(anglePoints[j], angle, offLength);\n                        }\n                    }\n                }\n                actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.message);\n                actualObject.wrapper.children[3].width = 25;\n                actualObject.wrapper.children[3].height = 15;\n                actualObject.wrapper.children[3].data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n                actualObject.wrapper.children[3].horizontalAlignment = 'Center';\n                actualObject.wrapper.children[3].verticalAlignment = 'Center';\n                actualObject.wrapper.children[3].transform = Transform.Self;\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n                actualObject.wrapper.children[3].offsetX = pt.x;\n                actualObject.wrapper.children[3].offsetY = pt.y;\n            }\n        }\n        else if ((oldObject.shape.message) !== 'NonInitiatingMessage' ||\n            (oldObject.shape.message) !== 'InitiatingMessage') {\n            if ((connection.shape.message) !== 'Default') {\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n            }\n            else {\n                actualObject.wrapper.children[3].visible = false;\n            }\n        }\n        return actualObject;\n    };\n    //End update Region\n    //size updation\n    BpmnDiagrams.prototype.setSizeForBPMNEvents = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        //child node 1 - event node\n        var eventNode = wrapper.children[1];\n        eventNode.width = width * 0.85;\n        eventNode.height = height * 0.85;\n        var triggerNode = wrapper.children[2];\n        if (event.trigger === 'Message') {\n            triggerNode.width = width * 0.54;\n            triggerNode.height = height * 0.4;\n        }\n        else {\n            triggerNode.width = width * 0.5;\n            triggerNode.height = height * 0.5;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateAnnotationDrag = function (node, diagram, tx, ty) {\n        var checkAnnotation = node.id.split('_');\n        if (checkAnnotation[1] === 'textannotation') {\n            var parentNode = void 0;\n            for (var j = 0; j < node.inEdges.length; j++) {\n                var connector = diagram.nameTable[node.inEdges[j]];\n                if (connector) {\n                    parentNode = diagram.nameTable[connector.sourceID];\n                }\n                var start = { x: node.offsetX + tx, y: node.offsetY + ty };\n                var end = connector.sourcePoint;\n                var length_1 = Point.findLength(start, end);\n                var angle = Point.findAngle(end, start);\n                if (parentNode.shape.annotations) {\n                    for (var x = 0; x < (parentNode.shape.annotations).length; x++) {\n                        if ((parentNode.shape.annotations)[x].id === checkAnnotation[checkAnnotation.length - 1]) {\n                            (parentNode.shape.annotations[x]).length = length_1;\n                            (parentNode.shape.annotations[x]).angle = angle;\n                            this.setAnnotationPath(parentNode.wrapper.bounds, node.wrapper, start, node);\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        if (node.processId) {\n            this.drag(node, tx, ty, diagram);\n            return true;\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.getAnnotationPathAngle = function (point, bounds) {\n        var direction = getPortDirection(point, bounds, bounds, false);\n        var rotateAngle = 0;\n        switch (direction) {\n            case 'Right':\n                rotateAngle = 0;\n                break;\n            case 'Left':\n                rotateAngle = 180;\n                break;\n            case 'Bottom':\n                rotateAngle = 90;\n                break;\n            case 'Top':\n                rotateAngle = 270;\n                break;\n        }\n        return rotateAngle;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNGateway = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[1].width = width * 0.45;\n        wrapper.children[1].height = height * 0.45;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNDataObjects = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNActivity = function (activity, wrapper, width, height, node) {\n        //child node 1 - event node\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[0].children[0].width = width;\n        wrapper.children[0].children[0].height = height;\n        if (activity.subProcess.type === 'Transaction') {\n            wrapper.children[0].children[1].width = Math.max(width - 6, 1);\n            wrapper.children[0].children[1].height = Math.max(height - 6, 1);\n            wrapper.children[0].children[2].width = width;\n            wrapper.children[0].children[2].height = height;\n        }\n        var taskNode = new DiagramElement();\n        var x;\n        var size = this.getSize(node, taskNode);\n        var childCount;\n        var iconSpace = 4;\n        if (activity.activity === 'Task') {\n            childCount = this.getTaskChildCount(node);\n        }\n        else {\n            childCount = this.getSubprocessChildCount(node);\n        }\n        var childSpace = childCount * 12;\n        var area = (width || size.width) / 2;\n        if (childCount === 1) {\n            x = area - 6;\n        }\n        else {\n            x = area - (childSpace / 2) - ((childCount - 1) * iconSpace) / 2;\n        }\n        for (var i = 0; i < wrapper.children[0].children.length; i++) {\n            if (wrapper.children[0].children[i].visible &&\n                (wrapper.children[0].children[i].id.indexOf('_loop') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_compensation') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_adhoc') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_collapsed') > -1)) {\n                wrapper.children[0].children[i].margin.left = x;\n                x += wrapper.children[0].children[i].actualSize.width + iconSpace;\n            }\n        }\n    };\n    BpmnDiagrams.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * To destroy the BpmnDiagrams module\n     * @return {void}\n     * @private\n     */\n    BpmnDiagrams.prototype.destroy = function () {\n        /**\n         * Destroys the BpmnDiagrams module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    BpmnDiagrams.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bpmn';\n    };\n    return BpmnDiagrams;\n}());\nexport { BpmnDiagrams };\nexport function getBpmnShapePathData(shape) {\n    return bpmnShapes[shape.toString()];\n}\nexport function getBpmnTriggerShapePathData(shape) {\n    return bpmnTriggerShapes[shape.toString()];\n}\nexport function getBpmnGatewayShapePathData(shape) {\n    return bpmnGatewayShapes[shape.toString()];\n}\nexport function getBpmnTaskShapePathData(shape) {\n    return bpmnTaskShapes[shape.toString()];\n}\nexport function getBpmnLoopShapePathData(shape) {\n    return bpmnLoopShapes[shape.toString()];\n}\nvar bpmnShapes = {\n    'Event': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    'Message': 'M0,0L19.8,12.8L40,0L0,0L0,25.5L40,25.5L40,0z',\n    'DataSource': 'M 0 10.6 c 0 5.9 16.8 10.6 37.5 10.6 S 75 16.4 75 10.6 v 0 v 68.9 v -0.1 C 75 85.3 58.2 90 37.5 90 ' +\n        'S 0 85.3 0 79.4 l 0 0.1 V 56 V 40.6 L 0 10.6 C 0 4.7 16.8 0 37.5 0 S 75 4.7 75 10.6 S 58.2 21.2 37.5 21.2' +\n        'S 0 16.5 0 10.6 l 0 6.7 v -0.2 c 0 5.9 16.8 10.6 37.5 10.6 S 75 22.9 75 17.1 v 6.8 v -0.1 ' +\n        'c 0 5.9 -16.8 10.6 -37.5 10.6 S 0 29.6 0 23.8',\n    'SubProcess': 'M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 ' +\n        'a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z',\n    'collapsedShape': 'M 8.13789 15 H 0 V 0 H 8.13789 V 15 Z M 0.625991 13.75 H 7.51189 V 1.25 H 0.625991 V 13.75 Z ' +\n        'M 2.18095 7.03125 L 5.95631 7.03125 L 5.95631 7.46875 L 2.18095 7.46875 Z M 3.8342 3.73 ' +\n        'L 4.30369 3.73 L 4.30369 11.2687 L 3.8342 11.2687 Z',\n};\nvar bpmnTriggerShapes = {\n    // 'None': '',\n    'Message': 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0',\n    'Timer': 'M40,20c0,8.654-5.496,16.024-13.189,18.81' +\n        'C24.685,39.58,22.392,40,20,40C8.954,40,0,31.046,0,20S8.954,0,20,0S40,8.954,40,20z M20,0 L20,2.583 L20,5.283 M10.027,2.681' +\n        'L11.659,5.507 L12.669,7.257 M2.731,9.989 L6.014,11.885 L7.307,12.631 M0.067,19.967 L2.667,19.967 L5.35,19.967' +\n        'M2.748,29.939 L5.731,28.217 L7.323,27.298 M10.056,37.236 L11.292,35.095 L12.698,32.66 M20.033,39.9 L20.033,36.417 L20.033,34.617' +\n        'M30.006,37.219 L28.893,35.292 L27.364,32.643 M37.302,29.911 L34.608,28.355 L32.727,27.269' +\n        'M39.967,19.933 L37.417,19.933 L34.683,19.933 M37.286,9.961 L34.583,11.521 L32.71,12.602 M29.977,2.664 L28.653,4.957 L27.336,' +\n        '7.24 M22.104,8.5 L19.688,20 L24.75,20 L31.604,20 L24.75,20 L19.688,20z',\n    'Error': 'M 23.77 18.527 l -7.107 27.396 l 8.507 -17.247 L 36.94 40.073 l 6.394 -25.997 l -8.497 15.754 L 23.77 18.527 Z',\n    'Escalation': 'M 30.001 8.098 L 11.842 43.543 l 18.159 -18.882 l 18.162 18.882 L 30.001 8.098 Z ',\n    'Cancel': 'M 3.5 16 L 0 12.6 L 4.6 8 L 0 3.5 L 3.4 0 L 8 4.6 l 4.5 -4.5 L 16 3.5 L 11.5 8 l 4.5 4.5 l -3.4 3.5 L 8 11.4 L 3.5 16 Z',\n    'Compensation': 'M 25.7086 0 L 0 25 L 25.7086 50 V 26.3752 L 50 50 V 0 L 25.7086 23.6248 V 0 Z ',\n    'Conditional': 'M 0 0 H 16 V 16 H 0 z M 1.14 3.2 H 14.85 M 1.14 6.4 H 14.85 M 1.14 9.6 H 14.85 M 1.14 12.8 H 14.85',\n    'Link': 'M 32.014 19.258 v 5.992 H 9.373 v 9.504 h 22.641 v 5.988 L 50.622 30 L 32.014 19.258 Z',\n    'Signal': 'M 50 50 H 0 L 25.0025 0 L 50 50 Z',\n    'Terminate': 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25 C 50 38.79 38.78 50 25 50',\n    'Multiple': 'M 17.784 48.889 H 42.21 l 7.548 -23.23 L 29.997 11.303 L 10.236 25.658 L 17.784 48.889 Z',\n    'Parallel': 'M 27.276 49.986 h 5.58 v -17.15 h 17.146 V 27.17 h -17.15 l 0.004 -17.15 h -5.58 l -0.004 17.15 ' +\n        'H 9.994 v 5.666 h 17.278 L 27.276 49.986 Z',\n};\nvar bpmnGatewayShapes = {\n    'None': '',\n    //exclusive\n    'Exclusive': 'M 11.196 29.009 l 6.36 -9.712 l -5.764 -8.899 h 4.393 l 3.732 5.979 l 3.656 -5.979 h 4.354 l -5.789 9.039' +\n        'l 6.36 9.572 h -4.532 l -4.126 -6.437 l -4.139 6.437 H 11.196 Z',\n    //inclusive\n    'Inclusive': 'M 20.323 31.333 c -6.625 0 -12.015 -5.39 -12.015 -12.015 s 5.39 -12.015 12.015 -12.015 ' +\n        's 12.016 5.39 12.016 12.015 S 26.948 31.333 20.323 31.333 Z M 20.323 9.303 c -5.522 0 -10.015 4.493 -10.015 10.015 ' +\n        's 4.492 10.015 10.015 10.015 s 10.016 -4.493 10.016 -10.015 S 25.846 9.303 20.323 9.303 Z',\n    //parallel\n    'Parallel': 'M 18.394 29.542 v -8.833 H 9.626 v -3.691 h 8.768 V 8.251 h 3.734 v 8.767 h 8.768 v 3.691 h -8.768 v 8.833 H 18.394 Z',\n    //complex\n    'Complex': 'M29.198,19.063L23.089,19.063L27.794,14.358L26.38,12.944L21.223,18.101L21.223,10.443L19.223,10.443L19.223,17.976' +\n        'L14.022,12.776L12.608,14.19L17.48,19.063L10.365,19.063L10.365,21.063L18.261,21.063L12.392,26.932L13.806,28.346' +\n        'L19.223,22.929L19.223,30.225L21.223,30.225L21.223,22.805L25.925,27.507L27.339,26.093L22.309,21.063L29.198,21.063z',\n    //eventbased\n    'EventBased': 'M 20.322 29.874 c -5.444 0 -9.873 -4.43 -9.873 -9.874 s 4.429 -9.874 9.873 -9.874 s 9.874 4.429 9.874 9.874 ' +\n        'S 25.767 29.874 20.322 29.874 Z M 20.322 32.891 c -7.107 0 -12.89 -5.783 -12.89 -12.891 c 0 -7.107 5.782 -12.89 12.89 -12.89 ' +\n        'c 7.108 0 12.891 5.783 12.891 12.89 C 33.213 27.108 27.431 32.891 20.322 32.891 Z M 24.191 25.386 ' +\n        'h -7.984 l -2.469 -7.595 l 6.461 -4.693 l 6.461 4.693 L 24.191 25.386 Z',\n    //exclusive event based\n    'ExclusiveEventBased': 'M 30 15 C 30 23.28 23.28 30 15 30 S 0 23.28 0 15 S 6.72 0 15 0 S 30 6.72 30 15 z M 15 5 ' +\n        'L 5 12.5 L 8 22.5 H 22 L 25 12.5 z',\n    //parallel event based\n    'ParallelEventBased': 'M 35 17.5 C 35 27.16 27.16 35 17.5 35 S 0 27.16 0 17.5 S 7.84 0 17.5 0 S 35 7.84 35 17.5 z M 14.58 5.83 ' +\n        'V 14.58 H 5.83 V 20.42 H 14.58 V 29.17 H 20.42 V 20.42 H 29.17 V 14.58 H 20.42 V 5.83 z',\n};\nvar bpmnTaskShapes = {\n    'None': '',\n    'Service': 'M 32.699 20.187 v -4.005 h -3.32 c -0.125 -0.43 -0.292 -0.83 -0.488 -1.21 l 2.373 -2.375 ' +\n        'l -2.833 -2.83 l -2.333 2.333 c -0.44 -0.253 -0.9 -0.448 -1.387 -0.595 v -3.32 h -4.003 v 3.32 c -0.46 0.137 -0.89' +\n        '0.322 -1.3 0.537 l -2.285 -2.275 l -2.833 2.83 l 2.285 2.278 c -0.235 0.42 -0.41 0.847 -0.547 1.307 h -3.33 v 4.005 h 3.33 ' +\n        'c 0.148 0.488 0.343 0.955 0.588 1.395 l -2.325 2.325 l 2.822 2.832 l 2.373 -2.382 c 0.392 0.205 0.792 0.37 1.212 0.497 v 3.33 ' +\n        'h 4.003 v -3.33 c 0.46 -0.138 0.89 -0.323 1.3 -0.547 l 2.43 2.432 l 2.822 -2.832 l -2.42 -2.422 c 0.222 -0.41 0.4 -0.85 0.535' +\n        '-1.297 H 32.699 Z M 22.699 21.987 c -2.1 0 -3.803 -1.703 -3.803 -3.803 c 0 -2.1 1.703 -3.803 3.803 -3.803 c 2.1 0 3.803 ' +\n        '1.703 3.803 3.803 C 26.502 20.285 24.8 21.987 22.699 21.987 Z',\n    'Receive': 'M 12.217 12.134 v 13.334 h 20 V 12.134 H 12.217 Z M 30.44 13.007 l -8.223 5.35 l -8.223 -5.35 H 30.44 Z M 13.09' +\n        ' 24.594 V 13.459 l 9.127 5.94 l 9.127 -5.94 v 11.135 H 13.09 Z',\n    'Send': 'M 45.7256 3.16055 L 25 23.4017 L 4.27442 3.16055 H 45.7256 Z M 47.8963 46.8413 H 2.10375 V 4.80813' +\n        ' L 25 27.1709 L 47.8963 4.80813 V 46.8413 Z',\n    'InstantiatingReceive': 'M 16.306 17.39 v 8.79 h 13.198 v -8.79 H 16.306 Z M 28.375 17.946 l -5.47 3.558 l -5.47 -3.558 ' +\n        'H 28.375 Z M 28.948 25.625 H 16.861 v -7.389 l 6.043 3.931 l 6.043 -3.931 V 25.625 Z M 22.905 11.785' +\n        'c -5.514 0 -9.999 4.486 -9.999 10 c 0 5.514 4.485 10 9.999 10 s 9.999 -4.486 9.999 -10 ' +\n        'C 32.904 16.272 28.419 11.785 22.905 11.785 Z M 22.905 31.239 c -5.212 0 -9.453 -4.241 -9.453 -9.454' +\n        'c 0 -5.212 4.241 -9.453 9.453 -9.453 s 9.452 4.241 9.452 9.453 C 32.357 26.998 28.117 31.239 22.905 31.239 Z',\n    'Manual': 'M 13.183 15.325 h 2.911 c 0.105 0 0.207 -0.043 0.281 -0.117 c 0.078 -0.074 0.117 -0.176 0.117 -0.281' +\n        'c 0 -0.753 0.718 -1.362 1.596 -1.362 h 2.579 c -0.117 0.227 -0.191 0.48 -0.195 0.757 c 0 0.433 0.168 0.851 0.46 1.144 ' +\n        'c 0.008 0.004 0.015 0.011 0.019 0.015 c -0.289 0.285 -0.475 0.691 -0.479 1.148 c 0 0.433 0.168 0.846 0.46 1.139 ' +\n        'c 0.011 0.012 0.023 0.02 0.035 0.032 c -0.301 0.281 -0.491 0.694 -0.495 1.155 c 0 0.432 0.168 0.847 0.46 1.143' +\n        'c 0.265 0.266 0.612 0.414 0.975 0.414 h 0.839 c 0.027 0.004 0.051 0.012 0.074 0.012 h 8.443 ' +\n        'c 0.352 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.285 0.753 -0.636 0.753 h -6.687 c -0.019 0 -0.035 -0.008 -0.051 -0.008' +\n        'h -2.27 c -0.121 -0.835 -0.667 -1.187 -1.795 -1.187 h -2.158 c -0.223 0 -0.402 0.18 -0.402 0.403' +\n        'c 0 0.219 0.179 0.398 0.402 0.398 h 2.158 c 0.972 0 1.019 0.203 1.019 0.784 c 0 0.219 0.179 0.399 0.402 0.399 ' +\n        'c 0.008 0 0.016 -0.004 0.027 -0.004 c 0.028 0.004 0.055 0.016 0.082 0.016 h 2.56 c 0.34 0.015 0.616 0.343 0.616 0.752' +\n        'c 0 0.418 -0.285 0.757 -0.636 0.761 h -0.004 h -6.442 c -0.878 0 -1.595 -0.639 -1.595 -1.427 v -0.683 ' +\n        'c 0 -0.109 -0.043 -0.211 -0.114 -0.285 c -0.078 -0.074 -0.179 -0.117 -0.285 -0.117 h -0.004 l -2.989 0.027 ' +\n        'c -0.223 0 -0.398 0.184 -0.398 0.402 c 0 0.219 0.179 0.395 0.398 0.395 h 0.004 l 2.591 -0.02 v 0.282 ' +\n        'c 0 1.229 1.073 2.223 2.391 2.223 h 3.895 c 0.004 0 0.007 0.004 0.011 0.004 h 2.536 c 0.792 0 1.436 -0.698 1.436 -1.561 ' +\n        'c 0 -0.273 -0.07 -0.53 -0.188 -0.752 h 5.49 c 0.792 0 1.436 -0.695 1.436 -1.553 c 0 -0.858 -0.644 -1.557 -1.436 -1.557' +\n        'h -3.566 c 0.121 -0.226 0.199 -0.487 0.199 -0.768 c 0 -0.468 -0.195 -0.882 -0.495 -1.167' +\n        'c 0.301 -0.285 0.495 -0.698 0.495 -1.163 c 0 -0.456 -0.191 -0.866 -0.483 -1.152 c 0.293 -0.285 0.483 -0.694 0.483 -1.151' +\n        'c 0 -0.858 -0.647 -1.557 -1.439 -1.557 h -8.373 c -1.167 0 -2.142 0.757 -2.352 1.76 l -2.548 -0.004 ' +\n        'c -0.219 0 -0.399 0.18 -0.399 0.403 C 12.784 15.145 12.964 15.325 13.183 15.325 L 13.183 15.325 Z M 21.907 19.707 ' +\n        'c -0.191 0 -0.328 -0.094 -0.41 -0.176 c -0.144 -0.145 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.418 0.289 -0.753 0.643 -0.753 ' +\n        'h 4.468 c 0.008 0 0.015 -0.004 0.027 -0.008 h 0.051 c 0.351 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.286 0.753 -0.636 0.753 ' +\n        'H 21.907 Z M 27.097 16.629 c 0 0.414 -0.286 0.753 -0.64 0.753 h -4.464 c -0.004 0 -0.004 0 -0.004 0 h -0.082' +\n        'c -0.191 0 -0.328 -0.098 -0.414 -0.18 c -0.14 -0.145 -0.222 -0.352 -0.222 -0.573 c 0 -0.413 0.285 -0.749 0.631 -0.753' +\n        'h 3.434 c 0 0 0 0 0.004 0 h 1.116 c 0.008 0 0.012 -0.004 0.02 -0.004 C 26.819 15.887 27.097 16.215 27.097 16.629' +\n        'L 27.097 16.629 Z M 27.097 14.322 c 0 0.41 -0.278 0.737 -0.62 0.749 c -0.008 0 -0.012 0 -0.016 0 h -3.637 ' +\n        'c -0.008 0 -0.015 0.004 -0.023 0.004 h -0.886 c -0.004 0 -0.008 0 -0.012 0 c -0.187 0 -0.324 -0.094 -0.406 -0.176' +\n        'c -0.144 -0.144 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.414 0.293 -0.753 0.643 -0.753 h 4.468 ' +\n        'c 0.008 0 0.015 -0.004 0.027 -0.004 h 0.051 C 26.811 13.565 27.097 13.905 27.097 14.322 L 27.097 14.322 Z M 27.097 14.322',\n    'BusinessRule': 'M 32.844 13.245 h -0.089 v 0 H 13.764 v -0.015 h -1.009 v 16.989 h 0.095 v 0.011 h 19.716 v -0.011 h 0.278 ' +\n        'V 13.245 Z M 31.844 14.229 v 4.185 h -18.08 v -4.185 H 31.844 Z M 18.168 25.306 v 3.938 h -4.404 v -3.938 H 18.168 Z ' +\n        'M 13.764 24.322 v -4.923 h 4.404 v 4.923 H 13.764 Z M 19.177 25.306 h 12.667 v 3.938 H 19.177 V 25.306 Z M 19.177 24.322' +\n        'v -4.923 h 12.667 v 4.923 H 19.177 Z',\n    'User': 'M 21.762 21.935 c 2.584 0 4.687 -2.561 4.687 -5.703 c 0 -3.147 -2.103 -5.703 -4.687 -5.703 c -1.279 0 -2.475 0.61' +\n        '-3.363 1.721 c -0.855 1.071 -1.327 2.484 -1.324 3.983 C 17.075 19.374 19.178 21.935 21.762 21.935 L 21.762 21.935 Z' +\n        'M 21.762 11.779 c 1.894 0 3.436 1.995 3.436 4.452 c 0 2.453 -1.541 4.452 -3.436 4.452 c -1.895 0 -3.44 -1.999 -3.44 -4.452' +\n        'C 18.323 13.774 19.864 11.779 21.762 11.779 L 21.762 11.779 Z M 25.699 21.309 c -0.348 0 -0.626 0.277 -0.626 0.626 ' +\n        'c 0 0.344 0.277 0.622 0.626 0.622 c 2.136 0 3.875 1.74 3.875 3.879 c 0 0.272 -0.227 0.498 -0.501 0.498 H 14.447 c -0.274 0 ' +\n        '-0.497 -0.223 -0.497 -0.498 c 0 -2.139 1.736 -3.879 3.872 -3.879 c 0.344 0 0.625 -0.277 0.625 -0.622 c 0 -0.348 -0.28 -0.626' +\n        '-0.625 -0.626 c -2.826 0 -5.124 2.297 -5.124 5.126 c 0 0.965 0.784 1.749 1.748 1.749 h 14.626 c 0.964 0 1.748 -0.784' +\n        '1.748 -1.749 C 30.822 23.606 28.524 21.309 25.699 21.309 L 25.699 21.309 Z M 22.217 9.832 c 0.448 -0.263 0.924 -0.396 ' +\n        '1.419 -0.396 c 1.895 0 3.436 1.995 3.436 4.452 c 0 0.439 -0.048 0.873 -0.143 1.284 c -0.08 0.336 0.128 0.672 0.464 0.751 ' +\n        'c 0.048 0.012 0.098 0.019 0.143 0.019 c 0.284 0 0.541 -0.195 0.608 -0.483 c 0.119 -0.506 0.18 -1.034 0.18 -1.571' +\n        'c 0 -3.147 -2.102 -5.703 -4.687 -5.703 c -0.711 0 -1.419 0.198 -2.054 0.573 c -0.296 0.174 -0.397 0.559 -0.219 0.855' +\n        'C 21.536 9.911 21.921 10.009 22.217 9.832 L 22.217 9.832 Z M 27.697 18.81 c -0.345 0 -0.626 0.277 -0.626 0.622 ' +\n        'c 0 0.348 0.281 0.626 0.626 0.626 c 2.137 0 3.75 1.782 3.75 3.918 c 0 0.07 -0.013 0.141 -0.043 0.205 c -0.14 0.314 0.003' +\n        '0.684 0.318 0.823 c 0.082 0.037 0.167 0.055 0.253 0.055 c 0.241 0 0.466 -0.141 0.57 -0.373 c 0.101 -0.226 0.153 -0.464 0.153' +\n        '-0.714 C 32.699 21.15 30.523 18.81 27.697 18.81 L 27.697 18.81 Z M 27.697 18.81',\n    'Script': 'M 22.453 15.04 c 0 0 -1.194 -3.741 2.548 -3.774 c 0 0 2.497 0.126 1.766 4.321 c -0.008 0.043 -0.015 0.086 -0.024 0.13' +\n        'c -0.806 4.323 -2.516 8.42 -3.193 10.581 h 3.904 c 0 0 0.983 4.581 -2.549 4.968 H 13.292 c 0 0 -3.097 -1.42 -1.517 -5.323 l ' +\n        '3 -10.839 H 11.84 c 0 0 -1.129 -2.902 1.709 -3.806 l 11.425 -0.032 l -0.73 0.355 l -1.193 1.726 L 22.453 15.04 Z M 22.409 ' +\n        '12.597 c 0 0 -0.242 0.483 -0.278 0.98 h -9.098 c 0 0 -0.06 -0.871 0.714 -1.041 L 22.409 12.597 Z M 26.341 27.734' +\n        'c 0 0 -0.13 2.678 -2.226 1.871 c 0 0 -0.823 -0.565 -0.758 -1.855 L 26.341 27.734 Z M 22.905 15.008 c 0 0 0.653 -0.258 0.709' +\n        '-1.501 c 0 0 0.145 -1.144 1.483 -0.693 c 0 0 0.808 0.355 0.259 2.404 c 0 0 -2.226 8.5 -3.032 10.339 c 0 0 -1.064 2.646 ' +\n        '0.096 4.226 h -8.581 c 0 0 -1.806 -0.452 -0.741 -3.613 c 0 0 2.935 -9.549 3.193 -11.162 L 22.905 15.008 Z',\n};\nvar bpmnLoopShapes = {\n    'None': '',\n    'Standard': 'M 52.002 73.379 c -2.494 -2.536 -6.55 -2.534 -9.043 0 c -1.208 1.228 -1.874 2.861 -1.874 4.598 ' +\n        'c 0 1.225 0.337 2.395 0.957 3.411 l -1.167 1.186 l 2.071 0.458 l 2.071 0.458 l -0.45 -2.106 l -0.45 -2.106 l -1.292 1.314' +\n        'c -1.119 -2.065 -0.842 -4.709 0.877 -6.458 c 2.084 -2.119 5.475 -2.117 7.557 0 c 2.083 2.119 2.083 5.565 0 7.685' +\n        'c -0.976 0.992 -2.272 1.557 -3.65 1.59 l 0.025 1.068 c 1.65 -0.041 3.2 -0.716 4.368 -1.903 ' +\n        'c 1.208 -1.228 1.874 -2.861 1.874 -4.597 C 53.875 76.24 53.209 74.607 52.002 73.379 Z',\n    'ParallelMultiInstance': 'M 51.5,69.5 L52.5,69.5 L52.5,84.5 L51.5 84.5 Z M 46.5,69.5 L47.5,69.5 L47.5,84.5 L46.5 84.5 Z' +\n        ' M 41.5,69.5 L42.5,69.5 L42.5,84.5 L41.5 84.5 Z  ',\n    'SequenceMultiInstance': 'M 40.375,71.5 L 55.375,71.5 L 55.375,72.5 L 40.375,72.5 Z M 40.375,76.5 L 55.375,76.5 ' +\n        'L 55.375,77.5 L 40.375,77.5 Z M 40.375,76.5 L 55.375,76.5 L 55.375,77.5 L 40.375,77.5 Z M 40.375,81.5 L 55.375,81.5' +\n        'L 55.375,82.5 L 40.375,82.5 Z'\n};\n","import { Rect } from '../primitives/rect';\nimport { cloneObject } from '../utility/base-util';\nvar GraphForceNode = /** @class */ (function () {\n    function GraphForceNode(gnNode) {\n        /**\n         * @private\n         */\n        this.velocityX = 0;\n        /**\n         * @private\n         */\n        this.velocityY = 0;\n        /**\n         * @private\n         */\n        this.nodes = [];\n        this.graphNode = gnNode;\n        var nNode = this.graphNode;\n        var bounds = getGraphBounds(nNode);\n        this.location = bounds.center;\n        this.nodes = [];\n        if (!gnNode.treeInfo.parents) {\n            gnNode.treeInfo.parents = [];\n        }\n        if (!gnNode.treeInfo.children) {\n            gnNode.treeInfo.children = [];\n        }\n        this.nodes = (gnNode.treeInfo.parents).concat(gnNode.treeInfo.children);\n    }\n    /**\n     * @private\n     */\n    GraphForceNode.prototype.applyChanges = function () {\n        this.graphNode.treeInfo.center = this.location;\n    };\n    return GraphForceNode;\n}());\nexport { GraphForceNode };\n/**\n * SymmetricalLayout\n */\nvar SymmetricLayout = /** @class */ (function () {\n    function SymmetricLayout() {\n        this.cdCOEF = 0.442;\n        this.cfMAXVELOCITY = 50;\n        this.cnMAXITERACTION = 1000;\n        this.cnSPRINGLENGTH = 100;\n        this.mszMaxForceVelocity = { width: this.cfMAXVELOCITY, height: this.cfMAXVELOCITY };\n        /**\n         * @private\n         */\n        this.springLength = 0;\n        /**\n         * @private\n         */\n        this.springFactor = this.cdCOEF;\n        /**\n         * @private\n         */\n        this.maxIteration = this.cnMAXITERACTION;\n        this.springLength = this.cnSPRINGLENGTH;\n    }\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.destroy = function () {\n        /**\n         * Destroys symmetricLayout\n         */\n    };\n    SymmetricLayout.prototype.getModuleName = function () {\n        return 'SymmetricalLayout';\n    };\n    SymmetricLayout.prototype.doGraphLayout = function (graphLayoutManager) {\n        var graph = this.selectedNode;\n        graph.treeInfo.Bounds = graphLayoutManager.getModelBounds(graphLayoutManager.nodes);\n        var lstGraphNodes = graph.treeInfo.GraphNodes;\n        var lstNodes = this.convertGraphNodes(lstGraphNodes);\n        var count = lstNodes.length;\n        count = Math.min(this.maxIteration, count * count * count);\n        this.preLayoutNodes(lstNodes, graph.treeInfo.Bounds);\n        for (var i = 0, nLenght = count; i < nLenght; i++) {\n            this.makeSymmetricLayout(lstNodes);\n            this.appendForces(lstNodes);\n        }\n        this.resetGraphPosition(lstNodes, graph);\n    };\n    SymmetricLayout.prototype.preLayoutNodes = function (lstNodes, rcBounds) {\n        var fMaxSize = Math.max(rcBounds ? rcBounds.width : 25, rcBounds ? rcBounds.height : 25);\n        var ptCenter = { x: fMaxSize / 2, y: fMaxSize / 2 };\n        var dRotateAngle = 2 * Math.PI / lstNodes.length;\n        var dAngle = dRotateAngle;\n        for (var i = 0; i < lstNodes.length; i++) {\n            var gnNode = lstNodes[i];\n            var forceNode = this.getForceNode(gnNode);\n            forceNode.location = {\n                x: ptCenter.x + fMaxSize * Number((Math.cos(dAngle)).toFixed(2)),\n                y: ptCenter.y + fMaxSize * Number(Math.sin(dAngle).toFixed(2))\n            };\n            dAngle -= dRotateAngle;\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.doLayout = function (graphLayoutManager) {\n        this.selectedNode = graphLayoutManager.selectedNode;\n        this.doGraphLayout(graphLayoutManager);\n    };\n    SymmetricLayout.prototype.makeSymmetricLayout = function (lstNodes) {\n        var forceNode;\n        var force;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            forceNode = this.getForceNode(gnNode);\n            var nodes = forceNode.nodes;\n            for (var l = 0; l < nodes.length; l++) {\n                var gnChild = nodes[l];\n                if (collectionContains(gnChild.id, lstNodes)) {\n                    this.calcNodesForce(forceNode, this.getForceNode(gnChild));\n                }\n            }\n            for (var i = 0, length_1 = nodes.length; i < length_1; i++) {\n                if (length_1 < 2) {\n                    break;\n                }\n                var vtx1 = this.getForceNode(nodes[i]);\n                var vtx2 = (i + 1 >= length_1) ? this.getForceNode(nodes[0]) : this.getForceNode((nodes[i + 1]));\n                var angle = (360 / nodes.length / 2) * Math.PI / 180;\n                var normalDistance = 2 * this.springLength * Math.sin(angle);\n                this.calcRelatesForce(vtx1, vtx2, normalDistance);\n            }\n            for (var s = 0; s < lstNodes.length; s++) {\n                var gnChild = lstNodes[s];\n                if (!collectionContains(gnChild.id, nodes) && gnChild.id !== gnNode.id) {\n                    force = this.getForceNode(gnChild);\n                    this.updateNeigbour(forceNode, force);\n                }\n            }\n        }\n    };\n    SymmetricLayout.prototype.appendForces = function (lstNodes) {\n        var gfnNode = null;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptPoint = gfnNode.location;\n            ptPoint.x += Math.min(gfnNode.velocityX, this.mszMaxForceVelocity.width);\n            ptPoint.y += Math.min(gfnNode.velocityY, this.mszMaxForceVelocity.height);\n            gfnNode.velocityX = 0;\n            gfnNode.velocityY = 0;\n            gfnNode.location = ptPoint;\n        }\n    };\n    SymmetricLayout.prototype.resetGraphPosition = function (lstNodes, graph) {\n        var szMin = { width: Number.MAX_VALUE, height: Number.MAX_VALUE };\n        var gfnNode = null;\n        var gnNode;\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = {\n                x: gfnNode.location.x - gnNode.actualSize.width / 2,\n                y: gfnNode.location.y - gnNode.actualSize.height / 2\n            };\n            szMin.width = Math.min(szMin.width, ptLocation.x);\n            szMin.height = Math.min(szMin.height, ptLocation.y);\n        }\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = gfnNode.location;\n            ptLocation.x -= szMin.width - (graph.treeInfo.location ? graph.treeInfo.location.x : 0);\n            ptLocation.y -= szMin.height - (graph.treeInfo.location ? graph.treeInfo.location.y : 0);\n            gfnNode.location = ptLocation;\n            gfnNode.applyChanges();\n        }\n    };\n    SymmetricLayout.prototype.convertGraphNodes = function (lstNodes) {\n        var lstToReturn = [];\n        var keys = Object.keys(lstNodes);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var k = keys_1[_i];\n            if (lstNodes[k]) {\n                var gnNode = lstNodes[k];\n                var forceNode = new GraphForceNode(gnNode);\n                gnNode.treeInfo.tag = forceNode;\n                lstToReturn.push(gnNode);\n            }\n        }\n        return lstToReturn;\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.getForceNode = function (gnNode) {\n        return gnNode.treeInfo.tag;\n    };\n    SymmetricLayout.prototype.updateNeigbour = function (vtSource, vtTarget) {\n        if (vtTarget == null || vtSource == null) {\n            return;\n        }\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        var normalDistance = (this.springLength * 0.9);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.lineAngle = function (pt1, pt2) {\n        var radians = 0;\n        var vx = pt2.x - pt1.x;\n        var vy = pt2.y - pt1.y;\n        if (vx === 0) {\n            if (vy <= 0) {\n                radians = (3.0 * Math.PI) / 2.0;\n            }\n            else {\n                radians = Math.PI / 2.0;\n            }\n        }\n        else if (vy === 0) {\n            if (vx < 0) {\n                radians = Math.PI;\n            }\n            else {\n                radians = 0;\n            }\n        }\n        else {\n            radians = Math.atan(vy / vx);\n            if (vx < 0 && vy > 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx < 0 && vy < 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx > 0 && vy < 0) {\n                radians = 2.0 * Math.PI + radians;\n            }\n        }\n        return radians;\n    };\n    SymmetricLayout.prototype.pointDistance = function (pt1, pt2) {\n        var d = 0;\n        var dx = pt2.x - pt1.x;\n        var dy = pt2.y - pt1.y;\n        var t = (dx * dx) + (dy * dy);\n        if (t > 0) {\n            d = Math.sqrt(t);\n        }\n        return d;\n    };\n    SymmetricLayout.prototype.calcRelatesForce = function (vtSource, vtTarget, normalDistance) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        var layoutManager = new GraphLayoutManager();\n        layoutManager.updateLayout(nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort);\n    };\n    SymmetricLayout.prototype.calcNodesForce = function (vtSource, vtTarget) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance > this.springLength || distance < this.springLength) {\n            this.calcForce(distance, this.springLength, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.calcForce = function (distance, minDist, angle, vtTarget) {\n        var count = vtTarget.nodes.length;\n        var length = distance - minDist;\n        var factor = this.springFactor / (count * count) * Math.sqrt(count);\n        if (length !== 0) {\n            var fVelocity = length * factor;\n            var fOffset = fVelocity;\n            var offsetX = Math.cos(angle) * fOffset;\n            var offsetY = Math.sin(angle) * fOffset;\n            vtTarget.velocityX -= offsetX;\n            vtTarget.velocityY -= offsetY;\n        }\n    };\n    return SymmetricLayout;\n}());\nexport { SymmetricLayout };\nvar GraphLayoutManager = /** @class */ (function () {\n    function GraphLayoutManager() {\n        this.visitedStack = [];\n        this.cycleEdgesCollection = [];\n        this.graphObjects = [];\n        this.passedNodes = [];\n    }\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        this.nameTable = nameTable;\n        this.nodes = nodeCollection;\n        this.connectors = connectors;\n        var selectionList = nodeCollection;\n        if (selectionList.length > 0) {\n            this.mhelperSelectedNode = cloneObject(selectionList[0]);\n        }\n        for (var _i = 0, nodeCollection_1 = nodeCollection; _i < nodeCollection_1.length; _i++) {\n            var node = nodeCollection_1[_i];\n            var nodeGraphObject = void 0;\n            nodeGraphObject = node;\n            nodeGraphObject.treeInfo = {};\n            nodeGraphObject.treeInfo.graphType = 'Node';\n            this.graphObjects.push(nodeGraphObject);\n        }\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            var connectorGraphObject = void 0;\n            connectorGraphObject = connector;\n            connectorGraphObject.treeInfo = {};\n            connectorGraphObject.treeInfo.graphType = 'Connector';\n            this.graphObjects.push(connectorGraphObject);\n        }\n        this.updateLayout1(this.graphObjects, symmetricLayout);\n        var modelBounds = this.getModelBounds(selectionList);\n        for (var i = 0; i < selectionList.length; i++) {\n            var node = selectionList[i];\n            var trnsX = (viewPort.x - modelBounds.width) / 2;\n            var margin = layout.margin || {};\n            var marginX = void 0;\n            var marginY = void 0;\n            margin.left = margin.left || 0;\n            margin.right = margin.right || 0;\n            margin.top = margin.top || 0;\n            margin.bottom = margin.bottom || 0;\n            if (layout.margin.left) {\n                margin.left = layout.margin.left;\n            }\n            if (layout.margin.top) {\n                margin.top = layout.margin.top;\n            }\n            var dx = (node.treeInfo.tag.location.x - (node.offsetX - (node.actualSize.width / 2)) -\n                modelBounds.x + trnsX + margin.left);\n            var dy = (node.treeInfo.tag.location.y - (node.offsetY - (node.actualSize.height / 2)) - modelBounds.y + margin.top);\n            node.offsetX += dx;\n            node.offsetY += dy;\n            delete node.treeInfo;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.getModelBounds = function (lNodes) {\n        lNodes = lNodes.slice();\n        var rect = null;\n        var rect1 = null;\n        var node;\n        for (var i = 0; i < lNodes.length; i++) {\n            node = lNodes[i];\n            var bounds = getGraphBounds(node);\n            rect = new Rect(node.treeInfo.tag ? node.treeInfo.tag.location.x : bounds.x, node.treeInfo.tag ? node.treeInfo.tag.location.y : bounds.y, node.actualSize.width, node.actualSize.height);\n            if (rect1) {\n                rect1 = rect1.uniteRect(rect);\n            }\n            else {\n                rect1 = rect;\n            }\n        }\n        return rect1;\n    };\n    GraphLayoutManager.prototype.updateLayout1 = function (nodesToLayout, symmetricLayout) {\n        this.detectCyclesInGraph(nodesToLayout);\n        var nodesCount = nodesToLayout.length;\n        if (nodesCount > 0) {\n            var cycleConnColln = [];\n            var nodes = [];\n            var nodeSymbols = [];\n            for (var s = 0; s < nodesToLayout.length; s++) {\n                var nd = nodesToLayout[s];\n                if (nd.treeInfo.isCycleEdge === undefined) {\n                    nd.treeInfo.isCycleEdge = false;\n                }\n                if (nd.treeInfo.graphType === 'Connector' && !nd.treeInfo.isCycleEdge) {\n                    nodes.push(nd);\n                }\n                else if (nd.treeInfo.graphType === 'Connector') {\n                    cycleConnColln.push(nd);\n                }\n                else {\n                    nodeSymbols.push(nd);\n                }\n            }\n            nodes = nodes.concat(nodeSymbols);\n            nodes = cycleConnColln.concat(nodes);\n            while (nodesCount > this.dictionaryLength(this.passedNodes)) {\n                this.getNodesToPosition(nodes);\n                if (this.selectedNode == null) {\n                    continue;\n                }\n                symmetricLayout.doLayout(this);\n                this.selectedNode = null;\n                this.visitedStack = [];\n                for (var _i = 0, _a = this.cycleEdgesCollection; _i < _a.length; _i++) {\n                    var connector = _a[_i];\n                    connector.treeInfo.isCycleEdge = false;\n                }\n            }\n            this.passedNodes = null;\n            this.selectedNode = null;\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.getNodesToPosition = function (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            if (!collectionContains(node.id, this.passedNodes)) {\n                if (node) {\n                    this.selectNodes(node);\n                }\n                break;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectNodes = function (node) {\n        var nodeGraph = node;\n        if (node.treeInfo.graphType === 'Connector') {\n            this.exploreGraphEdge(node);\n        }\n        else if (nodeGraph != null) {\n            if (this.addNode(node, 'passed')) {\n                this.addNode(node, 'selected');\n                if (this.isConnectedToAnotherNode(nodeGraph)) {\n                    this.selectedNode = { treeInfo: {} };\n                    this.selectedNode.treeInfo.LeftMargin = 10;\n                    this.selectedNode.treeInfo.TopMargin = 10;\n                    this.selectConnectedNodes(nodeGraph);\n                }\n                else {\n                    this.selectedNode = node;\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectConnectedNodes = function (nodeGraph) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var node = nodeGraph;\n        if (node != null && this.addNode(node, 'passed')) {\n            var nodeName = node.id;\n            if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                var gnNode = this.addGraphNode(node);\n                this.getConnectedRelatives(gnNode);\n                this.exploreRelatives(nodeGraph);\n            }\n            else {\n                var graphNode = graph.treeInfo.GraphNodes[nodeName];\n                if (graphNode.treeInfo.Added) {\n                    graphNode.treeInfo.Added = false;\n                    this.getConnectedRelatives(graphNode);\n                    this.exploreRelatives(nodeGraph);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.exploreRelatives = function (nodeGraph) {\n        this.exploreRelatives1(nodeGraph, 'Parents');\n        this.exploreRelatives1(nodeGraph, 'Children');\n    };\n    GraphLayoutManager.prototype.exploreRelatives1 = function (nodeGraph, relativesToExplore) {\n        var edges = [];\n        if (relativesToExplore === 'Parents') {\n            edges = nodeGraph.inEdges;\n        }\n        else if (relativesToExplore === 'Children') {\n            edges = nodeGraph.outEdges;\n        }\n        for (var i = 0; i < edges.length; i++) {\n            var edge = this.nameTable[edges[i]];\n            if (this.addNode(edge, 'passed')) {\n                var fromNode = this.nameTable[edge.sourceID];\n                var toNode = this.nameTable[edge.targetID];\n                if (relativesToExplore === 'Parents' && fromNode != null &&\n                    collectionContains(fromNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.sourceID]);\n                }\n                else if (relativesToExplore === 'Children' && toNode != null &&\n                    collectionContains(toNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.targetID]);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedRelatives = function (graphNode) {\n        this.getConnectedParents(graphNode);\n        this.getConnectedChildren(graphNode);\n    };\n    GraphLayoutManager.prototype.dictionaryContains = function (obj, keyObj) {\n        var keys = Object.keys(obj);\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === keyObj.id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.dictionaryLength = function (obj) {\n        var keys = Object.keys(obj);\n        return keys.length;\n    };\n    GraphLayoutManager.prototype.getConnectedChildren = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.outEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.outEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.targetID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNodeChildren = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNodeChildren = this.addGraphNode(node);\n                        gnNodeChildren.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNodeChildren = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.children) {\n                        graphNode.treeInfo.children = [];\n                    }\n                    if (!gnNodeChildren.treeInfo.parents) {\n                        gnNodeChildren.treeInfo.parents = [];\n                    }\n                    this.setNode(gnNodeChildren.treeInfo.parents, graphNode);\n                    if (this.findNode(graphNode.treeInfo.children, gnNodeChildren.id) < 0) {\n                        graphNode.treeInfo.children.push(gnNodeChildren);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedParents = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.inEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.inEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.sourceID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNode = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNode = this.addGraphNode(node);\n                        gnNode.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNode = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.parents) {\n                        graphNode.treeInfo.parents = [];\n                    }\n                    if (!gnNode.treeInfo.children) {\n                        gnNode.treeInfo.children = [];\n                    }\n                    this.setNode(gnNode.treeInfo.children, graphNode);\n                    if (this.findNode(graphNode.treeInfo.parents, gnNode.id) < 0) {\n                        graphNode.treeInfo.parents.push(gnNode);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.setNode = function (list, node) {\n        var nIndex = this.findNode(list, node.id);\n        if (nIndex >= 0 && nIndex < list.length) {\n            list[nIndex] = node;\n        }\n        else {\n            list.push(node);\n        }\n    };\n    GraphLayoutManager.prototype.findNode = function (list, fullName) {\n        var nIndex = -1;\n        if (list != null && fullName !== '') {\n            for (var i = 0, nLength = list.length; i < nLength; i++) {\n                var gnNode = list[i];\n                if (typeof (gnNode) === 'string' && gnNode === fullName) {\n                    nIndex = i;\n                    break;\n                }\n                else if (gnNode != null && gnNode.id === fullName) {\n                    nIndex = i;\n                    break;\n                }\n            }\n        }\n        return nIndex;\n    };\n    GraphLayoutManager.prototype.addGraphNode = function (node) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var gnNode = node;\n        if (graph != null) {\n            graph.treeInfo.GraphNodes[gnNode.id] = gnNode;\n            var nodeHelper = this.mhelperSelectedNode;\n            if (nodeHelper != null && node.id === nodeHelper.id) {\n                this.mhelperSelectedNode = gnNode;\n            }\n        }\n        return gnNode;\n    };\n    GraphLayoutManager.prototype.isConnectedToAnotherNode = function (gnNode) {\n        var bFoundConnectedNode = false;\n        var edges = (gnNode.inEdges).concat(gnNode.outEdges);\n        if (edges.length > 0) {\n            if ((gnNode.inEdges != null) && (gnNode.inEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.inEdges, 'FromNode');\n            }\n            if ((!bFoundConnectedNode) && (gnNode.outEdges != null) && (gnNode.outEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.outEdges, 'ToNode');\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.searchEdgeCollection = function (edgesToSearchThrough, connectionDirection) {\n        var bFoundConnectedNode = false;\n        for (var i = 0; i < edgesToSearchThrough.length - 1; i++) {\n            var edge = this.nameTable[edgesToSearchThrough[i]];\n            if (!this.addNode(edge, 'passed')) {\n                continue;\n            }\n            if (!edge.treeInfo.isCycleEdge && ((connectionDirection === 'FromNode' && this.nameTable[edge.sourceID] != null)\n                || (connectionDirection === 'ToNode' && this.nameTable[edge.targetID] != null))) {\n                bFoundConnectedNode = true;\n                break;\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.exploreGraphEdge = function (node) {\n        var nodeLink = node;\n        if (nodeLink != null && !nodeLink.treeInfo.isCycleEdge && this.addNode(node, 'passed')) {\n            this.addNode(node, 'selected');\n            var fromNode = this.nameTable[nodeLink.sourceID];\n            var toNode = this.nameTable[nodeLink.targetID];\n            if (fromNode != null) {\n                this.selectNodes(fromNode);\n            }\n            else if (toNode != null) {\n                this.selectNodes(toNode);\n            }\n            else {\n                this.selectedNode = node;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.addNode = function (nodeToAdd, collectionToAdd) {\n        var bResult = true;\n        var node = nodeToAdd;\n        if (collectionToAdd === 'passed' || !node.visible) {\n            if (!this.dictionaryContains(this.passedNodes, node)) {\n                this.passedNodes[node.id] = node;\n            }\n        }\n        if (!node.visible) {\n            return false;\n        }\n        return bResult;\n    };\n    GraphLayoutManager.prototype.detectCyclesInGraph = function (nodes) {\n        var vertex = [];\n        var currentStack = [];\n        for (var k = 0; k < nodes.length; k++) {\n            if (!(nodes[k].treeInfo.graphType === 'Connector')) {\n                vertex.push(nodes[k]);\n            }\n        }\n        if (vertex.length > 0) {\n            currentStack.push(vertex[0]);\n            this.visitedStack.push(vertex[0]);\n            while (currentStack.length > 0) {\n                var top_1 = currentStack[currentStack.length - 1];\n                var childNodes = this.getUnVisitedChildNodes(top_1);\n                if (childNodes.length > 0) {\n                    var child = childNodes[0];\n                    var currentEdge = childNodes[childNodes.length - 1];\n                    if (collectionContains(child.id, this.visitedStack)) {\n                        currentEdge.treeInfo.isCycleEdge = true;\n                        this.cycleEdgesCollection.push(currentEdge);\n                    }\n                    else {\n                        currentStack.push(child);\n                        this.visitedStack.splice(0, 0, child);\n                    }\n                }\n                else {\n                    currentStack.pop();\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getUnVisitedChildNodes = function (top) {\n        var childNodes = [];\n        if (top.outEdges.length > 0) {\n            for (var i = 0; i < top.outEdges.length; i++) {\n                var con = this.nameTable[top.outEdges[i]];\n                if (!collectionContains(con.id, this.visitedStack)) {\n                    var toNode = this.nameTable[con.targetID];\n                    if (toNode != null) {\n                        childNodes.push(toNode);\n                    }\n                    childNodes.push(con);\n                    this.visitedStack.splice(0, 0, con);\n                    return childNodes;\n                }\n            }\n            return childNodes;\n        }\n        return childNodes;\n    };\n    return GraphLayoutManager;\n}());\nexport { GraphLayoutManager };\nfunction getGraphBounds(node) {\n    var x = node.offsetX - node.actualSize.width * node.pivot.x;\n    var y = node.offsetY - node.actualSize.height * node.pivot.y;\n    return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n}\nfunction collectionContains(id, coll) {\n    for (var i = 0; i < coll.length; i++) {\n        if (coll[i].id === id) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * Size defines and processes the size(width/height) of the objects\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    /**   @private  */\n    Size.prototype.isEmpty = function () {\n        return this.height === 0 && this.width === 0;\n    };\n    // public static get empty(): Size {\n    //     return new Size();\n    // }\n    // public get isEmpty(): boolean {\n    //     return this.equals(Size.empty);\n    // }\n    // public equals(size2: Size): boolean {\n    //     return this.width === size2.width && this.height === size2.height;\n    // }\n    // public union(size: Size): void {\n    //     size.width = Math.max(size.width, this.width);\n    //     size.height = Math.max(size.height, this.height);\n    // }\n    /**   @private  */\n    Size.prototype.clone = function () {\n        return new Size(this.width, this.height);\n    };\n    return Size;\n}());\nexport { Size };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines and processes coordinates\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    function Point() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**   @private  */\n    Point.equals = function (point1, point2) {\n        if (point1 === point2) {\n            return true;\n        }\n        if (!point1 || !point2) {\n            return false;\n        }\n        return !point1 || !point2 || point1.x === point2.x && point1.y === point2.y;\n    };\n    /**\n     * check whether the points are given\n     */\n    Point.isEmptyPoint = function (point) {\n        if (point.x && point.y) {\n            return false;\n        }\n        return true;\n    };\n    // public add(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x + point2.x, y: point1.y + point2.y };\n    // }\n    // public subtract(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x - point2.x, y: point1.y - point2.y };\n    // }\n    // public multiply(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.x, y: point1.y * point2.y\n    //     };\n    // }\n    // public crossProduct(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.y, y: point2.x * point1.y\n    //     };\n    // }\n    // public offset(offsetX: number, offsetY: number): void {\n    //     this.x += offsetX;\n    //     this.y += offsetY;\n    // }\n    // public rotate(angle: number): PointModel {\n    //     let c: number = Math.cos(angle);\n    //     let s: number = Math.sin(angle);\n    //     return {\n    //         x: c * this.x - s * this.y, y: s * this.x + c * this.y\n    //     };\n    // }\n    // public distance(point2: PointModel): number {\n    //     return Math.sqrt(Math.pow(this.x - point2.x, 2) + Math.pow(this.y - point2.y, 2));\n    // }\n    /**   @private  */\n    Point.transform = function (point, angle, length) {\n        var pt = { x: 0, y: 0 };\n        pt.x = Math.round((point.x + length * Math.cos(angle * Math.PI / 180)) * 100) / 100;\n        pt.y = Math.round((point.y + length * Math.sin(angle * Math.PI / 180)) * 100) / 100;\n        return pt;\n    };\n    /**   @private  */\n    Point.findLength = function (s, e) {\n        var length = Math.sqrt(Math.pow((s.x - e.x), 2) + Math.pow((s.y - e.y), 2));\n        return length;\n    };\n    /**   @private  */\n    Point.findAngle = function (point1, point2) {\n        var angle = Math.atan2(point2.y - point1.y, point2.x - point1.x);\n        angle = (180 * angle / Math.PI);\n        angle %= 360;\n        if (angle < 0) {\n            angle += 360;\n        }\n        return angle;\n    };\n    /**   @private  */\n    Point.distancePoints = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Point.getLengthFromListOfPoints = function (points) {\n        var length = 0;\n        for (var j = 0; j < points.length - 1; j++) {\n            length += this.distancePoints(points[j], points[j + 1]);\n        }\n        return length;\n    };\n    /**   @private  */\n    Point.adjustPoint = function (source, target, isStart, length) {\n        var pt = isStart ? { x: source.x, y: source.y } : { x: target.x, y: target.y };\n        var angle;\n        if (source.x === target.x) {\n            if (source.y < target.y && isStart || source.y > target.y && !isStart) {\n                pt.y += length;\n            }\n            else {\n                pt.y -= length;\n            }\n        }\n        else if (source.y === target.y) {\n            if (source.x < target.x && isStart || source.x > target.x && !isStart) {\n                pt.x += length;\n            }\n            else {\n                pt.x -= length;\n            }\n        }\n        else {\n            if (isStart) {\n                angle = this.findAngle(source, target);\n                pt = this.transform(source, angle, length);\n            }\n            else {\n                angle = this.findAngle(target, source);\n                pt = this.transform(target, angle, length);\n            }\n        }\n        return pt;\n    };\n    /**   @private  */\n    Point.direction = function (pt1, pt2) {\n        if (Math.abs(pt2.x - pt1.x) > Math.abs(pt2.y - pt1.y)) {\n            return pt1.x < pt2.x ? 'Right' : 'Left';\n        }\n        else {\n            return pt1.y < pt2.y ? 'Bottom' : 'Top';\n        }\n    };\n    //Move these methods to util\n    //public CompareTo(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnYAxis(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnXAxis(point: PointModel): number {\n    //    let result: number = this.Y.CompareTo(point.Y);\n    //    return result != 0 ? result : this.X.CompareTo(point.X);\n    //}\n    // public round(): void {\n    //     this.x = Math.round(this.x);\n    //     this.y = Math.round(this.y);\n    // }\n    /**\n     * @private\n     * Returns the name of class Point\n     */\n    Point.prototype.getClassName = function () {\n        return 'Point';\n    };\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"y\", void 0);\n    return Point;\n}(ChildProperty));\nexport { Point };\n","/**\n * Rect defines and processes rectangular regions\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        /**\n         * Sets the x-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.x = Number.MAX_VALUE;\n        /**\n         * Sets the y-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.y = Number.MAX_VALUE;\n        /**\n         * Sets the width of a rectangular region\n         * @default 0\n         */\n        this.width = 0;\n        /**\n         * Sets the height of a rectangular region\n         * @default 0\n         */\n        this.height = 0;\n        if (x === undefined || y === undefined) {\n            x = y = Number.MAX_VALUE;\n            width = height = 0;\n        }\n        else {\n            if (width === undefined) {\n                width = 0;\n            }\n            if (height === undefined) {\n                height = 0;\n            }\n        }\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Object.defineProperty(Rect.prototype, \"left\", {\n        /**   @private  */\n        get: function () {\n            return this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"right\", {\n        /**   @private  */\n        get: function () {\n            return this.x + this.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"top\", {\n        /**   @private  */\n        get: function () {\n            return this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottom\", {\n        /**   @private  */\n        get: function () {\n            return this.y + this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"center\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**   @private  */\n    Rect.prototype.equals = function (rect1, rect2) {\n        return rect1.x === rect2.x && rect1.y === rect2.y && rect1.width === rect2.width && rect1.height === rect2.height;\n    };\n    /**   @private  */\n    Rect.prototype.uniteRect = function (rect) {\n        var right = Math.max(Number.NaN === this.right || this.x === Number.MAX_VALUE ? rect.right : this.right, rect.right);\n        var bottom = Math.max(Number.NaN === this.bottom || this.y === Number.MAX_VALUE ? rect.bottom : this.bottom, rect.bottom);\n        this.x = Math.min(this.left, rect.left);\n        this.y = Math.min(this.top, rect.top);\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n        return this;\n    };\n    /**   @private  */\n    Rect.prototype.unitePoint = function (point) {\n        if (this.x === Number.MAX_VALUE) {\n            this.x = point.x;\n            this.y = point.y;\n            return;\n        }\n        var x = Math.min(this.left, point.x);\n        var y = Math.min(this.top, point.y);\n        var right = Math.max(this.right, point.x);\n        var bottom = Math.max(this.bottom, point.y);\n        this.x = x;\n        this.y = y;\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n    };\n    // public intersection(rect: Rect): Rect {\n    //     if (this.intersects(rect)) {\n    //         let left: number = Math.max(this.left, rect.left);\n    //         let top: number = Math.max(this.top, rect.top);\n    //         let right: number = Math.min(this.right, rect.right);\n    //         let bottom: number = Math.min(this.bottom, rect.bottom);\n    //         return new Rect(left, top, right - left, bottom - top);\n    //     }\n    //     return Rect.empty;\n    // }\n    /**   @private  */\n    Rect.prototype.Inflate = function (padding) {\n        this.x -= padding;\n        this.y -= padding;\n        this.width += padding * 2;\n        this.height += padding * 2;\n        return this;\n    };\n    //public Inflate(size: Size): Rect {\n    //    this.x -= size.Width;\n    //    this.y -= size.Height;\n    //    this.width += size.Width * 2;\n    //    this.height += size.Height * 2;\n    //    return this;\n    //}\n    // public inflate(width: number, height: number): void {\n    //     this.x -= width;\n    //     this.y -= height;\n    //     this.width += width * 2;\n    //     this.height += height * 2;\n    // }\n    /**   @private  */\n    Rect.prototype.intersects = function (rect) {\n        if (this.right < rect.left || this.left > rect.right || this.top > rect.bottom || this.bottom < rect.top) {\n            return false;\n        }\n        return true;\n    };\n    /**   @private  */\n    Rect.prototype.containsRect = function (rect) {\n        return this.left <= rect.left && this.right >= rect.right && this.top <= rect.top && this.bottom >= rect.bottom;\n    };\n    /**   @private  */\n    Rect.prototype.containsPoint = function (point, padding) {\n        if (padding === void 0) { padding = 0; }\n        return this.left - padding <= point.x && this.right + padding >= point.x\n            && this.top - padding <= point.y && this.bottom + padding >= point.y;\n    };\n    // public toPoints(): PointModel[] {\n    //     let points: PointModel[] = [];\n    //     points.push(this.topLeft);\n    //     points.push(this.topRight);\n    //     points.push(this.bottomLeft);\n    //     points.push(this.bottomRight);\n    //     return points;\n    // }\n    /**   @private  */\n    Rect.toBounds = function (points) {\n        var rect = new Rect();\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var pt = points_1[_i];\n            rect.unitePoint(pt);\n        }\n        return rect;\n    };\n    /**   @private  */\n    Rect.empty = new Rect(Number.MAX_VALUE, Number.MIN_VALUE, 0, 0);\n    return Rect;\n}());\nexport { Rect };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, ComplexFactory } from '@syncfusion/ej2-base';\n/**   @private  */\nvar getGradientType = function (obj) {\n    switch (obj.type) {\n        case 'Linear':\n            return LinearGradient;\n        case 'Radial':\n            return RadialGradient;\n        default:\n            return LinearGradient;\n    }\n};\n/**\n * Layout Model module defines the styles and types to arrange objects in containers\n */\nvar Thickness = /** @class */ (function () {\n    function Thickness(left, right, top, bottom) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n    return Thickness;\n}());\nexport { Thickness };\n/**\n * Defines the space to be left between an object and its immediate parent\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Defines the Shadow appearance of the objects\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n *  let nodes: NodeModel[] = [{ id: 'node2', width: 100, height: 100,\n *  constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n *  shadow: { angle: 45, distance: 5, opacity: 0.7, color: 'grey'}\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Shadow = /** @class */ (function (_super) {\n    __extends(Shadow, _super);\n    function Shadow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(45)\n    ], Shadow.prototype, \"angle\", void 0);\n    __decorate([\n        Property(5)\n    ], Shadow.prototype, \"distance\", void 0);\n    __decorate([\n        Property(0.7)\n    ], Shadow.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('lightgrey')\n    ], Shadow.prototype, \"color\", void 0);\n    return Shadow;\n}(ChildProperty));\nexport { Shadow };\n/**\n * Defines the different colors and the region of color transitions\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Stop = /** @class */ (function (_super) {\n    __extends(Stop, _super);\n    function Stop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Stop\n     */\n    Stop.prototype.getClassName = function () {\n        return 'Stop';\n    };\n    __decorate([\n        Property('')\n    ], Stop.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Stop.prototype, \"offset\", void 0);\n    __decorate([\n        Property(1)\n    ], Stop.prototype, \"opacity\", void 0);\n    return Stop;\n}(ChildProperty));\nexport { Stop };\n/**\n * Paints the node with a smooth transition from one color to another color\n */\nvar Gradient = /** @class */ (function (_super) {\n    __extends(Gradient, _super);\n    function Gradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Stop)\n    ], Gradient.prototype, \"stops\", void 0);\n    __decorate([\n        Property('None')\n    ], Gradient.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Gradient.prototype, \"id\", void 0);\n    return Gradient;\n}(ChildProperty));\nexport { Gradient };\n/**\n * Defines the linear gradient of styles\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: LinearGradientModel = { x1: 0, x2: 50, y1: 0, y2: 50, stops: stopscol, type: 'Linear' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\n/**\n * Paints the node with linear color transitions\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y2\", void 0);\n    return LinearGradient;\n}(Gradient));\nexport { LinearGradient };\n/**\n * A focal point defines the beginning of the gradient, and a circle defines the end point of the gradient\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], RadialGradient.prototype, \"r\", void 0);\n    return RadialGradient;\n}(Gradient));\nexport { RadialGradient };\n/**\n * Defines the style of shape/path\n */\nvar ShapeStyle = /** @class */ (function (_super) {\n    __extends(ShapeStyle, _super);\n    function ShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], ShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('black')\n    ], ShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('')\n    ], ShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], ShapeStyle.prototype, \"gradient\", void 0);\n    return ShapeStyle;\n}(ChildProperty));\nexport { ShapeStyle };\n/**\n * Defines the stroke style of a path\n */\nvar StrokeStyle = /** @class */ (function (_super) {\n    __extends(StrokeStyle, _super);\n    function StrokeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('transparent')\n    ], StrokeStyle.prototype, \"fill\", void 0);\n    return StrokeStyle;\n}(ShapeStyle));\nexport { StrokeStyle };\n/**\n * Defines the appearance of text\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let style: TextStyleModel = { strokeColor: 'black', opacity: 0.5, whiteSpace:'CollapseSpace', strokeWidth: 1 };\n * let node: NodeModel;\n * node = {\n * ...\n * id: 'node', width: 100, height: 100, offsetX: 100, offsetY: 100,\n * annotations : [{\n * content: 'text', style: style }];\n * ...\n * };\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: [node],\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar TextStyle = /** @class */ (function (_super) {\n    __extends(TextStyle, _super);\n    function TextStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('black')\n    ], TextStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property('Arial')\n    ], TextStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(12)\n    ], TextStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], TextStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], TextStyle.prototype, \"textWrapping\", void 0);\n    __decorate([\n        Property('Center')\n    ], TextStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], TextStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], TextStyle.prototype, \"textOverflow\", void 0);\n    __decorate([\n        Property('transparent')\n    ], TextStyle.prototype, \"fill\", void 0);\n    return TextStyle;\n}(ShapeStyle));\nexport { TextStyle };\n","/**\n * enum module defines the public enumerations\n */\n/**\n * Constraints to define when a port has to be visible\n * Visible - Always shows the port\n * Hidden - Always hides the port\n * Hover - Shows the port when the mouse hovers over a node\n * Connect - Shows the port when a connection end point is dragged over a node\n * Default - By default the ports will be visible when a node is hovered and being tried to connect\n * @aspNumberEnum\n * @blazorNumberEnum\n */\nexport var PortVisibility;\n(function (PortVisibility) {\n    /** Always shows the port */\n    PortVisibility[PortVisibility[\"Visible\"] = 1] = \"Visible\";\n    /** Always hides the port */\n    PortVisibility[PortVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    /** Shows the port when the mouse hovers over a node */\n    PortVisibility[PortVisibility[\"Hover\"] = 4] = \"Hover\";\n    /** Shows the port when a connection end point is dragged over a node */\n    PortVisibility[PortVisibility[\"Connect\"] = 8] = \"Connect\";\n})(PortVisibility || (PortVisibility = {}));\n/**\n * Defines the constraints to Enables / Disables some features of Snapping.\n * None - Snapping does not happen\n * ShowHorizontalLines - Displays only the horizontal gridlines in diagram.\n * ShowVerticalLines - Displays only the Vertical gridlines in diagram.\n * ShowLines - Display both Horizontal and Vertical gridlines.\n * SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToVerticalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines.\n * snapToObject - Enables the object to snap with the other objects in the diagram.\n * @IgnoreSingular\n * @aspNumberEnum\n * @blazorNumberEnum\n */\nexport var SnapConstraints;\n(function (SnapConstraints) {\n    /** None - Snapping does not happen */\n    SnapConstraints[SnapConstraints[\"None\"] = 0] = \"None\";\n    /** ShowHorizontalLines - Displays only the horizontal gridlines in diagram. */\n    SnapConstraints[SnapConstraints[\"ShowHorizontalLines\"] = 1] = \"ShowHorizontalLines\";\n    /** ShowVerticalLines - Displays only the Vertical gridlines in diagram  */\n    SnapConstraints[SnapConstraints[\"ShowVerticalLines\"] = 2] = \"ShowVerticalLines\";\n    /** ShowLines - Display both Horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"ShowLines\"] = 3] = \"ShowLines\";\n    /** SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToHorizontalLines\"] = 4] = \"SnapToHorizontalLines\";\n    /** SnapToVerticalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToVerticalLines\"] = 8] = \"SnapToVerticalLines\";\n    /** SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToLines\"] = 12] = \"SnapToLines\";\n    /** SnapToObject - Enables the object to snap with the other objects in the diagram. */\n    SnapConstraints[SnapConstraints[\"SnapToObject\"] = 16] = \"SnapToObject\";\n    /** Shows gridlines and enables snapping */\n    SnapConstraints[SnapConstraints[\"All\"] = 31] = \"All\";\n})(SnapConstraints || (SnapConstraints = {}));\n/**\n * Defines the visibility of the selector handles\n * None - Hides all the selector elements\n * ConnectorSourceThumb - Shows/hides the source thumb of the connector\n * ConnectorTargetThumb - Shows/hides the target thumb of the connector\n * ResizeSouthEast - Shows/hides the bottom right resize handle of the selector\n * ResizeSouthWest - Shows/hides the bottom left resize handle of the selector\n * ResizeNorthEast - Shows/hides the top right resize handle of the selector\n * ResizeNorthWest - Shows/hides the top left resize handle of the selector\n * ResizeEast - Shows/hides the middle right resize handle of the selector\n * ResizeWest - Shows/hides the middle left resize handle of the selector\n * ResizeSouth - Shows/hides the bottom center resize handle of the selector\n * ResizeNorth - Shows/hides the top center resize handle of the selector\n * Rotate - Shows/hides the rotate handle of the selector\n * UserHandles - Shows/hides the user handles of the selector\n * Resize - Shows/hides all resize handles of the selector\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var SelectorConstraints;\n(function (SelectorConstraints) {\n    /** Hides all the selector elements */\n    SelectorConstraints[SelectorConstraints[\"None\"] = 1] = \"None\";\n    /** Shows/hides the source thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorSourceThumb\"] = 2] = \"ConnectorSourceThumb\";\n    /** Shows/hides the target thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorTargetThumb\"] = 4] = \"ConnectorTargetThumb\";\n    /** Shows/hides the bottom right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthEast\"] = 8] = \"ResizeSouthEast\";\n    /** Shows/hides the bottom left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthWest\"] = 16] = \"ResizeSouthWest\";\n    /** Shows/hides the top right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthEast\"] = 32] = \"ResizeNorthEast\";\n    /** Shows/hides the top left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthWest\"] = 64] = \"ResizeNorthWest\";\n    /** Shows/hides the middle right resize handle of the selector  */\n    SelectorConstraints[SelectorConstraints[\"ResizeEast\"] = 128] = \"ResizeEast\";\n    /** Shows/hides the middle left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeWest\"] = 256] = \"ResizeWest\";\n    /** Shows/hides the bottom center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouth\"] = 512] = \"ResizeSouth\";\n    /** Shows/hides the top center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorth\"] = 1024] = \"ResizeNorth\";\n    /**  Shows/hides the rotate handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"Rotate\"] = 2048] = \"Rotate\";\n    /** Shows/hides the user handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"UserHandle\"] = 4096] = \"UserHandle\";\n    /** Shows/hides the default tooltip of nodes and connectors */\n    SelectorConstraints[SelectorConstraints[\"ToolTip\"] = 8192] = \"ToolTip\";\n    /** Shows/hides all resize handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeAll\"] = 2046] = \"ResizeAll\";\n    /** Shows all handles of the selector  */\n    SelectorConstraints[SelectorConstraints[\"All\"] = 16382] = \"All\";\n})(SelectorConstraints || (SelectorConstraints = {}));\n/**\n * Defines the constraints to enable/disable certain features of connector.\n * * None - Interaction of the connectors cannot be done.\n * * Select - Selects the connector.\n * * Delete - Delete the connector.\n * * Drag - Drag the connector.\n * * DragSourceEnd - Drag the source end of the connector.\n * * DragTargetEnd - Drag the target end of the connector.\n * * DragSegmentThump - Drag the segment thumb of the connector.\n * * AllowDrop - Allow to drop a node.\n * * Bridging - Creates bridge  on intersection of two connectors.\n * * BridgeObstacle -\n * * InheritBridging - Creates bridge  on intersection of two connectors.\n * * PointerEvents - Sets the pointer events.\n * * Tooltip - Displays a tooltip for the connectors.\n * * InheritToolTip - Displays a tooltip for the connectors.\n * * Interaction - Features of the connector used for interaction.\n * * ReadOnly - Enables ReadOnly\n * * Default - Default features of the connector.\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var ConnectorConstraints;\n(function (ConnectorConstraints) {\n    /** Disable all connector Constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connector to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables connector to be Deleted. */\n    ConnectorConstraints[ConnectorConstraints[\"Delete\"] = 4] = \"Delete\";\n    /** Enables connector to be Dragged. */\n    ConnectorConstraints[ConnectorConstraints[\"Drag\"] = 8] = \"Drag\";\n    /** Enables connectors source end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSourceEnd\"] = 16] = \"DragSourceEnd\";\n    /** Enables connectors target end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragTargetEnd\"] = 32] = \"DragTargetEnd\";\n    /** Enables control point and end point of every segment in a connector for editing. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSegmentThumb\"] = 64] = \"DragSegmentThumb\";\n    /** Enables AllowDrop constraints to the  connector. */\n    ConnectorConstraints[ConnectorConstraints[\"AllowDrop\"] = 128] = \"AllowDrop\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"Bridging\"] = 256] = \"Bridging\";\n    /** Enables or Disables Bridge Obstacles with overlapping of connectors. */\n    ConnectorConstraints[ConnectorConstraints[\"BridgeObstacle\"] = 512] = \"BridgeObstacle\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritBridging\"] = 1024] = \"InheritBridging\";\n    /** Used to set the pointer events. */\n    ConnectorConstraints[ConnectorConstraints[\"PointerEvents\"] = 2048] = \"PointerEvents\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"Tooltip\"] = 4096] = \"Tooltip\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"InheritTooltip\"] = 8192] = \"InheritTooltip\";\n    /** Enables Interaction. */\n    ConnectorConstraints[ConnectorConstraints[\"Interaction\"] = 4218] = \"Interaction\";\n    /** Enables ReadOnly */\n    ConnectorConstraints[ConnectorConstraints[\"ReadOnly\"] = 16384] = \"ReadOnly\";\n    /** Enables all constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"Default\"] = 11838] = \"Default\";\n})(ConnectorConstraints || (ConnectorConstraints = {}));\n/**\n * Enables/Disables the annotation constraints\n * ReadOnly - Enables/Disables the ReadOnly Constraints\n * InheritReadOnly - Enables/Disables the InheritReadOnly Constraints\n * Select -Enables/Disable select support for the annotation\n * Drag - Enables/Disable drag support for the annotation\n * Resize - Enables/Disable resize support for the annotation\n * Rotate - Enables/Disable rotate support for the annotation\n * Interaction - Enables annotation to inherit the interaction option\n * None - Disable all annotation constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var AnnotationConstraints;\n(function (AnnotationConstraints) {\n    /** Enables/Disables the ReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"ReadOnly\"] = 2] = \"ReadOnly\";\n    /** Enables/Disables the InheritReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"InheritReadOnly\"] = 4] = \"InheritReadOnly\";\n    /** Enables/Disable select support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Select\"] = 8] = \"Select\";\n    /** Enables/Disable drag support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Drag\"] = 16] = \"Drag\";\n    /** Enables/Disable resize support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Resize\"] = 32] = \"Resize\";\n    /** Enables/Disable rotate support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Rotate\"] = 64] = \"Rotate\";\n    /** Enables annotation to inherit the interaction option */\n    AnnotationConstraints[AnnotationConstraints[\"Interaction\"] = 120] = \"Interaction\";\n    /** Disable all annotation Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"None\"] = 0] = \"None\";\n})(AnnotationConstraints || (AnnotationConstraints = {}));\n/**\n * Enables/Disables certain features of node\n * None - Disable all node Constraints\n * Select - Enables node to be selected\n * Drag - Enables node to be Dragged\n * Rotate - Enables node to be Rotate\n * Shadow - Enables node to display shadow\n * PointerEvents - Enables node to provide pointer  option\n * Delete - Enables node to delete\n * InConnect - Enables node to provide in connect option\n * OutConnect - Enables node to provide out connect option\n * Individual - Enables node to provide individual resize option\n * Expandable - Enables node to provide Expandable option\n * AllowDrop - Enables node to provide allow to drop option\n * Inherit - Enables node to inherit the interaction option\n * ResizeNorthEast - Enable ResizeNorthEast of the node\n * ResizeEast - Enable ResizeEast of the node\n * ResizeSouthEast - Enable ResizeSouthEast of the node\n * ResizeSouth - Enable ResizeSouthWest of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeSouth - Enable ResizeSouth of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeWest - Enable ResizeWest of the node\n * ResizeNorth - Enable ResizeNorth of the node\n * Resize - Enables the Aspect ratio fo the node\n * AspectRatio - Enables the Aspect ratio fo the node\n * Tooltip - Enables or disables tool tip for the Nodes\n * InheritTooltip - Enables or disables tool tip for the Nodes\n * ReadOnly - Enables the  ReadOnly support for Annotation\n * Default - Enables all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var NodeConstraints;\n(function (NodeConstraints) {\n    /** Disable all node Constraints. */\n    NodeConstraints[NodeConstraints[\"None\"] = 0] = \"None\";\n    /** Enables node to be selected. */\n    NodeConstraints[NodeConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables node to be Dragged. */\n    NodeConstraints[NodeConstraints[\"Drag\"] = 4] = \"Drag\";\n    /** Enables node to be Rotate. */\n    NodeConstraints[NodeConstraints[\"Rotate\"] = 8] = \"Rotate\";\n    /** Enables node to display shadow. */\n    NodeConstraints[NodeConstraints[\"Shadow\"] = 16] = \"Shadow\";\n    /** Enables node to provide pointer  option */\n    NodeConstraints[NodeConstraints[\"PointerEvents\"] = 32] = \"PointerEvents\";\n    /** Enables node to delete */\n    NodeConstraints[NodeConstraints[\"Delete\"] = 64] = \"Delete\";\n    /** Enables node to provide in connect option */\n    NodeConstraints[NodeConstraints[\"InConnect\"] = 128] = \"InConnect\";\n    /** Enables node to provide out connect option */\n    NodeConstraints[NodeConstraints[\"OutConnect\"] = 256] = \"OutConnect\";\n    /** Enables node to provide individual resize option */\n    NodeConstraints[NodeConstraints[\"Individual\"] = 512] = \"Individual\";\n    /** Enables node to provide Expandable option */\n    NodeConstraints[NodeConstraints[\"Expandable\"] = 1024] = \"Expandable\";\n    /** Enables node to provide allow to drop option */\n    NodeConstraints[NodeConstraints[\"AllowDrop\"] = 2048] = \"AllowDrop\";\n    /** Enables node to inherit the interaction option */\n    NodeConstraints[NodeConstraints[\"Inherit\"] = 78] = \"Inherit\";\n    /** Enable ResizeNorthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthEast\"] = 4096] = \"ResizeNorthEast\";\n    /** Enable ResizeEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeEast\"] = 8192] = \"ResizeEast\";\n    /** Enable ResizeSouthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthEast\"] = 16384] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouth\"] = 32768] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthWest\"] = 65536] = \"ResizeSouthWest\";\n    /** Enable ResizeWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeWest\"] = 131072] = \"ResizeWest\";\n    /** Enable ResizeNorthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthWest\"] = 262144] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorth\"] = 524288] = \"ResizeNorth\";\n    /** Enable Resize of the node  */\n    NodeConstraints[NodeConstraints[\"Resize\"] = 1044480] = \"Resize\";\n    /** Enables the Aspect ratio fo the node */\n    NodeConstraints[NodeConstraints[\"AspectRatio\"] = 1048576] = \"AspectRatio\";\n    /** hide all resize support for node */\n    NodeConstraints[NodeConstraints[\"HideThumbs\"] = 16777216] = \"HideThumbs\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"Tooltip\"] = 2097152] = \"Tooltip\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"InheritTooltip\"] = 4194304] = \"InheritTooltip\";\n    /** Enables the  ReadOnly support for Annotation */\n    NodeConstraints[NodeConstraints[\"ReadOnly\"] = 8388608] = \"ReadOnly\";\n    /** Enables all constraints */\n    NodeConstraints[NodeConstraints[\"Default\"] = 5240814] = \"Default\";\n})(NodeConstraints || (NodeConstraints = {}));\n/** Enables/Disables The element actions\n * None - Diables all element actions are none\n * ElementIsPort - Enable element action is port\n * ElementIsGroup - Enable element action as Group\n * @private\n */\nexport var ElementAction;\n(function (ElementAction) {\n    /** Disables all element actions are none  */\n    ElementAction[ElementAction[\"None\"] = 0] = \"None\";\n    /** Enable the element action is Port  */\n    ElementAction[ElementAction[\"ElementIsPort\"] = 2] = \"ElementIsPort\";\n    /** Enable the element action as Group  */\n    ElementAction[ElementAction[\"ElementIsGroup\"] = 4] = \"ElementIsGroup\";\n})(ElementAction || (ElementAction = {}));\n/** Enables/Disables the handles of the selector\n * Rotate - Enable Rotate Thumb\n * ConnectorSource - Enable Connector source point\n * ConnectorTarget - Enable Connector target point\n * ResizeNorthEast - Enable ResizeNorthEast Resize\n * ResizeEast - Enable ResizeEast Resize\n * ResizeSouthEast - Enable ResizeSouthEast Resize\n * ResizeSouth - Enable ResizeSouth Resize\n * ResizeSouthWest - Enable ResizeSouthWest Resize\n * ResizeWest - Enable ResizeWest Resize\n * ResizeNorthWest - Enable ResizeNorthWest Resize\n * ResizeNorth - Enable ResizeNorth Resize\n * Default - Enables all constraints\n * @private\n */\nexport var ThumbsConstraints;\n(function (ThumbsConstraints) {\n    /** Enable Rotate Thumb  */\n    ThumbsConstraints[ThumbsConstraints[\"Rotate\"] = 2] = \"Rotate\";\n    /** Enable Connector source point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorSource\"] = 4] = \"ConnectorSource\";\n    /** Enable Connector target point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorTarget\"] = 8] = \"ConnectorTarget\";\n    /** Enable ResizeNorthEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthEast\"] = 16] = \"ResizeNorthEast\";\n    /** Enable ResizeEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeEast\"] = 32] = \"ResizeEast\";\n    /** Enable ResizeSouthEast Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthEast\"] = 64] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouth\"] = 128] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthWest\"] = 256] = \"ResizeSouthWest\";\n    /** Enable ResizeWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeWest\"] = 512] = \"ResizeWest\";\n    /** Enable ResizeNorthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthWest\"] = 1024] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorth\"] = 2048] = \"ResizeNorth\";\n    /** Enables all constraints */\n    ThumbsConstraints[ThumbsConstraints[\"Default\"] = 4094] = \"Default\";\n})(ThumbsConstraints || (ThumbsConstraints = {}));\n/**\n * Enables/Disables certain features of diagram\n * None - Disable DiagramConstraints constraints\n * Bridging - Enables/Disable Bridging support for connector\n * UndoRedo - Enables/Disable the Undo/Redo support\n * Tooltip - Enables/Disable Tooltip support\n * UserInteraction - Enables/Disable UserInteraction support for the diagram\n * ApiUpdate - Enables/Disable ApiUpdate support for the diagram\n * PageEditable - Enables/Disable PageEditable support for the diagram\n * Zoom - Enables/Disable Zoom support for the diagram\n * PanX - Enables/Disable PanX support for the diagram\n * PanY - Enables/Disable PanY support for the diagram\n * Pan - Enables/Disable Pan support the diagram\n * ZoomTextEdit - Enables/Disables zooming the text box while editing the text\n * Virtualization - Enables/Disable Virtualization support the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramConstraints;\n(function (DiagramConstraints) {\n    /** Disable DiagramConstraints constraints */\n    DiagramConstraints[DiagramConstraints[\"None\"] = 1] = \"None\";\n    /** Enables/Disable Bridging support for connector */\n    DiagramConstraints[DiagramConstraints[\"Bridging\"] = 2] = \"Bridging\";\n    /** Enables/Disable the Undo/Redo support */\n    DiagramConstraints[DiagramConstraints[\"UndoRedo\"] = 4] = \"UndoRedo\";\n    /** Enables/Disable Tooltip support */\n    DiagramConstraints[DiagramConstraints[\"Tooltip\"] = 8] = \"Tooltip\";\n    /** Enables/Disable UserInteraction support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"UserInteraction\"] = 16] = \"UserInteraction\";\n    /** Enables/Disable ApiUpdate support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"ApiUpdate\"] = 32] = \"ApiUpdate\";\n    /** Enables/Disable PageEditable support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PageEditable\"] = 48] = \"PageEditable\";\n    /** Enables/Disable Zoom support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"Zoom\"] = 64] = \"Zoom\";\n    /** Enables/Disable PanX support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanX\"] = 128] = \"PanX\";\n    /** Enables/Disable PanY support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanY\"] = 256] = \"PanY\";\n    /** Enables/Disable Pan support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Pan\"] = 384] = \"Pan\";\n    /** Enables/Disables zooming the text box while editing the text */\n    DiagramConstraints[DiagramConstraints[\"ZoomTextEdit\"] = 512] = \"ZoomTextEdit\";\n    /** Enables/Disable Virtualization support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Virtualization\"] = 1024] = \"Virtualization\";\n    /** Enables/Disable all constraints */\n    DiagramConstraints[DiagramConstraints[\"Default\"] = 500] = \"Default\";\n})(DiagramConstraints || (DiagramConstraints = {}));\n/**\n * Activates the diagram tools\n * None - Enables/Disable single select support for the diagram\n * SingleSelect - Enables/Disable single select support for the diagram\n * MultipleSelect - Enables/Disable MultipleSelect select support for the diagram\n * ZoomPan - Enables/Disable ZoomPan support for the diagram\n * DrawOnce - Enables/Disable continuousDraw support for the diagram\n * ContinuousDraw - Enables/Disable continuousDraw support for the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramTools;\n(function (DiagramTools) {\n    /** Disable all constraints */\n    DiagramTools[DiagramTools[\"None\"] = 0] = \"None\";\n    /** Enables/Disable single select support for the diagram */\n    DiagramTools[DiagramTools[\"SingleSelect\"] = 1] = \"SingleSelect\";\n    /** Enables/Disable MultipleSelect select support for the diagram */\n    DiagramTools[DiagramTools[\"MultipleSelect\"] = 2] = \"MultipleSelect\";\n    /** Enables/Disable ZoomPan support for the diagram */\n    DiagramTools[DiagramTools[\"ZoomPan\"] = 4] = \"ZoomPan\";\n    /** Enables/Disable DrawOnce support for the diagram */\n    DiagramTools[DiagramTools[\"DrawOnce\"] = 8] = \"DrawOnce\";\n    /** Enables/Disable continuousDraw support for the diagram */\n    DiagramTools[DiagramTools[\"ContinuousDraw\"] = 16] = \"ContinuousDraw\";\n    /** Enables/Disable all constraints */\n    DiagramTools[DiagramTools[\"Default\"] = 3] = \"Default\";\n})(DiagramTools || (DiagramTools = {}));\n/**\n * Defines the container/canvas transform\n * Self - Sets the transform type as Self\n * Parent - Sets the transform type as Parent\n */\nexport var Transform;\n(function (Transform) {\n    /** Self - Sets the transform type as Self */\n    Transform[Transform[\"Self\"] = 1] = \"Self\";\n    /** Parent - Sets the transform type as Parent */\n    Transform[Transform[\"Parent\"] = 2] = \"Parent\";\n})(Transform || (Transform = {}));\n/**\n * Defines the rendering mode for diagram\n * Canvas - Sets the rendering mode type as Canvas\n * Svg - Sets the rendering mode type as Svg\n */\nexport var RenderMode;\n(function (RenderMode) {\n    /** Canvas - Sets the rendering mode type as Canvas */\n    RenderMode[RenderMode[\"Canvas\"] = 0] = \"Canvas\";\n    /** Svg - Sets the rendering mode type as Svg */\n    RenderMode[RenderMode[\"Svg\"] = 1] = \"Svg\";\n})(RenderMode || (RenderMode = {}));\n/**\n * Sets a combination of key modifiers, on recognition of which the command will be executed.They are\n * * None - no modifiers are pressed\n * * Control - ctrl key\n * * Meta - meta key im mac\n * * Alt - alt key\n * * Shift - shift key\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var KeyModifiers;\n(function (KeyModifiers) {\n    /** No modifiers are pressed */\n    KeyModifiers[KeyModifiers[\"None\"] = 0] = \"None\";\n    /** The CTRL key */\n    KeyModifiers[KeyModifiers[\"Control\"] = 1] = \"Control\";\n    /** The Meta key pressed in Mac */\n    KeyModifiers[KeyModifiers[\"Meta\"] = 1] = \"Meta\";\n    /** The ALT key */\n    KeyModifiers[KeyModifiers[\"Alt\"] = 2] = \"Alt\";\n    /** The Shift key */\n    KeyModifiers[KeyModifiers[\"Shift\"] = 4] = \"Shift\";\n})(KeyModifiers || (KeyModifiers = {}));\n/**\n * Sets the key value, on recognition of which the command will be executed. They are\n * * none - no key\n * * Number0 = The 0 key\n * * Number1 = The 1 key\n * * Number2 = The 2 key\n * * Number3 = The 3 key\n * * Number4 = The 4 key\n * * Number5 = The 5 key\n * * Number6 = The 6 key\n * * Number7 = The 7 key\n * * Number8 = The 8 key\n * * Number9 = The 9 key\n * * Number0 = The 0 key\n * * BackSpace = The BackSpace key\n * * F1 = The f1 key\n * * F2 = The f2 key\n * * F3 = The f3 key\n * * F4 = The f4 key\n * * F5 = The f5 key\n * * F6 = The f6 key\n * * F7 = The f7 key\n * * F8 = The f8 key\n * * F9 = The f9 key\n * * F10 = The f10 key\n * * F11 = The f11 key\n * * F12 = The f12 key\n * * A = The a key\n * * B = The b key\n * * C = The c key\n * * D = The d key\n * * E = The e key\n * * F = The f key\n * * G = The g key\n * * H = The h key\n * * I = The i key\n * * J = The j key\n * * K = The k key\n * * L = The l key\n * * M = The m key\n * * N = The n key\n * * O = The o key\n * * P = The p key\n * * Q = The q key\n * * R = The r key\n * * S = The s key\n * * T = The t key\n * * U = The u key\n * * V = The v key\n * * W = The w key\n * * X = The x key\n * * Y = The y key\n * * Z = The z key\n * * Left = The left key\n * * Right = The right key\n * * Top = The top key\n * * Bottom = The bottom key\n * * Escape = The Escape key\n * * Tab = The tab key\n * * Delete = The delete key\n * * Enter = The enter key\n * * The Space key\n * * The page up key\n * * The page down key\n * * The end key\n * * The home key\n * * The Minus\n * * The Plus\n * * The Star\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var Keys;\n(function (Keys) {\n    /** No key pressed */\n    Keys[Keys[\"None\"] = null] = \"None\";\n    /** The 0 key */\n    Keys[Keys[\"Number0\"] = 0] = \"Number0\";\n    /** The 1 key */\n    Keys[Keys[\"Number1\"] = 1] = \"Number1\";\n    /** The 2 key */\n    Keys[Keys[\"Number2\"] = 2] = \"Number2\";\n    /** The 3 key */\n    Keys[Keys[\"Number3\"] = 3] = \"Number3\";\n    /** The 4 key */\n    Keys[Keys[\"Number4\"] = 4] = \"Number4\";\n    /** The 5 key */\n    Keys[Keys[\"Number5\"] = 5] = \"Number5\";\n    /** The 6 key */\n    Keys[Keys[\"Number6\"] = 6] = \"Number6\";\n    /** The 7 key */\n    Keys[Keys[\"Number7\"] = 7] = \"Number7\";\n    /** The 8 key */\n    Keys[Keys[\"Number8\"] = 8] = \"Number8\";\n    /** The 9 key */\n    Keys[Keys[\"Number9\"] = 9] = \"Number9\";\n    /** The A key */\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    /** The B key */\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    /** The C key */\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    /** The D key */\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    /** The E key */\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    /** The F key */\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    /** The G key */\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    /** The H key */\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    /** The I key */\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    /** The J key */\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    /** The K key */\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    /** The L key */\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    /** The M key */\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    /** The N key */\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    /** The O key */\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    /** The P key */\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    /** The Q key */\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    /** The R key */\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    /** The S key */\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    /** The T key */\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    /** The U key */\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    /** The V key */\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    /** The W key */\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    /** The X key */\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    /** The Y key */\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    /** The Z key */\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    /** The left arrow key */\n    Keys[Keys[\"Left\"] = 37] = \"Left\";\n    /** The up arrow key */\n    Keys[Keys[\"Up\"] = 38] = \"Up\";\n    /** The right arrow key */\n    Keys[Keys[\"Right\"] = 39] = \"Right\";\n    /** The down arrow key */\n    Keys[Keys[\"Down\"] = 40] = \"Down\";\n    /** The Escape key */\n    Keys[Keys[\"Escape\"] = 27] = \"Escape\";\n    /** The Space key */\n    Keys[Keys[\"Space\"] = 32] = \"Space\";\n    /** The page up key */\n    Keys[Keys[\"PageUp\"] = 33] = \"PageUp\";\n    /** The Space key */\n    Keys[Keys[\"PageDown\"] = 34] = \"PageDown\";\n    /** The Space key */\n    Keys[Keys[\"End\"] = 35] = \"End\";\n    /** The Space key */\n    Keys[Keys[\"Home\"] = 36] = \"Home\";\n    /** The delete key */\n    Keys[Keys[\"Delete\"] = 46] = \"Delete\";\n    /** The tab key */\n    Keys[Keys[\"Tab\"] = 9] = \"Tab\";\n    /** The enter key */\n    Keys[Keys[\"Enter\"] = 13] = \"Enter\";\n    /** The BackSpace key */\n    Keys[Keys[\"BackSpace\"] = 8] = \"BackSpace\";\n    /** The F1 key */\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    /** The F2 key */\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    /** The F3 key */\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    /** The F4 key */\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    /** The F5 key */\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    /** The F6 key */\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    /** The F7 key */\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    /** The F8 key */\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    /** The F9 key */\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    /** The F10 key */\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    /** The F111 key */\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    /** The F12 key */\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    /** The Star */\n    Keys[Keys[\"Star\"] = 56] = \"Star\";\n    /** The Plus */\n    Keys[Keys[\"Plus\"] = 187] = \"Plus\";\n    /** The Minus */\n    Keys[Keys[\"Minus\"] = 189] = \"Minus\";\n})(Keys || (Keys = {}));\n/**\n * Enables/Disables certain actions of diagram\n * * Render - Indicates the diagram is in render state.\n * * PublicMethod - Indicates the diagram public method is in action.\n * * ToolAction - Indicates the diagram Tool is in action.\n * * UndoRedo - Indicates the diagram undo/redo is in action.\n * * TextEdit - Indicates the text editing is in progress.\n * * Group - Indicates the group is in progress.\n * * Clear - Indicates diagram have clear all.\n * * PreventClearSelection - prevents diagram from clear selection\n */\nexport var DiagramAction;\n(function (DiagramAction) {\n    /** Indicates the diagram is in render state.r */\n    DiagramAction[DiagramAction[\"Render\"] = 2] = \"Render\";\n    /** Indicates the diagram public method is in action. */\n    DiagramAction[DiagramAction[\"PublicMethod\"] = 4] = \"PublicMethod\";\n    /** Indicates the diagram Tool is in action. */\n    DiagramAction[DiagramAction[\"ToolAction\"] = 8] = \"ToolAction\";\n    /** Indicates the diagram undo/redo is in action. */\n    DiagramAction[DiagramAction[\"UndoRedo\"] = 16] = \"UndoRedo\";\n    /** Indicates the text editing is in progress. */\n    DiagramAction[DiagramAction[\"TextEdit\"] = 32] = \"TextEdit\";\n    /** Indicates the group is in progress. */\n    DiagramAction[DiagramAction[\"Group\"] = 64] = \"Group\";\n    /** Indicates diagram have clear all. */\n    DiagramAction[DiagramAction[\"Clear\"] = 128] = \"Clear\";\n    /** prevents diagram from clear selection. */\n    DiagramAction[DiagramAction[\"PreventClearSelection\"] = 256] = \"PreventClearSelection\";\n    /** Indicates whether drag or rotate tool has been activated */\n    DiagramAction[DiagramAction[\"Interactions\"] = 512] = \"Interactions\";\n    /** Use to prevent the history during some action in diagram */\n    DiagramAction[DiagramAction[\"PreventHistory\"] = 1024] = \"PreventHistory\";\n    /** Use to prevent the icon while expand a node in diagram */\n    DiagramAction[DiagramAction[\"PreventIconsUpdate\"] = 2048] = \"PreventIconsUpdate\";\n})(DiagramAction || (DiagramAction = {}));\n/**\n * Defines the Selector type to be drawn\n * None - Draws Normal selector with resize handles\n * Symbol - Draws only the rectangle for the selector\n */\nexport var RendererAction;\n(function (RendererAction) {\n    /** None - Draws Normal selector with resize handles */\n    RendererAction[RendererAction[\"None\"] = 2] = \"None\";\n    /** DrawSelectorBorder - Draws only the Border for the selector */\n    RendererAction[RendererAction[\"DrawSelectorBorder\"] = 4] = \"DrawSelectorBorder\";\n    /** PreventRenderSelector - Avoid the render of selector during interaction */\n    RendererAction[RendererAction[\"PreventRenderSelector\"] = 8] = \"PreventRenderSelector\";\n})(RendererAction || (RendererAction = {}));\nexport var RealAction;\n(function (RealAction) {\n    RealAction[RealAction[\"None\"] = 0] = \"None\";\n    RealAction[RealAction[\"PreventDrag\"] = 2] = \"PreventDrag\";\n    RealAction[RealAction[\"PreventScale\"] = 4] = \"PreventScale\";\n    RealAction[RealAction[\"PreventDataInit\"] = 8] = \"PreventDataInit\";\n    /** Indicates when the diagram is scrolled horizontal using scroll bar */\n    RealAction[RealAction[\"hScrollbarMoved\"] = 16] = \"hScrollbarMoved\";\n    /** Indicates when the diagram is scrolled vertical using scroll bar */\n    RealAction[RealAction[\"vScrollbarMoved\"] = 32] = \"vScrollbarMoved\";\n})(RealAction || (RealAction = {}));\n/** @private */\nexport var NoOfSegments;\n(function (NoOfSegments) {\n    NoOfSegments[NoOfSegments[\"Zero\"] = 0] = \"Zero\";\n    NoOfSegments[NoOfSegments[\"One\"] = 1] = \"One\";\n    NoOfSegments[NoOfSegments[\"Two\"] = 2] = \"Two\";\n    NoOfSegments[NoOfSegments[\"Three\"] = 3] = \"Three\";\n    NoOfSegments[NoOfSegments[\"Four\"] = 4] = \"Four\";\n    NoOfSegments[NoOfSegments[\"Five\"] = 5] = \"Five\";\n})(NoOfSegments || (NoOfSegments = {}));\n/**\n * events of diagram\n * @private\n */\nexport var DiagramEvent;\n(function (DiagramEvent) {\n    DiagramEvent[DiagramEvent[\"collectionChange\"] = 0] = \"collectionChange\";\n    DiagramEvent[DiagramEvent[\"rotateChange\"] = 1] = \"rotateChange\";\n    DiagramEvent[DiagramEvent[\"positionChange\"] = 2] = \"positionChange\";\n    DiagramEvent[DiagramEvent[\"propertyChange\"] = 3] = \"propertyChange\";\n    DiagramEvent[DiagramEvent[\"selectionChange\"] = 4] = \"selectionChange\";\n    DiagramEvent[DiagramEvent[\"sizeChange\"] = 5] = \"sizeChange\";\n    DiagramEvent[DiagramEvent[\"drop\"] = 6] = \"drop\";\n    DiagramEvent[DiagramEvent[\"sourcePointChange\"] = 7] = \"sourcePointChange\";\n    DiagramEvent[DiagramEvent[\"targetPointChange\"] = 8] = \"targetPointChange\";\n    DiagramEvent[DiagramEvent[\"connectionChange\"] = 9] = \"connectionChange\";\n    DiagramEvent[DiagramEvent[\"animationComplete\"] = 10] = \"animationComplete\";\n    DiagramEvent[DiagramEvent[\"click\"] = 11] = \"click\";\n    DiagramEvent[DiagramEvent[\"doubleClick\"] = 12] = \"doubleClick\";\n    DiagramEvent[DiagramEvent[\"scrollChange\"] = 13] = \"scrollChange\";\n    DiagramEvent[DiagramEvent[\"dragEnter\"] = 14] = \"dragEnter\";\n    DiagramEvent[DiagramEvent[\"dragLeave\"] = 15] = \"dragLeave\";\n    DiagramEvent[DiagramEvent[\"dragOver\"] = 16] = \"dragOver\";\n    DiagramEvent[DiagramEvent[\"textEdit\"] = 17] = \"textEdit\";\n    DiagramEvent[DiagramEvent[\"paletteSelectionChange\"] = 18] = \"paletteSelectionChange\";\n    DiagramEvent[DiagramEvent[\"historyChange\"] = 19] = \"historyChange\";\n    DiagramEvent[DiagramEvent[\"mouseEnter\"] = 20] = \"mouseEnter\";\n    DiagramEvent[DiagramEvent[\"mouseLeave\"] = 21] = \"mouseLeave\";\n    DiagramEvent[DiagramEvent[\"mouseOver\"] = 22] = \"mouseOver\";\n    DiagramEvent[DiagramEvent[\"expandStateChange\"] = 23] = \"expandStateChange\";\n    DiagramEvent[DiagramEvent[\"segmentCollectionChange\"] = 24] = \"segmentCollectionChange\";\n})(DiagramEvent || (DiagramEvent = {}));\n/** Enables/Disables certain features of port connection\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var PortConstraints;\n(function (PortConstraints) {\n    /** Disable all constraints  */\n    PortConstraints[PortConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connections with connector  */\n    PortConstraints[PortConstraints[\"Drag\"] = 2] = \"Drag\";\n    /** Enables to create the connection when mouse hover on the port  */\n    PortConstraints[PortConstraints[\"Draw\"] = 4] = \"Draw\";\n    /** Enables to only connect the target end of connector */\n    PortConstraints[PortConstraints[\"InConnect\"] = 8] = \"InConnect\";\n    /** Enables to only connect the source end of connector */\n    PortConstraints[PortConstraints[\"OutConnect\"] = 16] = \"OutConnect\";\n    /** Enables all constraints */\n    PortConstraints[PortConstraints[\"Default\"] = 24] = \"Default\";\n})(PortConstraints || (PortConstraints = {}));\n/**\n * Defines the context menu click\n * contextMenuClick - Sets the context menu click as contextMenuClick\n */\nexport var contextMenuClick = \n/** contextMenuClick - Sets the context menu click as contextMenuClick */\n'contextMenuClick';\n/**\n * Defines the context menu open\n * contextMenuOpen - Sets the context menu open as contextMenuOpen\n */\nexport var contextMenuOpen = \n/** contextMenuOpen - Sets the context menu open as contextMenuOpen */\n'contextMenuOpen';\n/**\n * Defines the context menu Before Item Render\n * contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender\n */\nexport var contextMenuBeforeItemRender = \n/** contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender */\n'contextMenuBeforeItemRender';\n","import { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { getBounds } from '../../utility/base-util';\n/**\n * DiagramElement module defines the basic unit of diagram\n */\nvar DiagramElement = /** @class */ (function () {\n    function DiagramElement() {\n        /**\n         * Sets/Gets the reference point of the element\n         * ```html\n         * <div id='diagram'></div>\n         * ```\n         * ```typescript\n         * let stackPanel: StackPanel = new StackPanel();\n         * stackPanel.offsetX = 300; stackPanel.offsetY = 200;\n         * stackPanel.width = 100; stackPanel.height = 100;\n         * stackPanel.style.fill = 'red';\n         * stackPanel.pivot = { x: 0.5, y: 0.5 };\n         * let diagram: Diagram = new Diagram({\n         * ...\n         * basicElements: [stackPanel],\n         * ...\n         * });\n         * diagram.appendTo('#diagram');\n         * ```\n         */\n        this.pivot = { x: 0.5, y: 0.5 };\n        /**\n         * Sets or gets whether the content of the element needs to be measured\n         */\n        this.isDirt = true;\n        /**\n         * set to true during print and eport\n         */\n        /** @private */\n        this.isExport = false;\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleValue = { x: 0, y: 0 };\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleOffset = { x: 0, y: 0 };\n        /**\n         * Check whether style need to be apply or not\n         */\n        /** @private */\n        this.canApplyStyle = true;\n        /**\n         * Sets or gets whether the content of the element to be visible\n         */\n        this.visible = true;\n        /**\n         * Sets/Gets the x-coordinate of the element\n         */\n        this.offsetX = 0;\n        /**\n         * Sets/Gets the y-coordinate of the element\n         */\n        this.offsetY = 0;\n        /**\n         * Set the corner of the element\n         */\n        this.cornerRadius = 0;\n        /**\n         * Sets/Gets the minimum height of the element\n         */\n        this.minHeight = undefined;\n        /**\n         * Sets/Gets the minimum width of the element\n         */\n        this.minWidth = undefined;\n        /**\n         * Sets/Gets the maximum width of the element\n         */\n        this.maxWidth = undefined;\n        /**\n         * Sets/Gets the maximum height of the element\n         */\n        this.maxHeight = undefined;\n        /**\n         * Sets/Gets the width of the element\n         */\n        this.width = undefined;\n        /**\n         * Sets/Gets the height of the element\n         */\n        this.height = undefined;\n        /**\n         * Sets/Gets the rotate angle of the element\n         */\n        this.rotateAngle = 0;\n        /**\n         * Sets/Gets the margin of the element\n         */\n        this.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        /**\n         * Sets/Gets how the element has to be horizontally arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Left - Aligns the diagram element at the left of its immediate parent\n         * * Right - Aligns the diagram element at the right of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.horizontalAlignment = 'Auto';\n        /**\n         * Sets/Gets how the element has to be vertically arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Top - Aligns the diagram element at the top of its immediate parent\n         * * Bottom - Aligns the diagram element at the bottom of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.verticalAlignment = 'Auto';\n        /**\n         * Sets/Gets the mirror image of diagram element in both horizontal and vertical directions\n         * * FlipHorizontal - Translate the diagram element throughout its immediate parent\n         * * FlipVertical - Rotate the diagram element throughout its immediate parent\n         */\n        this.flip = 'None';\n        /**\n         * Sets whether the element has to be aligned with respect to a point/with respect to its immediate parent\n         * * Point - Diagram elements will be aligned with respect to a point\n         * * Object - Diagram elements will be aligned with respect to its immediate parent\n         */\n        this.relativeMode = 'Point';\n        /**\n         * Sets whether the element has to be transformed based on its parent or not\n         * * Self - Sets the transform type as Self\n         * * Parent - Sets the transform type as Parent\n         */\n        this.transform = Transform.Self | Transform.Parent;\n        /**\n         * Sets the style of the element\n         */\n        this.style = { fill: 'white', strokeColor: 'black', opacity: 1, strokeWidth: 1 };\n        /**\n         * Gets the minimum size that is required by the element\n         */\n        this.desiredSize = new Size();\n        /**\n         * Gets the size that the element will be rendered\n         */\n        this.actualSize = new Size();\n        /**\n         * Gets the rotate angle that is set to the immediate parent of the element\n         */\n        this.parentTransform = 0;\n        /** @private */\n        this.preventContainer = false;\n        /**\n         * Gets/Set the boolean value for the element\n         */\n        this.isSvgRender = false;\n        /**\n         * Gets/Sets the boundary of the element\n         */\n        this.bounds = new Rect(0, 0, 0, 0);\n        /**\n         * Defines the appearance of the shadow of the element\n         */\n        this.shadow = null;\n        /**\n         * Defines the description of the diagram element\n         */\n        this.description = '';\n        /**\n         * Defines whether the element has to be measured or not\n         */\n        this.staticSize = false;\n        /**\n         * check whether the element is rect or not\n         */\n        this.isRectElement = false;\n        /** @private */\n        this.isCalculateDesiredSize = true;\n        /**\n         * Set the offset values for container in flipping\n         */\n        /** @private */\n        this.flipOffset = { x: 0, y: 0 };\n        /**\n         * Defines whether the element is group or port\n         */\n        /** @private */\n        this.elementActions = ElementAction.None;\n        //private variables\n        this.position = undefined;\n        this.unitMode = undefined;\n        /**   @private  */\n        this.float = false;\n        this.floatingBounds = undefined;\n    }\n    // public constructor() {\n    //     this.id = randomId();\n    // }\n    /**\n     * Sets the offset of the element with respect to its parent\n     * @param x\n     * @param y\n     * @param mode\n     */\n    DiagramElement.prototype.setOffsetWithRespectToBounds = function (x, y, mode) {\n        this.unitMode = mode;\n        this.position = { x: x, y: y };\n    };\n    /**\n     * Gets the position of the element with respect to its parent\n     * @param size\n     */\n    DiagramElement.prototype.getAbsolutePosition = function (size) {\n        if (this.position !== undefined) {\n            if (this.unitMode === 'Absolute') {\n                return this.position;\n            }\n            else {\n                return {\n                    x: this.position.x * size.width, y: this.position.y * size.height\n                };\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(DiagramElement.prototype, \"outerBounds\", {\n        get: function () {\n            return this.floatingBounds || this.bounds;\n        },\n        /**\n         * used to set the outer bounds value\n         * @private\n         */\n        set: function (bounds) {\n            this.floatingBounds = bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that the element requires\n     * @param availableSize\n     */\n    DiagramElement.prototype.measure = function (availableSize) {\n        var width = this.width !== undefined ? this.width : (availableSize.width || 0) - this.margin.left - this.margin.right;\n        var height = this.height !== undefined ? this.height : (availableSize.height || 0) - this.margin.top - this.margin.bottom;\n        this.desiredSize = new Size(width, height);\n        if (this.isCalculateDesiredSize) {\n            this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        }\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the element\n     * @param desiredSize\n     */\n    DiagramElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Updates the bounds of the element\n     */\n    DiagramElement.prototype.updateBounds = function () {\n        this.bounds = getBounds(this);\n    };\n    /**\n     * Validates the size of the element with respect to its minimum and maximum size\n     * @param desiredSize\n     * @param availableSize\n     */\n    DiagramElement.prototype.validateDesiredSize = function (desiredSize, availableSize) {\n        //Empty canvas\n        if (this.isRectElement && !this.width && !this.minWidth && !this.maxWidth) {\n            desiredSize.width = 50;\n        }\n        if (this.isRectElement && !this.height && !this.minHeight && !this.maxHeight) {\n            desiredSize.height = 50;\n        }\n        if (desiredSize === undefined || this.width !== undefined &&\n            this.height !== undefined) {\n            desiredSize = desiredSize || new Size();\n            desiredSize.width = this.width === undefined ? (availableSize.width || 0)\n                - this.margin.left - this.margin.right : this.width;\n            desiredSize.height = this.height === undefined ? (availableSize.height || 0)\n                - this.margin.top - this.margin.bottom : this.height;\n        }\n        //Considering min values\n        if (this.minWidth !== undefined) {\n            desiredSize.width = Math.max(desiredSize.width, this.minWidth);\n        }\n        if (this.minHeight !== undefined) {\n            desiredSize.height = Math.max(desiredSize.height, this.minHeight);\n        }\n        //Considering max values\n        if (this.maxWidth !== undefined) {\n            desiredSize.width = Math.min(desiredSize.width, this.maxWidth);\n        }\n        if (this.maxHeight !== undefined) {\n            desiredSize.height = Math.min(desiredSize.height, this.maxHeight);\n        }\n        return desiredSize;\n    };\n    return DiagramElement;\n}());\nexport { DiagramElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { ElementAction } from '../../enum/enum';\nimport { Thickness } from '../appearance';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\n/**\n * Container module is used to group related objects\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the space between the container and its immediate children\n         */\n        _this.padding = new Thickness(0, 0, 0, 0);\n        //private members    \n        _this.desiredBounds = undefined;\n        /** @private */\n        _this.measureChildren = true;\n        /**   @private  */\n        _this.prevRotateAngle = 0;\n        return _this;\n    }\n    /**\n     * returns whether the container has child elements or not\n     */\n    Container.prototype.hasChildren = function () {\n        if (this.children !== undefined && this.children.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Measures the minimum space that the container requires\n     *\n     * @param availableSize\n     */\n    Container.prototype.measure = function (availableSize) {\n        // measure the element and find the desired size\n        this.desiredBounds = undefined;\n        var desired = undefined;\n        var child;\n        var center = { x: 0, y: 0 };\n        var y;\n        var x;\n        var childBounds;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var i = 0; i < this.children.length; i++) {\n                child = this.children[i];\n                if (child.horizontalAlignment === 'Stretch' && !availableSize.width) {\n                    availableSize.width = child.bounds.width;\n                }\n                if (child.verticalAlignment === 'Stretch' && !availableSize.height) {\n                    availableSize.height = child.bounds.height;\n                }\n                var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n                if (this.measureChildren || force || (child instanceof Container && child.measureChildren !== undefined)) {\n                    child.measure(availableSize);\n                }\n                childBounds = this.GetChildrenBounds(child);\n                if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = childBounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(childBounds);\n                    }\n                }\n                else if (this.actualSize && !this.actualSize.width && !this.actualSize.height &&\n                    !child.preventContainer && child.horizontalAlignment === 'Stretch' && child.verticalAlignment === 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = child.bounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(child.bounds);\n                    }\n                }\n            }\n            if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n                var offsetPt = {\n                    x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n                    y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n                };\n                var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n                this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n                this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n            }\n            if (this.desiredBounds) {\n                desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n            }\n        }\n        desired = this.validateDesiredSize(desired, availableSize);\n        this.stretchChildren(desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the container and its children\n     * @param desiredSize\n     */\n    Container.prototype.arrange = function (desiredSize) {\n        var child;\n        var bounds;\n        var childBounds = this.desiredBounds;\n        if (childBounds) {\n            var x = this.offsetX;\n            var y = this.offsetY;\n            this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n            this.offsetY = childBounds.y + childBounds.height * this.pivot.y;\n            // container has rotateAngle\n            if (this.hasChildren()) {\n                //Measuring the children\n                for (var i = 0; i < this.children.length; i++) {\n                    child = this.children[i];\n                    var arrange = false;\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.offsetX = this.offsetX;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        if (this.flip && (this.elementActions & ElementAction.ElementIsGroup)) {\n                            child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                                -child.parentTransform : child.parentTransform;\n                        }\n                        arrange = true;\n                    }\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.offsetY = this.offsetY;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (arrange || this.measureChildren || (child instanceof Container && child.measureChildren !== undefined)) {\n                        child.arrange(child.desiredSize);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.prevRotateAngle = this.rotateAngle;\n        return desiredSize;\n    };\n    //protected methods\n    /**\n     * Stretches the child elements based on the size of the container\n     * @param size\n     */\n    Container.prototype.stretchChildren = function (size) {\n        if (this.hasChildren()) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n                    child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n                }\n                if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n                    child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n                }\n                if (child instanceof Container) {\n                    child.stretchChildren(child.desiredSize);\n                }\n            }\n        }\n    };\n    /**\n     * Considers the padding of the element when measuring its desired size\n     * @param size\n     */\n    Container.prototype.applyPadding = function (size) {\n        size.width += this.padding.left + this.padding.right;\n        size.height += this.padding.top + this.padding.bottom;\n    };\n    /**\n     * Finds the offset of the child element with respect to the container\n     * @param child\n     * @param center\n     */\n    Container.prototype.findChildOffsetFromCenter = function (child, center) {\n        var topLeft = { x: center.x - child.desiredSize.width / 2, y: center.y - child.desiredSize.height / 2 };\n        var offset = getOffset(topLeft, child);\n        //Rotate based on child rotate angle\n        offset = rotatePoint(child.rotateAngle, center.x, center.y, offset);\n        //Rotate based on parent pivot\n        offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n        child.offsetX = offset.x;\n        child.offsetY = offset.y;\n    };\n    //private methods - check its need\n    Container.prototype.GetChildrenBounds = function (child) {\n        var childBounds;\n        var childSize;\n        childSize = child.desiredSize.clone();\n        var diffAngle = child.rotateAngle - this.rotateAngle;\n        var refPoint = { x: child.offsetX, y: child.offsetY };\n        var left = refPoint.x - childSize.width * child.pivot.x;\n        var top = refPoint.y - childSize.height * child.pivot.y;\n        var right = left + childSize.width;\n        var bottom = top + childSize.height;\n        var topLeft = { x: left, y: top };\n        var topRight = { x: right, y: top };\n        var bottomLeft = { x: left, y: bottom };\n        var bottomRight = { x: right, y: bottom };\n        topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n        topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n        bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n        bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n        if (this.rotateAngle !== 0) {\n            topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n            topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n            bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n            bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n        }\n        return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    };\n    return Container;\n}(DiagramElement));\nexport { Container };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureText } from './../../utility/dom-util';\n/**\n * TextElement is used to display text/annotations\n */\nvar TextElement = /** @class */ (function (_super) {\n    __extends(TextElement, _super);\n    /**\n     * set the id for each element\n     */\n    function TextElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.textContent = '';\n        /** @private */\n        _this.canMeasure = true;\n        /** @private */\n        _this.isLaneOrientation = false;\n        /** @private */\n        _this.canConsiderBounds = true;\n        /**\n         * sets the hyperlink color to blue\n         */\n        _this.hyperlink = {\n            color: 'blue'\n        };\n        /** @private */\n        _this.doWrap = true;\n        _this.textNodes = [];\n        /**\n         * Defines the appearance of the text element\n         */\n        _this.style = {\n            color: 'black', fill: 'transparent', strokeColor: 'black',\n            strokeWidth: 1, fontFamily: 'Arial', fontSize: 12, whiteSpace: 'CollapseSpace',\n            textWrapping: 'WrapWithOverflow', textAlign: 'Center', italic: false, bold: false,\n            textDecoration: 'None', strokeDashArray: '', opacity: 5, gradient: null,\n            textOverflow: 'Wrap'\n        };\n        _this.style.fill = 'transparent';\n        _this.style.strokeColor = 'transparent';\n        return _this;\n    }\n    Object.defineProperty(TextElement.prototype, \"content\", {\n        /**\n         * gets the content for the text element\n         */\n        get: function () {\n            return this.textContent;\n        },\n        /**\n         * sets the content for the text element\n         */\n        set: function (value) {\n            if (this.textContent !== value) {\n                this.textContent = value;\n                this.isDirt = true;\n                this.doWrap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"childNodes\", {\n        /**\n         * sets the content for the text element\n         */\n        get: function () {\n            return this.textNodes;\n        },\n        /**\n         * gets the content for the text element\n         */\n        set: function (value) {\n            this.textNodes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"wrapBounds\", {\n        /**\n         * gets the wrapBounds for the text\n         */\n        get: function () {\n            return this.textWrapBounds;\n        },\n        /**\n         * sets the wrapBounds for the text\n         */\n        set: function (value) {\n            this.textWrapBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    TextElement.prototype.refreshTextElement = function () {\n        this.isDirt = true;\n    };\n    /**\n     * Measures the minimum size that is required for the text element\n     * @param availableSize\n     */\n    TextElement.prototype.measure = function (availableSize) {\n        var size;\n        if (this.isDirt && this.canMeasure) {\n            size = measureText(this, this.style, this.content, this.isLaneOrientation ?\n                availableSize.height : (this.width || availableSize.width));\n        }\n        else {\n            size = this.desiredSize;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            this.desiredSize = new Size(size.width, size.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the text element\n     * @param desiredSize\n     */\n    TextElement.prototype.arrange = function (desiredSize) {\n        if (desiredSize.width !== this.actualSize.width || desiredSize.height !== this.actualSize.height || this.isDirt) {\n            this.doWrap = true;\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    return TextElement;\n}(DiagramElement));\nexport { TextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\nimport { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { TextElement } from '../elements/text-element';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Not applicable for canvas\n         *  @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the canvas requires\n     * @param availableSize\n     */\n    Canvas.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        var desiredBounds = undefined;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child instanceof TextElement) {\n                    if (child.canMeasure) {\n                        availableSize.width = availableSize.width || this.maxWidth || this.minWidth;\n                        child.measure(availableSize);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                else if (!(child instanceof TextElement)) {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var right = childSize.width + child.margin.right;\n                var bottom = childSize.height + child.margin.bottom;\n                var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n                if (child.float) {\n                    var position = child.getAbsolutePosition(childSize);\n                    if (position !== undefined) {\n                        continue;\n                    }\n                }\n                if ((!(child instanceof TextElement)) || (child instanceof TextElement && child.canConsiderBounds)) {\n                    if (desiredBounds === undefined) {\n                        desiredBounds = childBounds;\n                    }\n                    else {\n                        desiredBounds.uniteRect(childBounds);\n                    }\n                }\n            }\n            if (desiredBounds) {\n                var leftMargin = 0;\n                var topMargin = 0;\n                leftMargin = Math.max(desiredBounds.left, 0);\n                topMargin = Math.max(desiredBounds.top, 0);\n                desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        _super.prototype.stretchChildren.call(this, desired);\n        //Considering padding values\n        desired.width += this.padding.left + this.padding.right;\n        desired.height += this.padding.top + this.padding.bottom;\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the child elements of the canvas\n     */\n    Canvas.prototype.arrange = function (desiredSize, isStack) {\n        this.outerBounds = new Rect();\n        if (this.hasChildren()) {\n            var y = void 0;\n            var x = void 0;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if ((child.transform & Transform.Parent) !== 0) {\n                    child.parentTransform = this.parentTransform + this.rotateAngle;\n                    if (this.flip !== 'None' || this.elementActions & ElementAction.ElementIsGroup) {\n                        child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                            -child.parentTransform : child.parentTransform;\n                    }\n                    var childSize = child.desiredSize.clone();\n                    var topLeft = void 0;\n                    var center = { x: 0, y: 0 };\n                    var childX = x;\n                    var childY = y;\n                    if (child.relativeMode === 'Point') {\n                        var position = child.getAbsolutePosition(desiredSize);\n                        if (position !== undefined) {\n                            childX += position.x;\n                            childY += position.y;\n                        }\n                    }\n                    if (child.relativeMode === 'Object') {\n                        topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n                    }\n                    else {\n                        topLeft = this.alignChildBasedOnaPoint(child, childX, childY);\n                    }\n                    center = { x: topLeft.x + childSize.width / 2, y: topLeft.y + childSize.height / 2 };\n                    _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                }\n                if (isStack && (child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch')) {\n                    child.arrange(desiredSize);\n                }\n                else {\n                    if (child instanceof TextElement && child.canMeasure) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                    else if (!(child instanceof TextElement)) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.outerBounds.uniteRect(this.bounds);\n        return desiredSize;\n    };\n    /**\n     * Aligns the child element based on its parent\n     * @param child\n     * @param childSize\n     * @param parentSize\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Right':\n                x += parentSize.width - childSize.width - child.margin.right;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x += parentSize.width / 2 - childSize.width / 2;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Bottom':\n                y += parentSize.height - childSize.height - child.margin.bottom;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y += parentSize.height / 2 - childSize.height / 2;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Aligns the child elements based on a point\n     * @param child\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y) {\n        x += child.margin.left - child.margin.right;\n        y += child.margin.top - child.margin.bottom;\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x = x;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x -= child.desiredSize.width * child.pivot.x;\n                break;\n            case 'Right':\n                x -= child.desiredSize.width;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y = y;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y -= child.desiredSize.height * child.pivot.y;\n                break;\n            case 'Bottom':\n                y -= child.desiredSize.height;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    return Canvas;\n}(Container));\nexport { Canvas };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath, findSegmentPoints, translatePoints } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\nvar PathElement = /** @class */ (function (_super) {\n    __extends(PathElement, _super);\n    /**\n     * set the id for each element\n     */\n    function PathElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * Gets or sets the geometry of the path element\n         */\n        _this.pathData = '';\n        /**\n         * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n         */\n        _this.transformPath = true;\n        /**\n         * Gets/Sets the equivalent path, that will have the origin as 0,0\n         */\n        _this.absolutePath = '';\n        /**   @private  */\n        _this.canMeasurePath = false;\n        //Private variables\n        /**   @private  */\n        _this.absoluteBounds = new Rect();\n        return _this;\n    }\n    Object.defineProperty(PathElement.prototype, \"data\", {\n        /**\n         * Gets the geometry of the path element\n         */\n        get: function () {\n            return this.pathData;\n        },\n        /**\n         * Sets the geometry of the path element\n         */\n        set: function (value) {\n            if (this.pathData !== value) {\n                this.pathData = value;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    PathElement.prototype.getPoints = function () {\n        var _this = this;\n        if (!this.pointTimer) {\n            this.pointTimer = setTimeout(function () {\n                _this.points = null;\n                _this.pointTimer = null;\n            }, 200);\n        }\n        this.points = this.points || findSegmentPoints(this);\n        return translatePoints(this, this.points);\n    };\n    /**\n     * Measures the minimum space that is required to render the element\n     * @param availableSize\n     */\n    PathElement.prototype.measure = function (availableSize) {\n        //Performance issue - Avoiding measuring the connector path\n        if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n            this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n        }\n        else if (this.isDirt && (this.transformPath || (this.width === undefined || this.height === undefined))\n            && (!this.absoluteBounds || this.absoluteBounds.height === 0) || this.canMeasurePath) {\n            //Measure the element only whent the path data is changed/ size is not specified\n            this.absoluteBounds = measurePath(this.data ? this.data : '');\n        }\n        if (this.width === undefined) {\n            this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n        }\n        else if (this.height === undefined) {\n            this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        this.canMeasurePath = false;\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the path element\n     * @param desiredSize\n     */\n    PathElement.prototype.arrange = function (desiredSize) {\n        if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n            this.isDirt = true;\n            this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n            if (!this.staticSize) {\n                this.points = null;\n            }\n        }\n        this.actualSize = this.desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    /**\n     * Translates the path to 0,0 and scales the path based on the actual size\n     * @param pathData\n     * @param bounds\n     * @param actualSize\n     */\n    PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n        var isScale = false;\n        var newPathString = '';\n        var scaleX = -bounds.x;\n        var scaleY = -bounds.y;\n        var arrayCollection = [];\n        if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n            scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n            scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n            isScale = true;\n        }\n        arrayCollection = processPathData(pathData);\n        arrayCollection = splitArrayCollection(arrayCollection);\n        if ((isScale || this.isDirt) && this.transformPath) {\n            newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n        }\n        else {\n            newPathString = getPathString(arrayCollection);\n        }\n        isScale = false;\n        return newPathString;\n    };\n    return PathElement;\n}(DiagramElement));\nexport { PathElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureImage } from './../../utility/dom-util';\n/**\n * ImageElement defines a basic image elements\n */\nvar ImageElement = /** @class */ (function (_super) {\n    __extends(ImageElement, _super);\n    /**\n     * set the id for each element\n     */\n    function ImageElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.imageSource = '';\n        /**\n         * sets scaling factor of the image\n         */\n        _this.imageScale = 'None';\n        /**\n         * sets the alignment of the image\n         */\n        _this.imageAlign = 'None';\n        /**\n         * Sets how to stretch the image\n         */\n        _this.stretch = 'Stretch';\n        return _this;\n    }\n    Object.defineProperty(ImageElement.prototype, \"source\", {\n        /**\n         * Gets the source for the image element\n         */\n        get: function () {\n            return this.imageSource;\n        },\n        /**\n         * Sets the source for the image element\n         */\n        set: function (value) {\n            this.imageSource = value;\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the image\n     * @param availableSize\n     */\n    ImageElement.prototype.measure = function (availableSize) {\n        if (this.isDirt && (this.stretch !== 'Stretch' || this.width === undefined && this.height === undefined)) {\n            this.contentSize = measureImage(this.source, this.contentSize);\n            this.isDirt = false;\n        }\n        if (this.width !== undefined && this.height !== undefined) {\n            this.desiredSize = new Size(this.width, this.height);\n            this.contentSize = this.desiredSize;\n        }\n        else {\n            this.desiredSize = this.contentSize;\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the image\n     * @param desiredSize\n     */\n    ImageElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return ImageElement;\n}(DiagramElement));\nexport { ImageElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureNativeContent, getContent, measureNativeSvg } from './../../utility/dom-util';\n/**\n * NativeElement defines the basic native elements\n */\nvar DiagramNativeElement = /** @class */ (function (_super) {\n    __extends(DiagramNativeElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramNativeElement(nodeId, diagramId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * set the node id\n         */\n        _this.nodeId = '';\n        /**\n         * set the diagram id\n         */\n        _this.diagramId = '';\n        /**\n         * sets scaling factor of the Native Element\n         */\n        _this.scale = 'Stretch';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        return _this;\n    }\n    Object.defineProperty(DiagramNativeElement.prototype, \"content\", {\n        /**   @private  */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * sets the geometry of the native element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, false);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the Native Element\n     * @param availableSize\n     */\n    DiagramNativeElement.prototype.measure = function (availableSize) {\n        if (this.isDirt) {\n            var rect = measureNativeContent(this.template);\n            this.contentSize = new Size();\n            this.contentSize.width = rect.width;\n            this.contentSize.height = rect.height;\n            var x = rect.x;\n            var y = rect.y;\n            this.templatePosition = { x: x, y: y };\n            this.isDirt = false;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            var getAvailableSize = measureNativeSvg(this.template);\n            this.desiredSize = new Size(getAvailableSize.width, getAvailableSize.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the Native Element\n     * @param desiredSize\n     */\n    DiagramNativeElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return DiagramNativeElement;\n}(DiagramElement));\nexport { DiagramNativeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { PortConstraints, PortVisibility } from '../enum/enum';\n/**\n * Defines the behavior of connection ports\n */\nvar Port = /** @class */ (function (_super) {\n    __extends(Port, _super);\n    function Port() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Port.prototype, \"id\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Port.prototype, \"margin\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"width\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ShapeStyle)\n    ], Port.prototype, \"style\", void 0);\n    __decorate([\n        Property('Square')\n    ], Port.prototype, \"shape\", void 0);\n    __decorate([\n        Property(PortVisibility.Connect)\n    ], Port.prototype, \"visibility\", void 0);\n    __decorate([\n        Property('')\n    ], Port.prototype, \"pathData\", void 0);\n    __decorate([\n        Property(PortConstraints.Default)\n    ], Port.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"addInfo\", void 0);\n    return Port;\n}(ChildProperty));\nexport { Port };\n/**\n * Defines the behavior of a port, that sticks to a point\n */\nvar PointPort = /** @class */ (function (_super) {\n    __extends(PointPort, _super);\n    // tslint:disable-next-line:no-any\n    function PointPort(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class PointPort\n     */\n    PointPort.prototype.getClassName = function () {\n        return 'PointPort';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], PointPort.prototype, \"offset\", void 0);\n    return PointPort;\n}(Port));\nexport { PointPort };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { TextStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { AnnotationConstraints } from '../enum/enum';\nimport { randomId } from '../utility/base-util';\n/**\n * Defines the hyperlink for the annotations in the nodes/connectors\n */\nvar Hyperlink = /** @class */ (function (_super) {\n    __extends(Hyperlink, _super);\n    function Hyperlink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('blue')\n    ], Hyperlink.prototype, \"color\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"link\", void 0);\n    __decorate([\n        Property('None')\n    ], Hyperlink.prototype, \"textDecoration\", void 0);\n    return Hyperlink;\n}(ChildProperty));\nexport { Hyperlink };\n/**\n * Defines the textual description of nodes/connectors\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    // tslint:disable-next-line:no-any\n    function Annotation(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        if (!defaultValue.id) {\n            if (parent.parentObj && parent.parentObj.propName && parent.parentObj.propName === 'phases') {\n                _this.id = parent.parentObj.id;\n            }\n            else {\n                _this.id = randomId();\n            }\n        }\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(undefined)\n    ], Annotation.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], Annotation.prototype, \"visibility\", void 0);\n    __decorate([\n        Property(AnnotationConstraints.InheritReadOnly)\n    ], Annotation.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex(undefined, Hyperlink)\n    ], Annotation.prototype, \"hyperlink\", void 0);\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Annotation.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 0, strokeColor: 'transparent', fill: 'transparent' }, TextStyle)\n    ], Annotation.prototype, \"style\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Annotation.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ top: undefined, bottom: undefined, left: undefined, right: undefined }, Margin)\n    ], Annotation.prototype, \"dragLimit\", void 0);\n    __decorate([\n        Property('Shape')\n    ], Annotation.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"addInfo\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Defines the textual description of nodes/connectors with respect to bounds\n */\nvar ShapeAnnotation = /** @class */ (function (_super) {\n    __extends(ShapeAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function ShapeAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class ShapeAnnotation\n     */\n    ShapeAnnotation.prototype.getClassName = function () {\n        return 'ShapeAnnotation';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], ShapeAnnotation.prototype, \"offset\", void 0);\n    return ShapeAnnotation;\n}(Annotation));\nexport { ShapeAnnotation };\n/**\n * Defines the connector annotation\n */\nvar PathAnnotation = /** @class */ (function (_super) {\n    __extends(PathAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function PathAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class PathAnnotation\n     */\n    PathAnnotation.prototype.getClassName = function () {\n        return 'PathAnnotation';\n    };\n    __decorate([\n        Property(0.5)\n    ], PathAnnotation.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], PathAnnotation.prototype, \"displacement\", void 0);\n    __decorate([\n        Property('Center')\n    ], PathAnnotation.prototype, \"alignment\", void 0);\n    __decorate([\n        Property(false)\n    ], PathAnnotation.prototype, \"segmentAngle\", void 0);\n    return PathAnnotation;\n}(Annotation));\nexport { PathAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\n/**\n * Defines the behavior of default IconShapes\n */\nvar IconShape = /** @class */ (function (_super) {\n    __extends(IconShape, _super);\n    function IconShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], IconShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property('white')\n    ], IconShape.prototype, \"fill\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 1 }, Point)\n    ], IconShape.prototype, \"offset\", void 0);\n    __decorate([\n        Property('#1a1a1a')\n    ], IconShape.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(1)\n    ], IconShape.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], IconShape.prototype, \"margin\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"content\", void 0);\n    __decorate([\n        Property(0)\n    ], IconShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ left: 2, right: 2, top: 2, bottom: 2 }, Margin)\n    ], IconShape.prototype, \"padding\", void 0);\n    return IconShape;\n}(ChildProperty));\nexport { IconShape };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { IconShape } from './icon';\nimport { DiagramTooltip } from './tooltip';\nimport { PointPort } from './port';\n/**\n * Defines the common behavior of nodes, connectors and groups\n */\nvar NodeBase = /** @class */ (function (_super) {\n    __extends(NodeBase, _super);\n    function NodeBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], NodeBase.prototype, \"id\", void 0);\n    __decorate([\n        Property(-1)\n    ], NodeBase.prototype, \"zIndex\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], NodeBase.prototype, \"margin\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"visible\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], NodeBase.prototype, \"ports\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"isExpanded\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], NodeBase.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"expandIcon\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"collapseIcon\", void 0);\n    __decorate([\n        Property(false)\n    ], NodeBase.prototype, \"excludeFromLayout\", void 0);\n    __decorate([\n        Property()\n    ], NodeBase.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property('None')\n    ], NodeBase.prototype, \"flip\", void 0);\n    return NodeBase;\n}(ChildProperty));\nexport { NodeBase };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from './diagram-element';\nimport { getContent } from '../../utility/dom-util';\n/**\n * HTMLElement defines the basic html elements\n */\nvar DiagramHtmlElement = /** @class */ (function (_super) {\n    __extends(DiagramHtmlElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramHtmlElement(nodeId, diagramId, annotationId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * Gets the node id for the element\n         */\n        _this.nodeId = '';\n        /**\n         * defines the id of the annotation on rendering template on label.\n         * @private\n         */\n        _this.annotationId = '';\n        /**\n         * Gets the diagram id for the html element\n         */\n        _this.diagramId = '';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        _this.annotationId = annotationId;\n        return _this;\n    }\n    Object.defineProperty(DiagramHtmlElement.prototype, \"content\", {\n        /**\n         * Gets or sets the geometry of the html element\n         */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * Gets or sets the value of the html element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, true);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DiagramHtmlElement;\n}(DiagramElement));\nexport { DiagramHtmlElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property } from '@syncfusion/ej2-base';\nimport { createSvgElement, createHtmlElement, setAttributeSvg } from '../diagram/utility/dom-util';\nimport { Size } from '../diagram/primitives/size';\nimport { getFunction } from '../diagram/utility/base-util';\n/**\n * Represents the Ruler component that measures the Diagram objects, indicate positions, and align Diagram elements.\n * ```html\n * <div id='ruler'>Show Ruler</div>\n * ```\n * ```typescript\n * <script>\n *   var rulerObj = new Ruler({ showRuler: true });\n *   rulerObj.appendTo('#ruler');\n * </script>\n * ```\n */\nvar Ruler = /** @class */ (function (_super) {\n    __extends(Ruler, _super);\n    /**\n     * Constructor for creating the Ruler Component\n     */\n    function Ruler(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.offset = 0;\n        /**   @private  */\n        _this.scale = 1;\n        return _this;\n    }\n    /**\n     * Initializes the values of private members.\n     * @private\n     */\n    Ruler.prototype.preRender = function () {\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders the rulers.\n     * @private\n     */\n    Ruler.prototype.render = function () {\n        this.updateRulerGeometry();\n    };\n    /**\n     * Core method to return the component name.\n     * @private\n     */\n    Ruler.prototype.getModuleName = function () {\n        return 'Ruler';\n    };\n    /**\n     * To destroy the ruler\n     * @return {void}\n     */\n    Ruler.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        this.element.classList.remove('e-ruler');\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Ruler.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Refreshes the ruler when the Ruler properties are updated\n     * @param options\n     */\n    Ruler.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'length':\n                case 'interval':\n                case 'segmentWidth':\n                case 'tickAlignment':\n                case 'markerColor':\n                case 'thickness':\n                    this.updateRuler();\n                    break;\n            }\n        }\n    };\n    Ruler.prototype.updateRulerGeometry = function () {\n        this.element.style.textAlign = 'left';\n        this.renderRulerSpace();\n        this.updateRuler();\n    };\n    Ruler.prototype.renderRulerSpace = function () {\n        var rulerGeometry = this.getRulerGeometry();\n        var div = document.getElementById(this.element.id + '_ruler_space');\n        if (!div) {\n            div = createHtmlElement('div', {\n                'id': this.element.id + '_ruler_space',\n                'style': 'height:' + rulerGeometry.height + 'px;width:' + rulerGeometry.width + 'px;cssFloat:' + 'left;'\n            });\n            this.element.appendChild(div);\n        }\n        return div;\n    };\n    Ruler.prototype.updateRuler = function () {\n        var rulerSize = this.getRulerSize();\n        var rulerGeometry = this.getRulerGeometry();\n        var length = 0;\n        var offset = 0;\n        var availableSize = new Size();\n        var svg = this.getRulerSVG(rulerGeometry);\n        if (svg) {\n            length = this.length;\n            availableSize.height = rulerSize;\n            offset = this.offset;\n            if (length && length !== Infinity) {\n                var unitLength = length + this.segmentWidth;\n                var unitOffset = offset;\n                this.updateSegments(unitOffset, (unitLength + Math.abs(unitOffset)), svg, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegments = function (start, end, svg, rulerSize) {\n        var run = start;\n        var trans = { trans: 0 };\n        while (run < end) {\n            var rulerSegment = this.getNewSegment(run, svg);\n            if (rulerSegment) {\n                svg.appendChild(rulerSegment.segment);\n                run = this.updateSegment(start, end, rulerSegment, run, trans, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegment = function (start, end, rulerSegment, run, trans, rulerSize) {\n        var segWidth = this.updateSegmentWidth(this.scale);\n        if (run === start) {\n            this.startValue = Math.floor(start / segWidth) * segWidth / this.scale;\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n            this.defStartValue = run = this.startValue * this.scale;\n            if (this.orientation === 'Horizontal') {\n                this.hRulerOffset = start - run;\n            }\n            else {\n                this.vRulerOffset = start - run;\n            }\n        }\n        else {\n            this.startValue = (run / this.scale);\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n        }\n        this.updateTickLabel(rulerSegment, rulerSize);\n        var translate = (this.orientation === 'Horizontal') ? ((trans.trans + 0.5) + ',0.5') : ('0.5,' + (trans.trans + 0.5));\n        rulerSegment.segment.setAttribute('transform', 'translate(' + translate + ')');\n        trans.trans += segWidth;\n        run += segWidth;\n        return run;\n    };\n    Ruler.prototype.updateTickLabel = function (rulerSegment, rulerSize) {\n        var bBox = rulerSegment.segment.lastChild.getBBox();\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var x = isHorizontal ? 2 : 0;\n        var y = isHorizontal ? (isRightOrBottom ? (rulerSize / 2 + (11 / 2) - (11 / 2)) :\n            (rulerSize / 2 + (11 / 2))) : bBox.height;\n        var translate = isRightOrBottom ? (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height)) :\n            (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height / 2));\n        var attr = isHorizontal ? { 'x': x, 'y': y } :\n            { 'x': x, 'y': y, 'transform': 'rotate(270)' + 'translate(' + translate + ')' };\n        setAttributeSvg(rulerSegment.segment.lastChild, attr);\n    };\n    Ruler.prototype.getNewSegment = function (run, svg) {\n        var segment = this.createNewTicks(run, svg);\n        var label = this.createTickLabel(svg, segment);\n        return { segment: segment, label: label };\n    };\n    Ruler.prototype.createNewTicks = function (run, svg) {\n        var tick;\n        var tickInterval;\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var g;\n        var attr = { 'class': 'e-ruler-segment' };\n        g = createSvgElement('g', attr);\n        for (var i = 0; i < this.interval; i++) {\n            tickInterval = segmentWidth / this.interval;\n            tick = this.createTick(svg, tickInterval, i + 1, run);\n            g.appendChild(tick);\n        }\n        return g;\n    };\n    Ruler.prototype.getLinePoint = function (svg, tickInterval, length) {\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var rulerSize = this.getRulerSize();\n        tickInterval = tickInterval * (length - 1);\n        length = ((tickInterval % segmentWidth) === 0) ? rulerSize : rulerSize * 0.3;\n        return length;\n    };\n    Ruler.prototype.createTick = function (svg, tickInterval, length, run) {\n        var ruler;\n        var line;\n        var linePoint = this.getLinePoint(svg, tickInterval, length);\n        var rulerSize = this.getRulerSize();\n        var args;\n        var attr;\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var arrangeTick = getFunction(this.arrangeTick);\n        args = { ruler: ruler, tickLength: linePoint, tickInterval: ((this.segmentWidth / this.interval) * (length - 1)) };\n        if (arrangeTick) {\n            arrangeTick(args);\n        }\n        linePoint = args.tickLength;\n        var point = tickInterval * (length - 1);\n        var x1 = isHorizontal ? point : (isRightOrBottom ? rulerSize : 0);\n        var x2 = isHorizontal ? point : (isRightOrBottom ? (rulerSize - linePoint) : (rulerSize - (rulerSize - linePoint)));\n        var y1 = isHorizontal ? (isRightOrBottom ? rulerSize : (rulerSize - (rulerSize - linePoint))) : point;\n        var y2 = isHorizontal ? (isRightOrBottom ? (rulerSize - linePoint) : 0) : point;\n        attr = { 'x1': x1, 'y1': y1, 'x2': x2, 'y2': y2, 'stroke-width': '1', 'stroke': 'black' };\n        line = createSvgElement('line', attr);\n        line.setAttribute('class', 'e-ruler-tick');\n        return line;\n    };\n    Ruler.prototype.createTickLabel = function (svg, segment) {\n        var text;\n        if (segment) {\n            var attr = { 'class': 'e-ruler-tick-label' };\n            text = createSvgElement('text', attr);\n            segment.appendChild(text);\n        }\n        return text;\n    };\n    /**\n     * @private\n     * @param scale\n     */\n    Ruler.prototype.updateSegmentWidth = function (scale) {\n        if (this.segmentWidth !== 100) {\n            return this.segmentWidth;\n        }\n        var five = 25;\n        var multiples = 1;\n        var div;\n        var scaleRound;\n        var fifty = 100;\n        scaleRound = Math.pow(2, Math.round(Math.log(scale) / Math.log(2)));\n        div = fifty;\n        div = (fifty / scaleRound);\n        while (div > 100) {\n            multiples /= 10;\n            div /= 10;\n        }\n        while (div < 25) {\n            multiples *= 10;\n            div *= 10;\n        }\n        if (div >= five && div % five !== 0) {\n            div = Math.round(div / five) * five;\n        }\n        return div * scale / multiples;\n    };\n    Ruler.prototype.createMarkerLine = function (rulerSvg, rulerObj, attr) {\n        var line;\n        if (rulerObj) {\n            line = rulerSvg.getElementById(rulerObj.id + '_marker');\n            if (line) {\n                line.parentNode.removeChild(line);\n            }\n            line = createSvgElement('line', attr);\n        }\n        return line;\n    };\n    /**\n     * @private\n     * @param rulerObj\n     * @param currentPoint\n     */\n    Ruler.prototype.drawRulerMarker = function (rulerObj, currentPoint, offset) {\n        var rulerSvg;\n        var rulerSize;\n        var scale;\n        var diff;\n        var i;\n        var attr;\n        var line;\n        var isHorizontal = this.orientation === 'Horizontal' ? true : false;\n        var rulerSvgElements = rulerObj.getElementsByTagName('svg');\n        for (i = 0; i < rulerSvgElements.length; i++) {\n            if (rulerSvgElements[i]) {\n                rulerSvg = rulerSvgElements[i];\n            }\n            break;\n        }\n        if (rulerSvg) {\n            rulerSize = this.getRulerSize();\n            attr = {\n                'id': rulerObj.id + '_marker', 'x1': 0, 'y1': 0, 'x2': (isHorizontal ? 0 : rulerSize),\n                'y2': (isHorizontal ? rulerSize : 0), 'stroke': this.markerColor, 'stroke-width': 1.5,\n                'class': 'e-d-ruler-marker'\n            };\n            line = this.createMarkerLine(rulerSvg, rulerObj, attr);\n            scale = this.scale;\n            diff = this.offset - this.defStartValue;\n            var point = isHorizontal ? currentPoint.x : currentPoint.y;\n            var move = (point * scale) + offset + diff;\n            line.setAttribute('transform', 'translate(' + (isHorizontal ? ((move + 0.5) + ' 0.5') : ('0.5 ' + (move + 0.5))) + ')');\n            rulerSvg.appendChild(line);\n        }\n    };\n    Ruler.prototype.getRulerGeometry = function () {\n        return new Size(this.element ? this.element.getBoundingClientRect().width : 0, this.element ? this.element.getBoundingClientRect().height : 0);\n    };\n    Ruler.prototype.getRulerSize = function () {\n        return this.thickness;\n    };\n    Ruler.prototype.getRulerSVG = function (rulerGeometry) {\n        var rulerSpace;\n        var rulerSize = this.getRulerSize();\n        var svg;\n        if (this.element) {\n            rulerSpace = document.getElementById(this.element.id + '_ruler_space');\n            if (rulerSpace) {\n                var attr = {\n                    'id': this.element.id + '_Ruler_svg',\n                    width: this.orientation === 'Horizontal' ? (rulerGeometry.width + 200) : rulerSize + 'px',\n                    height: this.orientation === 'Horizontal' ? rulerSize : (rulerGeometry.height + 200) + 'px',\n                    style: 'position:inherit;'\n                };\n                svg = createSvgElement('svg', attr);\n                if (rulerSpace.childNodes.length > 0) {\n                    for (var i = rulerSpace.childNodes.length - 1; i >= 0; i--) {\n                        rulerSpace.childNodes[i].parentNode.removeChild(rulerSpace.childNodes[i]);\n                    }\n                }\n                rulerSpace.appendChild(svg);\n            }\n        }\n        return svg;\n    };\n    /**\n     * Method to bind events for the ruler\n     */\n    Ruler.prototype.wireEvents = function () {\n        //wire Events\n    };\n    /**\n     * Method to unbind events for the ruler\n     */\n    Ruler.prototype.unWireEvents = function () {\n        //unWire Events\n    };\n    __decorate([\n        Property(5)\n    ], Ruler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], Ruler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Ruler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], Ruler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], Ruler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], Ruler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], Ruler.prototype, \"arrangeTick\", void 0);\n    __decorate([\n        Property(400)\n    ], Ruler.prototype, \"length\", void 0);\n    return Ruler;\n}(Component));\nexport { Ruler };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, Complex } from '@syncfusion/ej2-base';\nimport { Container } from '../core/containers/container';\nimport { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { SelectorConstraints } from '../enum/enum';\nimport { Margin } from '../core/appearance';\n/**\n * A collection of frequently used commands that will be added around the selector\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let nodes: NodeModel[] = [{\n *           id: 'node1', width: 100, height: 100, offsetX: 100, offsetY: 100,\n *           annotations: [{ content: 'Default Shape' }]\n *       },\n *       {\n *           id: 'node2', width: 100, height: 100, offsetX: 300, offsetY: 100,\n *           shape: {\n *               type: 'Basic', shape: 'Ellipse'\n *           },\n *           annotations: [{ content: 'Path Element' }]\n *       }\n *       ];\n *       let connectors: ConnectorModel[] = [{\n *           id: 'connector1',\n *           type: 'Straight',\n *           sourcePoint: { x: 100, y: 300 },\n *           targetPoint: { x: 200, y: 400 },\n *       }];\n * let handle: UserHandleModel[] = [\n * { name: 'handle', margin: { top: 0, bottom: 0, left: 0, right: 0 }, offset: 0,\n * pathData: 'M 376.892,225.284L 371.279,211.95L 376.892,198.617L 350.225,211.95L 376.892,225.284 Z',\n * side: 'Top', horizontalAlignment: 'Center', verticalAlignment: 'Center',\n * pathColor: 'yellow' }];\n * let diagram: Diagram = new Diagram({\n * ...\n *     connectors: connectors, nodes: nodes,\n *     selectedItems: { constraints: SelectorConstraints.All, userHandles: handle },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar UserHandle = /** @class */ (function (_super) {\n    __extends(UserHandle, _super);\n    function UserHandle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UserHandle\n     */\n    UserHandle.prototype.getClassName = function () {\n        return 'UserHandle';\n    };\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"source\", void 0);\n    __decorate([\n        Property('#000000')\n    ], UserHandle.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('top')\n    ], UserHandle.prototype, \"side\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0.5)\n    ], UserHandle.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property(25)\n    ], UserHandle.prototype, \"size\", void 0);\n    __decorate([\n        Property('white')\n    ], UserHandle.prototype, \"pathColor\", void 0);\n    __decorate([\n        Property(10)\n    ], UserHandle.prototype, \"displacement\", void 0);\n    __decorate([\n        Property(true)\n    ], UserHandle.prototype, \"visible\", void 0);\n    __decorate([\n        Property(0)\n    ], UserHandle.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], UserHandle.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"verticalAlignment\", void 0);\n    return UserHandle;\n}(ChildProperty));\nexport { UserHandle };\n/**\n * Defines the size and position of selected items and defines the appearance of selector\n */\nvar Selector = /** @class */ (function (_super) {\n    __extends(Selector, _super);\n    function Selector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Initializes the UI of the container\n     */\n    Selector.prototype.init = function (diagram) {\n        var container = new Container();\n        container.measureChildren = false;\n        var consize = new Size();\n        container.children = [];\n        if (this.annotation) {\n            var object = (this.nodes.length > 0) ? diagram.nameTable[this.nodes[0].id].wrapper :\n                diagram.nameTable[this.connectors[0].id].wrapper;\n            var wrapper = diagram.getWrapper(object, this.annotation.id);\n            container.children.push(wrapper);\n        }\n        else {\n            if (this.nodes || this.connectors) {\n                for (var i = 0; i < this.nodes.length; i++) {\n                    var node = diagram.nameTable[this.nodes[i].id];\n                    var wrapper = node.wrapper;\n                    // this.width = wrapper.actualSize.width; \n                    // this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle;\n                    // this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n                for (var j = 0; j < this.connectors.length; j++) {\n                    var connector = diagram.nameTable[this.connectors[j].id];\n                    var wrapper = connector.wrapper;\n                    // this.width = wrapper.actualSize.width; this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle; this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n            }\n        }\n        this.wrapper = container;\n        return container;\n    };\n    __decorate([\n        Property(null)\n    ], Selector.prototype, \"wrapper\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Selector.prototype, \"nodes\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Selector.prototype, \"connectors\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Selector.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('CompleteIntersect')\n    ], Selector.prototype, \"rubberBandSelectionMode\", void 0);\n    __decorate([\n        Collection([], UserHandle)\n    ], Selector.prototype, \"userHandles\", void 0);\n    __decorate([\n        Property(SelectorConstraints.All)\n    ], Selector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"setTooltipTemplate\", void 0);\n    return Selector;\n}(ChildProperty));\nexport { Selector };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\n/**\n * Defines the combination of keys and modifier keys\n */\nvar KeyGesture = /** @class */ (function (_super) {\n    __extends(KeyGesture, _super);\n    function KeyGesture() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"keyModifiers\", void 0);\n    return KeyGesture;\n}(ChildProperty));\nexport { KeyGesture };\n/**\n * Defines a command and a key gesture to define when the command should be executed\n */\nvar Command = /** @class */ (function (_super) {\n    __extends(Command, _super);\n    function Command() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Command\n     */\n    Command.prototype.getClassName = function () {\n        return 'Command';\n    };\n    __decorate([\n        Property('')\n    ], Command.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"canExecute\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"execute\", void 0);\n    __decorate([\n        Complex({}, KeyGesture)\n    ], Command.prototype, \"gesture\", void 0);\n    __decorate([\n        Property('')\n    ], Command.prototype, \"parameter\", void 0);\n    return Command;\n}(ChildProperty));\nexport { Command };\n/**\n * Defines the collection of commands and the corresponding key gestures\n */\nvar CommandManager = /** @class */ (function (_super) {\n    __extends(CommandManager, _super);\n    function CommandManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Command)\n    ], CommandManager.prototype, \"commands\", void 0);\n    return CommandManager;\n}(ChildProperty));\nexport { CommandManager };\n/**\n * Defines the behavior of the context menu items\n */\nvar ContextMenuSettings = /** @class */ (function (_super) {\n    __extends(ContextMenuSettings, _super);\n    function ContextMenuSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"show\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"showCustomMenuOnly\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"items\", void 0);\n    return ContextMenuSettings;\n}(ChildProperty));\nexport { ContextMenuSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { Canvas } from './canvas';\nimport { Container } from './container';\nimport { Size } from '../../primitives/size';\nimport { randomId } from '../../utility/base-util';\nimport { TextElement } from '../elements/text-element';\n/**\n * Grid panel is used to arrange the children in a table like structure\n */\nvar GridPanel = /** @class */ (function (_super) {\n    __extends(GridPanel, _super);\n    function GridPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.childTable = [];\n        _this.cellStyle = {};\n        _this.desiredRowHeight = [];\n        _this.desiredCellWidth = [];\n        return _this;\n    }\n    /** @private */\n    GridPanel.prototype.rowDefinitions = function () {\n        return this.rowDefns;\n    };\n    /** @private */\n    GridPanel.prototype.columnDefinitions = function () {\n        return this.colDefns;\n    };\n    GridPanel.prototype.addObject = function (obj, rowId, columnId, rowSpan, columnSpan) {\n        //check if exists\n        if (this.rows.length >= rowId) {\n            var row = this.rows[rowId];\n            if (row.cells.length > columnId) {\n                columnSpan = columnSpan || 1;\n                rowSpan = rowSpan || 1;\n                var cell = row.cells[columnId];\n                cell.columnSpan = Math.max(columnSpan, cell.columnSpan);\n                cell.rowSpan = Math.max(rowSpan, cell.rowSpan);\n                var object = new GridCellItem();\n                object = obj;\n                object.rowId = rowId;\n                object.columnId = columnId;\n                object.columnSpan = columnSpan;\n                this.childTable[object.id] = object;\n                this.addObjectToCell(object, cell);\n            }\n        }\n    };\n    // public setCellStyle(rowId: number, columnId: number, cellStyle: ShapeStyleModel): void {\n    //     if (this.rows.length > rowId) {\n    //         let row: GridRow = this.rows[rowId];\n    //         if (row.cells.length > columnId) {\n    //             let cell: GridCell = row.cells[columnId];\n    //             cell.style = cellStyle;\n    //         }\n    //     }\n    // }\n    // public getRowId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowId;\n    // }\n    // public getColumnId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnId;\n    // }\n    // public getRowSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowSpan;\n    // }\n    // public getColumnSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnSpan;\n    // }\n    GridPanel.prototype.addObjectToCell = function (obj, cell) {\n        if (!cell.children) {\n            cell.children = [];\n        }\n        // obj.minWidth = cell.desiredCellWidth; obj.minHeight = cell.desiredCellHeight;\n        obj.style.strokeColor = 'black';\n        obj.style.strokeWidth = 1;\n        obj.style.fill = 'white';\n        cell.children.push(obj);\n    };\n    /** @private */\n    GridPanel.prototype.updateProperties = function (offsetX, offsetY, width, height) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.width = width;\n        this.height = height;\n    };\n    /** @private */\n    GridPanel.prototype.setDefinitions = function (rows, columns) {\n        this.rowDefns = rows;\n        this.colDefns = columns;\n        this.children = [];\n        this.rows = this.rows || [];\n        for (var i = 0; i < rows.length; i++) {\n            var rowDefn = rows[i];\n            var row = new GridRow();\n            row.cells = [];\n            var defaultCell = new ColumnDefinition();\n            //replace this 100 with a proper property            \n            defaultCell.width = this.width;\n            var columns_1 = this.colDefns;\n            if (columns_1 === undefined || columns_1.length < 1) {\n                columns_1 = [defaultCell];\n            }\n            this.addCellInRow(columns_1, rowDefn, row);\n            this.rows.push(row);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addCellInRow = function (columns, rowDefn, row) {\n        for (var j = 0; j < columns.length; j++) {\n            var colDefn = columns[j];\n            var cell = new GridCell();\n            cell.children = [];\n            this.cellStyle.fill = 'none';\n            this.cellStyle.strokeColor = 'none';\n            cell.id = randomId();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            row.cells.push(cell);\n            this.children.push(cell);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.calculateSize = function () {\n        var rows = this.rows || [];\n        var calculateHeight = 0;\n        var calculateWidth = 0;\n        for (var i = 0; i < rows.length; i++) {\n            var row = this.rows[i];\n            calculateWidth = 0;\n            for (var j = 0; j < row.cells.length; j++) {\n                calculateWidth += row.cells[j].desiredCellWidth;\n                if (j === row.cells.length - 1) {\n                    if (this.width && this.width !== calculateWidth) {\n                        row.cells[j].desiredCellWidth += (this.width - calculateWidth);\n                        row.cells[j].minWidth = row.cells[j].desiredCellWidth;\n                        if (row.cells[j].children && row.cells[j].children.length) {\n                            row.cells[j].children[0].width = row.cells[j].desiredCellWidth;\n                        }\n                        this.colDefns[j].width = row.cells[j].desiredCellWidth;\n                    }\n                    calculateHeight += row.cells[j].desiredCellHeight;\n                    if (i === rows.length - 1) {\n                        if (this.height && this.height !== calculateHeight) {\n                            var height = (this.height - calculateHeight);\n                            if (height > 0) {\n                                for (var k = 0; k < row.cells.length; k++) {\n                                    row.cells[k].desiredCellHeight += height;\n                                    row.cells[k].minHeight = row.cells[k].desiredCellHeight = row.cells[k].desiredCellHeight;\n                                    if (row.cells[k].children && row.cells[k].children.length) {\n                                        row.cells[k].children[0].height = row.cells[k].desiredCellHeight;\n                                    }\n                                }\n                                this.rowDefns[i].height += height;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateRowHeight = function (rowId, height, isConsiderChild, padding) {\n        var row = this.rows[rowId];\n        this.rowDefns[rowId].height = height;\n        if (this.height !== undefined) {\n            this.height += height - row.cells[0].desiredCellHeight;\n        }\n        for (var i = 0; i < row.cells.length; i++) {\n            row.cells[i].desiredCellHeight = row.cells[i].minHeight = height;\n            if (row.cells[i].children && row.cells[i].children.length) {\n                row.cells[i].children[0].height = height;\n                this.setTextRefresh(row.cells[i].children[0]);\n            }\n        }\n        this.desiredRowHeight[rowId] = height;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minHeight = (padding !== undefined) ? this.calculateCellHeightBasedOnChildren(rowId, padding) :\n                this.calculateCellHeight(rowId);\n            if (minHeight > height) {\n                this.updateRowHeight(rowId, minHeight, false);\n            }\n        }\n    };\n    GridPanel.prototype.setTextRefresh = function (canvas) {\n        if (canvas.children && canvas.children.length) {\n            var children = canvas.children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i] instanceof TextElement) {\n                    children[i].refreshTextElement();\n                }\n                if (children[i] instanceof Canvas) {\n                    this.setTextRefresh(children[i]);\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnWidth = function (colId, width, isConsiderChild, padding) {\n        this.colDefns[colId].width = width;\n        if (this.width !== undefined) {\n            this.width += width - this.rows[this.rows.length - 1].cells[colId].desiredCellWidth;\n        }\n        for (var i = 0; i < this.rows.length; i++) {\n            this.setTextRefresh(this.rows[i].cells[0]);\n            this.rows[i].cells[colId].desiredCellWidth = this.rows[i].cells[colId].minWidth = width;\n            if (this.rows[i].cells[colId].children && this.rows[i].cells[colId].children.length) {\n                this.rows[i].cells[colId].children[0].width = width;\n            }\n        }\n        this.desiredCellWidth[colId] = width;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minWidth = (padding !== undefined) ? this.calculateCellWidthBasedOnChildren(colId, padding) :\n                this.calculateCellWidth(colId);\n            if (minWidth > width) {\n                this.updateColumnWidth(colId, minWidth, false);\n            }\n        }\n    };\n    GridPanel.prototype.calculateCellWidth = function (colIndex) {\n        var maxWidth;\n        var width;\n        var cell;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            if (cell.columnSpan === 1) {\n                width = (cell.outerBounds.width > cell.bounds.width &&\n                    (cell.children.length === 0 || cell.children[0].maxWidth === undefined)) ? cell.outerBounds.width : cell.bounds.width;\n                if (maxWidth) {\n                    maxWidth = (maxWidth < width) ? width : maxWidth;\n                }\n                else {\n                    maxWidth = width;\n                }\n            }\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeight = function (rowIndex) {\n        var maxHeight;\n        var height;\n        var cell;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            height = (cell.outerBounds.height > cell.bounds.height) ? cell.outerBounds.height : cell.bounds.height;\n            if (maxHeight) {\n                maxHeight = (maxHeight < height) ? height : maxHeight;\n            }\n            else {\n                maxHeight = height;\n            }\n        }\n        return maxHeight;\n    };\n    GridPanel.prototype.calculateCellSizeBasedOnChildren = function (cell, option, padding, maxSize) {\n        var maxBounds;\n        var canvas;\n        canvas = (cell && cell.children.length > 0) ? cell.children[0] : undefined;\n        if (canvas && cell.columnSpan === 1) {\n            maxBounds = (option === 'Width') ? canvas.bounds.right : canvas.bounds.bottom;\n            if (!maxSize) {\n                maxSize = (option === 'Width') ? canvas.bounds.width : canvas.bounds.height;\n            }\n            for (var j = 0; j < canvas.children.length; j++) {\n                var children = canvas.children[j];\n                if (children instanceof Canvas) {\n                    if (children.id.indexOf('header') === -1) {\n                        var bounds = ((option === 'Width') ? children.bounds.right : children.bounds.bottom) + padding;\n                        if (bounds > maxBounds) {\n                            var size = (bounds - maxBounds) + ((option === 'Width') ? canvas.bounds.width : canvas.bounds.height);\n                            if (maxSize) {\n                                maxSize = (maxSize < size) ? size : maxSize;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return maxSize;\n    };\n    GridPanel.prototype.calculateCellWidthBasedOnChildren = function (colIndex, padding) {\n        var maxWidth;\n        var width;\n        var cell;\n        var maxBounds;\n        var canvas;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            maxWidth = this.calculateCellSizeBasedOnChildren(cell, 'Width', padding, maxWidth);\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeightBasedOnChildren = function (rowIndex, padding) {\n        var maxHeight;\n        var height;\n        var cell;\n        var maxBounds;\n        var canvas;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            maxHeight = this.calculateCellSizeBasedOnChildren(cell, 'Height', padding, maxHeight);\n        }\n        return maxHeight;\n    };\n    /** @private */\n    GridPanel.prototype.addRow = function (rowId, rowDefn, isMeasure) {\n        if (this.rowDefns.length > 0) {\n            this.rowDefns.splice(rowId, 0, rowDefn);\n        }\n        else {\n            this.rowDefns.push(rowDefn);\n        }\n        var row = new GridRow();\n        row.cells = [];\n        var defaultCell = new ColumnDefinition();\n        defaultCell.width = this.width;\n        var columns = this.colDefns;\n        this.addCellInRow(columns, rowDefn, row);\n        if (rowId > this.rows.length - 1) {\n            this.rows.push(row);\n        }\n        else {\n            this.rows.splice(rowId, 0, row);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addColumn = function (columnId, column, isMeasure) {\n        var row;\n        var rowDefn;\n        var colDefn;\n        var cell;\n        var rows = this.rows;\n        if (this.colDefns.length > 0) {\n            this.colDefns.splice(columnId, 0, column);\n        }\n        else {\n            this.colDefns.push(column);\n        }\n        if (this.width !== undefined) {\n            this.width += column.width;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            row = rows[i];\n            rowDefn = this.rowDefns[i];\n            colDefn = column;\n            cell = new GridCell();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            cell.children = [];\n            if (columnId > row.cells.length - 1) {\n                row.cells.push(cell);\n            }\n            else {\n                row.cells.splice(columnId, 0, cell);\n            }\n            this.children.push(cell);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.removeRow = function (rowId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        var removeRow = rows[rowId];\n        this.height -= this.rowDefns[rowId].height;\n        for (var i = 0; i < removeRow.cells.length; i++) {\n            cell = removeRow.cells[i];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n        }\n        this.rows.splice(rowId, 1);\n        this.rowDefns.splice(rowId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.removeColumn = function (columnId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        this.width -= this.colDefns[columnId].width;\n        for (var i = 0; i < rows.length; i++) {\n            cell = rows[i].cells[columnId];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n            rows[i].cells.splice(columnId, 1);\n        }\n        this.colDefns.splice(columnId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateRowIndex = function (currentIndex, newIndex) {\n        var rows = this.rows;\n        var temp = this.rows[currentIndex];\n        this.rows.splice(currentIndex, 1);\n        this.rows.splice(newIndex, 0, temp);\n        var tempRow = this.rowDefns[currentIndex];\n        this.rowDefns.splice(currentIndex, 1);\n        this.rowDefns.splice(newIndex, 0, tempRow);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnIndex = function (startRowIndex, currentIndex, newIndex) {\n        var temp;\n        var cell;\n        var tempSize;\n        for (var i = startRowIndex; i < this.rows.length; i++) {\n            temp = this.rows[i];\n            cell = this.rows[i].cells[currentIndex];\n            temp.cells.splice(currentIndex, 1);\n            temp.cells.splice(newIndex, 0, cell);\n        }\n        var tempCol = this.colDefns[currentIndex];\n        this.colDefns.splice(currentIndex, 1);\n        this.colDefns.splice(newIndex, 0, tempCol);\n        tempSize = this.desiredCellWidth[currentIndex];\n        this.desiredCellWidth.splice(currentIndex, 1);\n        this.desiredCellWidth.splice(newIndex, 0, tempSize);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var i = 0;\n            var j = 0;\n            desired = new Size(0, 0);\n            this.calculateSize();\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var size = cell.measure(new Size(cell.desiredCellWidth, cell.desiredCellHeight));\n                    if (cell.rowSpan === 1) {\n                        if (j === 0 || this.desiredRowHeight[i] === undefined) {\n                            this.desiredRowHeight[i] = size.height;\n                        }\n                        else {\n                            this.desiredRowHeight[i] = Math.max(size.height, this.desiredRowHeight[i]);\n                        }\n                    }\n                    if (cell.columnSpan === 1) {\n                        if (i === 0 || this.desiredCellWidth[j] === undefined) {\n                            this.desiredCellWidth[j] = size.width;\n                        }\n                        else {\n                            this.desiredCellWidth[j] = Math.max(size.width, this.desiredCellWidth[j]);\n                        }\n                        if (i === this.rows.length - 1) {\n                            desired.width += this.desiredCellWidth[j];\n                        }\n                    }\n                    j++;\n                }\n                desired.height += this.desiredRowHeight[i];\n                i++;\n            }\n            //to-do update definitions\n            i = j = 0;\n            var rowIndex = 0;\n            for (var _d = 0, _e = this.rows; _d < _e.length; _d++) {\n                var row = _e[_d];\n                j = 0;\n                var cellIndex = 0;\n                for (var _f = 0, _g = row.cells; _f < _g.length; _f++) {\n                    var cell = _g[_f];\n                    if (cell.columnSpan !== 1) {\n                        cell.desiredSize.width = 0;\n                        for (var start = 0; start < cell.columnSpan; start++) {\n                            if ((start + j) < row.cells.length) {\n                                cell.desiredSize.width += this.desiredCellWidth[start + j];\n                                cell.minWidth = cell.desiredSize.width;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                        j++;\n                    }\n                    else {\n                        cell.desiredSize.width = this.desiredCellWidth[cellIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    if (cell.rowSpan !== 1) {\n                        cell.desiredSize.height = 0;\n                        for (var start = 0; start < cell.rowSpan; start++) {\n                            if ((start + rowIndex) < this.rows.length) {\n                                cell.desiredSize.height += this.desiredRowHeight[start + rowIndex];\n                                cell.minHeight = cell.desiredSize.height;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                    }\n                    else {\n                        cell.desiredSize.height = this.desiredRowHeight[rowIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    i++;\n                    cellIndex++;\n                }\n                rowIndex++;\n            }\n        }\n        if (desired === undefined) {\n            desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        }\n        _super.prototype.stretchChildren.call(this, desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /** @private */\n    GridPanel.prototype.arrange = function (desiredSize, isChange) {\n        var j = 0;\n        var i = 0;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var x = this.offsetX - desiredSize.width * this.pivot.x;\n            var y = this.offsetY - desiredSize.height * this.pivot.y;\n            var cellX = x;\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                cellX = x;\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var cellWidth = Math.max(this.desiredCellWidth[j], cell.desiredSize.width);\n                    var cellHeight = Math.max(this.desiredRowHeight[i], cell.desiredSize.height);\n                    cell.offsetX = cellX + cellWidth * cell.pivot.x;\n                    cell.offsetY = y + cellHeight * cell.pivot.y;\n                    cellX += this.desiredCellWidth[j];\n                    cell.arrange(new Size(cellWidth, cellHeight));\n                    j++;\n                }\n                y += this.desiredRowHeight[i];\n                i++;\n            }\n            if (isChange) {\n                // Need to remove the unwanted the child elements in the grid\n                // Used for row span and column span.\n                var cell = void 0;\n                var row = void 0;\n                var k = void 0;\n                var z = void 0;\n                var removeCell = void 0;\n                for (i = 0; i < this.rows.length; i++) {\n                    row = this.rows[i];\n                    for (j = 0; j < row.cells.length; j++) {\n                        cell = row.cells[j];\n                        if (cell.columnSpan > 1) {\n                            // remove a child element when a column span is greater than 1\n                            this.children.splice((this.children.indexOf(cell)) + 1, cell.columnSpan - 1);\n                        }\n                        if (cell.rowSpan > 1) {\n                            for (k = i, z = 0; ((k + cell.rowSpan - 1) < this.rows.length && z < cell.rowSpan - 1); k++, z++) {\n                                removeCell = this.rows[k + 1].cells[j];\n                                // remove a child element when a row span is greater than 1\n                                this.children.splice(this.children.indexOf(removeCell), 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return desiredSize;\n    };\n    return GridPanel;\n}(Container));\nexport { GridPanel };\n/**\n * Defines the behavior of the RowDefinition of node\n */\nvar RowDefinition = /** @class */ (function () {\n    function RowDefinition() {\n        /** returns the height of node */\n        this.height = undefined;\n    }\n    return RowDefinition;\n}());\nexport { RowDefinition };\n/**\n * Defines the behavior of the ColumnDefinition of node\n */\nvar ColumnDefinition = /** @class */ (function () {\n    function ColumnDefinition() {\n        /** returns the width of node */\n        this.width = undefined;\n    }\n    return ColumnDefinition;\n}());\nexport { ColumnDefinition };\n/** @private */\nvar GridRow = /** @class */ (function () {\n    function GridRow() {\n        this.cells = null;\n    }\n    return GridRow;\n}());\nexport { GridRow };\n/** @private */\nvar GridCell = /** @class */ (function (_super) {\n    __extends(GridCell, _super);\n    function GridCell() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.columnSpan = 1;\n        _this.rowSpan = 1;\n        return _this;\n    }\n    return GridCell;\n}(Canvas));\nexport { GridCell };\nvar GridCellItem = /** @class */ (function (_super) {\n    __extends(GridCellItem, _super);\n    function GridCellItem() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.rowId = 0;\n        _this.columnId = 0;\n        _this.rowSpan = 1;\n        _this.columnSpan = 1;\n        return _this;\n    }\n    return GridCellItem;\n}(DiagramElement));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * StackPanel module is used to arrange its children in a line\n */\nvar StackPanel = /** @class */ (function (_super) {\n    __extends(StackPanel, _super);\n    function StackPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the orientation of the stack panel\n         */\n        _this.orientation = 'Vertical';\n        /**\n         * Not applicable for canvas\n         * to avoid the child size updation with respect to parent ser true\n         * @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measure = function (availableSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.updateHorizontalStack : this.updateVerticalStack;\n        this.desiredSize = this.measureStackPanel(availableSize, updateSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the child elements of the stack panel\n     * @param desiredSize\n     */\n    StackPanel.prototype.arrange = function (desiredSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.arrangeHorizontalStack : this.arrangeVerticalStack;\n        this.actualSize = this.arrangeStackPanel(desiredSize, updateSize);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measureStackPanel = function (availableSize, updateSize) {\n        var desired = undefined;\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.parentTransform = this.rotateAngle + this.parentTransform;\n                //Measure children\n                if (this.measureChildren) {\n                    child.measure(child.desiredSize);\n                }\n                else {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                //Consider Child's margin\n                this.applyChildMargin(child, childSize);\n                //Consider children's rotation\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                //Measure stack panel\n                if (desired === undefined) {\n                    desired = childSize;\n                }\n                else {\n                    if (!child.preventContainer) {\n                        updateSize(childSize, desired);\n                    }\n                }\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        this.stretchChildren(desired);\n        //Considering padding values\n        this.applyPadding(desired);\n        return desired;\n    };\n    StackPanel.prototype.arrangeStackPanel = function (desiredSize, updatePosition) {\n        if (this.children !== undefined && this.children.length > 0) {\n            var x = void 0;\n            var y = void 0;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                var childSize = child.desiredSize.clone();\n                var rotatedSize = childSize;\n                if (this.orientation === 'Vertical') {\n                    y += child.margin.top;\n                }\n                else {\n                    x += child.margin.left;\n                }\n                if (child.rotateAngle !== 0) {\n                    rotatedSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var center = updatePosition(x, y, child, this, desiredSize, rotatedSize);\n                _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                child.arrange(childSize, true);\n                if (this.orientation === 'Vertical') {\n                    y += rotatedSize.height + child.margin.bottom;\n                }\n                else {\n                    x += rotatedSize.width + child.margin.right;\n                }\n            }\n        }\n        return desiredSize;\n    };\n    StackPanel.prototype.updateHorizontalStack = function (child, parent) {\n        parent.height = Math.max(child.height, parent.height);\n        parent.width += child.width;\n    };\n    StackPanel.prototype.updateVerticalStack = function (child, parent) {\n        parent.width = Math.max(child.width, parent.width);\n        parent.height += child.height;\n    };\n    StackPanel.prototype.arrangeHorizontalStack = function (x, y, child, parent, parenBounds, childBounds) {\n        var centerY = 0;\n        if (child.verticalAlignment === 'Top') {\n            centerY = y + child.margin.top + childBounds.height / 2;\n        }\n        else if (child.verticalAlignment === 'Bottom') {\n            var parentBottom = parent.offsetY + parenBounds.height * (1 - parent.pivot.y);\n            centerY = parentBottom - parent.padding.bottom - child.margin.bottom - childBounds.height / 2;\n        }\n        else {\n            centerY = parent.offsetY - parenBounds.height * parent.pivot.y + parenBounds.height / 2;\n            if (child.margin.top) {\n                centerY = y + child.margin.top + childBounds.height / 2;\n            }\n        }\n        return { x: x + childBounds.width / 2, y: centerY };\n    };\n    StackPanel.prototype.arrangeVerticalStack = function (x, y, child, parent, parentSize, childSize) {\n        var centerX = 0;\n        if (child.horizontalAlignment === 'Left') {\n            centerX = x + child.margin.left + childSize.width / 2;\n        }\n        else if (child.horizontalAlignment === 'Right') {\n            var parentRight = parent.offsetX + parentSize.width * (1 - parent.pivot.x);\n            centerX = parentRight - parent.padding.right - child.margin.right - childSize.width / 2;\n        }\n        else {\n            centerX = parent.offsetX - parentSize.width * parent.pivot.x + parentSize.width / 2;\n            if (child.margin.left) {\n                centerX = x + child.margin.left + childSize.width / 2;\n            }\n        }\n        return { x: centerX, y: y + childSize.height / 2 };\n    };\n    StackPanel.prototype.stretchChildren = function (size) {\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (this.orientation === 'Vertical') {\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.desiredSize.width = size.width - (child.margin.left + child.margin.right);\n                    }\n                }\n                else {\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.desiredSize.height = size.height - (child.margin.top + child.margin.bottom);\n                    }\n                }\n            }\n        }\n    };\n    StackPanel.prototype.applyChildMargin = function (child, size) {\n        size.height += child.margin.top + child.margin.bottom;\n        size.width += child.margin.left + child.margin.right;\n    };\n    return StackPanel;\n}(Container));\nexport { StackPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin, TextStyle, Shadow } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { ElementAction } from '../enum/enum';\nimport { Container } from '../core/containers/container';\nimport { Canvas } from '../core/containers/canvas';\nimport { getBasicShape } from './dictionary/basic-shapes';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { PointPort } from './port';\nimport { Annotation, ShapeAnnotation } from './annotation';\nimport { getPortShape, getIconShape } from './dictionary/common';\nimport { getFlowShape } from './dictionary/flow-shapes';\nimport { NodeConstraints } from '../enum/enum';\nimport { checkPortRestriction, setUMLActivityDefaults, getUMLActivityShapes, updatePortEdges } from './../utility/diagram-util';\nimport { setSwimLaneDefaults } from './../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { NodeBase } from './node-base';\nimport { canShadow } from './../utility/constraints-util';\nimport { PortVisibility } from '../enum/enum';\nimport { measurePath } from './../utility/dom-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { StackPanel } from '../core/containers/stack-panel';\nimport { GridPanel } from '../core/containers/grid';\nimport { getULMClassifierShapes } from '../utility/uml-util';\nimport { initSwimLane } from './../utility/swim-lane-util';\nvar getShapeType = function (obj) {\n    switch (obj.type) {\n        case 'Basic':\n            return BasicShape;\n        case 'Flow':\n            return FlowShape;\n        case 'Path':\n            return Path;\n        case 'Image':\n            return Image;\n        case 'Text':\n            return Text;\n        case 'Bpmn':\n            return BpmnShape;\n        case 'Native':\n            return Native;\n        case 'HTML':\n            return Html;\n        case 'UmlActivity':\n            return UmlActivityShape;\n        case 'UmlClassifier':\n            return UmlClassifierShape;\n        case 'SwimLane':\n            return SwimLane;\n        default:\n            return BasicShape;\n    }\n};\n/**\n * Defines the behavior of default shape\n */\nvar Shape = /** @class */ (function (_super) {\n    __extends(Shape, _super);\n    function Shape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], Shape.prototype, \"type\", void 0);\n    return Shape;\n}(ChildProperty));\nexport { Shape };\n/**\n * Defines the behavior of path shape\n */\nvar Path = /** @class */ (function (_super) {\n    __extends(Path, _super);\n    function Path() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Path\n     */\n    Path.prototype.getClassName = function () {\n        return 'Path';\n    };\n    __decorate([\n        Property('Path')\n    ], Path.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Path.prototype, \"data\", void 0);\n    return Path;\n}(Shape));\nexport { Path };\n/**\n * Defines the behavior of Native shape\n */\nvar Native = /** @class */ (function (_super) {\n    __extends(Native, _super);\n    function Native() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Native\n     */\n    Native.prototype.getClassName = function () {\n        return 'Native';\n    };\n    __decorate([\n        Property('Native')\n    ], Native.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Native.prototype, \"content\", void 0);\n    __decorate([\n        Property('Stretch')\n    ], Native.prototype, \"scale\", void 0);\n    return Native;\n}(Shape));\nexport { Native };\n/**\n * Defines the behavior of html shape\n */\nvar Html = /** @class */ (function (_super) {\n    __extends(Html, _super);\n    function Html() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Html\n     */\n    Html.prototype.getClassName = function () {\n        return 'Html';\n    };\n    __decorate([\n        Property('HTML')\n    ], Html.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Html.prototype, \"content\", void 0);\n    return Html;\n}(Shape));\nexport { Html };\n/**\n * Defines the behavior of image shape\n */\nvar Image = /** @class */ (function (_super) {\n    __extends(Image, _super);\n    function Image() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Image\n     */\n    Image.prototype.getClassName = function () {\n        return 'Image';\n    };\n    __decorate([\n        Property('Image')\n    ], Image.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"source\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"align\", void 0);\n    return Image;\n}(Shape));\nexport { Image };\n/**\n * Defines the behavior of the text shape\n */\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Text\n     */\n    Text.prototype.getClassName = function () {\n        return 'Text';\n    };\n    __decorate([\n        Property('Text')\n    ], Text.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Text.prototype, \"content\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Text.prototype, \"margin\", void 0);\n    return Text;\n}(Shape));\nexport { Text };\n/**\n * Defines the behavior of the basic shape\n */\nvar BasicShape = /** @class */ (function (_super) {\n    __extends(BasicShape, _super);\n    function BasicShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BasicShape\n     */\n    BasicShape.prototype.getClassName = function () {\n        return 'BasicShape';\n    };\n    __decorate([\n        Property('Basic')\n    ], BasicShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], BasicShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property(0)\n    ], BasicShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Collection([], Point)\n    ], BasicShape.prototype, \"points\", void 0);\n    return BasicShape;\n}(Shape));\nexport { BasicShape };\n/**\n * Defines the behavior of the flow shape\n */\nvar FlowShape = /** @class */ (function (_super) {\n    __extends(FlowShape, _super);\n    function FlowShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class FlowShape\n     */\n    FlowShape.prototype.getClassName = function () {\n        return 'FlowShape';\n    };\n    __decorate([\n        Property('Flow')\n    ], FlowShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Terminator')\n    ], FlowShape.prototype, \"shape\", void 0);\n    return FlowShape;\n}(Shape));\nexport { FlowShape };\n/**\n * Defines the behavior of the bpmn gateway shape\n */\nvar BpmnGateway = /** @class */ (function (_super) {\n    __extends(BpmnGateway, _super);\n    function BpmnGateway() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnGateway\n     */\n    BpmnGateway.prototype.getClassName = function () {\n        return 'BpmnGateway';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnGateway.prototype, \"type\", void 0);\n    return BpmnGateway;\n}(ChildProperty));\nexport { BpmnGateway };\n/**\n * Defines the behavior of the bpmn data object\n */\nvar BpmnDataObject = /** @class */ (function (_super) {\n    __extends(BpmnDataObject, _super);\n    function BpmnDataObject() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnDataObject\n     */\n    BpmnDataObject.prototype.getClassName = function () {\n        return 'BpmnDataObject';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnDataObject.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnDataObject.prototype, \"collection\", void 0);\n    return BpmnDataObject;\n}(ChildProperty));\nexport { BpmnDataObject };\n/**\n * Defines the behavior of the bpmn task shape\n */\nvar BpmnTask = /** @class */ (function (_super) {\n    __extends(BpmnTask, _super);\n    function BpmnTask() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"type\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"loop\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"call\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"compensation\", void 0);\n    return BpmnTask;\n}(ChildProperty));\nexport { BpmnTask };\n/**\n * Defines the behavior of the bpmn Event shape\n */\nvar BpmnEvent = /** @class */ (function (_super) {\n    __extends(BpmnEvent, _super);\n    function BpmnEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnEvent\n     */\n    BpmnEvent.prototype.getClassName = function () {\n        return 'BpmnEvent';\n    };\n    __decorate([\n        Property('Start')\n    ], BpmnEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnEvent.prototype, \"trigger\", void 0);\n    return BpmnEvent;\n}(ChildProperty));\nexport { BpmnEvent };\n/**\n * Defines the behavior of the bpmn sub event\n */\nvar BpmnSubEvent = /** @class */ (function (_super) {\n    __extends(BpmnSubEvent, _super);\n    function BpmnSubEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnSubEvent\n     */\n    BpmnSubEvent.prototype.getClassName = function () {\n        return 'BpmnSubEvent';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnSubEvent.prototype, \"trigger\", void 0);\n    __decorate([\n        Property('Start')\n    ], BpmnSubEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnSubEvent.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], BpmnSubEvent.prototype, \"offset\", void 0);\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], BpmnSubEvent.prototype, \"annotations\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], BpmnSubEvent.prototype, \"ports\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], BpmnSubEvent.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubEvent.prototype, \"visible\", void 0);\n    return BpmnSubEvent;\n}(ChildProperty));\nexport { BpmnSubEvent };\n/**\n * Defines the behavior of the BpmnTransactionSubProcess\n */\nvar BpmnTransactionSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnTransactionSubProcess, _super);\n    function BpmnTransactionSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ id: 'success', event: 'End', offset: { x: 1, y: 0.5 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"success\", void 0);\n    __decorate([\n        Complex({ id: 'failure', event: 'Intermediate', trigger: 'Error', offset: { x: 0.25, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"failure\", void 0);\n    __decorate([\n        Complex({ id: 'cancel', event: 'Intermediate', trigger: 'Cancel', offset: { x: 0.75, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"cancel\", void 0);\n    return BpmnTransactionSubProcess;\n}(ChildProperty));\nexport { BpmnTransactionSubProcess };\n/**\n * Defines the behavior of the BPMNSubProcess\n */\nvar BpmnSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnSubProcess, _super);\n    function BpmnSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"adhoc\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnSubProcess.prototype, \"boundary\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"compensation\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"loop\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubProcess.prototype, \"collapsed\", void 0);\n    __decorate([\n        Collection([], BpmnSubEvent)\n    ], BpmnSubProcess.prototype, \"events\", void 0);\n    __decorate([\n        Complex({}, BpmnTransactionSubProcess)\n    ], BpmnSubProcess.prototype, \"transaction\", void 0);\n    __decorate([\n        Property(undefined)\n    ], BpmnSubProcess.prototype, \"processes\", void 0);\n    return BpmnSubProcess;\n}(ChildProperty));\nexport { BpmnSubProcess };\n/**\n * Defines the behavior of the bpmn activity shape\n */\nvar BpmnActivity = /** @class */ (function (_super) {\n    __extends(BpmnActivity, _super);\n    function BpmnActivity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnActivity\n     */\n    BpmnActivity.prototype.getClassName = function () {\n        return 'BpmnActivity';\n    };\n    __decorate([\n        Property('Task')\n    ], BpmnActivity.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnTask)\n    ], BpmnActivity.prototype, \"task\", void 0);\n    __decorate([\n        Complex({}, BpmnSubProcess)\n    ], BpmnActivity.prototype, \"subProcess\", void 0);\n    return BpmnActivity;\n}(ChildProperty));\nexport { BpmnActivity };\n/**\n * Defines the behavior of the bpmn annotation\n */\nvar BpmnAnnotation = /** @class */ (function (_super) {\n    __extends(BpmnAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function BpmnAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnAnnotation\n     */\n    BpmnAnnotation.prototype.getClassName = function () {\n        return 'BpmnAnnotation';\n    };\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"id\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"width\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"length\", void 0);\n    return BpmnAnnotation;\n}(ChildProperty));\nexport { BpmnAnnotation };\n/**\n * Defines the behavior of the bpmn shape\n */\nvar BpmnShape = /** @class */ (function (_super) {\n    __extends(BpmnShape, _super);\n    function BpmnShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnShape\n     */\n    BpmnShape.prototype.getClassName = function () {\n        return 'BpmnShape';\n    };\n    __decorate([\n        Property('Bpmn')\n    ], BpmnShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Event')\n    ], BpmnShape.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({}, BpmnEvent)\n    ], BpmnShape.prototype, \"event\", void 0);\n    __decorate([\n        Complex({}, BpmnGateway)\n    ], BpmnShape.prototype, \"gateway\", void 0);\n    __decorate([\n        Complex({}, BpmnDataObject)\n    ], BpmnShape.prototype, \"dataObject\", void 0);\n    __decorate([\n        Complex({}, BpmnActivity)\n    ], BpmnShape.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotation\", void 0);\n    __decorate([\n        Collection([], BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotations\", void 0);\n    return BpmnShape;\n}(Shape));\nexport { BpmnShape };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlActivityShape = /** @class */ (function (_super) {\n    __extends(UmlActivityShape, _super);\n    function UmlActivityShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlActivityShape\n     */\n    UmlActivityShape.prototype.getClassName = function () {\n        return 'UmlActivityShape';\n    };\n    __decorate([\n        Property('UmlActivity')\n    ], UmlActivityShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Action')\n    ], UmlActivityShape.prototype, \"shape\", void 0);\n    return UmlActivityShape;\n}(Shape));\nexport { UmlActivityShape };\n/**\n * Defines the behavior of the uml class method\n */\nvar MethodArguments = /** @class */ (function (_super) {\n    __extends(MethodArguments, _super);\n    function MethodArguments() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class MethodArguments\n     */\n    MethodArguments.prototype.getClassName = function () {\n        return 'MethodArguments';\n    };\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], MethodArguments.prototype, \"style\", void 0);\n    return MethodArguments;\n}(ChildProperty));\nexport { MethodArguments };\n/**\n * Defines the behavior of the uml class attributes\n */\nvar UmlClassAttribute = /** @class */ (function (_super) {\n    __extends(UmlClassAttribute, _super);\n    function UmlClassAttribute() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassAttribute\n     */\n    UmlClassAttribute.prototype.getClassName = function () {\n        return 'UmlClassAttribute';\n    };\n    __decorate([\n        Property('Public')\n    ], UmlClassAttribute.prototype, \"scope\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlClassAttribute.prototype, \"isSeparator\", void 0);\n    return UmlClassAttribute;\n}(MethodArguments));\nexport { UmlClassAttribute };\n/**\n * Defines the behavior of the uml class method\n */\nvar UmlClassMethod = /** @class */ (function (_super) {\n    __extends(UmlClassMethod, _super);\n    function UmlClassMethod() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassMethod\n     */\n    UmlClassMethod.prototype.getClassName = function () {\n        return 'UmlClassMethod';\n    };\n    __decorate([\n        Collection([], MethodArguments)\n    ], UmlClassMethod.prototype, \"parameters\", void 0);\n    return UmlClassMethod;\n}(UmlClassAttribute));\nexport { UmlClassMethod };\n/**\n * Defines the behavior of the uml class shapes\n */\nvar UmlClass = /** @class */ (function (_super) {\n    __extends(UmlClass, _super);\n    function UmlClass() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClass\n     */\n    UmlClass.prototype.getClassName = function () {\n        return 'UmlClass';\n    };\n    __decorate([\n        Property('')\n    ], UmlClass.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlClassAttribute)\n    ], UmlClass.prototype, \"attributes\", void 0);\n    __decorate([\n        Collection([], UmlClassMethod)\n    ], UmlClass.prototype, \"methods\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlClass.prototype, \"style\", void 0);\n    return UmlClass;\n}(ChildProperty));\nexport { UmlClass };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlInterface = /** @class */ (function (_super) {\n    __extends(UmlInterface, _super);\n    function UmlInterface() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlInterface\n     */\n    UmlInterface.prototype.getClassName = function () {\n        return 'UmlInterface';\n    };\n    __decorate([\n        Property(false)\n    ], UmlInterface.prototype, \"isSeparator\", void 0);\n    return UmlInterface;\n}(UmlClass));\nexport { UmlInterface };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumerationMember = /** @class */ (function (_super) {\n    __extends(UmlEnumerationMember, _super);\n    function UmlEnumerationMember() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumerationMember\n     */\n    UmlEnumerationMember.prototype.getClassName = function () {\n        return 'UmlEnumerationMember';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"value\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlEnumerationMember.prototype, \"isSeparator\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumerationMember.prototype, \"style\", void 0);\n    return UmlEnumerationMember;\n}(ChildProperty));\nexport { UmlEnumerationMember };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumeration = /** @class */ (function (_super) {\n    __extends(UmlEnumeration, _super);\n    function UmlEnumeration() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumeration\n     */\n    UmlEnumeration.prototype.getClassName = function () {\n        return 'UmlEnumeration';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumeration.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlEnumerationMember)\n    ], UmlEnumeration.prototype, \"members\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumeration.prototype, \"style\", void 0);\n    return UmlEnumeration;\n}(ChildProperty));\nexport { UmlEnumeration };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlClassifierShape = /** @class */ (function (_super) {\n    __extends(UmlClassifierShape, _super);\n    function UmlClassifierShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassifierShape\n     */\n    UmlClassifierShape.prototype.getClassName = function () {\n        return 'UmlClassifierShape';\n    };\n    __decorate([\n        Property('UmlClassifier')\n    ], UmlClassifierShape.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, UmlClass)\n    ], UmlClassifierShape.prototype, \"classShape\", void 0);\n    __decorate([\n        Complex({}, UmlInterface)\n    ], UmlClassifierShape.prototype, \"interfaceShape\", void 0);\n    __decorate([\n        Complex({}, UmlEnumeration)\n    ], UmlClassifierShape.prototype, \"enumerationShape\", void 0);\n    __decorate([\n        Property('Class')\n    ], UmlClassifierShape.prototype, \"classifier\", void 0);\n    return UmlClassifierShape;\n}(Shape));\nexport { UmlClassifierShape };\n/**\n * Defines the behavior of nodes\n */\nvar Node = /** @class */ (function (_super) {\n    __extends(Node, _super);\n    // tslint:disable-next-line:no-any\n    function Node(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.isCanvasUpdate = false;\n        /** @private */\n        _this.status = 'None';\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.processId = '';\n        /** @private */\n        _this.umlIndex = -1;\n        /** @private */\n        _this.outEdges = [];\n        /** @private */\n        _this.inEdges = [];\n        /** @private */\n        _this.isHeader = false;\n        /** @private */\n        _this.isLane = false;\n        /** @private */\n        _this.isPhase = false;\n        var nodeDefault;\n        if (_this.children && _this.children.length > 0) {\n            nodeDefault = defaultValue;\n            if (!nodeDefault.style || !nodeDefault.style.fill) {\n                _this.style.fill = 'transparent';\n            }\n            if (!nodeDefault.style || !nodeDefault.style.strokeColor) {\n                _this.style.strokeColor = 'transparent';\n            }\n        }\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        if (_this.shape && _this.shape.type === 'SwimLane') {\n            setSwimLaneDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    Object.defineProperty(Node.prototype, \"actualSize\", {\n        /** @private */\n        get: function () {\n            if (this.wrapper !== null) {\n                return this.wrapper.actualSize;\n            }\n            else {\n                return new Size(this.width || 0, this.height || 0);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Allows to initialize the UI of a node\n     */\n    /** @private */\n    /* tslint:disable */\n    Node.prototype.init = function (diagram) {\n        var content;\n        if (this.shape.type != 'SwimLane') {\n            content = new DiagramElement();\n        }\n        else {\n            content = new GridPanel();\n        }\n        var textStyle;\n        var changedProperties = 'changedProperties';\n        var oldProperties = 'oldProperties';\n        this.shape[changedProperties] = {};\n        this.shape[oldProperties] = {};\n        switch (this.shape.type) {\n            case 'Path':\n                var pathContent = new PathElement();\n                pathContent.data = this.shape.data;\n                content = pathContent;\n                break;\n            case 'Image':\n                var imageContent = new ImageElement();\n                imageContent.source = this.shape.source;\n                imageContent.imageAlign = this.shape.align;\n                imageContent.imageScale = this.shape.scale;\n                content = imageContent;\n                break;\n            case 'Text':\n                var textContent = new TextElement();\n                textContent.content = this.shape.content;\n                content = textContent;\n                textStyle = this.style;\n                content.style = textStyle;\n                break;\n            case 'Basic':\n                if (this.shape.shape === 'Rectangle') {\n                    var basicshape = new DiagramElement();\n                    content = basicshape;\n                    content.cornerRadius = this.shape.cornerRadius;\n                }\n                else if (this.shape.shape === 'Polygon') {\n                    var path = new PathElement();\n                    path.data = getPolygonPath(this.shape.points);\n                    content = path;\n                }\n                else {\n                    var basicshape = new PathElement();\n                    var basicshapedata = getBasicShape(this.shape.shape);\n                    basicshape.data = basicshapedata;\n                    content = basicshape;\n                }\n                break;\n            case 'Flow':\n                var flowshape = new PathElement();\n                var flowshapedata = getFlowShape(this.shape.shape);\n                flowshape.data = flowshapedata;\n                content = flowshape;\n                break;\n            case 'UmlActivity':\n                var umlactivityshape = new PathElement();\n                content = getUMLActivityShapes(umlactivityshape, content, this);\n                break;\n            case 'Bpmn':\n                if (diagram.bpmnModule) {\n                    content = diagram.bpmnModule.initBPMNContent(content, this, diagram);\n                    this.wrapper.elementActions = this.wrapper.elementActions | ElementAction.ElementIsGroup;\n                    var subProcess = this.shape.activity.subProcess;\n                    if (subProcess.processes && subProcess.processes.length) {\n                        var children = this.shape.activity.subProcess.processes;\n                        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                            var i = children_1[_i];\n                            if (diagram.nameTable[i] && (!diagram.nameTable[i].processId || diagram.nameTable[i].processId === this.id)) {\n                                diagram.nameTable[i].processId = this.id;\n                                if (subProcess.collapsed) {\n                                    diagram.updateElementVisibility(diagram.nameTable[i].wrapper, diagram.nameTable[i], !subProcess.collapsed);\n                                }\n                                content.children.push(diagram.nameTable[i].wrapper);\n                            }\n                        }\n                    }\n                }\n                break;\n            case 'Native':\n                var nativeContent = new DiagramNativeElement(this.id, diagram.element.id);\n                nativeContent.content = this.shape.content;\n                nativeContent.scale = this.shape.scale;\n                content = nativeContent;\n                break;\n            case 'HTML':\n                var htmlContent = new DiagramHtmlElement(this.id, diagram.element.id);\n                htmlContent.content = this.shape.content;\n                content = htmlContent;\n                break;\n            case 'UmlClassifier':\n                //   let umlClassifierShape: StackPanel = new StackPanel();\n                content = getULMClassifierShapes(content, this, diagram);\n                break;\n            case 'SwimLane':\n                this.annotations = [];\n                this.ports = [];\n                content.cellStyle.fill = \"none\";\n                content.cellStyle.strokeColor = \"none\";\n                this.container = { type: 'Grid', orientation: this.shape.orientation };\n                content.id = this.id;\n                this.container.orientation = this.shape.orientation;\n                this.constraints |= NodeConstraints.HideThumbs;\n                initSwimLane(content, diagram, this);\n                break;\n        }\n        content.id = this.id + '_content';\n        content.relativeMode = 'Object';\n        if (this.width !== undefined) {\n            content.width = this.width;\n        }\n        content.horizontalAlignment = 'Stretch';\n        if (this.height !== undefined) {\n            content.height = this.height;\n        }\n        if (this.minHeight !== undefined) {\n            content.minHeight = this.minHeight;\n        }\n        if (this.maxHeight !== undefined) {\n            content.maxHeight = this.maxHeight;\n        }\n        if (this.minWidth !== undefined) {\n            content.minWidth = this.minWidth;\n        }\n        if (this.maxWidth !== undefined) {\n            content.maxWidth = this.maxWidth;\n        }\n        if (this.shape.shape === 'Rectangle' && !this.shape.cornerRadius) {\n            content.isRectElement = true;\n        }\n        content.verticalAlignment = 'Stretch';\n        if (this.shape instanceof Text) {\n            content.margin = this.shape.margin;\n        }\n        if (canShadow(this)) {\n            if ((this.constraints & NodeConstraints.Shadow) !== 0) {\n                content.shadow = this.shadow;\n            }\n        }\n        if ((this.shape.type !== 'Bpmn' || this.shape.shape === 'Message' ||\n            this.shape.shape === 'DataSource') && ((this.shape.type !== 'UmlActivity' || this.shape.shape !== 'FinalNode'))) {\n            if (this.shape.type !== 'Text') {\n                content.style = this.style;\n            }\n        }\n        if (!(this.wrapper.elementActions & ElementAction.ElementIsGroup) && this.flip === 'Horizontal' || this.flip === 'Vertical') {\n            content.flip = this.flip;\n        }\n        return content;\n    };\n    /* tslint:enable */\n    /** @private */\n    Node.prototype.initContainer = function () {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        // Creates canvas element\n        var canvas;\n        if (!this.container || this.shape instanceof SwimLane) {\n            canvas = this.children ? new Container() : new Canvas();\n        }\n        else {\n            switch (this.container.type) {\n                case 'Canvas':\n                    canvas = new Canvas();\n                    break;\n                case 'Stack':\n                    canvas = new StackPanel();\n                    break;\n                case 'Grid':\n                    canvas = new GridPanel();\n                    canvas.setDefinitions(this.rows, this.columns);\n                    break;\n            }\n        }\n        canvas.id = this.id;\n        canvas.offsetX = this.offsetX;\n        canvas.offsetY = this.offsetY;\n        canvas.visible = this.visible;\n        canvas.horizontalAlignment = this.horizontalAlignment;\n        canvas.verticalAlignment = this.verticalAlignment;\n        if (this.container) {\n            canvas.width = this.width;\n            canvas.height = this.height;\n            if (this.container.type === 'Stack') {\n                canvas.orientation = this.container.orientation;\n            }\n        }\n        canvas.style.fill = this.backgroundColor;\n        canvas.style.strokeColor = this.borderColor;\n        canvas.style.strokeWidth = this.borderWidth;\n        canvas.rotateAngle = this.rotateAngle;\n        canvas.minHeight = this.minHeight;\n        canvas.minWidth = this.minWidth;\n        canvas.maxHeight = this.maxHeight;\n        canvas.maxWidth = this.maxWidth;\n        canvas.pivot = this.pivot;\n        canvas.margin = this.margin;\n        canvas.flip = this.flip;\n        this.wrapper = canvas;\n        return canvas;\n    };\n    /** @private */\n    Node.prototype.initPorts = function (accessibilityContent, container) {\n        var canvas = this.wrapper;\n        var port;\n        for (var i = 0; this.ports !== undefined, i < this.ports.length; i++) {\n            port = this.initPortWrapper(this.ports[i]);\n            port.elementActions = port.elementActions | ElementAction.ElementIsPort;\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(port, this);\n            }\n            port.description = wrapperContent ? wrapperContent : port.id;\n            container.children.push(port);\n        }\n    };\n    Node.prototype.getIconOffet = function (layout, icon) {\n        var x;\n        var y;\n        if (layout.orientation === 'BottomToTop') {\n            x = icon.offset.x;\n            y = 1 - icon.offset.y;\n        }\n        else if (layout.orientation === 'LeftToRight') {\n            x = icon.offset.y;\n            y = icon.offset.x;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            x = 1 - icon.offset.y;\n            y = icon.offset.x;\n        }\n        else {\n            x = icon.offset.x;\n            y = icon.offset.y;\n        }\n        return { x: x, y: y };\n    };\n    /** @private */\n    Node.prototype.initIcons = function (accessibilityContent, layout, container, diagramId) {\n        var canvas = this.wrapper;\n        var offset;\n        var icon = this.isExpanded ? this.expandIcon : this.collapseIcon;\n        if (icon.shape !== 'None') {\n            var iconContainer = new Canvas();\n            iconContainer.float = true;\n            var children = [];\n            iconContainer.id = this.id + '_icon_content';\n            iconContainer.children = children;\n            iconContainer.height = icon.height;\n            iconContainer.width = icon.width;\n            iconContainer.style.strokeColor = 'transparent';\n            iconContainer.margin = icon.margin;\n            iconContainer.horizontalAlignment = 'Center';\n            iconContainer.verticalAlignment = 'Center';\n            iconContainer.visible = this.visible;\n            offset = this.getIconOffet(layout, icon);\n            iconContainer.setOffsetWithRespectToBounds(offset.x, offset.y, 'Fraction');\n            iconContainer.relativeMode = 'Point';\n            this.initIconSymbol(icon, iconContainer, accessibilityContent, diagramId);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(icon, this);\n            }\n            iconContainer.description = wrapperContent ? wrapperContent : iconContainer.id;\n            container.children.push(iconContainer);\n        }\n    };\n    /** @private */\n    Node.prototype.initAnnotations = function (accessibilityContent, container, diagramId, virtualize) {\n        var annotation;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            annotation = this.initAnnotationWrapper(this.annotations[i], diagramId, virtualize, i);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(annotation, this);\n            }\n            annotation.description = wrapperContent ? wrapperContent : annotation.id;\n            container.children.push(annotation);\n        }\n    };\n    /** @private */\n    Node.prototype.initPortWrapper = function (ports) {\n        ports.id = ports.id || randomId();\n        // Creates port element\n        var portContent = new PathElement();\n        portContent.height = ports.height;\n        portContent.width = ports.width;\n        var pathdata = (ports.shape === 'Custom') ? ports.pathData : getPortShape(ports.shape);\n        portContent.id = this.id + '_' + (ports.id);\n        portContent.margin = ports.margin;\n        portContent.data = pathdata;\n        var style = ports.style;\n        portContent.style = {\n            fill: style.fill, strokeColor: style.strokeColor, gradient: null,\n            opacity: style.opacity, strokeDashArray: style.strokeDashArray, strokeWidth: style.strokeWidth\n        };\n        portContent.horizontalAlignment = ports.horizontalAlignment;\n        portContent.verticalAlignment = ports.verticalAlignment;\n        portContent = updatePortEdges(portContent, this.flip, ports);\n        if (this.width !== undefined || this.height !== undefined) {\n            portContent.float = true;\n        }\n        portContent.relativeMode = 'Point';\n        portContent.visible = checkPortRestriction(ports, PortVisibility.Visible) &&\n            !checkPortRestriction(ports, PortVisibility.Hover) && !checkPortRestriction(ports, PortVisibility.Connect) ? true : false;\n        return portContent;\n    };\n    /** @private */\n    Node.prototype.initAnnotationWrapper = function (annotation, diagramId, virtualize, value) {\n        annotation.id = annotation.id || value + 'annotation' || randomId();\n        var label = annotation;\n        var annotationcontent;\n        if (diagramId && annotation.template) {\n            annotationcontent = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            annotationcontent.content = annotation.template;\n        }\n        else {\n            annotationcontent = new TextElement();\n            annotationcontent.canMeasure = !virtualize;\n            var style = annotation.style;\n            var link = annotation.hyperlink.link ? annotation.hyperlink : undefined;\n            annotationcontent.style = {\n                fill: style.fill, strokeColor: style.strokeColor, strokeWidth: style.strokeWidth,\n                bold: style.bold, textWrapping: style.textWrapping,\n                color: link ? link.color || annotationcontent.hyperlink.color : style.color, whiteSpace: style.whiteSpace,\n                fontFamily: style.fontFamily, fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n                strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textOverflow: annotation.style.textOverflow,\n                textDecoration: link ? link.textDecoration ||\n                    annotationcontent.hyperlink.textDecoration : style.textDecoration,\n            };\n            annotationcontent.hyperlink.link = annotation.hyperlink.link || undefined;\n            annotationcontent.hyperlink.content = annotation.hyperlink.content || undefined;\n            annotationcontent.hyperlink.textDecoration = annotation.hyperlink.textDecoration || undefined;\n            annotationcontent.content = link ? link.content ||\n                annotationcontent.hyperlink.link : annotation.content;\n        }\n        annotationcontent.constraints = annotation.constraints;\n        annotationcontent.height = annotation.height;\n        annotationcontent.width = annotation.width;\n        annotationcontent.visible = annotation.visibility;\n        annotationcontent.rotateAngle = annotation.rotateAngle;\n        annotationcontent.id = this.id + '_' + annotation.id;\n        if (this.width !== undefined && !annotation.template) {\n            if (annotation.width === undefined || (annotation.width > this.width &&\n                (annotation.style.textWrapping === 'Wrap' || annotation.style.textWrapping === 'WrapWithOverflow'))) {\n                annotationcontent.width = this.width;\n            }\n        }\n        annotationcontent.margin = annotation.margin;\n        annotationcontent.horizontalAlignment = annotation.horizontalAlignment;\n        annotationcontent.verticalAlignment = annotation.verticalAlignment;\n        annotationcontent.setOffsetWithRespectToBounds(label.offset.x, label.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            annotationcontent.float = true;\n        }\n        annotationcontent.relativeMode = 'Point';\n        return annotationcontent;\n    };\n    Node.prototype.initIconContainer = function (options, iconContainer) {\n        var rect = new DiagramElement();\n        rect.id = iconContainer.id + '_rect';\n        rect.height = options.height;\n        rect.width = options.width;\n        rect.visible = iconContainer.visible;\n        rect.margin = options.margin;\n        rect.cornerRadius = options.cornerRadius;\n        rect.style = {\n            fill: options.fill, strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        rect.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        rect.horizontalAlignment = 'Center';\n        rect.verticalAlignment = 'Center';\n        rect.relativeMode = 'Object';\n        rect.description = rect.description || 'Click here to expand or collapse';\n        return rect;\n    };\n    Node.prototype.initIconSymbol = function (options, iconContainer, accessibilityContent, diagramId) {\n        var iconContent;\n        iconContainer.children.push(this.initIconContainer(options, iconContainer));\n        if (options.shape === 'Template') {\n            iconContent = new DiagramNativeElement(this.id, diagramId);\n            iconContent.content = options.content;\n            iconContent.height = 10;\n            iconContent.width = 10;\n        }\n        else {\n            iconContent = new PathElement();\n            iconContent.data = getIconShape(options);\n            var iconContentBounds = measurePath(iconContent.data);\n            iconContent.height =\n                iconContentBounds.height < 10 ? iconContentBounds.height : 10 - (options.padding.bottom + options.padding.top);\n            iconContent.width =\n                iconContentBounds.width < 10 ? iconContentBounds.width : 10 - (options.padding.left + options.padding.right);\n        }\n        iconContent.id = iconContainer.id + '_shape';\n        iconContent.horizontalAlignment = 'Center';\n        iconContent.verticalAlignment = 'Center';\n        iconContent.visible = iconContainer.visible;\n        iconContent.visible = iconContainer.visible;\n        iconContent.style = {\n            fill: 'black', strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        iconContent.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        iconContent.relativeMode = 'Object';\n        iconContent.description = iconContainer.description || 'Click here to expand or collapse';\n        iconContainer.children.push(iconContent);\n    };\n    /**\n     * @private\n     * Returns the name of class Node\n     */\n    Node.prototype.getClassName = function () {\n        return 'Node';\n    };\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], Node.prototype, \"annotations\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Node.prototype, \"pivot\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minHeight\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxHeight\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ fill: 'white' }, TextStyle)\n    ], Node.prototype, \"style\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Node.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('none')\n    ], Node.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"data\", void 0);\n    __decorate([\n        ComplexFactory(getShapeType)\n    ], Node.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"wrapper\", void 0);\n    __decorate([\n        Property(NodeConstraints.Default)\n    ], Node.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex({}, Shadow)\n    ], Node.prototype, \"shadow\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"children\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"container\", void 0);\n    __decorate([\n        Property('Left')\n    ], Node.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Top')\n    ], Node.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rows\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columns\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowSpan\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnSpan\", void 0);\n    return Node;\n}(NodeBase));\nexport { Node };\n/**\n * Defines the behavior of header in swimLane\n */\nvar Header = /** @class */ (function (_super) {\n    __extends(Header, _super);\n    function Header() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Header.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#111111' } }, Annotation)\n    ], Header.prototype, \"annotation\", void 0);\n    __decorate([\n        Complex({ fill: '#E7F4FF', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Header.prototype, \"style\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"height\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"width\", void 0);\n    return Header;\n}(ChildProperty));\nexport { Header };\n/**\n * Defines the behavior of lane in swimLane\n */\nvar Lane = /** @class */ (function (_super) {\n    __extends(Lane, _super);\n    function Lane() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Lane\n     */\n    Lane.prototype.getClassName = function () {\n        return 'Lane';\n    };\n    __decorate([\n        Property('')\n    ], Lane.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ fill: '#F9F9F9', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Lane.prototype, \"style\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Lane.prototype, \"children\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"height\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"width\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], Lane.prototype, \"header\", void 0);\n    return Lane;\n}(ChildProperty));\nexport { Lane };\n/**\n * Defines the behavior of phase in swimLane\n */\nvar Phase = /** @class */ (function (_super) {\n    __extends(Phase, _super);\n    function Phase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    Phase.prototype.getClassName = function () {\n        return 'Phase';\n    };\n    __decorate([\n        Property('')\n    ], Phase.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Phase.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ annotation: { content: 'Phase' } }, Header)\n    ], Phase.prototype, \"header\", void 0);\n    __decorate([\n        Property(100)\n    ], Phase.prototype, \"offset\", void 0);\n    return Phase;\n}(ChildProperty));\nexport { Phase };\n/**\n * Defines the behavior of swimLane shape\n */\nvar SwimLane = /** @class */ (function (_super) {\n    __extends(SwimLane, _super);\n    function SwimLane() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * @private\n         * Defines space between children and lane\n         */\n        _this.padding = 20;\n        /**\n         * @private\n         * Defines header by user or not\n         */\n        _this.hasHeader = true;\n        return _this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    SwimLane.prototype.getClassName = function () {\n        return 'SwimLane';\n    };\n    __decorate([\n        Property('SwimLane')\n    ], SwimLane.prototype, \"type\", void 0);\n    __decorate([\n        Property(20)\n    ], SwimLane.prototype, \"phaseSize\", void 0);\n    __decorate([\n        Collection([], Phase)\n    ], SwimLane.prototype, \"phases\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], SwimLane.prototype, \"orientation\", void 0);\n    __decorate([\n        Collection([], Lane)\n    ], SwimLane.prototype, \"lanes\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], SwimLane.prototype, \"header\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isLane\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isPhase\", void 0);\n    return SwimLane;\n}(Shape));\nexport { SwimLane };\n/**\n * Defines the behavior of container\n */\nvar ChildContainer = /** @class */ (function () {\n    function ChildContainer() {\n    }\n    /**\n     * @private\n     * Returns the name of class ChildContainer\n     */\n    ChildContainer.prototype.getClassName = function () {\n        return 'ChildContainer';\n    };\n    __decorate([\n        Property('Canvas')\n    ], ChildContainer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Vertical')\n    ], ChildContainer.prototype, \"orientation\", void 0);\n    return ChildContainer;\n}());\nexport { ChildContainer };\n","import { Size } from './../primitives/size';\nimport { Point } from './../primitives/point';\nimport { processPathData, pathSegmentCollection, getRectanglePath } from './../utility/path-util';\nimport { overFlow } from './../utility/base-util';\nimport { createHtmlElement, setChildPosition } from './../utility/dom-util';\n/**\n * Canvas Renderer\n */\n/** @private */\nvar CanvasRenderer = /** @class */ (function () {\n    function CanvasRenderer() {\n    }\n    /**   @private  */\n    CanvasRenderer.getContext = function (canvas) {\n        return canvas.getContext('2d');\n    };\n    CanvasRenderer.setCanvasSize = function (canvas, width, height) {\n        if (canvas) {\n            canvas.setAttribute('width', width.toString());\n            canvas.setAttribute('height', height.toString());\n        }\n    };\n    ;\n    /**   @private  */\n    CanvasRenderer.prototype.renderGradient = function (options, ctx, x, y) {\n        var max;\n        var min;\n        var grd;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = max !== undefined ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = min !== undefined ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                var linear = options.gradient;\n                grd = ctx.createLinearGradient(x + linear.x1, y + linear.y1, x + linear.x2, y + linear.y2);\n            }\n            else {\n                var radial = options.gradient;\n                grd = ctx.createRadialGradient(x + radial.fx, y + radial.fy, 0, x + radial.cx, y + radial.cy, radial.r);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                grd.addColorStop(offset, stop_1.color);\n            }\n            ctx.fillStyle = grd;\n        }\n        return ctx;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderShadow = function (options, canvas, collection) {\n        if (collection === void 0) { collection = null; }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = options.shadow.color;\n        ctx.globalAlpha = options.shadow.opacity;\n        var ptModel = { x: 0, y: 0 };\n        var point = Point.transform(ptModel, options.shadow.angle, options.shadow.distance);\n        var transX = options.x + point.x;\n        var transY = options.y + point.y;\n        var pivotX = transX + options.width * options.pivotX;\n        var pivotY = transY + options.height * options.pivotY;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        if (collection) {\n            ctx.translate(transX, transY);\n            this.renderPath(canvas, options, collection);\n            ctx.translate(-transX, -transY);\n        }\n        else {\n            ctx.rect(transX, transY, options.width, options.height);\n            ctx.fillRect(transX, transY, options.width, options.height);\n        }\n        ctx.fill();\n        ctx.stroke();\n        ctx.closePath();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.createCanvas = function (id, width, height) {\n        var canvasObj = createHtmlElement('canvas', { 'id': id });\n        this.setCanvasSize(canvasObj, width, height);\n        return canvasObj;\n    };\n    ;\n    CanvasRenderer.prototype.setStyle = function (canvas, style) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        ctx.strokeStyle = style.stroke;\n        ctx.lineWidth = style.strokeWidth;\n        if (style.strokeWidth === 0) {\n            ctx.strokeStyle = 'transparent';\n        }\n        ctx.globalAlpha = style.opacity;\n        var dashArray = [];\n        if (style.dashArray) {\n            dashArray = this.parseDashArray(style.dashArray);\n        }\n        ctx.setLineDash(dashArray);\n        if (style.gradient && style.gradient.type !== 'None') {\n            this.renderGradient(style, ctx, 0, 0);\n        }\n        else {\n            ctx.fillStyle = style.fill;\n        }\n    };\n    CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.translate(x, y);\n        ctx.rotate(angle * Math.PI / 180);\n        ctx.translate(-x, -y);\n    };\n    CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        var font = '';\n        if (text.italic) {\n            font += 'italic ';\n        }\n        if (text.bold) {\n            font += 'bold ';\n        }\n        font += (text.fontSize) + 'px ';\n        font += text.fontFamily;\n        ctx.font = font;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n        var splittedDashes = dashArray.split(separator);\n        for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n            var i = splittedDashes_1[_i];\n            dashes.push(Number(i));\n        }\n        return dashes;\n    };\n    //Rendering Part\n    /**   @private  */\n    CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n        if (options.visible === true) {\n            if (options.cornerRadius) {\n                options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n                this.drawPath(canvas, options);\n            }\n            else {\n                var ctx = CanvasRenderer.getContext(canvas);\n                if (options.shadow) {\n                    this.renderShadow(options, canvas);\n                }\n                ctx.save();\n                ctx.beginPath();\n                var cornerRadius = options.cornerRadius;\n                var pivotX = options.x + options.width * options.pivotX;\n                var pivotY = options.y + options.height * options.pivotY;\n                this.rotateContext(canvas, options.angle, pivotX, pivotY);\n                this.setStyle(canvas, options);\n                ctx.rect(options.x, options.y, options.width, options.height);\n                ctx.fillRect(options.x, options.y, options.width, options.height);\n                ctx.fill();\n                ctx.stroke();\n                ctx.closePath();\n                ctx.restore();\n            }\n        }\n    };\n    // public updateSelectionRegion(canvas: HTMLCanvasElement, options: RectAttributes): void {\n    //     this.drawRectangle(canvas, options);\n    // }\n    // public drawLine(canvas: HTMLCanvasElement, options: LineAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     ctx.translate(options.x, options.y);\n    //     ctx.moveTo(options.startPoint.x, options.startPoint.y);\n    //     ctx.lineTo(options.endPoint.x, options.endPoint.y);\n    //     ctx.translate(-options.x, -options.y);\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    // public drawCircle(canvas: HTMLCanvasElement, options: CircleAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     ctx.arc(options.centerX, options.centerY, options.radius, 0, 2 * Math.PI);\n    //     ctx.fill();\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    /**   @private  */\n    CanvasRenderer.prototype.drawPath = function (canvas, options) {\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, canvas, collection);\n        }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var pivotY = options.y + options.height * options.pivotY;\n        var pivotX = options.x + options.width * options.pivotX;\n        if (options.flip === 'Horizontal' || options.flip === 'Vertical') {\n            ctx.translate(options.x + options.width / 2, options.y + options.height / 2);\n            ctx.rotate(-options.angle * Math.PI / 180);\n            ctx.translate(-options.x - options.width / 2, -options.y - options.height / 2);\n        }\n        else {\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        }\n        this.setStyle(canvas, options);\n        ctx.translate(options.x, options.y);\n        if (options.flip === 'Horizontal') {\n            ctx.scale(-1, 1);\n            ctx.translate(options.width * -1, 0);\n        }\n        else if (options.flip === 'Vertical') {\n            ctx.scale(1, -1);\n            ctx.translate(0, options.height * -1);\n        }\n        else if (options.flip === 'Both') {\n            ctx.scale(-1, -1);\n            ctx.translate(options.width * -1, options.height * -1);\n        }\n        this.renderPath(canvas, options, collection);\n        ctx.fill();\n        ctx.translate(-options.x, -options.y);\n        ctx.stroke();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n        if (options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            var x0 = void 0;\n            var y0 = void 0;\n            var x1 = void 0;\n            var y1 = void 0;\n            var x2 = void 0;\n            var y2 = void 0;\n            var x = void 0;\n            var y = void 0;\n            var length_1;\n            var i = void 0;\n            var newSeg = void 0;\n            var segs = collection;\n            for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n                var obj = segs[i];\n                var seg = obj;\n                var char = seg.command;\n                if ('x1' in seg) {\n                    x1 = seg.x1;\n                }\n                if ('x2' in seg) {\n                    x2 = seg.x2;\n                }\n                if ('y1' in seg) {\n                    y1 = seg.y1;\n                }\n                if ('y2' in seg) {\n                    y2 = seg.y2;\n                }\n                if ('x' in seg) {\n                    x = seg.x;\n                }\n                if ('y' in seg) {\n                    y = seg.y;\n                }\n                switch (char) {\n                    case 'M':\n                        ctx.moveTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'L':\n                        ctx.lineTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'C':\n                        ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        seg.x2 = x2;\n                        seg.y2 = y2;\n                        break;\n                    case 'Q':\n                        ctx.quadraticCurveTo(x1, y1, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        break;\n                    case 'A':\n                        var curr = { x: x0, y: y0 };\n                        var rx = seg.r1;\n                        var ry = seg.r2;\n                        var xAxisRotation = seg.angle * (Math.PI / 180.0);\n                        var largeArc = seg.largeArc;\n                        var sweep = seg.sweep;\n                        var cp = { x: x, y: y };\n                        var currp = {\n                            x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n                            y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n                        };\n                        var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n                        if (l > 1) {\n                            rx *= Math.sqrt(l);\n                            ry *= Math.sqrt(l);\n                        }\n                        var k = (Math.pow(ry, 2) * Math.pow(currp.x, 2));\n                        var s = (largeArc === sweep ? -1 : 1) * Math.sqrt(((Math.pow(rx, 2) * Math.pow(ry, 2)) - (Math.pow(rx, 2) * Math.pow(currp.y, 2)) - k) /\n                            (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n                        if (isNaN(s)) {\n                            s = 0;\n                        }\n                        var cpp = { x: s * rx * currp.y / ry, y: s * -ry * currp.x / rx };\n                        var centp = {\n                            x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n                            y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n                        };\n                        var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n                        var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n                        var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n                        var ad = this.a(u, v);\n                        if (this.r(u, v) <= -1) {\n                            ad = Math.PI;\n                        }\n                        if (this.r(u, v) >= 1) {\n                            ad = 0;\n                        }\n                        var dir = !sweep ? -1.0 : 1.0;\n                        var ah = a1 + dir * (ad / 2.0);\n                        var halfWay = {\n                            x: centp.x + rx * Math.cos(ah),\n                            y: centp.y + ry * Math.sin(ah)\n                        };\n                        seg.centp = centp;\n                        seg.xAxisRotation = xAxisRotation;\n                        seg.rx = rx;\n                        seg.ry = ry;\n                        seg.a1 = a1;\n                        seg.ad = ad;\n                        seg.sweep = sweep;\n                        if (ctx != null) {\n                            var ra = rx > ry ? rx : ry;\n                            var sx = rx > ry ? 1 : rx / ry;\n                            var sy = rx > ry ? ry / rx : 1;\n                            ctx.save();\n                            ctx.translate(centp.x, centp.y);\n                            ctx.rotate(xAxisRotation);\n                            ctx.scale(sx, sy);\n                            ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n                            ctx.scale(1 / sx, 1 / sy);\n                            ctx.rotate(-xAxisRotation);\n                            ctx.translate(-centp.x, -centp.y);\n                            ctx.restore();\n                        }\n                        break;\n                    case 'Z':\n                    case 'z':\n                        ctx.closePath();\n                        x = x0;\n                        y = y0;\n                        break;\n                }\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId, scaleValue, parentNode) {\n        if (options.content && options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            ctx.save();\n            this.setStyle(canvas, options);\n            if (scaleValue) {\n                options.fontSize *= scaleValue;\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n            this.setFontStyle(canvas, options);\n            var i = 0;\n            var childNodes = [];\n            childNodes = options.childNodes;\n            var wrapBounds = options.wrapBounds;\n            ctx.fillStyle = options.color;\n            if (wrapBounds) {\n                var position = this.labelAlign(options, wrapBounds, childNodes);\n                for (i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[i];\n                    child.x = setChildPosition(child, childNodes, i, options);\n                    var offsetX = position.x + (scaleValue ? child.x * scaleValue : child.x) - wrapBounds.x;\n                    var offsetY = position.y + (scaleValue ? child.dy * scaleValue : child.dy) * i + ((options.fontSize) * 0.8);\n                    if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap' && options.textWrapping === 'NoWrap') {\n                        child.text = overFlow(child.text, options);\n                    }\n                    if ((options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') && options.textWrapping === 'Wrap') {\n                        if (offsetY < parentNode.actualSize.height + parentNode.bounds.y) {\n                            if (options.textOverflow === 'Ellipsis' && childNodes[i + 1]) {\n                                var temp = childNodes[i + 1];\n                                var y = position.y + temp.dy * (i + 1) + ((options.fontSize) * 0.8);\n                                if (y > parentNode.actualSize.height + parentNode.bounds.y) {\n                                    child.text = child.text.slice(0, child.text.length - 3);\n                                    child.text = child.text.concat('...');\n                                }\n                            }\n                            ctx.fillText(child.text, offsetX, offsetY);\n                        }\n                    }\n                    else {\n                        ctx.fillText(child.text, offsetX, offsetY);\n                    }\n                    if (options.textDecoration === 'Underline'\n                        || options.textDecoration === 'Overline'\n                        || options.textDecoration === 'LineThrough') {\n                        var startPointX = offsetX;\n                        var startPointY = void 0;\n                        var textlength = ctx.measureText(child.text).width;\n                        var endPointX = offsetX + textlength;\n                        var endPointY = void 0;\n                        switch (options.textDecoration) {\n                            case 'Underline':\n                                startPointY = offsetY + 2;\n                                endPointY = offsetY + 2;\n                                break;\n                            case 'Overline':\n                                startPointY = (position.y + child.dy * i);\n                                endPointY = (position.y + child.dy * i);\n                                break;\n                            case 'LineThrough':\n                                startPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                                endPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                        }\n                        ctx.beginPath();\n                        ctx.moveTo(startPointX, startPointY);\n                        ctx.lineTo(endPointX, endPointY);\n                        ctx.strokeStyle = options.color;\n                        ctx.lineWidth = options.fontSize * .08;\n                        ctx.globalAlpha = options.opacity;\n                        ctx.stroke();\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n    CanvasRenderer.prototype.loadImage = function (ctx, obj, canvas, pivotX, pivotY) {\n        this.rotateContext(canvas, obj.angle, pivotX, pivotY);\n        var image = new Image();\n        image.src = obj.source;\n        this.image(ctx, image, obj.x, obj.y, obj.width, obj.height, obj);\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var _this = this;\n        if (obj.visible) {\n            var ctx_1 = CanvasRenderer.getContext(canvas);\n            ctx_1.save();\n            var pivotX_1 = obj.x + obj.width * obj.pivotX;\n            var pivotY_1 = obj.y + obj.height * obj.pivotY;\n            var imageObj = new Image();\n            imageObj.src = obj.source;\n            var id = ctx_1.canvas.id.split('_');\n            var value = id[id.length - 1] === ('diagram' || 'diagramLayer') ? true : false;\n            /**\n             *  Since Clipping portion for node with slice option is not calculated properly\n             * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n             *  && obj.sourceHeight !== undefined) {\n             *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n             *  } else {\n             *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n             * }\n             */\n            if (!fromPalette) {\n                this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n            }\n            else {\n                imageObj.onload = function () {\n                    _this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n                };\n            }\n            ctx_1.restore();\n        }\n    };\n    CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions) {\n        ctx.beginPath();\n        var srcWidth = image.width;\n        var srcHeight = image.height;\n        var destinationW = width;\n        var destinationH = height;\n        var resultWidth = 0;\n        var resultHeight = 0;\n        if (alignOptions && alignOptions.alignment !== 'None') {\n            var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n            var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n            if (alignOptions.scale === 'Slice') {\n                var a = function () {\n                    resultWidth = destinationW;\n                    resultHeight = srcHeight * destinationW / srcWidth;\n                };\n                var b = function () {\n                    resultWidth = srcWidth * destinationH / srcHeight;\n                    resultHeight = destinationH;\n                };\n                if (destinationW > destinationH) {\n                    a();\n                    if (destinationH > resultHeight) {\n                        b();\n                    }\n                }\n                else if (destinationW === destinationH) {\n                    if (srcWidth > srcHeight) {\n                        b();\n                    }\n                    else {\n                        a();\n                    }\n                }\n                else {\n                    b();\n                    if (destinationW > resultWidth) {\n                        a();\n                    }\n                }\n                var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n                var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n                var sWidth = srcWidth - x1;\n                var sHeight = srcHeight - y1;\n                var dWidth = resultWidth - (x1 * (resultWidth / srcWidth));\n                var dHeight = resultHeight - (y1 * (resultHeight / srcHeight));\n                var canvas1 = createHtmlElement('canvas', { 'width': width.toString(), 'height': height.toString() });\n                var ctx1 = canvas1.getContext('2d');\n                ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n                ctx.drawImage(canvas1, x, y, width, height);\n            }\n            else if (alignOptions.scale === 'Meet') {\n                var srcRatio = (srcHeight / srcWidth);\n                var destRatio = (destinationH / destinationW);\n                resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n                resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n                x += this.getMeetOffset(xalign, resultWidth, destinationW);\n                y += this.getMeetOffset(yalign, resultHeight, destinationH);\n                ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n        else if (alignOptions.flip !== 'None') {\n            var scaleX = 1;\n            var scaleY = 1;\n            if (alignOptions.flip === 'Horizontal' || alignOptions.flip === 'Both') {\n                x = -x;\n                width = -width;\n                scaleX = -1;\n            }\n            if (alignOptions.flip === 'Vertical' || alignOptions.flip === 'Both') {\n                y = -y;\n                height = -height;\n                scaleY = -1;\n            }\n            ctx.scale(scaleX, scaleY);\n            ctx.drawImage(image, x, y, width, height);\n        }\n        else {\n            ctx.drawImage(image, x, y, width, height);\n        }\n        ctx.closePath();\n    };\n    CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (res - dest) / 2 * src / res;\n            case 'max': return (res - dest) * src / res;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n        var max = Math.max(res, dest);\n        var min = Math.min(res, dest);\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (max - min) / 2;\n            case 'max': return max - min;\n            default: return 0;\n        }\n    };\n    //end region\n    // vector magnitude\n    CanvasRenderer.prototype.m = function (v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); };\n    // ratio between two vectors\n    CanvasRenderer.prototype.r = function (u, v) { return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v)); };\n    // angle between two vectors\n    CanvasRenderer.prototype.a = function (u, v) { return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v)); };\n    // text utility\n    /**   @private  */\n    CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n        var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize * 1.2));\n        var position = { x: 0, y: 0 };\n        var labelX = text.x;\n        var labelY = text.y;\n        var offsetx = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointx = offsetx;\n        var pointy = offsety;\n        if (text.textAlign === 'left') {\n            pointx = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                if (text.textWrapping === 'NoWrap') {\n                    pointx = 0;\n                }\n                else {\n                    pointx = text.width * 0.5;\n                }\n            }\n            else {\n                pointx = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointx = (text.width * 1);\n        }\n        position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n        position.y = labelY + pointy - bounds.height / 2;\n        return position;\n    };\n    return CanvasRenderer;\n}());\nexport { CanvasRenderer };\n","import { Point } from './../primitives/point';\nimport { Size } from './../primitives/size';\nimport { pathSegmentCollection, processPathData } from './../utility/path-util';\nimport { setAttributeSvg, setChildPosition } from './../utility/dom-util';\nimport { overFlow, wordBreakToString, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { CanvasRenderer } from './../rendering/canvas-renderer';\nimport { createSvgElement, createHtmlElement, getBackgroundLayerSvg } from '../utility/dom-util';\nimport { removeGradient } from '../utility/diagram-util';\n/**\n * SVG Renderer\n */\n/** @private */\nvar SvgRenderer = /** @class */ (function () {\n    function SvgRenderer() {\n    }\n    /**   @private  */\n    SvgRenderer.prototype.renderShadow = function (options, canvas, collection, parentSvg) {\n        if (collection === void 0) { collection = null; }\n        var pointModel = { x: 0, y: 0 };\n        var point = Point.transform(pointModel, options.shadow.angle, options.shadow.distance);\n        var tX = options.x + point.x;\n        var tY = options.y + point.y;\n        var pivotX = tX + options.width * options.pivotX;\n        var pivotY = tY + options.height * options.pivotY;\n        var type;\n        var shadowElement;\n        if (parentSvg) {\n            shadowElement = parentSvg.getElementById(canvas.id + '_shadow');\n        }\n        if (!shadowElement) {\n            type = collection ? 'path' : 'rect';\n            shadowElement = document.createElementNS('http://www.w3.org/2000/svg', type);\n            canvas.appendChild(shadowElement);\n        }\n        var attr = {\n            'id': canvas.id + '_shadow', 'fill': options.shadow.color, 'stroke': options.shadow.color,\n            'opacity': options.shadow.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' +\n                'translate(' + (options.x + point.x) + ',' + (options.y + point.y) + ')'\n        };\n        if (parentSvg) {\n            var svgContainer = parentSvg.getElementById(canvas.id);\n            if (svgContainer) {\n                svgContainer.insertBefore(shadowElement, svgContainer.firstChild);\n            }\n        }\n        setAttributeSvg(shadowElement, attr);\n        if (!collection) {\n            setAttributeSvg(shadowElement, { 'width': options.width, 'height': options.height });\n        }\n        else if (collection) {\n            this.renderPath(shadowElement, options, collection);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        return dashes;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawRectangle = function (svg, options, diagramId, onlyRect, isSelector, parentSvg, ariaLabel) {\n        if (options.shadow && !onlyRect) {\n            this.renderShadow(options, svg, undefined, parentSvg);\n        }\n        var id;\n        if (options.id === svg.id) {\n            id = options.id + '_container';\n        }\n        else {\n            id = options.id;\n        }\n        var rect;\n        if (parentSvg) {\n            rect = parentSvg.getElementById(id);\n        }\n        if (!rect || isSelector) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            svg.appendChild(rect);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var attr = {\n            'id': id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'visibility': options.visible ? 'visible' : 'hidden',\n            'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            'rx': options.cornerRadius || 0, 'ry': options.cornerRadius || 0, 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        var poiterEvents = 'pointer-events';\n        if (!ariaLabel) {\n            attr[poiterEvents] = 'none';\n        }\n        setAttributeSvg(rect, attr);\n        this.setSvgStyle(rect, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.updateSelectionRegion = function (gElement, options) {\n        var rect;\n        rect = gElement.parentNode.getElementById(options.id);\n        var attr;\n        attr = {\n            'id': options.id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            class: 'e-diagram-selected-region'\n        };\n        if (!rect) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            gElement.appendChild(rect);\n        }\n        this.setSvgStyle(rect, options);\n        setAttributeSvg(rect, attr);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createGElement = function (elementType, attribute) {\n        var gElement = createSvgElement(elementType, attribute);\n        return gElement;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawLine = function (gElement, options) {\n        var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        this.setSvgStyle(line, options);\n        var pivotX = options.x + options.width * options.pivotX;\n        var pivotY = options.y + options.height * options.pivotY;\n        var kk = '';\n        var attr = {\n            'id': options.id,\n            'x1': options.startPoint.x + options.x,\n            'y1': options.startPoint.y + options.y,\n            'x2': options.endPoint.x + options.x,\n            'y2': options.endPoint.y + options.y,\n            'stroke': options.stroke,\n            'stroke-width': options.strokeWidth.toString(), 'opacity': options.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ' ' + pivotX + ' ' + pivotY + ')',\n            'visibility': options.visible ? 'visible' : 'hidden',\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(line, attr);\n        gElement.appendChild(line);\n    };\n    /** @private */\n    SvgRenderer.prototype.drawCircle = function (gElement, options, enableSelector, ariaLabel) {\n        var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        this.setSvgStyle(circle, options);\n        var classval = options.class || '';\n        if (!enableSelector) {\n            classval += ' e-disabled';\n        }\n        var attr = {\n            'id': options.id,\n            'cx': options.centerX,\n            'cy': options.centerY,\n            'r': options.radius,\n            'visibility': options.visible ? 'visible' : 'hidden',\n            'class': classval,\n            'aria-label': ariaLabel ? ariaLabel['aria-label'] : ''\n        };\n        circle.style.display = options.visible ? 'block' : 'none';\n        setAttributeSvg(circle, attr);\n        gElement.appendChild(circle);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawPath = function (svg, options, diagramId, isSelector, parentSvg, ariaLabel) {\n        var id;\n        var x = Math.floor((Math.random() * 10) + 1);\n        id = svg.id + '_shape' + x.toString();\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, svg, collection, parentSvg);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var path;\n        if (parentSvg) {\n            path = parentSvg.getElementById(options.id);\n        }\n        if (!path || isSelector) {\n            path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            svg.appendChild(path);\n        }\n        this.renderPath(path, options, collection);\n        var attr = {\n            'id': options.id, 'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' + 'translate(' + (options.x) + ',' + (options.y) + ')',\n            'visibility': options.visible ? 'visible' : 'hidden', 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(path, attr);\n        this.setSvgStyle(path, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderPath = function (svg, options, collection) {\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var x;\n        var y;\n        var length;\n        var i;\n        var segments = collection;\n        var d = '';\n        for (x = 0, y = 0, i = 0, length = segments.length; i < length; ++i) {\n            var obj = segments[i];\n            var segment = obj;\n            var char = segment.command;\n            if ('x1' in segment) {\n                x1 = segment.x1;\n            }\n            if ('x2' in segment) {\n                x2 = segment.x2;\n            }\n            if ('y1' in segment) {\n                y1 = segment.y1;\n            }\n            if ('y2' in segment) {\n                y2 = segment.y2;\n            }\n            if ('x' in segment) {\n                x = segment.x;\n            }\n            if ('y' in segment) {\n                y = segment.y;\n            }\n            switch (char) {\n                case 'M':\n                    d = d + 'M' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'L':\n                    d = d + 'L' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'C':\n                    d = d + 'C' + x1.toString() + ',' + y1.toString() + ',' + x2.toString() + ',' + y2.toString() + ',';\n                    d += x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Q':\n                    d = d + 'Q' + x1.toString() + ',' + y1.toString() + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'A':\n                    d = d + 'A' + segment.r1.toString() + ',' + segment.r2.toString() + ',' + segment.angle.toString() + ',';\n                    d += segment.largeArc.toString() + ',' + segment.sweep + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Z':\n                case 'z':\n                    d = d + 'Z' + ' ';\n                    break;\n            }\n        }\n        svg.setAttribute('d', d);\n    };\n    SvgRenderer.prototype.setSvgFontStyle = function (text, options) {\n        text.style.fontStyle = options.italic ? 'italic' : 'normal';\n        text.style.fontWeight = options.bold ? 'bold' : 'normal';\n        text.style.fontSize = options.fontSize.toString() + 'px';\n        text.style.fontFamily = options.fontFamily;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId, scaleValue, parentNode) {\n        if (options.content !== undefined) {\n            var textNode = void 0;\n            var childNodes = void 0;\n            var wrapBounds = void 0;\n            var position = void 0;\n            var child = void 0;\n            var tspanElement = void 0;\n            var offsetX = 0;\n            var offsetY = 0;\n            var i = 0;\n            var text = void 0;\n            if (parentSvg) {\n                text = parentSvg.getElementById(options.id + '_text');\n            }\n            if (text) {\n                if (options.doWrap) {\n                    while (text.firstChild) {\n                        text.removeChild(text.firstChild);\n                    }\n                }\n            }\n            else {\n                options.doWrap = true;\n                text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n                if (options.whiteSpace === 'pre-wrap') {\n                    text.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n                }\n                canvas.appendChild(text);\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            if (options.doWrap || options.textOverflow !== 'Wrap') {\n                var innerHtmlTextElement = document.getElementById(options.id + '_text');\n                if (innerHtmlTextElement) {\n                    innerHtmlTextElement.innerHTML = '';\n                }\n                this.setSvgStyle(text, options, diagramId);\n                this.setSvgFontStyle(text, options);\n                textNode = document.createTextNode(options.content);\n                childNodes = options.childNodes;\n                wrapBounds = options.wrapBounds;\n                position = this.svgLabelAlign(options, wrapBounds, childNodes);\n                if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap' && options.textWrapping === 'NoWrap') {\n                    childNodes[0].text = overFlow(options.content, options);\n                }\n                for (i = 0; i < childNodes.length; i++) {\n                    tspanElement = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n                    textNode = document.createTextNode(childNodes[i].text);\n                    child = childNodes[i];\n                    child.x = setChildPosition(child, childNodes, i, options);\n                    offsetX = position.x + child.x - wrapBounds.x;\n                    offsetY = position.y + child.dy * (i) + ((options.fontSize) * 0.8);\n                    if ((options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') && options.textWrapping === 'Wrap') {\n                        if (offsetY < parentNode.actualSize.height) {\n                            if (options.textOverflow === 'Ellipsis' && childNodes[i + 1]) {\n                                var temp = childNodes[i + 1];\n                                var y = position.y + temp.dy * (i + 1) + ((options.fontSize) * 0.8);\n                                if (y > parentNode.actualSize.height) {\n                                    child.text = child.text.slice(0, child.text.length - 3);\n                                    child.text = child.text.concat('...');\n                                    textNode.data = child.text;\n                                }\n                            }\n                            this.setText(text, tspanElement, child, textNode, offsetX, offsetY);\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                    else {\n                        this.setText(text, tspanElement, child, textNode, offsetX, offsetY);\n                    }\n                }\n            }\n            if (options.textDecoration && options.textDecoration === 'LineThrough') {\n                options.textDecoration = wordBreakToString(options.textDecoration);\n            }\n            var attr = {\n                'id': options.id + '_text', 'fill': options.color, 'visibility': options.visible ? 'visible' : 'hidden',\n                'text-decoration': options.textDecoration, 'transform': 'rotate(' + options.angle + ','\n                    + (pivotX) + ',' + (pivotY) + ')'\n                    + 'translate(' + (options.x) + ',' + (options.y) + ')', 'opacity': options.opacity,\n                'aria-label': ariaLabel ? ariaLabel : ''\n            };\n            setAttributeSvg(text, attr);\n        }\n    };\n    SvgRenderer.prototype.setText = function (text, tspanElement, child, textNode, offsetX, offsetY) {\n        setAttributeSvg(tspanElement, { 'x': offsetX.toString(), 'y': offsetY.toString() });\n        text.setAttribute('fill', child.text);\n        tspanElement.appendChild(textNode);\n        text.appendChild(tspanElement);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var id = obj.id + '_image';\n        var image;\n        if (parentSvg) {\n            image = parentSvg.getElementById(obj.id + 'image');\n        }\n        if (!image) {\n            image = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            canvas.appendChild(image);\n        }\n        var imageObj = new Image();\n        imageObj.src = obj.source;\n        var scale = obj.scale !== 'None' ? obj.scale : '';\n        var imgAlign = obj.alignment;\n        var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n        if (scale) {\n            aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n        }\n        var attr = {\n            'id': obj.id + 'image', 'x': obj.x.toString(), 'y': obj.y.toString(), 'transform': 'rotate(' + obj.angle + ','\n                + (obj.x + obj.width * obj.pivotX) + ',' + (obj.y + obj.height * obj.pivotY) + ')',\n            'width': obj.width.toString(), 'visibility': obj.visible ? 'visible' : 'hidden',\n            'height': obj.height.toString(), 'preserveAspectRatio': aspectRatio, 'opacity': (obj.opacity || 1).toString()\n        };\n        setAttributeSvg(image, attr);\n        image.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n    };\n    /** @private */\n    SvgRenderer.prototype.drawHTMLContent = function (element, canvas, transform, value, indexValue) {\n        var htmlElement;\n        if (canvas) {\n            var i = void 0;\n            for (i = 0; i < canvas.childNodes.length; i++) {\n                if (canvas.childNodes[i].id === element.id + '_html_element') {\n                    htmlElement = canvas.childNodes[i];\n                }\n            }\n        }\n        if (!htmlElement) {\n            var attr = {\n                'id': element.id + '_html_element',\n                'class': 'foreign-object'\n            };\n            htmlElement = createHtmlElement('div', attr);\n            htmlElement.appendChild(element.template.cloneNode(true));\n            if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                canvas.insertBefore(htmlElement, canvas.childNodes[indexValue]);\n            }\n            else {\n                canvas.appendChild(htmlElement);\n            }\n        }\n        var point = cornersPointsBeforeRotation(element).topLeft;\n        htmlElement.setAttribute('style', 'height:' + (element.actualSize.height) + 'px; width:' + (element.actualSize.width) +\n            'px;left:' + point.x + 'px; top:' + point.y + 'px;' +\n            'position:absolute;transform:rotate(' + (element.rotateAngle + element.parentTransform) + 'deg);' +\n            'pointer-events:' + (value ? 'all' : 'none')\n            + ';visibility:' + ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n    };\n    /** @private */\n    SvgRenderer.prototype.drawNativeContent = function (element, canvas, height, width, parentSvg) {\n        var nativeElement;\n        var clipPath;\n        if (parentSvg) {\n            nativeElement = parentSvg.getElementById(element.id + '_native_element');\n            clipPath = parentSvg.getElementById(element.id + '_clip');\n        }\n        if (!nativeElement) {\n            nativeElement = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            nativeElement.setAttribute('id', element.id + '_native_element');\n            nativeElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(nativeElement);\n        }\n        if (clipPath) {\n            nativeElement.removeChild(clipPath);\n        }\n        nativeElement.setAttribute('style', 'visibility:' +\n            ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n        this.setNativTransform(element, nativeElement, height, width);\n        if (element.scale === 'Slice') {\n            this.drawClipPath(element, nativeElement, height, width, parentSvg);\n        }\n        setAttributeSvg(nativeElement, element.description ? { 'aria-label': element.description } : {});\n    };\n    SvgRenderer.prototype.setNativTransform = function (element, nativeElement, height, width) {\n        var angle;\n        var contentWidth = element.contentSize.width !== 0 ? element.contentSize.width : 1;\n        var contentHeight = element.contentSize.height !== 0 ? element.contentSize.height : 1;\n        var x = element.templatePosition.x * width / contentWidth;\n        var y = element.templatePosition.y * height / contentHeight;\n        nativeElement.setAttribute('transform', 'rotate(' + element.parentTransform + ',' + element.offsetX + ',' + element.offsetY +\n            ') translate(' + (element.offsetX - x - width * element.pivot.x) + ',' + (element.offsetY - y - height * element.pivot.y) +\n            ') scale(' + (width / contentWidth) + ',' + (height / contentHeight) + ')');\n    };\n    /**\n     * used to crop the given native element into a rectangle of the given size\n     * @private\n     * @param node\n     * @param group\n     * @param height\n     * @param width\n     * @param parentSvg\n     */\n    SvgRenderer.prototype.drawClipPath = function (node, group, height, width, parentSvg) {\n        var contentWidth = node.contentSize.width;\n        var contentHeight = node.contentSize.height;\n        var actualWidth = node.actualSize.width;\n        var actualHeight = node.actualSize.height;\n        var clipWidth = node.width / (width / contentWidth);\n        var clipHeight = node.height / (height / contentHeight);\n        var x = node.templatePosition.x + (node.width >= node.height ? 0 : (contentWidth - clipWidth) / 2);\n        var y = node.templatePosition.y + (node.height >= node.width ? 0 : (contentHeight - clipHeight) / 2);\n        var clipPath = parentSvg.getElementById(node.id + '_clip');\n        clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n        clipPath.setAttribute('id', node.id + '_clip');\n        group.appendChild(clipPath);\n        var rect = parentSvg.getElementById(node.id + '_clip_rect');\n        rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        clipPath.appendChild(rect);\n        var attr = {\n            'id': node.id + '_clip_rect', 'width': clipWidth.toString(), 'height': clipHeight.toString(),\n            'x': x.toString(), 'y': y.toString()\n        };\n        setAttributeSvg(rect, attr);\n        group.setAttribute('clip-path', 'url(#' + node.id + '_clip)');\n        return group;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderGradient = function (options, svg, diagramId) {\n        var max;\n        var min;\n        var grd;\n        var svgContainer = getBackgroundLayerSvg(diagramId);\n        var defs = svgContainer.getElementById(diagramId + 'gradient_pattern');\n        if (!defs) {\n            defs = createSvgElement('defs', { id: diagramId + 'gradient_pattern' });\n            svgContainer.insertBefore(defs, svgContainer.firstChild);\n        }\n        var radial;\n        var linear;\n        var stop;\n        var offset;\n        removeGradient(svg.id);\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = !max ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = !min ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                linear = options.gradient;\n                linear.id = svg.id + '_linear';\n                grd = this.createLinearGradient(linear);\n                defs.appendChild(grd);\n            }\n            else {\n                radial = options.gradient;\n                radial.id = svg.id + '_radial';\n                grd = this.createRadialGradient(radial);\n                defs.appendChild(grd);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset_1 = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                var stopElement = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n                setAttributeSvg(stopElement, { 'offset': offset_1.toString(), 'style': 'stop-color:' + stop_1.color });\n                grd.appendChild(stopElement);\n            }\n        }\n        return grd;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createLinearGradient = function (linear) {\n        var lineargradient = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient');\n        var attr = {\n            'id': linear.id, 'x1': linear.x1 + '%', 'y1': linear.y1 + '%', 'x2': linear.x2 + '%', 'y2': linear.y2 + '%'\n        };\n        setAttributeSvg(lineargradient, attr);\n        return lineargradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createRadialGradient = function (radial) {\n        var radialgradient = document.createElementNS('http://www.w3.org/2000/svg', 'radialGradient');\n        var attr = {\n            'id': radial.id, 'cx': radial.cx + '%', 'cy': radial.cy + '%', 'r': radial.r + '%', 'fx': radial.fx + '%', 'fy': radial.fy + '%'\n        };\n        setAttributeSvg(radialgradient, attr);\n        return radialgradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.setSvgStyle = function (svg, style, diagramId) {\n        if (style.canApplyStyle || style.canApplyStyle === undefined) {\n            if (style.fill === 'none') {\n                style.fill = 'transparent';\n            }\n            if (style.stroke === 'none') {\n                style.stroke = 'transparent';\n            }\n            var dashArray = [];\n            var fill = void 0;\n            if (style.dashArray !== undefined) {\n                var canvasRenderer = new CanvasRenderer();\n                dashArray = canvasRenderer.parseDashArray(style.dashArray);\n            }\n            if (style.gradient && style.gradient.type !== 'None') {\n                var grd = this.renderGradient(style, svg, diagramId);\n                fill = 'url(#' + grd.id + ')';\n            }\n            else {\n                fill = style.fill;\n            }\n            if (style.stroke) {\n                svg.setAttribute('stroke', style.stroke);\n            }\n            if (style.strokeWidth !== undefined && style.strokeWidth !== null) {\n                svg.setAttribute('stroke-width', style.strokeWidth.toString());\n            }\n            if (dashArray) {\n                svg.setAttribute('stroke-dasharray', dashArray.toString());\n            }\n            if (fill) {\n                svg.setAttribute('fill', fill);\n            }\n        }\n    };\n    //end region\n    // text utility\n    /**   @private  */\n    SvgRenderer.prototype.svgLabelAlign = function (text, wrapBound, childNodes) {\n        var bounds = new Size(wrapBound.width, childNodes.length * (text.fontSize * 1.2));\n        var pos = { x: 0, y: 0 };\n        var x = 0;\n        var y = 1.2;\n        var offsetX = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointX = offsetX;\n        var pointY = offsety;\n        if (text.textAlign === 'left') {\n            pointX = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBound.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                if (text.textWrapping === 'NoWrap') {\n                    pointX = 0;\n                }\n                else {\n                    pointX = text.width * 0.5;\n                }\n            }\n            else {\n                pointX = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointX = (text.width * 1);\n        }\n        pos.x = x + pointX + (wrapBound ? wrapBound.x : 0);\n        pos.y = y + pointY - bounds.height / 2;\n        return pos;\n    };\n    return SvgRenderer;\n}());\nexport { SvgRenderer };\n","import { PathElement } from '../core/elements/path-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Container } from '../core/containers/container';\nimport { rotateMatrix, identityMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { Size } from '../primitives/size';\nimport { wordBreakToString, whiteSpaceToString, textAlignToString } from '../utility/base-util';\nimport { getUserHandlePosition, canShowCorner } from '../utility/diagram-util';\nimport { getDiagramElement, getAdornerLayer, getGridLayer, getHTMLLayer, updatePath } from '../utility/dom-util';\nimport { measurePath, getBackgroundLayerSvg, getBackgroundImageLayer, setAttributeSvg } from '../utility/dom-util';\nimport { SnapConstraints, RendererAction } from '../enum/enum';\nimport { ThumbsConstraints, SelectorConstraints, ElementAction } from '../enum/enum';\nimport { SvgRenderer } from './svg-renderer';\nimport { CanvasRenderer } from './canvas-renderer';\nimport { processPathData, splitArrayCollection, transformPath } from '../utility/path-util';\nimport { isDiagramChild } from '../utility/diagram-util';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { Point } from '../primitives/point';\nimport { canDrawThumbs, avoidDrawSelector } from '../utility/constraints-util';\n/**\n * Renderer module is used to render basic diagram elements\n */\n/** @private */\nvar DiagramRenderer = /** @class */ (function () {\n    function DiagramRenderer(name, svgRender, isSvgMode) {\n        /**   @private  */\n        this.renderer = null;\n        /** @private */\n        this.isSvgMode = true;\n        this.transform = { x: 0, y: 0 };\n        this.diagramId = name;\n        this.element = getDiagramElement(this.diagramId);\n        this.svgRenderer = svgRender;\n        this.isSvgMode = isSvgMode;\n        this.renderer = isSvgMode ? new SvgRenderer() : new CanvasRenderer();\n    }\n    /**   @private  */\n    DiagramRenderer.prototype.setCursor = function (canvas, cursor) {\n        canvas.style.cursor = cursor;\n    };\n    /** @private */\n    DiagramRenderer.prototype.setLayers = function () {\n        this.iconSvgLayer = this.element.getElementsByClassName('e-ports-expand-layer')[0];\n        this.adornerSvgLayer = this.element.getElementsByClassName('e-adorner-layer')[0];\n        this.nativeSvgLayer = this.element.getElementsByClassName('e-native-layer')[0];\n        this.diagramSvgLayer = this.element.getElementsByClassName('e-diagram-layer')[0];\n    };\n    DiagramRenderer.prototype.getAdornerLayer = function () {\n        var adornerLayer = getAdornerLayer(this.diagramId);\n        return adornerLayer;\n    };\n    DiagramRenderer.prototype.getParentSvg = function (element, targetElement, canvas) {\n        if (this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1 || element.id.split('_nodeport').length > 1) {\n                return this.iconSvgLayer;\n            }\n            if (targetElement && targetElement === 'selector') {\n                return this.adornerSvgLayer;\n            }\n            else if (element instanceof DiagramNativeElement) {\n                return this.nativeSvgLayer;\n            }\n            else {\n                return this.diagramSvgLayer;\n            }\n        }\n        return canvas;\n    };\n    DiagramRenderer.prototype.getParentElement = function (element, defaultParent, svgElement, indexValue) {\n        var layerGElement = defaultParent;\n        if (svgElement && this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramExpander');\n                defaultParent = null;\n            }\n            else if (element.id.split('_nodeport').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramPorts');\n            }\n            else if (element instanceof DiagramNativeElement) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_nativeLayer');\n                defaultParent = null;\n            }\n            else {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramLayer');\n            }\n            var groupElement = this.getGroupElement(element, defaultParent || layerGElement, indexValue);\n            layerGElement = groupElement.g;\n            if (groupElement.svg) {\n                svgElement = groupElement.svg;\n            }\n        }\n        return { g: layerGElement, svg: svgElement };\n    };\n    DiagramRenderer.prototype.getGroupElement = function (element, canvas, indexValue) {\n        var gElement;\n        var parentSvg = this.getParentSvg(element);\n        var svgElement;\n        if (canvas && parentSvg) {\n            if (parentSvg) {\n                gElement = parentSvg.getElementById(element.id + '_groupElement');\n                if (!gElement && parentSvg !== this.nativeSvgLayer) { //code added\n                    var nativeSvg = this.nativeSvgLayer;\n                    gElement = nativeSvg.getElementById(element.id + '_groupElement');\n                    svgElement = nativeSvg;\n                }\n            }\n            if (!gElement) {\n                gElement = this.svgRenderer.createGElement('g', { id: element.id + '_groupElement' });\n                if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                    canvas.insertBefore(gElement, canvas.childNodes[indexValue]);\n                }\n                else {\n                    canvas.appendChild(gElement);\n                }\n            }\n        }\n        return { g: gElement, svg: svgElement };\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderElement = function (element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var isElement = true;\n        if (element instanceof Container) {\n            isElement = false;\n            this.renderContainer(element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue);\n        }\n        else if (element instanceof ImageElement) {\n            this.renderImageElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof PathElement) {\n            this.renderPathElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof TextElement) {\n            this.renderTextElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramNativeElement) {\n            this.renderNativeElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramHtmlElement) {\n            this.renderHTMLElement(element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue);\n        }\n        else {\n            this.renderRect(element, canvas, transform, parentSvg);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawSelectionRectangle = function (x, y, w, h, canvas, t) {\n        x = (x + t.tx) * t.scale;\n        y = (y + t.ty) * t.scale;\n        var options = {\n            width: w * t.scale, height: h * t.scale,\n            x: x + 0.5, y: y + 0.5, fill: 'transparent', stroke: 'gray', angle: 0,\n            pivotX: 0.5, pivotY: 0.5, strokeWidth: 1,\n            dashArray: '6 3', opacity: 1,\n            visible: true, id: canvas.id + '_selected_region'\n        };\n        var adornerLayer = this.getAdornerLayer();\n        this.svgRenderer.updateSelectionRegion(adornerLayer, options);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderHighlighter = function (element, canvas, transform) {\n        var width = element.actualSize.width || 2;\n        var height = element.actualSize.height || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        y = (y + transform.ty) * transform.scale;\n        var options = {\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 4,\n            dashArray: '', opacity: 1, cornerRadius: 0,\n            visible: true, id: canvas.id + '_highlighter', class: 'e-diagram-highlighter'\n        };\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderStackHighlighter = function (element, canvas, transform, isVertical, position, isUml, isSwimlane) {\n        var width = element.actualSize.width || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var height = element.actualSize.height || 2;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        var data;\n        var bounds = element.bounds;\n        var newPathString = '';\n        y = (y + transform.ty) * transform.scale;\n        if (!isVertical) {\n            var d = height * transform.scale;\n            data = 'M 10 -10 L 0 0 Z M -10 -10 L 0 0 Z M 0 0 L 0 ' + (d) + ' Z M 0  ' + (d) +\n                ' L -10  ' + (d + 10) + ' Z L 10  ' + (d + 10) + ' Z';\n            if (position.x >= element.offsetX) {\n                x += width;\n            }\n        }\n        else {\n            if (isUml) {\n                var d = width * transform.scale;\n                data = 'M 0 0 L ' + (d + 2) + ' 0 Z';\n                var scaleX = -bounds.x;\n                var scaleY = -bounds.y;\n                var arrayCollection = [];\n                scaleX = element.actualSize.width / Number(bounds.width ? bounds.width : 1) * transform.scale;\n                scaleY = element.actualSize.height / Number(bounds.height ? bounds.height : 1) * transform.scale;\n                var umlData = 'M7,4 L8,4 8,7 11,7 11,8 8,8 8,11 7,11 7,8 4,8 4,7 7,7 z M7.5,0.99999994' +\n                    'C3.9160004,1 1,3.9160004 0.99999994,7.5 1,11.084 3.9160004,14 7.5,14 11.084,14 14,11.084 14,7.5 14,' +\n                    '3.9160004 11.084,1 7.5,0.99999994 z M7.5,0 C11.636002,0 15,3.3639984 15,7.5 15,11.636002 11.636002,15 7.5,' +\n                    '15 3.3640003,15 0,11.636002 0,7.5 0,3.3639984 3.3640003,0 7.5,0 z';\n                arrayCollection = processPathData(umlData);\n                arrayCollection = splitArrayCollection(arrayCollection);\n                newPathString = transformPath(arrayCollection, scaleX + d + 2, scaleY - 8, false, bounds.x, bounds.y, 0, 0);\n                if (position.y >= element.offsetY) {\n                    y += height;\n                }\n            }\n            else {\n                if (isSwimlane) {\n                    if (position.y >= element.offsetY) {\n                        y += height;\n                    }\n                }\n                var d = width * transform.scale;\n                data = 'M -10 -10 L 0 0 Z M -10 10 L 0 0 Z M 0 0 L ' + (d) + ' 0 Z M ' + (d) + ' 0 L ' +\n                    (d + 10) + ' 10 Z L ' + (d + 10) + ' -10 Z';\n            }\n        }\n        var options = {\n            data: data + newPathString,\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 1,\n            dashArray: '', opacity: 1,\n            visible: true, id: canvas.id + '_stack_highlighter', class: 'e-diagram-highlighter',\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawLine = function (canvas, options) {\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawPath = function (canvas, options) {\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderResizeHandle = function (element, canvas, constraints, currentZoom, selectorConstraints, transform, canMask, enableNode, nodeConstraints, isSwimlane) {\n        var left = element.offsetX - element.actualSize.width * element.pivot.x;\n        var top = element.offsetY - element.actualSize.height * element.pivot.y;\n        var height = element.actualSize.height;\n        var width = element.actualSize.width;\n        if (!isSwimlane &&\n            (constraints & ThumbsConstraints.Rotate && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions)))) {\n            this.renderPivotLine(element, canvas, transform, selectorConstraints, canMask);\n            this.renderRotateThumb(element, canvas, transform, selectorConstraints, canMask);\n        }\n        this.renderBorder(element, canvas, transform, enableNode, nodeConstraints, isSwimlane);\n        var nodeWidth = element.actualSize.width * currentZoom;\n        var nodeHeight = element.actualSize.height * currentZoom;\n        if (!nodeConstraints && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions))) {\n            if (nodeWidth >= 40 && nodeHeight >= 40) {\n                //Hide corners when the size is less than 40\n                if (selectorConstraints & SelectorConstraints.ResizeNorthWest) {\n                    this.renderCircularHandle('resizeNorthWest', element, left, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthWest'), constraints & ThumbsConstraints.ResizeNorthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top left side direction' }, undefined, 'e-diagram-resize-handle e-northwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeNorthEast) {\n                    this.renderCircularHandle('resizeNorthEast', element, left + width, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthEast'), constraints & ThumbsConstraints.ResizeNorthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top right side direction' }, undefined, 'e-diagram-resize-handle e-northeast');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthWest) {\n                    this.renderCircularHandle('resizeSouthWest', element, left, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthWest'), constraints & ThumbsConstraints.ResizeSouthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom left side direction' }, undefined, 'e-diagram-resize-handle e-southwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthEast) {\n                    this.renderCircularHandle('resizeSouthEast', element, left + width, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthEast'), constraints & ThumbsConstraints.ResizeSouthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom right side direction' }, undefined, 'e-diagram-resize-handle e-southeast');\n                }\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeNorth) {\n                this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorth'), constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-diagram-resize-handle e-north');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeSouth) {\n                this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouth'), constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-diagram-resize-handle e-south');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeWest) {\n                this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeWest'), constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-diagram-resize-handle e-west');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeEast) {\n                this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeEast'), constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-diagram-resize-handle e-east');\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderEndPointHandle = function (selector, canvas, constraints, selectorConstraints, transform, connectedSource, connectedTarget, isSegmentEditing) {\n        var sourcePoint = selector.sourcePoint;\n        var targetPoint = selector.targetPoint;\n        var wrapper = selector.wrapper;\n        var i;\n        var segment;\n        this.renderCircularHandle('connectorSourceThumb', wrapper, sourcePoint.x, sourcePoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        this.renderCircularHandle('connectorTargetThumb', wrapper, targetPoint.x, targetPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, connectedTarget, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        if (isSegmentEditing) {\n            if ((selector.type === 'Straight' || selector.type === 'Bezier') && selector.segments.length > 0) {\n                for (i = 0; i < selector.segments.length - 1; i++) {\n                    segment = selector.segments[i];\n                    this.renderCircularHandle(('segementThumb_' + (i + 1)), wrapper, segment.point.x, segment.point.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i);\n                }\n            }\n            else {\n                for (i = 0; i < selector.segments.length; i++) {\n                    var seg = selector.segments[i];\n                    this.renderOrthogonalThumbs('orthoThumb_' + (i + 1), wrapper, seg, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), transform);\n                }\n            }\n        }\n        if (selector.type === 'Bezier') {\n            for (i = 0; i < selector.segments.length; i++) {\n                var segment_1 = selector.segments[i];\n                var bezierPoint = !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1\n                    : segment_1.bezierPoint1;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_1', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, undefined, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-bezier-handle e-source');\n                if (canShowCorner(selectorConstraints, 'ConnectorSourceThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_1', wrapper, canvas, segment_1.points[0], !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1 : segment_1.bezierPoint1, transform);\n                }\n                bezierPoint = !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_2', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, undefined, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-bezier-handle e-target');\n                if (canShowCorner(selectorConstraints, 'ConnectorTargetThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_2', wrapper, canvas, segment_1.points[1], !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2, transform);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumbs = function (id, selector, segment, canvas, visibility, t) {\n        var orientation;\n        var visible;\n        var length;\n        var j = 0;\n        for (j = 0; j < segment.points.length - 1; j++) {\n            length = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n            orientation = (segment.points[j].y.toFixed(2) === segment.points[j + 1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n            visible = (length >= 50 && segment.allowDrag) ? true : false;\n            this.renderOrthogonalThumb((id + '_' + (j + 1)), selector, (((segment.points[j].x + segment.points[j + 1].x) / 2)), (((segment.points[j].y + segment.points[j + 1].y) / 2)), canvas, visible, orientation, t);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumb = function (id, selector, x, y, canvas, visible, orientation, t) {\n        var path;\n        var h;\n        var v;\n        if (orientation === 'horizontal') {\n            path = 'M0,7 L15,0 L30,7 L15,14 z';\n            h = -15;\n            v = -7;\n        }\n        else {\n            path = 'M7,0 L0,15 L7,30 L14,15 z';\n            h = -7;\n            v = -15;\n        }\n        var options = {\n            x: ((x + t.tx) * t.scale) + h, y: ((y + t.ty) * t.scale) + v, angle: 0,\n            fill: '#e2e2e2', stroke: 'black', strokeWidth: 1, dashArray: '', data: path,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: id\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPivotLine = function (element, canvas, transform, selectorConstraints, canMask) {\n        var wrapper = element;\n        var dashArray = '2,3';\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.fill = 'None';\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.visible = visible;\n        var scale = transform.scale;\n        options.x *= scale;\n        options.y *= scale;\n        options.width *= scale;\n        options.height *= scale;\n        options.id = 'pivotLine';\n        options.class = 'e-diagram-pivot-line';\n        var startPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: -20 };\n        var endPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: 0 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBezierLine = function (id, wrapper, canvas, start, end, transform) {\n        var dashArray = '3,3';\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.id = id;\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.fill = 'None';\n        options.class = 'e-diagram-bezier-line';\n        options.x = 0;\n        options.y = 0;\n        var scale = transform.scale;\n        var x1 = (start.x + transform.tx) * scale;\n        var y1 = (start.y + transform.ty) * scale;\n        var x2 = (end.x + transform.tx) * scale;\n        var y2 = (end.y + transform.ty) * scale;\n        var startPoint = { x: x1, y: y1 };\n        var endPoint = { x: x2, y: y2 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderCircularHandle = function (id, selector, cx, cy, canvas, visible, enableSelector, t, connected, canMask, ariaLabel, count, className) {\n        var wrapper = selector;\n        var radius = 7;\n        var newPoint = { x: cx, y: cy };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = this.getBaseAttributes(wrapper);\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        if (count !== undefined) {\n            radius = 5;\n            options.id = 'segmentEnd_' + count;\n            options.fill = '#e2e2e2';\n        }\n        else {\n            radius = 7;\n            options.fill = connected ? '#8CC63F' : 'white';\n        }\n        options.centerX = (newPoint.x + t.tx) * t.scale;\n        options.centerY = (newPoint.y + t.ty) * t.scale;\n        options.radius = radius;\n        options.angle = 0;\n        options.id = id;\n        options.visible = visible;\n        options.class = className;\n        if (connected) {\n            options.class += ' e-connected';\n        }\n        if (canMask) {\n            options.visible = false;\n        }\n        this.svgRenderer.drawCircle(canvas, options, enableSelector, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBorder = function (selector, canvas, transform, enableNode, isBorderTickness, isSwimlane) {\n        var wrapper = selector;\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.x *= transform.scale;\n        options.y *= transform.scale;\n        options.width *= transform.scale;\n        options.height *= transform.scale;\n        options.fill = 'transparent';\n        options.stroke = '#097F7F';\n        options.strokeWidth = 0.6;\n        options.dashArray = '6,3';\n        options.class = 'e-diagram-border';\n        if (isSwimlane) {\n            options.class += ' e-diagram-lane';\n        }\n        options.id = 'borderRect';\n        options.id = (this.rendererActions & RendererAction.DrawSelectorBorder) ? 'borderRect_symbol' : 'borderRect';\n        if (!enableNode) {\n            options.class += ' e-disabled';\n        }\n        if (isBorderTickness) {\n            options.class += ' e-thick-border';\n        }\n        options.cornerRadius = 0;\n        var parentSvg = this.getParentSvg(selector, 'selector');\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, true, parentSvg);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderUserHandler = function (selectorItem, canvas, transform) {\n        var wrapper = selectorItem.wrapper;\n        for (var _i = 0, _a = selectorItem.userHandles; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            var element = new PathElement();\n            var newPoint = void 0;\n            newPoint = getUserHandlePosition(selectorItem, obj, transform);\n            newPoint.x = (newPoint.x + transform.tx) * transform.scale;\n            newPoint.y = (newPoint.y + transform.ty) * transform.scale;\n            if (obj.visible) {\n                obj.visible = (selectorItem.constraints & SelectorConstraints.UserHandle) ? true : false;\n            }\n            if (obj.content === '' && obj.source === '') {\n                var data = obj.pathData ? obj.pathData : obj.content;\n                var option = this.getBaseAttributes(wrapper);\n                option.id = obj.name + '_userhandle';\n                option.fill = obj.backgroundColor;\n                option.stroke = obj.borderColor;\n                option.strokeWidth = obj.borderWidth;\n                option.centerX = newPoint.x;\n                option.centerY = newPoint.y;\n                option.radius = obj.size * 0.5;\n                option.class = 'e-diagram-userhandle-circle';\n                option.angle = 0;\n                option.visible = obj.visible;\n                option.opacity = 1;\n                this.svgRenderer.drawCircle(canvas, option, 1, { 'aria-label': obj.name + 'user handle' });\n                var pathPading = 5;\n                var arrayCollection = [];\n                arrayCollection = processPathData(data);\n                arrayCollection = splitArrayCollection(arrayCollection);\n                var pathSize = measurePath(data);\n                //requiredSize/contentSize\n                var scaleX = (obj.size - 0.45 * obj.size) / pathSize.width;\n                var scaleY = (obj.size - 0.45 * obj.size) / pathSize.height;\n                var newData = transformPath(arrayCollection, scaleX, scaleY, true, pathSize.x, pathSize.y, 0, 0);\n                pathSize = measurePath(newData);\n                var options = {\n                    x: newPoint.x - pathSize.width / 2,\n                    y: newPoint.y - pathSize.height / 2,\n                    angle: 0, id: '',\n                    class: 'e-diagram-userhandle-path',\n                    fill: obj.pathColor, stroke: obj.backgroundColor, strokeWidth: 0.5, dashArray: '', data: newData,\n                    width: obj.size - pathPading, height: obj.size - pathPading, pivotX: 0, pivotY: 0, opacity: 1, visible: obj.visible\n                };\n                this.svgRenderer.drawPath(canvas, options, this.diagramId, undefined, undefined, { 'aria-label': obj.name + 'user handle' });\n            }\n            else if (obj.content !== '') {\n                var handleContent = void 0;\n                handleContent = new DiagramNativeElement(obj.name, this.diagramId);\n                handleContent.content = obj.content;\n                handleContent.offsetX = newPoint.x;\n                handleContent.offsetY = newPoint.y;\n                handleContent.height = obj.size;\n                handleContent.width = obj.size;\n                handleContent.id = obj.name + '_shape';\n                handleContent.horizontalAlignment = 'Center';\n                handleContent.verticalAlignment = 'Center';\n                handleContent.visible = obj.visible;\n                handleContent.setOffsetWithRespectToBounds(newPoint.x, newPoint.y, 'Fraction');\n                handleContent.relativeMode = 'Object';\n                handleContent.description = obj.name || 'User handle';\n                handleContent.measure(new Size(obj.size, obj.size));\n                handleContent.arrange(handleContent.desiredSize);\n                this.svgRenderer.drawNativeContent(handleContent, canvas, obj.size, obj.size, this.adornerSvgLayer);\n            }\n            else {\n                var element_1 = new ImageElement();\n                var options = this.getBaseAttributes(element_1, transform);\n                options.width = obj.size;\n                options.height = obj.size;\n                options.x = newPoint.x - (obj.size / 2);\n                options.y = newPoint.y - (obj.size / 2);\n                options.sourceWidth = obj.size;\n                options.sourceHeight = obj.size;\n                options.alignment = element_1.imageAlign;\n                options.source = obj.source;\n                options.scale = element_1.imageScale;\n                options.description = obj.name || 'User handle';\n                options.id = obj.name + '_';\n                this.renderer.drawImage(canvas, options, this.adornerSvgLayer, false);\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRotateThumb = function (wrapper, canvas, transform, selectorConstraints, canMask) {\n        var element = new PathElement();\n        var newPoint;\n        var size = new Size();\n        size.width = 18;\n        size.height = 16;\n        var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n        var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var data = 'M 16.856144362449648 10.238890446662904 L 18.000144362449646 3.437890446662903' +\n            'L 15.811144362449646 4.254890446662903 C 14.837144362449646 2.5608904466629028 13.329144362449647 ' +\n            ' 1.2598904466629026 11.485144362449645 0.5588904466629026 C 9.375144362449646 - 0.24510955333709716 7.071144362449646 ' +\n            ' - 0.18010955333709716 5.010144362449646 0.7438904466629028 C 2.942144362449646 1.6678904466629028 1.365144362449646' +\n            ' 3.341890446662903 0.558144362449646 5.452890446662903 C - 0.244855637550354 7.567890446662903 - 0.17985563755035394' +\n            ' 9.866890446662904 0.7431443624496461 11.930890446662904 C 1.6681443624496461 13.994890446662904 3.343144362449646' +\n            ' 15.575890446662903 5.457144362449647 16.380890446662903 C 6.426144362449647 16.7518904466629 7.450144362449647' +\n            ' 16.9348904466629 8.470144362449647 16.9348904466629 C 9.815144362449647 16.9348904466629 11.155144362449647 ' +\n            '16.6178904466629 12.367144362449647 15.986890446662901 L 11.351144362449647 14.024890446662901 C 9.767144362449647' +\n            ' 14.8468904466629 7.906144362449647 14.953890446662902 6.237144362449647 14.3178904466629 C 4.677144362449647' +\n            ' 13.7218904466629 3.444144362449647 12.5558904466629 2.758144362449647 11.028890446662901 C 2.078144362449646 ' +\n            '9.501890446662903 2.031144362449646 7.802890446662903 2.622144362449646 6.243890446662903 C 3.216144362449646' +\n            ' 4.6798904466629025 4.387144362449646 3.442890446662903 5.914144362449646 2.760890446662903 C 7.437144362449646 ' +\n            '2.078890446662903 9.137144362449646 2.0298904466629026 10.700144362449645 2.6258904466629027 C 11.946144362449646 ' +\n            '3.100890446662903 12.971144362449646 3.9538904466629026 13.686144362449646 5.049890446662903 L 11.540144362449645 ' +\n            '5.850890446662903 L 16.856144362449648 10.238890446662904 Z';\n        var pivotX = left + wrapper.pivot.x * wrapper.actualSize.width;\n        var pivotY = top;\n        pivotX = (pivotX + transform.tx) * transform.scale;\n        pivotY = (pivotY + transform.ty) * transform.scale;\n        newPoint = { x: pivotX - size.width * 0.5, y: pivotY - 30 - size.height * 0.5 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, (transform.tx + wrapper.offsetX) * transform.scale, (transform.ty + wrapper.offsetY) * transform.scale);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = {\n            x: newPoint.x,\n            y: newPoint.y,\n            angle: wrapper.rotateAngle + wrapper.parentTransform,\n            fill: '#231f20', stroke: 'black', strokeWidth: 0.5, dashArray: '', data: data,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: wrapper.id, class: 'e-diagram-rotate-handle'\n        };\n        options.id = 'rotateThumb';\n        this.svgRenderer.drawPath(canvas, options, this.diagramId, true, undefined, { 'aria-label': 'Thumb to rotate the selected object' });\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPathElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.data = element.absolutePath;\n        options.data = element.absolutePath;\n        var ariaLabel = element.description ? element.description : element.id;\n        if (!this.isSvgMode) {\n            options.x = element.flipOffset.x ? element.flipOffset.x : options.x;\n            options.y = element.flipOffset.y ? element.flipOffset.y : options.y;\n        }\n        if (element.isExport) {\n            var pathBounds = element.absoluteBounds;\n            options.data = updatePath(element, pathBounds, undefined, options);\n        }\n        this.renderer.drawPath(canvas, options, this.diagramId, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderSvgGridlines = function (snapSettings, gridSvg, t, rulerSettings, hRuler, vRuler) {\n        //render gridlines\n        var pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n        var defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n        defs.setAttribute('id', this.diagramId + '_grid_pattern_defn');\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines ||\n            snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            pattern.setAttribute('id', this.diagramId + '_pattern');\n        }\n        var hWidth = 0;\n        var hHeight = 0;\n        var hSegmentwidth = 0;\n        var vSegmentwidth = 0;\n        var scale = 1;\n        var isRulerGrid = false;\n        if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler && vRuler) {\n            hSegmentwidth = vRuler.updateSegmentWidth(t.scale);\n            vSegmentwidth = hRuler.updateSegmentWidth(t.scale);\n            snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n            snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            isRulerGrid = true;\n        }\n        else {\n            for (var _i = 0, _a = snapSettings.verticalGridlines.lineIntervals; _i < _a.length; _i++) {\n                var entry = _a[_i];\n                hWidth += entry;\n            }\n            for (var _b = 0, _c = snapSettings.horizontalGridlines.lineIntervals; _b < _c.length; _b++) {\n                var entry = _c[_b];\n                hHeight += entry;\n            }\n            scale = this.scaleSnapInterval(snapSettings, t.scale);\n        }\n        hWidth = isRulerGrid ? vSegmentwidth : hWidth * scale;\n        hHeight = isRulerGrid ? hSegmentwidth : hHeight * scale;\n        var attr = {\n            id: this.diagramId + '_pattern', x: 0, y: 0, width: hWidth,\n            height: hHeight, patternUnits: 'userSpaceOnUse'\n        };\n        setAttributeSvg(pattern, attr);\n        this.horizontalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n        this.verticalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n        defs.appendChild(pattern);\n        gridSvg.appendChild(defs);\n    };\n    DiagramRenderer.prototype.horizontalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var hLine;\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines) {\n            var intervals = snapSettings.horizontalGridlines.lineIntervals;\n            var strokestyle = snapSettings.horizontalGridlines.lineColor;\n            if (snapSettings.horizontalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.horizontalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, vRuler, hHeight);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                hLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.horizontalGridlines.lineColor,\n                    'd': 'M0,' + (d) + ' L' + hWidth + ',' + (d) + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(hLine, attr);\n                pattern.appendChild(hLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    DiagramRenderer.prototype.verticalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var vLine;\n        if (snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            var intervals = snapSettings.verticalGridlines.lineIntervals;\n            var strokestyle = snapSettings.verticalGridlines.lineColor;\n            if (snapSettings.verticalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.verticalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, hRuler, hWidth);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                vLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.verticalGridlines.lineColor,\n                    'd': 'M' + (d) + ',0 L' + (d) + ',' + hHeight + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(vLine, attr);\n                pattern.appendChild(vLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.updateGrid = function (snapSettings, svgGrid, transform, rulerSettings, hRuler, vRuler) {\n        var grid = svgGrid.getElementById(this.diagramId + '_grid_rect');\n        var i;\n        var isRulerGrid = false;\n        if (grid) {\n            var pattern = svgGrid.getElementById(this.diagramId + '_pattern');\n            if (pattern) {\n                pattern.parentNode.removeChild(pattern);\n            }\n            var hSegmentwidth = 0;\n            var vSegmentwidth = 0;\n            var scale = 1;\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler && hRuler) {\n                hSegmentwidth = vRuler.updateSegmentWidth(transform.scale);\n                vSegmentwidth = hRuler.updateSegmentWidth(transform.scale);\n                isRulerGrid = true;\n                snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n                snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            }\n            else {\n                scale = this.scaleSnapInterval(snapSettings, transform.scale);\n            }\n            var height = 0;\n            for (i = 0; i < snapSettings.horizontalGridlines.lineIntervals.length; i++) {\n                height += snapSettings.horizontalGridlines.lineIntervals[i];\n            }\n            var width = 0;\n            for (i = 0; i < snapSettings.verticalGridlines.lineIntervals.length; i++) {\n                width += snapSettings.verticalGridlines.lineIntervals[i];\n            }\n            var attr = {\n                x: -transform.tx * transform.scale,\n                y: -transform.ty * transform.scale\n            };\n            setAttributeSvg(grid, attr);\n            width = isRulerGrid ? vSegmentwidth : width * scale;\n            height = isRulerGrid ? hSegmentwidth : height * scale;\n            attr = {\n                id: this.diagramId + '_pattern', x: 0, y: 0, width: width,\n                height: height, patternUnits: 'userSpaceOnUse'\n            };\n            pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n            setAttributeSvg(pattern, attr);\n            this.horizontalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n            this.verticalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n            var defs = svgGrid.getElementById(this.diagramId + '_grid_pattern_defn');\n            if (defs) {\n                defs.appendChild(pattern);\n            }\n        }\n    };\n    DiagramRenderer.prototype.updateLineIntervals = function (intervals, rulerSettings, ruler, segmentWidth) {\n        var newInterval = [];\n        var tickInterval = segmentWidth / ruler.interval;\n        for (var i = 0; i < ruler.interval * 2; i++) {\n            if (i % 2 === 0) {\n                newInterval[i] = (i === 0) ? 1.25 : 0.25;\n            }\n            else {\n                newInterval[i] = tickInterval - newInterval[i - 1];\n            }\n        }\n        return newInterval;\n    };\n    DiagramRenderer.prototype.scaleSnapInterval = function (snapSettings, scale) {\n        if (scale >= 2) {\n            while (scale >= 2) {\n                scale /= 2;\n            }\n        }\n        else if (scale <= 0.5) {\n            while (scale <= 0.5) {\n                scale *= 2;\n            }\n        }\n        var i;\n        snapSettings.horizontalGridlines.scaledIntervals = snapSettings.horizontalGridlines.snapIntervals;\n        snapSettings.verticalGridlines.scaledIntervals = snapSettings.verticalGridlines.snapIntervals;\n        if (scale !== 1) {\n            var gridlines = snapSettings.horizontalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n            gridlines = snapSettings.verticalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n        }\n        return scale;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderTextElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n        options.content = element.content;\n        options.breakWord = wordBreakToString(element.style.textWrapping);\n        options.textAlign = textAlignToString(element.style.textAlign);\n        options.color = element.style.color;\n        options.italic = element.style.italic;\n        options.bold = element.style.bold;\n        options.fontSize = element.style.fontSize;\n        options.fontFamily = element.style.fontFamily;\n        options.textOverflow = element.style.textOverflow;\n        options.textWrapping = element.style.textWrapping;\n        options.textDecoration = element.style.textDecoration;\n        options.doWrap = element.doWrap;\n        options.wrapBounds = element.wrapBounds;\n        options.childNodes = element.childNodes;\n        options.dashArray = '';\n        options.strokeWidth = 0;\n        options.fill = element.style.fill;\n        var ariaLabel = element.description ? element.description : element.content ? element.content : element.id;\n        if (element.style.textWrapping === 'Wrap' && this.groupElement && options.height > this.groupElement.actualSize.height &&\n            (element.style.textOverflow === 'Clip' || element.style.textOverflow === 'Ellipsis')) {\n            options.y = options.y + (options.height - this.groupElement.actualSize.height) / 2;\n        }\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        this.renderer.drawText(canvas, options, parentSvg, ariaLabel, this.diagramId, (element.isExport && Math.min(element.exportScaleValue.x || element.exportScaleValue.y)), this.groupElement);\n        if (this.isSvgMode) {\n            element.doWrap = false;\n        }\n    };\n    DiagramRenderer.prototype.renderNativeElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var templateWidth;\n        var templateHeight;\n        var nativeSvg = this.getParentSvg(element, undefined, canvas) || parentSvg;\n        var nativeLayer = this.getParentElement(element, canvas, nativeSvg).g || canvas;\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        switch (element.scale) {\n            case 'None':\n                templateWidth = element.contentSize.width;\n                templateHeight = element.contentSize.height;\n                break;\n            case 'Stretch':\n                templateWidth = element.actualSize.width;\n                templateHeight = element.actualSize.height;\n                break;\n            case 'Meet':\n                if (element.actualSize.width <= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n            case 'Slice':\n                if (element.actualSize.width >= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n        }\n        if (this.svgRenderer) {\n            this.svgRenderer.drawNativeContent(element, nativeLayer, templateHeight, templateWidth, nativeSvg);\n        }\n    };\n    DiagramRenderer.prototype.renderHTMLElement = function (element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue) {\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        if (this.svgRenderer) {\n            this.svgRenderer.drawHTMLContent(element, htmlLayer.children[0], transform, isDiagramChild(htmlLayer), indexValue);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderImageElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        // let sx: number; let sy: number;\n        var imageWidth;\n        var imageHeight;\n        var sourceWidth;\n        var sourceHeight;\n        if (element.stretch === 'Stretch') {\n            imageWidth = element.actualSize.width;\n            imageHeight = element.actualSize.height;\n        }\n        else {\n            var contentWidth = element.contentSize.width;\n            var contentHeight = element.contentSize.height;\n            var widthRatio = options.width / contentWidth;\n            var heightRatio = options.height / contentHeight;\n            var ratio = void 0;\n            switch (element.stretch) {\n                case 'Meet':\n                    ratio = Math.min(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    options.x += Math.abs(options.width - imageWidth) / 2;\n                    options.y += Math.abs(options.height - imageHeight) / 2;\n                    break;\n                case 'Slice':\n                    widthRatio = options.width / contentWidth;\n                    heightRatio = options.height / contentHeight;\n                    ratio = Math.max(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    sourceWidth = options.width / imageWidth * contentWidth;\n                    sourceHeight = options.height / imageHeight * contentHeight;\n                    break;\n                case 'None':\n                    imageWidth = contentWidth;\n                    imageHeight = contentHeight;\n                    break;\n            }\n        }\n        options.width = imageWidth;\n        options.height = imageHeight;\n        //Commented for code coverage\n        //(options as ImageAttributes).sourceX = sx;\n        //(options as ImageAttributes).sourceY = sy;\n        options.sourceWidth = sourceWidth;\n        options.sourceHeight = sourceHeight;\n        options.source = element.source;\n        options.alignment = element.imageAlign;\n        options.scale = element.imageScale;\n        options.description = element.description ? element.description : element.id;\n        this.renderer.drawImage(canvas, options, parentSvg, fromPalette);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderContainer = function (group, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var svgParent = { svg: parentSvg, g: canvas };\n        if (this.diagramId) {\n            parentSvg = this.getParentSvg(group) || parentSvg;\n            if (this.isSvgMode) {\n                var groupElement = void 0;\n                groupElement = this.getParentElement(group, canvas, parentSvg, indexValue).g || canvas;\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children)) || parentSvg;\n                var svgNativeParent = this.getParentElement(this.hasNativeParent(group.children), groupElement, parentSvg, indexValue);\n                svgParent.svg = svgNativeParent.svg || parentSvg;\n                svgParent.g = svgNativeParent.g || groupElement;\n                if (createParent) {\n                    if (parentSvg) {\n                        if (!parentSvg.getElementById(svgParent.g.id)) {\n                            canvas.appendChild(svgParent.g);\n                        }\n                    }\n                    canvas = svgParent.g;\n                }\n                else {\n                    canvas = svgParent.g;\n                }\n            }\n        }\n        this.renderRect(group, canvas, transform, parentSvg);\n        this.groupElement = group;\n        if (group.hasChildren()) {\n            var parentG = void 0;\n            var svgParent_1;\n            var flip = void 0;\n            for (var _i = 0, _a = group.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children) || child) || parentSvg;\n                if (this.isSvgMode) {\n                    svgParent_1 = this.getParentElement(this.hasNativeParent(group.children) || child, canvas, parentSvg);\n                    parentG = svgParent_1.g || canvas;\n                    if (svgParent_1.svg) {\n                        parentSvg = svgParent_1.svg;\n                    }\n                }\n                if (!this.isSvgMode) {\n                    child.flip = group.flip;\n                }\n                this.renderElement(child, parentG || canvas, htmlLayer, transform, parentSvg, true, fromPalette, indexValue);\n                if (child instanceof TextElement && parentG && !(group.elementActions & ElementAction.ElementIsGroup)) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(child, parentG, flip);\n                }\n                if ((child.elementActions & ElementAction.ElementIsPort) && parentG) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(group, parentG, flip);\n                }\n                if (!(child instanceof TextElement) && group.flip !== 'None' &&\n                    (group.elementActions & ElementAction.ElementIsGroup)) {\n                    this.renderFlipElement(child, parentG || canvas, group.flip);\n                }\n            }\n            if (!(group.elementActions & ElementAction.ElementIsGroup)) {\n                this.renderFlipElement(group, canvas, group.flip);\n            }\n        }\n    };\n    DiagramRenderer.prototype.renderFlipElement = function (element, canvas, flip) {\n        var attr = {};\n        var scaleX = 1;\n        var scaleY = 1;\n        var posX = 0;\n        var posY = 0;\n        var offsetX = 0;\n        var offsetY = 0;\n        if (flip !== 'None') {\n            if (flip === 'Horizontal' || flip === 'Both') {\n                posX = element.bounds.center.x;\n                offsetX = -element.bounds.center.x;\n                scaleX = -1;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                posY = element.bounds.center.y;\n                offsetY = -element.bounds.center.y;\n                scaleY = -1;\n            }\n            attr = {\n                'transform': 'translate(' + posX + ',' + posY + ') scale(' + scaleX + ','\n                    + scaleY + ') translate(' + offsetX + ',' + offsetY + ')'\n            };\n        }\n        else {\n            attr = {\n                'transform': 'translate(' + 0 + ',' + 0 + ')'\n            };\n        }\n        if (attr) {\n            setAttributeSvg(canvas, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.hasNativeParent = function (children, count) {\n        if (children && children.length > 0 && (count || 0 < 3)) {\n            var child = children[0];\n            if (child instanceof DiagramNativeElement) {\n                return child;\n            }\n            else if (child.children && child.children.length) {\n                this.hasNativeParent(child.children, count++ || 0);\n            }\n        }\n        return undefined;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRect = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = element.cornerRadius || 0;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawRect = function (canvas, options) {\n        options.cornerRadius = 0;\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.getBaseAttributes = function (element, transform) {\n        var options = {\n            width: element.actualSize.width, height: element.actualSize.height,\n            x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5,\n            fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n            dashArray: element.style.strokeDashArray || '', opacity: element.style.opacity, shadow: element.shadow,\n            gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n            canApplyStyle: element.canApplyStyle\n        };\n        if (element.isExport) {\n            options.width *= element.exportScaleValue.x;\n            options.height *= element.exportScaleValue.y;\n            options.x *= element.exportScaleValue.x;\n            options.y *= element.exportScaleValue.y;\n            options.strokeWidth *= element.exportScaleValue.x;\n        }\n        if (element.flip) {\n            options.flip = element.flip;\n        }\n        if (transform) {\n            options.x += transform.tx;\n            options.y += transform.ty;\n        }\n        return options;\n    };\n    /**   @private  */\n    DiagramRenderer.renderSvgBackGroundImage = function (background, diagramElement, x, y, width, height) {\n        if (background.source) {\n            var backgroundLayer = getBackgroundLayerSvg(diagramElement.id);\n            var target = backgroundLayer.getElementById(diagramElement.id + '_image');\n            if (!target) {\n                var bgimageLayer = getBackgroundImageLayer(diagramElement.id);\n                target = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n                target.setAttribute('id', diagramElement.id + '_image');\n                bgimageLayer.appendChild(target);\n            }\n            var imageObj = new Image();\n            imageObj.src = background.source;\n            target.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n            var scale = background.scale !== 'None' ? background.scale : '';\n            var imgAlign = background.align;\n            var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n            if (scale) {\n                aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n            }\n            var attr = {\n                'id': diagramElement.id + '_image', 'x': x, 'y': y,\n                'width': width, 'height': height,\n                'preserveAspectRatio': aspectRatio\n            };\n            setAttributeSvg(target, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.transformLayers = function (transform, svgMode) {\n        var tx = transform.tx * transform.scale;\n        var ty = transform.ty * transform.scale;\n        if (tx !== this.transform.x || ty !== this.transform.y || (tx === 0 || ty === 0)) {\n            //diagram layer\n            if (svgMode) {\n                var diagramLayer = this.diagramSvgLayer.getElementById(this.diagramId + '_diagramLayer');\n                diagramLayer.setAttribute('transform', 'translate('\n                    + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                    + transform.scale + ')');\n            }\n            //background\n            //gridline\n            var gridLayer = getGridLayer(this.diagramId);\n            gridLayer.setAttribute('transform', 'translate(' + (transform.tx * transform.scale) + ','\n                + (transform.ty * transform.scale) + ')');\n            //portslayer    \n            var portsLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramPorts');\n            portsLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //expandlayer\n            var expandLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramExpander');\n            expandLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //nativelayer\n            var nativeLayer = this.nativeSvgLayer.getElementById(this.diagramId + '_nativeLayer');\n            nativeLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //htmlLayer\n            var htmlLayer = getHTMLLayer(this.diagramId).children[0];\n            htmlLayer.style.transform = 'translate('\n                + (transform.tx * transform.scale) + 'px,' + (transform.ty * transform.scale) + 'px)scale('\n                + transform.scale + ')';\n            this.transform = { x: transform.tx * transform.scale, y: transform.ty * transform.scale };\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramRenderer.prototype.updateNode = function (element, diagramElementsLayer, htmlLayer, transform, insertIndex) {\n        this.renderElement(element, diagramElementsLayer, htmlLayer, transform, this.getParentSvg(element), undefined, undefined, insertIndex);\n    };\n    return DiagramRenderer;\n}());\nexport { DiagramRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * Defines the size and appearance of the diagram page\n */\nvar Background = /** @class */ (function (_super) {\n    __extends(Background, _super);\n    function Background() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Background.prototype, \"source\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Background.prototype, \"color\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"align\", void 0);\n    return Background;\n}(ChildProperty));\nexport { Background };\n/**\n * Defines the size and appearance of diagram page\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * pageSettings: {  width: 800, height: 600, orientation: 'Landscape',\n * background: { color: 'blue' }, boundaryConstraints: 'Infinity',\n * multiplePage: true, showPageBreaks: true, },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], PageSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Landscape')\n    ], PageSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Infinity')\n    ], PageSettings.prototype, \"boundaryConstraints\", void 0);\n    __decorate([\n        Complex({}, Background)\n    ], PageSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"multiplePage\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"showPageBreaks\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n/**\n * Diagram ScrollSettings module handles the scroller properties of the diagram\n */\nvar ScrollSettings = /** @class */ (function (_super) {\n    __extends(ScrollSettings, _super);\n    function ScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"horizontalOffset\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"verticalOffset\", void 0);\n    __decorate([\n        Property(1)\n    ], ScrollSettings.prototype, \"currentZoom\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortHeight\", void 0);\n    __decorate([\n        Property(0.2)\n    ], ScrollSettings.prototype, \"minZoom\", void 0);\n    __decorate([\n        Property(30)\n    ], ScrollSettings.prototype, \"maxZoom\", void 0);\n    __decorate([\n        Property('Diagram')\n    ], ScrollSettings.prototype, \"scrollLimit\", void 0);\n    __decorate([\n        Property()\n    ], ScrollSettings.prototype, \"scrollableArea\", void 0);\n    __decorate([\n        Property(false)\n    ], ScrollSettings.prototype, \"canAutoScroll\", void 0);\n    __decorate([\n        Complex({ left: 15, right: 15, top: 15, bottom: 15 }, Margin)\n    ], ScrollSettings.prototype, \"autoScrollBorder\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], ScrollSettings.prototype, \"padding\", void 0);\n    return ScrollSettings;\n}(ChildProperty));\nexport { ScrollSettings };\n","/**\n * ServiceLocator\n * @hidden\n */\nvar ServiceLocator = /** @class */ (function () {\n    function ServiceLocator() {\n        this.services = {};\n    }\n    ServiceLocator.prototype.register = function (name, type) {\n        this.services[name] = type;\n    };\n    ServiceLocator.prototype.getService = function (name) {\n        return this.services[name];\n    };\n    return ServiceLocator;\n}());\nexport { ServiceLocator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { SnapConstraints } from '../enum/enum';\n/**\n * Provides a visual guidance while dragging or arranging the objects on the Diagram surface\n */\nvar Gridlines = /** @class */ (function (_super) {\n    __extends(Gridlines, _super);\n    function Gridlines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('lightgray')\n    ], Gridlines.prototype, \"lineColor\", void 0);\n    __decorate([\n        Property('')\n    ], Gridlines.prototype, \"lineDashArray\", void 0);\n    __decorate([\n        Property([1.25, 18.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75])\n    ], Gridlines.prototype, \"lineIntervals\", void 0);\n    __decorate([\n        Property([20])\n    ], Gridlines.prototype, \"snapIntervals\", void 0);\n    return Gridlines;\n}(ChildProperty));\nexport { Gridlines };\n/**\n * Defines the gridlines and defines how and when the objects have to be snapped\n * @default {}\n */\nvar SnapSettings = /** @class */ (function (_super) {\n    __extends(SnapSettings, _super);\n    function SnapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"horizontalGridlines\", void 0);\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"verticalGridlines\", void 0);\n    __decorate([\n        Property(SnapConstraints.All)\n    ], SnapSettings.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapAngle\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapObjectDistance\", void 0);\n    return SnapSettings;\n}(ChildProperty));\nexport { SnapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Defines the properties of both horizontal and vertical guides/rulers to measure the diagram area.\n */\nvar DiagramRuler = /** @class */ (function (_super) {\n    __extends(DiagramRuler, _super);\n    function DiagramRuler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(5)\n    ], DiagramRuler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], DiagramRuler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], DiagramRuler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], DiagramRuler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], DiagramRuler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], DiagramRuler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramRuler.prototype, \"arrangeTick\", void 0);\n    return DiagramRuler;\n}(ChildProperty));\nexport { DiagramRuler };\n/**\n * Defines the ruler settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * rulerSettings: { showRulers: true,\n * horizontalRuler: { segmentWidth: 50,interval: 10 },\n * verticalRuler: {segmentWidth: 200,interval: 20}\n * },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar RulerSettings = /** @class */ (function (_super) {\n    __extends(RulerSettings, _super);\n    function RulerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], RulerSettings.prototype, \"showRulers\", void 0);\n    __decorate([\n        Property(true)\n    ], RulerSettings.prototype, \"dynamicGrid\", void 0);\n    __decorate([\n        Complex({ orientation: 'Horizontal' }, DiagramRuler)\n    ], RulerSettings.prototype, \"horizontalRuler\", void 0);\n    __decorate([\n        Complex({ orientation: 'Vertical' }, DiagramRuler)\n    ], RulerSettings.prototype, \"verticalRuler\", void 0);\n    return RulerSettings;\n}(ChildProperty));\nexport { RulerSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Configures the data source that is to be bound with diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let data: object[] = [\n * { Name: \"Elizabeth\", Role: \"Director\" },\n * { Name: \"Christina\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Yoshi\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Philip\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Yang\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Roland\", ReportingPerson: \"Yang\", Role: \"Lead\" },\n * { Name: \"Yvonne\", ReportingPerson: \"Yang\", Role: \"Lead\" }\n * ];\n * let items: DataManager = new DataManager(data as JSON[]);\n * let diagram: Diagram = new Diagram({\n * ...\n * layout: {\n *             type: 'OrganizationalChart'\n * },\n * dataSourceSettings: {\n * id: 'Name', parentId: 'ReportingPerson', dataManager: items,\n * }\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar CrudAction = /** @class */ (function (_super) {\n    __extends(CrudAction, _super);\n    function CrudAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"read\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"create\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"update\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"destroy\", void 0);\n    __decorate([\n        Property()\n    ], CrudAction.prototype, \"customFields\", void 0);\n    return CrudAction;\n}(ChildProperty));\nexport { CrudAction };\nvar ConnectionDataSource = /** @class */ (function (_super) {\n    __extends(ConnectionDataSource, _super);\n    function ConnectionDataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], ConnectionDataSource.prototype, \"crudAction\", void 0);\n    return ConnectionDataSource;\n}(ChildProperty));\nexport { ConnectionDataSource };\nvar DataSource = /** @class */ (function (_super) {\n    __extends(DataSource, _super);\n    function DataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"root\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"parentId\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"doBinding\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], DataSource.prototype, \"crudAction\", void 0);\n    __decorate([\n        Complex({}, ConnectionDataSource)\n    ], DataSource.prototype, \"connectionDataSource\", void 0);\n    return DataSource;\n}(ChildProperty));\nexport { DataSource };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Margin } from '../core/appearance';\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines the behavior of the automatic layouts\n */\nvar Layout = /** @class */ (function (_super) {\n    __extends(Layout, _super);\n    function Layout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"fixedNode\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"horizontalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"verticalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"maxIteration\", void 0);\n    __decorate([\n        Property(40)\n    ], Layout.prototype, \"springFactor\", void 0);\n    __decorate([\n        Property(50)\n    ], Layout.prototype, \"springLength\", void 0);\n    __decorate([\n        Complex({ left: 50, top: 50, right: 0, bottom: 0 }, Margin)\n    ], Layout.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property('TopToBottom')\n    ], Layout.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"connectionDirection\", void 0);\n    __decorate([\n        Property('Default')\n    ], Layout.prototype, \"connectorSegments\", void 0);\n    __decorate([\n        Property('None')\n    ], Layout.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getLayoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getBranch\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"bounds\", void 0);\n    __decorate([\n        Property(true)\n    ], Layout.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"root\", void 0);\n    return Layout;\n}(ChildProperty));\nexport { Layout };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Node } from '../objects/node';\nimport { Connector, StraightSegment } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { BpmnSubEvent } from '../objects/node';\nimport { PointPort } from '../objects/port';\nimport { rotatePoint, cloneObject } from '../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { getPolygonPath } from '../utility/path-util';\nimport { canOutConnect, canInConnect, canAllowDrop, canPortInConnect, canPortOutConnect } from '../utility/constraints-util';\nimport { transformPointByMatrix, rotateMatrix, identityMatrix } from '../primitives/matrix';\nimport { NodeConstraints, DiagramEvent, PortConstraints } from './../enum/enum';\nimport { TextElement } from '../core/elements/text-element';\nimport { contains } from './actions';\nimport { Selector } from './selector';\nimport { getInOutConnectPorts } from '../utility/diagram-util';\n/**\n * Defines the interactive tools\n */\nvar ToolBase = /** @class */ (function () {\n    /**\n     * Initializes the tool\n     * @param command Command that is corresponding to the current action\n     */\n    function ToolBase(command, protectChange) {\n        if (protectChange === void 0) { protectChange = false; }\n        /**\n         * Command that is corresponding to the current action\n         */\n        this.commandHandler = null;\n        /**\n         * Sets/Gets whether the interaction is being done\n         */\n        this.inAction = false;\n        /**\n         * Sets/Gets the protect change\n         */\n        this.isProtectChange = false;\n        /**\n         * Sets/Gets the current element that is under mouse\n         */\n        this.currentElement = null;\n        /**   @private  */\n        this.blocked = false;\n        this.isTooltipVisible = false;\n        /** @private */\n        this.childTable = {};\n        /**\n         * Sets/Gets the previous object when mouse down\n         */\n        this.undoElement = { nodes: [], connectors: [] };\n        this.checkProperty = true;\n        this.undoParentElement = { nodes: [], connectors: [] };\n        this.commandHandler = command;\n        this.isProtectChange = protectChange;\n    }\n    ToolBase.prototype.startAction = function (currentElement) {\n        this.currentElement = currentElement;\n        this.inAction = true;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseDown = function (args) {\n        this.currentElement = args.source;\n        this.startPosition = this.currentPosition = this.prevPosition = args.position;\n        this.isTooltipVisible = true;\n        this.startAction(args.source);\n        this.checkProperty = true;\n    };\n    ToolBase.prototype.checkPropertyValue = function () {\n        if (this.checkProperty) {\n            this.commandHandler.startTransaction(this.isProtectChange);\n        }\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseMove = function (args) {\n        this.currentPosition = args.position;\n        if (this.inAction) {\n            this.commandHandler.startTransaction(this.isProtectChange);\n            this.checkProperty = false;\n        }\n        //this.currentElement = currentElement;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.currentPosition = args.position;\n        // this.currentElement = currentElement;\n        this.isTooltipVisible = false;\n        this.commandHandler.endTransaction(this.isProtectChange);\n        //At the end\n        this.endAction();\n    };\n    ToolBase.prototype.endAction = function () {\n        if (!this.isTooltipVisible) {\n            this.commandHandler.closeTooltip();\n        }\n        this.commandHandler = null;\n        this.currentElement = null;\n        this.currentPosition = null;\n        this.inAction = false;\n        this.blocked = false;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseWheel = function (args) {\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ToolBase.prototype.updateSize = function (shape, startPoint, endPoint, corner, initialBounds, angle) {\n        shape = this.commandHandler.renderContainerHelper(shape) || shape;\n        var horizontalsnap = { snapped: false, offset: 0, left: false, right: false };\n        var verticalsnap = { snapped: false, offset: 0, top: false, bottom: false };\n        var difx = this.currentPosition.x - this.startPosition.x;\n        var dify = this.currentPosition.y - this.startPosition.y;\n        var snapEnabled = (!(shape instanceof TextElement)) && this.commandHandler.snappingModule\n            && this.commandHandler.snappingModule.canSnap();\n        var snapLine = snapEnabled ? this.commandHandler.snappingModule.getLayer() : null;\n        var rotateAngle = (shape instanceof TextElement) ? angle : shape.rotateAngle;\n        var matrix;\n        matrix = identityMatrix();\n        rotateMatrix(matrix, -rotateAngle, 0, 0);\n        var x = shape.offsetX;\n        var y = shape.offsetY;\n        var w = shape.width;\n        var h = shape.height;\n        x = x - w * shape.pivot.x;\n        y = y - h * shape.pivot.y;\n        var deltaWidth = 0;\n        var deltaHeight = 0;\n        var diff;\n        var width = (shape instanceof TextElement) ? shape.actualSize.width : shape.width;\n        var height = (shape instanceof TextElement) ? shape.actualSize.height : shape.height;\n        switch (corner) {\n            case 'ResizeWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                deltaHeight = 1;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width - difx) / width;\n                break;\n            case 'ResizeEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = 1;\n                break;\n            case 'ResizeNorth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n            case 'ResizeNorthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeNorthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaHeight = (initialBounds.height + dify) / height;\n                deltaWidth = (initialBounds.width + difx) / width;\n                break;\n            case 'ResizeSouthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : dify;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n        }\n        return { width: deltaWidth, height: deltaHeight };\n    };\n    ToolBase.prototype.getPivot = function (corner) {\n        switch (corner) {\n            case 'ResizeWest':\n                return { x: 1, y: 0.5 };\n            case 'ResizeEast':\n                return { x: 0, y: 0.5 };\n            case 'ResizeNorth':\n                return { x: 0.5, y: 1 };\n            case 'ResizeSouth':\n                return { x: 0.5, y: 0 };\n            case 'ResizeNorthEast':\n                return { x: 0, y: 1 };\n            case 'ResizeNorthWest':\n                return { x: 1, y: 1 };\n            case 'ResizeSouthEast':\n                return { x: 0, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: 1, y: 0 };\n        }\n        return { x: 0.5, y: 0.5 };\n    };\n    return ToolBase;\n}());\nexport { ToolBase };\n/**\n * Helps to select the objects\n */\nvar SelectTool = /** @class */ (function (_super) {\n    __extends(SelectTool, _super);\n    function SelectTool(commandHandler, protectChange, action) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.action = action;\n        return _this;\n    }\n    /**   @private  */\n    SelectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        //draw selected region\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.clearSelectedItems();\n            this.commandHandler.drawSelectionRectangle(rect.x, rect.y, rect.width, rect.height);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        //rubber band selection\n        if (Point.equals(this.currentPosition, this.prevPosition) === false && this.inAction) {\n            var region = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.doRubberBandSelection(region);\n        }\n        else {\n            //single selection\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            if (!this.commandHandler.hasSelection() || !args.info || !args.info.ctrlKey) {\n                this.commandHandler.clearSelection(args.source === null ? true : false);\n                if (this.action === 'LabelSelect') {\n                    this.commandHandler.labelSelect(args.source, args.sourceWrapper);\n                }\n                else if (args.source) {\n                    this.commandHandler.selectObjects([args.source], false, arrayNodes);\n                }\n            }\n            else {\n                //handling multiple selection\n                if (args && args.source) {\n                    if (!this.commandHandler.isSelected(args.source)) {\n                        this.commandHandler.selectObjects([args.source], true);\n                    }\n                    else {\n                        if (args.clickCount === 1) {\n                            this.commandHandler.unSelect(args.source);\n                        }\n                    }\n                }\n            }\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return SelectTool;\n}(ToolBase));\nexport { SelectTool };\n/**\n * Helps to edit the selected connectors\n */\nvar ConnectTool = /** @class */ (function (_super) {\n    __extends(ConnectTool, _super);\n    function ConnectTool(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = undefined;\n        if (!(this instanceof ConnectorDrawingTool)) {\n            this.undoElement = cloneObject(args.source);\n        }\n        _super.prototype.mouseDown.call(this, args);\n        var oldValue;\n        var connectors;\n        if (args.source && args.source.connectors) {\n            oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment \n        if (this.endPoint === 'BezierSourceThumb' || this.endPoint === 'BezierTargetThumb') {\n            for (var i = 0; i < connectors.segments.length; i++) {\n                var segment = connectors.segments[i];\n                var segmentpoint1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n                var segmentpoint2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n                if (contains(this.currentPosition, segmentpoint1, connectors.hitPadding) ||\n                    contains(this.currentPosition, segmentpoint2, connectors.hitPadding)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.commandHandler.updateSelector();\n        this.commandHandler.removeSnap();\n        this.commandHandler.changeAnnotationDrag(args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            args.source.connectors.length &&\n            ((!Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint) ||\n                (args.source.connectors[0].sourceID !== this.undoElement.connectors[0].sourceID)))) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                ((!Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint))\n                    || (args.source.connectors[0].targetID !== this.undoElement.connectors[0].targetID))))) {\n            var oldValues = void 0;\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                oldValues = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortName = void 0;\n            var targetNodeNode = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortName = target.id : targetNodeNode = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Completed', targetNode: targetNodeNode,\n                oldValue: oldValues, newValue: oldValues, cancel: false, targetPort: targetPortName\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ? DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n            this.commandHandler.removeTerminalSegment(connector, true);\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'ConnectionChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement),\n                    category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        else if (!(this instanceof ConnectorDrawingTool) &&\n            (this.endPoint === 'BezierTargetThumb' || this.endPoint === 'BezierSourceThumb')) {\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint)) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint)))) {\n            var oldValue = void 0;\n            var connectors = void 0;\n            if (args.source && args.source.connectors) {\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connectors = args.source.connectors[0];\n            }\n            var targetPort = void 0;\n            var targetNode = void 0;\n            if (args.target) {\n                targetNode = args.target.id;\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort || target instanceof BpmnSubEvent) ? targetPort = target.id : targetNode = target.id;\n            }\n            var arg = {\n                connector: connectors, state: 'Start', targetNode: targetNode,\n                oldValue: oldValue, newValue: oldValue, cancel: false, targetPort: targetPort\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var newValue = void 0;\n            var oldValue = void 0;\n            var inPort = void 0;\n            var outPort = void 0;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                newValue = {\n                    x: this.currentPosition.x, y: this.currentPosition.y,\n                };\n                oldValue = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortId = void 0;\n            var targetNodeId = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortId = target.id : targetNodeId = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Progress', targetNode: targetNodeId,\n                oldValue: oldValue, newValue: newValue, cancel: false, targetPort: targetPortId\n            };\n            if (!(this instanceof ConnectorDrawingTool)) {\n                var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                    DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                this.commandHandler.triggerEvent(trigger, arg);\n            }\n            if (args.target) {\n                inPort = getInOutConnectPorts(args.target, true);\n                outPort = getInOutConnectPorts(args.target, false);\n            }\n            if (!arg.cancel && this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, args.source, this.currentPosition, this.selectedSegment, args.target, targetPortId);\n                this.commandHandler.updateSelector();\n                if (args.target && ((this.endPoint === 'ConnectorSourceEnd' && (canOutConnect(args.target) || canPortOutConnect(outPort)))\n                    || (this.endPoint === 'ConnectorTargetEnd' && (canInConnect(args.target) || canPortInConnect(inPort))))) {\n                    if (this.commandHandler.canDisconnect(this.endPoint, args, targetPortId, targetNodeId)) {\n                        this.commandHandler.disConnect(args.source, this.endPoint);\n                    }\n                    var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                    if (target instanceof Node) {\n                        if ((canInConnect(target) && this.endPoint === 'ConnectorTargetEnd')\n                            || (canOutConnect(target) && this.endPoint === 'ConnectorSourceEnd')) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                    else {\n                        var isConnect = this.checkConnect(target);\n                        if (isConnect) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                }\n                else if (this.endPoint.indexOf('Bezier') === -1) {\n                    this.commandHandler.disConnect(args.source, this.endPoint);\n                    this.commandHandler.updateSelector();\n                }\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.position);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'ConnectTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ConnectTool.prototype.getTooltipContent = function (position) {\n        return 'X:' + Math.round(position.x) + ' ' + 'Y:' + Math.round(position.y);\n    };\n    ConnectTool.prototype.checkConnect = function (target) {\n        if (canPortInConnect(target) && this.endPoint === 'ConnectorTargetEnd') {\n            return true;\n        }\n        else if (canPortOutConnect(target) && this.endPoint === 'ConnectorSourceEnd') {\n            return true;\n        }\n        else if (!(target.constraints & PortConstraints.None) && !canPortInConnect(target) && !canPortOutConnect(target)) {\n            return true;\n        }\n        return false;\n    };\n    /**   @private  */\n    ConnectTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.prevPosition = null;\n        this.endPoint = null;\n    };\n    return ConnectTool;\n}(ToolBase));\nexport { ConnectTool };\n/**\n * Drags the selected objects\n */\nvar MoveTool = /** @class */ (function (_super) {\n    __extends(MoveTool, _super);\n    function MoveTool(commandHandler, objType) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.currentTarget = null;\n        _this.objectType = objType;\n        return _this;\n    }\n    /**   @private  */\n    MoveTool.prototype.mouseDown = function (args) {\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            this.commandHandler.selectObjects([args.source], args.info && args.info.ctrlKey, arrayNodes);\n            var selectedObject = { nodes: [], connectors: [] };\n            if (args.source instanceof Node) {\n                selectedObject.nodes.push(cloneObject(args.source));\n            }\n            else {\n                selectedObject.connectors.push(cloneObject(args.source));\n            }\n            this.undoElement = cloneObject(selectedObject);\n        }\n        else {\n            this.undoElement = cloneObject(args.source);\n        }\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        if (this.objectType === 'Port') {\n            this.portId = args.sourceWrapper.id;\n        }\n        _super.prototype.mouseDown.call(this, args);\n        this.initialOffset = { x: 0, y: 0 };\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseUp = function (args, isPreventHistory) {\n        this.checkPropertyValue();\n        var obj;\n        var historyAdded = false;\n        var object;\n        var redoObject = { nodes: [], connectors: [] };\n        if (this.objectType !== 'Port') {\n            if (args.source instanceof Node || args.source instanceof Connector) {\n                if (args.source instanceof Node) {\n                    redoObject.nodes.push(cloneObject(args.source));\n                }\n                else {\n                    redoObject.connectors.push(cloneObject(args.source));\n                }\n                obj = cloneObject(redoObject);\n                var wrapper = args.source.wrapper;\n                obj.offsetX = wrapper.offsetX;\n                obj.offsetY = wrapper.offsetY;\n            }\n            else {\n                obj = cloneObject(args.source);\n            }\n            object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n            if ((object.id === 'helper' && !obj.nodes[0].isLane && !obj.nodes[0].isPhase)\n                || (object.id !== 'helper')) {\n                if (object.offsetX !== this.undoElement.offsetX || object.offsetY !== this.undoElement.offsetY) {\n                    var oldValues = void 0;\n                    var newValues = void 0;\n                    if (args.source) {\n                        newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                        oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                    }\n                    var arg = {\n                        source: args.source, state: 'Completed', oldValue: oldValues, newValue: newValues,\n                        target: this.currentTarget, targetPosition: this.currentPosition, allowDrop: true, cancel: false\n                    };\n                    this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n                    if (!isPreventHistory) {\n                        this.commandHandler.startGroupAction();\n                        historyAdded = true;\n                        var entry = {\n                            type: 'PositionChanged',\n                            redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                        };\n                        if (obj.nodes[0] && obj.nodes[0].processId) {\n                            var entry_1 = {\n                                type: 'SizeChanged', category: 'Internal',\n                                undoObject: this.undoParentElement, redoObject: this.commandHandler.getSubProcess(args.source)\n                            };\n                            this.commandHandler.addHistoryEntry(entry_1);\n                        }\n                        this.commandHandler.addHistoryEntry(entry);\n                    }\n                }\n            }\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, 0, 0);\n            this.commandHandler.removeSnap();\n            this.commandHandler.removeHighlighter();\n            if (args.source && this.currentTarget && canAllowDrop(this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget)) {\n                this.commandHandler.drop(this.currentElement, this.currentTarget, this.currentPosition);\n                var arg = {\n                    element: args.source, target: this.currentTarget, position: this.currentPosition, cancel: false\n                };\n                this.commandHandler.triggerEvent(DiagramEvent.drop, arg);\n                if (!arg.cancel && args.source && this.commandHandler.isParentAsContainer(this.currentTarget)) {\n                    var nodes = (args.source instanceof Selector) ? args.source.nodes : [args.source];\n                    var isEndGroup = false;\n                    for (var i = 0; i < nodes.length; i++) {\n                        if (!nodes[i].container) {\n                            isEndGroup = true;\n                            this.commandHandler.dropChildToContainer(this.currentTarget, nodes[i]);\n                            this.commandHandler.renderContainerHelper(nodes[i]);\n                        }\n                    }\n                    if (historyAdded && this.commandHandler.isContainer && isEndGroup) {\n                        this.commandHandler.endGroupAction();\n                    }\n                }\n            }\n            if (args.source && this.currentTarget) {\n                this.commandHandler.dropAnnotation(args.source, this.currentTarget);\n            }\n            this.commandHandler.updateSelector();\n            if (historyAdded && !this.commandHandler.isContainer) {\n                this.commandHandler.endGroupAction();\n            }\n        }\n        else {\n            redoObject.nodes.push(cloneObject(args.source));\n            obj = cloneObject(redoObject);\n            var entry = {\n                type: 'PortPositionChanged', objectId: this.portId,\n                redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var isSame = false;\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) ||\n            args.source;\n        if (object instanceof Node || object instanceof Connector) {\n            if (object instanceof Node) {\n                if (object.offsetX === this.undoElement.nodes[0].offsetX &&\n                    object.offsetY === this.undoElement.nodes[0].offsetY) {\n                    isSame = true;\n                }\n            }\n            else {\n                if (Point.equals(object.sourcePoint, this.undoElement.connectors[0].sourcePoint) &&\n                    Point.equals(object.targetPoint, this.undoElement.connectors[0].targetPoint)) {\n                    isSame = true;\n                }\n            }\n        }\n        else {\n            if (object.wrapper.offsetX === this.undoElement.wrapper.offsetX &&\n                object.wrapper.offsetY === this.undoElement.wrapper.offsetY) {\n                isSame = true;\n            }\n        }\n        var oldValues;\n        if (object) {\n            oldValues = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n        }\n        var arg = {\n            source: object, state: 'Start', oldValue: oldValues, newValue: oldValues,\n            target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n        };\n        if (isSame) {\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.objectType !== 'Port') {\n            var x = this.currentPosition.x - this.prevPosition.x;\n            var y = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.initialOffset.x + (this.currentPosition.x - this.prevPosition.x);\n            var diffY = this.initialOffset.y + (this.currentPosition.y - this.prevPosition.y);\n            this.commandHandler.dragOverElement(args, this.currentPosition);\n            this.commandHandler.disConnect(args.source);\n            this.commandHandler.removeSnap();\n            var oldValues_1;\n            var newValues = void 0;\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, diffX, diffY);\n            this.initialOffset.x = diffX - snappedPoint.x;\n            this.initialOffset.y = diffY - snappedPoint.y;\n            if (object) {\n                oldValues_1 = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n                newValues = {\n                    offsetX: object.wrapper.offsetX + snappedPoint.x,\n                    offsetY: object.wrapper.offsetY + snappedPoint.y\n                };\n            }\n            if (this.currentTarget && args.target !== this.currentTarget) {\n                this.commandHandler.removeChildFromBPmn(args.source, args.target, this.currentTarget);\n            }\n            this.currentTarget = args.target;\n            var arg_1 = {\n                source: object, state: 'Progress', oldValue: oldValues_1, newValue: newValues,\n                target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg_1);\n            if (!arg_1.cancel) {\n                this.blocked = !this.commandHandler.dragSelectedObjects(snappedPoint.x, snappedPoint.y);\n                var blocked = !(this.commandHandler.mouseOver(this.currentElement, this.currentTarget, this.currentPosition));\n                this.blocked = this.blocked || blocked;\n            }\n            this.commandHandler.removeStackHighlighter();\n            this.commandHandler.renderStackHighlighter(args);\n            if (this.currentTarget && (args.source !== this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget) && args.source.id !== 'helper') {\n                var object_1 = (args.source instanceof Selector) ? args.source.nodes[0] : args.source;\n                if ((!this.commandHandler.isParentAsContainer(object_1, true))\n                    && (object_1.shape.type !== 'SwimLane' && !object_1.shape.isPhase)) {\n                    if (this.currentTarget.isLane) {\n                        this.commandHandler.renderStackHighlighter(args, this.currentTarget);\n                    }\n                    else {\n                        this.commandHandler.drawHighlighter(this.currentTarget);\n                    }\n                }\n            }\n            else {\n                this.commandHandler.removeHighlighter();\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.source);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'MoveTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        else {\n            var matrix = identityMatrix();\n            var node = args.source;\n            rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n            var prevPosition = transformPointByMatrix(matrix, { x: this.prevPosition.x, y: this.prevPosition.y });\n            var position = transformPointByMatrix(matrix, { x: args.position.x, y: args.position.y });\n            this.commandHandler.portDrag(args.source, args.sourceWrapper, position.x - prevPosition.x, position.y - prevPosition.y);\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    MoveTool.prototype.getTooltipContent = function (node) {\n        return 'X:' + Math.round(node.wrapper.bounds.x) + ' ' + 'Y:' + Math.round(node.wrapper.bounds.y);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    MoveTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.currentTarget = null;\n        this.prevPosition = null;\n    };\n    return MoveTool;\n}(ToolBase));\nexport { MoveTool };\n/**\n * Rotates the selected objects\n */\nvar RotateTool = /** @class */ (function (_super) {\n    __extends(RotateTool, _super);\n    function RotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    RotateTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var objects = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], objects);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle !== object.wrapper.rotateAngle) {\n            var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n            var arg = {\n                source: args.source, state: 'Completed', oldValue: oldValue,\n                newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'RotationChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.addHistoryEntry(entry);\n            this.commandHandler.updateSelector();\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle === object.wrapper.rotateAngle) {\n            var oldValue_1 = { rotateAngle: object.wrapper.rotateAngle };\n            var arg_2 = {\n                source: args.source, state: 'Start', oldValue: oldValue_1, newValue: oldValue_1, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg_2);\n        }\n        this.currentPosition = args.position;\n        var refPoint = { x: object.wrapper.offsetX, y: object.wrapper.offsetY };\n        var angle = Point.findAngle(refPoint, this.currentPosition) + 90;\n        var snapAngle = this.commandHandler.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        angle = (angle + 360) % 360;\n        var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n        var newValue = { rotateAngle: angle };\n        var arg = {\n            source: args.source, state: 'Progress', oldValue: oldValue,\n            newValue: newValue, cancel: false\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n        if (!arg.cancel) {\n            this.blocked = !(this.commandHandler.rotateSelectedItems(angle - object.wrapper.rotateAngle));\n        }\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'RotateTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        return !this.blocked;\n    };\n    RotateTool.prototype.getTooltipContent = function (node) {\n        return Math.round((node.rotateAngle % 360)).toString() + '\\xB0';\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    RotateTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return RotateTool;\n}(ToolBase));\nexport { RotateTool };\n/**\n * Scales the selected objects\n */\nvar ResizeTool = /** @class */ (function (_super) {\n    __extends(ResizeTool, _super);\n    function ResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.initialBounds = new Rect();\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    ResizeTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var elements = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], elements);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        this.commandHandler.checkSelection(args.source, this.corner);\n        _super.prototype.mouseDown.call(this, args);\n        this.initialBounds.x = args.source.wrapper.offsetX;\n        this.initialBounds.y = args.source.wrapper.offsetY;\n        this.initialBounds.height = args.source.wrapper.actualSize.height;\n        this.initialBounds.width = args.source.wrapper.actualSize.width;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseUp = function (args, isPreventHistory) {\n        this.checkPropertyValue();\n        this.commandHandler.removeSnap();\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX !== object.wrapper.offsetX || this.undoElement.offsetY !== object.wrapper.offsetY) {\n            var deltaValues = this.updateSize(args.source, this.currentPosition, this.prevPosition, this.corner, this.initialBounds);\n            this.blocked = this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.currentPosition, this.prevPosition, object);\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Completed',\n                oldValue: oldValue, newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n            var obj = cloneObject(args.source);\n            var entry = {\n                type: 'SizeChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            if (!isPreventHistory) {\n                this.commandHandler.startGroupAction();\n                this.commandHandler.addHistoryEntry(entry);\n                if (obj.nodes[0] && obj.nodes[0].processId) {\n                    var entry_2 = {\n                        type: 'SizeChanged', redoObject: this.commandHandler.getSubProcess(args.source),\n                        undoObject: this.undoParentElement, category: 'Internal'\n                    };\n                    this.commandHandler.addHistoryEntry(entry_2);\n                }\n                this.commandHandler.endGroupAction();\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX === object.wrapper.offsetX && this.undoElement.offsetY === object.wrapper.offsetY) {\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Start', oldValue: oldValue, newValue: this.currentElement, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        }\n        this.currentPosition = args.position;\n        var x = this.currentPosition.x - this.startPosition.x;\n        var y = this.currentPosition.y - this.startPosition.y;\n        var changes = { x: x, y: y };\n        changes = rotatePoint(-this.currentElement.wrapper.rotateAngle, undefined, undefined, changes);\n        var sx = (this.currentElement.wrapper.actualSize.width + changes.x) / this.currentElement.wrapper.actualSize.width;\n        var sy = (this.currentElement.wrapper.actualSize.height + changes.y) / this.currentElement.wrapper.actualSize.height;\n        changes = this.getChanges(changes);\n        this.commandHandler.removeSnap();\n        var deltaValues = this.updateSize(args.source, this.startPosition, this.currentPosition, this.corner, this.initialBounds);\n        this.blocked = !(this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.startPosition, this.currentPosition, object));\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'ResizeTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ResizeTool.prototype.getTooltipContent = function (node) {\n        return 'W:' + Math.round(node.wrapper.bounds.width) + ' ' + 'H:' + Math.round(node.wrapper.bounds.height);\n    };\n    ResizeTool.prototype.getChanges = function (change) {\n        switch (this.corner) {\n            case 'ResizeEast':\n                return { x: change.x, y: 0 };\n            case 'ResizeSouthEast':\n                return change;\n            case 'ResizeSouth':\n                return { x: 0, y: change.y };\n            case 'ResizeNorth':\n                return { x: 0, y: -change.y };\n            case 'ResizeNorthEast':\n                return { x: change.x, y: -change.y };\n            case 'ResizeNorthWest':\n                return { x: -change.x, y: -change.y };\n            case 'ResizeWest':\n                return { x: -change.x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -change.x, y: change.y };\n        }\n        return change;\n    };\n    /**\n     * Updates the size with delta width and delta height using scaling.\n     */\n    /**\n     * Aspect ratio used to resize the width or height based on resizing the height or width\n     */\n    ResizeTool.prototype.scaleObjects = function (deltaWidth, deltaHeight, corner, startPoint, endPoint, source) {\n        if (source instanceof Selector && source.nodes.length === 1 && source.nodes[0].constraints & NodeConstraints.AspectRatio) {\n            if (corner === 'ResizeWest' || corner === 'ResizeEast' || corner === 'ResizeNorth' || corner === 'ResizeSouth') {\n                if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                    deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n                }\n            }\n            else if (startPoint !== endPoint) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n            }\n            else {\n                deltaHeight = deltaWidth = 0;\n            }\n        }\n        var oldValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        this.blocked = this.commandHandler.scaleSelectedItems(deltaWidth, deltaHeight, this.getPivot(this.corner));\n        var newValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        var arg;\n        arg = { source: source, state: 'Progress', oldValue: oldValue, newValue: newValue, cancel: false };\n        this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        if (arg.cancel) {\n            this.commandHandler.scaleSelectedItems(1 / deltaWidth, 1 / deltaHeight, this.getPivot(this.corner));\n        }\n        return this.blocked;\n    };\n    return ResizeTool;\n}(ToolBase));\nexport { ResizeTool };\n/**\n * Draws a node that is defined by the user\n */\nvar NodeDrawingTool = /** @class */ (function (_super) {\n    __extends(NodeDrawingTool, _super);\n    function NodeDrawingTool(commandHandler, sourceObject) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var checkBoundaryConstraints;\n        var node = {\n            offsetX: this.currentPosition.x, width: 3, height: 3,\n            offsetY: this.currentPosition.y\n        };\n        if (!this.drawingObject) {\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n            if (checkBoundaryConstraints) {\n                this.commandHandler.updateNodeDimension(this.drawingObject, rect);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var checkBoundaryConstraints;\n        var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n        checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n        if (this.drawingObject && this.drawingObject instanceof Node) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return NodeDrawingTool;\n}(ToolBase));\nexport { NodeDrawingTool };\n/**\n * Draws a connector that is defined by the user\n */\nvar ConnectorDrawingTool = /** @class */ (function (_super) {\n    __extends(ConnectorDrawingTool, _super);\n    function ConnectorDrawingTool(commandHandler, endPoint, sourceObject) {\n        var _this = _super.call(this, commandHandler, endPoint) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseMove = function (args) {\n        if (this.inAction) {\n            var connector = {\n                sourcePoint: this.currentPosition, targetPoint: this.currentPosition,\n            };\n            if (!this.drawingObject) {\n                this.drawingObject = this.commandHandler.drawObject(connector);\n            }\n            args.source = this.drawingObject;\n            if (args.target && (this.endPoint !== 'ConnectorTargetEnd' || (canInConnect(args.target)))) {\n                this.commandHandler.connect(this.endPoint, args);\n            }\n            this.endPoint = 'ConnectorTargetEnd';\n        }\n        if (!this.inAction) {\n            this.commandHandler.updateSelector();\n            if (args.source && args.sourceWrapper) {\n                this.commandHandler.renderHighlighter(args, true);\n            }\n        }\n        _super.prototype.mouseMove.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        if (this.drawingObject && this.drawingObject instanceof Connector) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return ConnectorDrawingTool;\n}(ConnectTool));\nexport { ConnectorDrawingTool };\nvar TextDrawingTool = /** @class */ (function (_super) {\n    __extends(TextDrawingTool, _super);\n    function TextDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    TextDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.commandHandler.clearSelection();\n        var node = {\n            shape: { type: 'Text' },\n            offsetX: this.currentPosition.x, width: 50, height: 20,\n            offsetY: this.currentPosition.y\n        };\n        if (!args.source) {\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (!this.drawingNode) {\n            var node = {\n                shape: { type: 'Text' }, offsetX: this.currentPosition.x, width: 30, height: 30,\n                style: { strokeDashArray: '2 2', fill: 'transparent' }, offsetY: this.currentPosition.y\n            };\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n        else {\n            this.drawingNode.style.strokeColor = 'black';\n            this.drawingNode.style.strokeDashArray = '2 2';\n            this.drawingNode.style.fill = 'transparent';\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.updateNodeDimension(this.drawingNode, rect);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        if (this.drawingNode) {\n            this.drawingNode.style.strokeColor = 'none';\n            this.drawingNode.style.fill = 'none';\n        }\n        else {\n            this.drawingNode = args.source;\n        }\n        if (this.drawingNode && (this.drawingNode instanceof Node || this.drawingNode instanceof Connector)) {\n            this.commandHandler.addText(this.drawingNode, this.currentPosition);\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return TextDrawingTool;\n}(ToolBase));\nexport { TextDrawingTool };\n/**\n * Pans the diagram control on drag\n */\nvar ZoomPanTool = /** @class */ (function (_super) {\n    __extends(ZoomPanTool, _super);\n    function ZoomPanTool(commandHandler, zoom) {\n        var _this = _super.call(this, commandHandler) || this;\n        _this.zooming = zoom;\n        return _this;\n    }\n    /**   @private  */\n    ZoomPanTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (!this.zooming && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                var difX = this.currentPosition.x - this.prevPosition.x;\n                var difY = this.currentPosition.y - this.prevPosition.y;\n                this.commandHandler.scroll(difX, difY, this.currentPosition);\n            }\n            else if (args.moveTouches && args.moveTouches.length && args.moveTouches.length >= 2) {\n                var startTouch0 = args.startTouches[0];\n                var startTouch1 = args.startTouches[1];\n                var moveTouch0 = args.moveTouches[0];\n                var moveTouch1 = args.moveTouches[1];\n                var scale = this.getDistance(moveTouch0, moveTouch1) / this.getDistance(startTouch0, startTouch1);\n                var focusPoint = args.position;\n                this.commandHandler.zoom(scale, 0, 0, focusPoint);\n                this.updateTouch(startTouch0, moveTouch0);\n                this.updateTouch(startTouch1, moveTouch1);\n            }\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    ZoomPanTool.prototype.getDistance = function (touch1, touch2) {\n        var x = touch2.pageX - touch1.pageX;\n        var y = touch2.pageY - touch1.pageY;\n        return Math.sqrt((x * x) + (y * y));\n    };\n    ZoomPanTool.prototype.updateTouch = function (startTouch, moveTouch) {\n        startTouch.pageX = moveTouch.pageX;\n        startTouch.pageY = moveTouch.pageY;\n    };\n    return ZoomPanTool;\n}(ToolBase));\nexport { ZoomPanTool };\n/**\n * Animate the layout during expand and collapse\n */\nvar ExpandTool = /** @class */ (function (_super) {\n    __extends(ExpandTool, _super);\n    function ExpandTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    ExpandTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.commandHandler.initExpand(args);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return ExpandTool;\n}(ToolBase));\nexport { ExpandTool };\n/**\n * Opens the annotation hypeLink at mouse up\n */\nvar LabelTool = /** @class */ (function (_super) {\n    __extends(LabelTool, _super);\n    function LabelTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var win = window.open(args.sourceWrapper.hyperlink.link, '_blank');\n        win.focus();\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return LabelTool;\n}(ToolBase));\nexport { LabelTool };\n/**\n * Draws a Polygon shape node dynamically using polygon Tool\n */\nvar PolygonDrawingTool = /** @class */ (function (_super) {\n    __extends(PolygonDrawingTool, _super);\n    function PolygonDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            this.startPoint = { x: this.startPosition.x, y: this.startPosition.y };\n            var node = {\n                offsetX: this.currentPosition.x,\n                offsetY: this.currentPosition.y,\n                width: 5, height: 5,\n                style: { strokeColor: 'black', strokeWidth: 1 },\n                shape: {\n                    type: 'Basic',\n                    shape: 'Polygon',\n                    points: [{ x: this.startPoint.x, y: this.startPoint.y }, { x: this.currentPosition.x, y: this.currentPosition.y }]\n                }\n            };\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        else {\n            var pt = void 0;\n            var obj = this.drawingObject.shape;\n            pt = obj.points[obj.points.length - 1];\n            pt = { x: pt.x, y: pt.y };\n            this.drawingObject.shape.points.push(pt);\n        }\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject.shape;\n            if (this.drawingObject && this.currentPosition) {\n                obj.points[obj.points.length - 1].x = this.currentPosition.x;\n                obj.points[obj.points.length - 1].y = this.currentPosition.y;\n                this.drawingObject.wrapper.children[0].data = getPolygonPath(this.drawingObject.shape.points);\n                if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                    var region = Rect.toBounds(this.drawingObject.shape.points);\n                    this.commandHandler.updateNodeDimension(this.drawingObject, region);\n                }\n            }\n        }\n        return true;\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseUp = function (args, dblClickArgs) {\n        this.checkPropertyValue();\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.inAction = false;\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.endAction = function () {\n        this.inAction = false;\n        this.drawingObject = null;\n    };\n    return PolygonDrawingTool;\n}(ToolBase));\nexport { PolygonDrawingTool };\n/**\n * Draws a PolyLine Connector dynamically using PolyLine Drawing Tool\n */\nvar PolyLineDrawingTool = /** @class */ (function (_super) {\n    __extends(PolyLineDrawingTool, _super);\n    function PolyLineDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject;\n            obj.targetPoint = this.currentPosition;\n            this.commandHandler.updateConnectorPoints(obj);\n        }\n        return true;\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            var connector = {\n                id: 'Connector',\n                type: 'Straight',\n                sourcePoint: this.currentPosition,\n                targetPoint: this.currentPosition\n            };\n            this.drawingObject = this.commandHandler.drawObject(connector);\n        }\n        else {\n            var drawObject = this.drawingObject;\n            var segment = void 0;\n            segment = new StraightSegment(drawObject, 'segments', { type: 'Straight' }, true);\n            segment.point = this.currentPosition;\n            drawObject.segments[drawObject.segments.length - 1] = segment;\n        }\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.endAction = function () {\n        this.drawingObject = null;\n        this.inAction = false;\n    };\n    return PolyLineDrawingTool;\n}(ToolBase));\nexport { PolyLineDrawingTool };\nvar LabelDragTool = /** @class */ (function (_super) {\n    __extends(LabelDragTool, _super);\n    function LabelDragTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelDragTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        this.annotationId = args.sourceWrapper.id;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var difx = this.currentPosition.x - this.prevPosition.x;\n        var dify = this.currentPosition.y - this.prevPosition.y;\n        var node = args.source;\n        if (node instanceof Node) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, -node.rotateAngle, 0, 0);\n            var diff = transformPointByMatrix(matrix, { x: difx, y: dify });\n            difx = diff.x;\n            dify = diff.y;\n        }\n        if (this.inAction) {\n            this.commandHandler.labelDrag(args.source, args.sourceWrapper, difx, dify);\n            this.commandHandler.updateSelector();\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var redoValue = args.source;\n        this.inAction = false;\n        var entryValue = {\n            type: 'AnnotationPropertyChanged',\n            objectId: this.annotationId, undoObject: cloneObject(this.undoElement),\n            category: 'Internal', redoObject: cloneObject(redoValue)\n        };\n        this.commandHandler.addHistoryEntry(entryValue);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelDragTool;\n}(ToolBase));\nexport { LabelDragTool };\nvar LabelResizeTool = /** @class */ (function (_super) {\n    __extends(LabelResizeTool, _super);\n    function LabelResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    LabelResizeTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.annotationId = args.source.wrapper.children[0].id;\n        this.undoElement = cloneObject(object);\n        var annotation = args.source.wrapper.children[0];\n        this.initialBounds = {\n            x: annotation.offsetX,\n            y: annotation.offsetY,\n            width: annotation.actualSize.width,\n            height: annotation.actualSize.height\n        };\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.resizeObject(args);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var redoObject = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.inAction = false;\n        var entry = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoObject), undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entry);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.resizeObject = function (args) {\n        var object;\n        object = (args.source.nodes.length) ? args.source.nodes[0] : args.source.connectors[0];\n        var textElement = args.source.wrapper.children[0];\n        var deltaWidth;\n        var deltaHeight;\n        var center = { x: textElement.offsetX, y: textElement.offsetY };\n        var rotateAngle = textElement.rotateAngle;\n        rotateAngle += (object instanceof Node) ? object.rotateAngle : 0;\n        rotateAngle = (rotateAngle + 360) % 360;\n        var trans = identityMatrix();\n        rotateMatrix(trans, rotateAngle, center.x, center.y);\n        var corner = this.corner.slice(5);\n        var pivot = this.updateSize(textElement, this.startPosition, this.currentPosition, corner, this.initialBounds, rotateAngle);\n        var x = textElement.offsetX - textElement.actualSize.width * textElement.pivot.x;\n        var y = textElement.offsetY - textElement.actualSize.height * textElement.pivot.y;\n        var pivotPoint = this.getPivot(corner);\n        pivotPoint = { x: x + textElement.actualSize.width * pivotPoint.x, y: y + textElement.actualSize.height * pivotPoint.y };\n        var point = transformPointByMatrix(trans, pivotPoint);\n        pivot.x = point.x;\n        pivot.y = point.y;\n        deltaWidth = pivot.width;\n        deltaHeight = pivot.height;\n        deltaWidth = (deltaWidth < 0) ? 1 : deltaWidth;\n        deltaHeight = (deltaHeight < 0) ? 1 : deltaHeight;\n        this.commandHandler.labelResize(object, args.source.annotation, deltaWidth, deltaHeight, pivot, args.source);\n        this.commandHandler.updateSelector();\n    };\n    return LabelResizeTool;\n}(ToolBase));\nexport { LabelResizeTool };\nvar LabelRotateTool = /** @class */ (function (_super) {\n    __extends(LabelRotateTool, _super);\n    function LabelRotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelRotateTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.annotationId = args.source.wrapper.children[0].id;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.undoElement = cloneObject(object);\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (args.source) {\n            if (this.inAction) {\n                var object = args.source.nodes[0] ? args.source.nodes[0] :\n                    args.source.connectors[0];\n                var annotation = void 0;\n                annotation = (args.source.annotation);\n                this.commandHandler.labelRotate(object, annotation, this.currentPosition, args.source);\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.inAction = false;\n        var redoEntry = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        var entryObject = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoEntry),\n            undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entryObject);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelRotateTool;\n}(ToolBase));\nexport { LabelRotateTool };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect3 } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { DiagramEvent } from './../enum/enum';\nimport { contains } from './actions';\nimport { getOppositeDirection } from '../utility/connector';\nimport { StraightSegment, OrthogonalSegment } from '../objects/connector';\nimport { ToolBase } from './tool';\n/**\n * Multiple segments editing for Connector\n */\nvar ConnectorEditing = /** @class */ (function (_super) {\n    __extends(ConnectorEditing, _super);\n    function ConnectorEditing(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorEditing.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        var connectors;\n        if (args.source && args.source.connectors) {\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment         \n        for (var i = 0; i < connectors.segments.length; i++) {\n            var segment = connectors.segments[i];\n            if (this.endPoint === 'OrthoThumb') {\n                for (var j = 0; j < segment.points.length - 1; j++) {\n                    var segPoint = { x: 0, y: 0 };\n                    segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                    segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                    if (contains(this.currentPosition, segPoint, 30)) {\n                        this.selectedSegment = segment;\n                        this.segmentIndex = j;\n                    }\n                }\n            }\n            else {\n                if (contains(this.currentPosition, segment.point, 10)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                connector = args.source.connectors[0];\n            }\n            if ((this.inAction && this.selectedSegment !== undefined && this.endPoint !== undefined) && (diffX !== 0 || diffY !== 0)) {\n                if (this.endPoint === 'OrthoThumb') {\n                    this.blocked = !this.dragOrthogonalSegment(connector, this.selectedSegment, this.currentPosition, this.segmentIndex);\n                }\n                else {\n                    var tx = this.currentPosition.x - this.selectedSegment.point.x;\n                    var ty = this.currentPosition.y - this.selectedSegment.point.y;\n                    var index = connector.segments.indexOf(this.selectedSegment);\n                    this.blocked = !this.commandHandler.dragControlPoint(connector, tx, ty, false, index);\n                }\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseUp = function (args) {\n        var connector;\n        var oldValues;\n        if (args.source && args.source.connectors) {\n            connector = args.source.connectors[0];\n            oldValues = { segments: connector.segments };\n        }\n        if (args && args.source && args.info && args.info.ctrlKey && args.info.shiftKey && connector.type === 'Straight') {\n            this.addOrRemoveSegment(connector, this.currentPosition);\n        }\n        else {\n            if (this.endPoint === 'OrthoThumb' && this.selectedSegment) {\n                var index = connector.segments.indexOf(this.selectedSegment);\n                var prev = connector.segments[index - 1];\n                var next = connector.segments[index + 1];\n                if (index === connector.segments.length - 2\n                    && this.updateLastSegment(connector, this.selectedSegment)) {\n                    connector.segments.splice(connector.segments.length - 2, 1);\n                }\n                else {\n                    if (prev && Math.abs(prev.length) < 5) {\n                        if (index !== 1) {\n                            this.removePrevSegment(connector, index);\n                        }\n                    }\n                    else if (next) {\n                        var len = Point.distancePoints(next.points[0], next.points[1]);\n                        var length_1 = ((next.length || next.length === 0) ? next.length : len);\n                        if ((Math.abs(length_1) <= 5)) {\n                            this.removeNextSegment(connector, index);\n                        }\n                    }\n                }\n                this.commandHandler.updateEndPoint(connector, oldValues);\n            }\n        }\n        if (this.undoElement) {\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectorEditing.prototype.removePrevSegment = function (connector, index) {\n        var first = connector.segments[index - 2];\n        var next = connector.segments[index + 1];\n        var length = (next.length || next.length === 0) ? next.length : Point.distancePoints(next.points[0], next.points[1]);\n        if (!(length <= 5)) {\n            var removeSegments = connector.segments.slice(index - 1, index + 1);\n            var args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                var last = connector.segments[index + 1];\n                connector.segments.splice(index - 1, 2);\n                var segment = this.selectedSegment;\n                if (segment.direction === 'Left' || segment.direction === 'Right') {\n                    first.points[first.points.length - 1].x = last.points[0].x;\n                    last.points[0].y = first.points[first.points.length - 1].y;\n                }\n                else {\n                    first.points[first.points.length - 1].y = last.points[0].y;\n                    last.points[0].x = first.points[first.points.length - 1].x;\n                }\n                if (segment.length || segment.length === 0) {\n                    this.findSegmentDirection(first);\n                }\n                this.findSegmentDirection(last);\n            }\n        }\n    };\n    ConnectorEditing.prototype.findSegmentDirection = function (segment) {\n        if (segment.direction && (segment.length || segment.length === 0)) {\n            segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n            segment.direction = Point.direction(segment.points[0], segment.points[segment.points.length - 1]);\n        }\n    };\n    ConnectorEditing.prototype.removeNextSegment = function (connector, index) {\n        var segment = this.selectedSegment;\n        var first = connector.segments[index - 1];\n        var last = connector.segments[index + 2];\n        var next = connector.segments[index + 1];\n        var removeSegments;\n        var args;\n        if (next.length || next.length === 0) {\n            removeSegments = connector.segments.slice(index, 2);\n            args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                connector.segments.splice(index, 2);\n                if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                    last.points[0].y = segment.points[0].y;\n                    first.points[first.points.length - 1].x = last.points[0].x;\n                }\n                else {\n                    last.points[0].x = segment.points[0].x;\n                    first.points[first.points.length - 1].y = last.points[0].y;\n                }\n            }\n        }\n        else {\n            removeSegments = connector.segments.slice(index + 1, 1);\n            args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                connector.segments.splice(index + 1, 1);\n                if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                    first.points[first.points.length - 1].x = next.points[next.points.length - 1].x;\n                }\n                else {\n                    first.points[first.points.length - 1].y = next.points[next.points.length - 1].y;\n                }\n                this.findSegmentDirection(first);\n                segment.length = segment.direction = null;\n            }\n        }\n        if (first && last && !args.cancel) {\n            first.length = Point.distancePoints(first.points[0], last.points[0]);\n            first.direction = Point.direction(first.points[0], last.points[0]);\n            if (last.length || last.length === 0) {\n                last.length = Point.distancePoints(first.points[first.points.length - 1], last.points[last.points.length - 1]);\n                var point1 = first.points;\n                var point2 = last.points;\n                last.direction = Point.direction(point1[point1.length - 1], point2[point2.length - 1]);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addOrRemoveSegment = function (connector, point) {\n        var updateSeg;\n        var segmentIndex;\n        var oldValues = { segments: connector.segments };\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = (connector.segments)[i];\n            if (contains(point, segment.point, connector.hitPadding)) {\n                segmentIndex = i;\n                updateSeg = true;\n            }\n        }\n        if (updateSeg && segmentIndex !== undefined) {\n            if (connector.segments && connector.segments[segmentIndex] && connector.segments[segmentIndex].type === 'Straight') {\n                var segment = connector.segments[segmentIndex];\n                var previous = connector.segments[segmentIndex + 1];\n                if (previous) {\n                    connector.segments.splice(segmentIndex, 1);\n                    previous.points[0] = segment.points[0];\n                }\n            }\n        }\n        else {\n            var index = this.findIndex(connector, point);\n            if (connector.segments && connector.segments[index] && connector.segments[index].type === 'Straight') {\n                var segment = connector.segments[index];\n                var newseg = new StraightSegment(connector, 'segments', { type: 'Straight', point: point }, true);\n                newseg.points[0] = segment.points[0];\n                newseg.points[1] = point;\n                segment.points[0] = point;\n                connector.segments.splice(index, 0, newseg);\n                updateSeg = true;\n            }\n        }\n        if (updateSeg) {\n            this.commandHandler.updateEndPoint(connector, oldValues);\n        }\n    };\n    ConnectorEditing.prototype.findIndex = function (connector, point) {\n        var intersectingSegs = [];\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = connector.segments[i];\n            var rect = Rect.toBounds([segment.points[0], segment.points[1]]);\n            rect.Inflate(connector.hitPadding);\n            if (rect.containsPoint(point)) {\n                intersectingSegs.push(segment);\n            }\n        }\n        if (intersectingSegs.length === 1) {\n            return connector.segments.indexOf(intersectingSegs[0]);\n        }\n        else {\n            var ratio = void 0;\n            var min = void 0;\n            var index = void 0;\n            var seg = void 0;\n            var v = void 0;\n            var h = void 0;\n            for (var i = 0; i < intersectingSegs.length; i++) {\n                seg = intersectingSegs[i];\n                v = (point.y - seg.points[0].y) / (seg.points[1].y - point.y);\n                h = (point.x - seg.points[0].x) / (seg.points[1].x - point.x);\n                ratio = Math.abs(v - h);\n                if (i === 0) {\n                    min = ratio;\n                    index = 0;\n                }\n                if (ratio < min) {\n                    min = ratio;\n                    index = i;\n                }\n            }\n            return connector.segments.indexOf(intersectingSegs[index]);\n        }\n    };\n    ConnectorEditing.prototype.dragOrthogonalSegment = function (obj, segment, point, segmentIndex) {\n        var segmentPoint = { x: 0, y: 0 };\n        var oldValues = { segments: obj.segments };\n        segmentPoint.x = ((segment.points[segmentIndex].x + segment.points[segmentIndex + 1].x) / 2);\n        segmentPoint.y = ((segment.points[segmentIndex].y + segment.points[segmentIndex + 1].y) / 2);\n        var ty = point.y - segmentPoint.y;\n        var tx = point.x - segmentPoint.x;\n        var index = obj.segments.indexOf(segment);\n        var update = false;\n        var orientation = (segment.points[0].y.toFixed(2) === segment.points[1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n        var prevSegment;\n        var nextSegment;\n        if (index !== -1) {\n            if (index === 0 && obj.segments.length === 1 && segment.points.length === 2) {\n                index = this.addSegments(obj, segment, tx, ty, index);\n                update = true;\n            }\n            else if (index === obj.segments.length - 1 && (segment.direction === null || segment.length === null)) {\n                index = this.addTerminalSegment(obj, segment, tx, ty, segmentIndex);\n                update = true;\n            }\n            else if (index === 0) {\n                index = this.insertFirstSegment(obj, segment, tx, ty, index);\n                update = true;\n            }\n            if (index) {\n                if (update) {\n                    this.selectedSegment = segment = obj.segments[index];\n                    this.segmentIndex = 0;\n                }\n                this.updateAdjacentSegments(obj, index, tx, ty);\n                this.commandHandler.updateEndPoint(obj, oldValues);\n            }\n        }\n        return true;\n    };\n    ConnectorEditing.prototype.addSegments = function (obj, segment, tx, ty, coll) {\n        var index;\n        var direction;\n        var segments = [];\n        var len;\n        var length = Point.distancePoints(segment.points[0], segment.points[1]);\n        var segmentDirection = Point.direction(segment.points[0], segment.points[1]);\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 4 }, true));\n        direction = (segment.points[0].y === segment.points[1].y) ? ((ty > 0) ? 'Bottom' : 'Top') : ((tx > 0) ? 'Right' : 'Left');\n        len = (segment.points[0].x === segment.points[1].x) ? ty : tx;\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: len }, true));\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 2 }, true));\n        var args = {\n            element: obj, addSegments: segments, type: 'Addition', cancel: false\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n        if (!args.cancel) {\n            obj.segments = segments.concat(obj.segments);\n            index = coll + 2;\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.insertFirstSegment = function (obj, segment, tx, ty, coll) {\n        var direction;\n        var length;\n        var segments = [];\n        var segValues;\n        var index;\n        var insertseg;\n        if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n            var prev = void 0;\n            for (var i = 0; i < segment.points.length - 1; i++) {\n                var len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n                var dir = Point.direction(segment.points[i], segment.points[i + 1]);\n                insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: dir, length: len }, true);\n                if (insertseg.length === 0) {\n                    if (prev && (prev.direction === 'Top' || prev.direction === 'Bottom')) {\n                        insertseg.direction = tx > 0 ? 'Right' : 'Left';\n                    }\n                    else {\n                        insertseg.direction = ty > 0 ? 'Bottom' : 'Top';\n                    }\n                }\n                prev = insertseg;\n                segments.push(insertseg);\n            }\n        }\n        else {\n            segValues = { type: 'Orthogonal', direction: segment.direction, length: segment.length / 3 };\n            segments.push(new OrthogonalSegment(obj, 'segments', segValues, true));\n            if (segment.direction === 'Bottom' || segment.direction === 'Top') {\n                length = Math.abs(tx);\n                direction = tx > 0 ? 'Right' : 'Left';\n            }\n            else {\n                length = Math.abs(ty);\n                direction = ty > 0 ? 'Bottom' : 'Top';\n            }\n            insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: length }, true);\n            segments.push(insertseg);\n        }\n        var args = {\n            element: obj, addSegments: segments, type: 'Addition', cancel: false\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n        if (!args.cancel) {\n            if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n                obj.segments.splice(0, 1);\n                index = 1;\n            }\n            else {\n                var nextseg = obj.segments[1];\n                if (nextseg && nextseg.length) {\n                    nextseg.length = (direction !== nextseg.direction) ? nextseg.length + length : nextseg.length - length;\n                }\n                index = 2;\n                segment.length = 2 * segment.length / 3;\n            }\n            obj.segments = segments.concat(obj.segments);\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.updateAdjacentSegments = function (obj, index, tx, ty) {\n        var current = obj.segments[index];\n        var endPoint = current.points[current.points.length - 1];\n        var startPoint = current.points[0];\n        var isNextUpdate = true;\n        if (current.type === 'Orthogonal') {\n            current.points[0] = startPoint;\n            current.points[current.points.length - 1] = endPoint;\n            var prev = obj.segments[index - 1];\n            if (prev) {\n                isNextUpdate = this.updatePreviousSegment(tx, ty, obj, index);\n            }\n            if (obj.segments.length - 1 > index && isNextUpdate) {\n                var nextSegment = obj.segments[index + 1];\n                this.updateNextSegment(obj, current, nextSegment, tx, ty);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addTerminalSegment = function (connector, segment, tx, ty, segmentIndex) {\n        var oldValues = { segments: connector.segments };\n        var index = connector.segments.indexOf(segment);\n        var first;\n        var insertseg;\n        var len;\n        var dir;\n        var segments = [];\n        var removeSegment = connector.segments.pop();\n        var last = connector.segments[connector.segments.length - 1];\n        first = (last && last.type === 'Orthogonal') ? last : null;\n        for (var i = 0; i < segment.points.length - 2; i++) {\n            len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n            dir = Point.direction(segment.points[i], segment.points[i + 1]);\n            insertseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir }, true);\n            segments.push(insertseg);\n            first = insertseg;\n        }\n        var sec = segmentIndex;\n        if (segment.points.length === 2 || sec === segment.points.length - 2) {\n            if (first) {\n                first.length += 5;\n            }\n            if (sec !== undefined) {\n                var newseg = void 0;\n                len = 2 * Point.distancePoints(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]) / 3;\n                dir = Point.direction(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]);\n                newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir });\n                segments.push(newseg);\n            }\n        }\n        var lastseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n        segments.push(lastseg);\n        var args = {\n            element: connector, addSegments: segments, type: 'Addition', cancel: false\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n        if (!args.cancel) {\n            connector.segments = connector.segments.concat(segments);\n            index = index + segmentIndex;\n        }\n        else {\n            connector.segments.push(removeSegment);\n        }\n        this.commandHandler.updateEndPoint(connector);\n        return index;\n    };\n    ConnectorEditing.prototype.updatePortSegment = function (prev, connector, index, tx, ty) {\n        if (index === 1 && prev.points.length === 2 && prev.length < 0) {\n            var source = connector.sourceWrapper.corners;\n            var current = connector.segments[index];\n            var next = connector.segments[index + 1];\n            var newseg = void 0;\n            var segment = [];\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: 13, direction: prev.direction });\n            segment.push(newseg);\n            var len = void 0;\n            if (current.direction === 'Left') {\n                len = (current.points[0].x - (source.middleLeft.x - 20));\n            }\n            else if (current.direction === 'Right') {\n                len = ((source.middleRight.x + 20) - current.points[0].x);\n            }\n            else if (current.direction === 'Bottom') {\n                len = ((source.bottomCenter.y + 20) - current.points[0].y);\n            }\n            else {\n                len = (current.points[0].y - (source.topCenter.y - 20));\n            }\n            var dir = current.direction;\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: current.direction });\n            segment.push(newseg);\n            current.length = current.length - len;\n            if (next && next.length && next.direction) {\n                if (next.direction === prev.direction) {\n                    next.length -= 13;\n                }\n                else if (next.direction === getOppositeDirection(prev.direction)) {\n                    next.length += 13;\n                }\n            }\n            connector.segments = segment.concat(connector.segments);\n            this.selectedSegment = connector.segments[3];\n        }\n    };\n    ConnectorEditing.prototype.updatePreviousSegment = function (tx, ty, connector, index) {\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var firstSegment = (index === 1) ? true : false;\n        prev.points[prev.points.length - 1] = current.points[0];\n        var isSourceNode = (connector.sourceID && connector.sourcePortID === '') ? false : true;\n        var isNextUpdate = true;\n        if (prev.type === 'Orthogonal') {\n            if (prev.direction === 'Bottom') {\n                prev.length += ty;\n            }\n            else if (prev.direction === 'Top') {\n                prev.length -= ty;\n            }\n            else if (prev.direction === 'Right') {\n                prev.length += tx;\n            }\n            else {\n                prev.length -= tx;\n            }\n            if (connector.sourcePortID !== '' && prev.length < 0) {\n                this.updatePortSegment(prev, connector, index, tx, ty);\n            }\n            else if (connector.sourceID && connector.sourcePortID === '' && prev.length < 0 && index === 1) {\n                isNextUpdate = false;\n                this.updateFirstSegment(connector, current);\n            }\n            if (isSourceNode) {\n                this.changeSegmentDirection(prev);\n            }\n        }\n        return isNextUpdate;\n    };\n    ConnectorEditing.prototype.changeSegmentDirection = function (segment) {\n        if (segment.length < 0) {\n            segment.direction = getOppositeDirection(segment.direction);\n            segment.length *= -1;\n        }\n    };\n    ConnectorEditing.prototype.updateNextSegment = function (obj, current, next, tx, ty) {\n        var pt = current.points[current.points.length - 1];\n        next.points[0] = current.points[current.points.length - 1];\n        if (next && next.type === 'Orthogonal') {\n            if (next.length || next.length === 0) {\n                if (next.direction === 'Left' || next.direction === 'Right') {\n                    if (tx !== 0) {\n                        next.length = (next.direction === 'Right') ? next.length - tx : next.length + tx;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n                else {\n                    if (ty !== 0) {\n                        next.length = (next.direction === 'Bottom') ? next.length - ty : next.length + ty;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ConnectorEditing.prototype.updateFirstSegment = function (connector, selectedSegment) {\n        var index = connector.segments.indexOf(selectedSegment);\n        var insertfirst = false;\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var con = connector;\n        var sourcePoint;\n        var oldValues = { segments: connector.segments };\n        if (prev.length < 0 && connector.sourceID) {\n            var sourceNode = connector.sourceWrapper.corners;\n            var segments = [];\n            var segValues = void 0;\n            var removeCurrentPrev = false;\n            this.changeSegmentDirection(current);\n            var next = connector.segments[index + 1];\n            var nextNext = connector.segments[index + 2];\n            if (next) {\n                this.changeSegmentDirection(next);\n            }\n            if (nextNext) {\n                this.changeSegmentDirection(nextNext);\n            }\n            switch (prev.direction) {\n                case 'Top':\n                case 'Bottom':\n                    sourcePoint = (current.length > 0 && current.direction === 'Left') ? sourceNode.middleLeft : sourceNode.middleRight;\n                    if (current.length > sourceNode.width / 2) {\n                        if (Math.abs(prev.length) < sourceNode.height / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].x = sourcePoint.x;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].y = sourcePoint.y;\n                            next.points[0].x = next.points[next.points.length - 1].x = (current.direction === 'Right') ?\n                                sourcePoint.x + 20 : sourcePoint.x - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n                case 'Left':\n                case 'Right':\n                    sourcePoint = (current.length > 0 && current.direction === 'Top') ? sourceNode.topCenter : sourceNode.bottomCenter;\n                    if (current.length > sourceNode.height / 2) {\n                        if (Math.abs(prev.length) < sourceNode.width / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].y = sourcePoint.y;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].x = sourcePoint.x;\n                            next.points[0].y = next.points[next.points.length - 1].y = (current.direction === 'Bottom') ?\n                                sourcePoint.y + 20 : sourcePoint.y - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n            }\n            this.changeSegmentDirection(prev);\n            this.changeSegmentDirection(current);\n            if (insertfirst) {\n                segValues = { type: 'Orthogonal', direction: current.direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                if (removeCurrentPrev) {\n                    if (next && next.direction && next.length) {\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                    }\n                    if (nextNext && nextNext.direction && nextNext.length) {\n                        nextNext.length = Point.distancePoints(next.points[next.points.length - 1], nextNext.points[nextNext.points.length - 1]);\n                    }\n                    connector.segments.splice(index - 1, 2);\n                }\n                connector.segments = segments.concat(connector.segments);\n            }\n            this.selectedSegment = ((removeCurrentPrev) ? connector.segments[index - 1] :\n                connector.segments[index + 1]);\n            this.commandHandler.updateEndPoint(connector, oldValues);\n        }\n    };\n    ConnectorEditing.prototype.updateLastSegment = function (connector, selectedSegment) {\n        if (connector.targetID && connector.targetPortID === '') {\n            var line1Start = void 0;\n            var line1End = void 0;\n            var line2Start = void 0;\n            var line2End = void 0;\n            var corners = connector.targetWrapper.corners;\n            var firstSegPoint = selectedSegment.points[0];\n            var lastSegPoint = selectedSegment.points[selectedSegment.points.length - 1];\n            if (selectedSegment.direction === 'Right' || selectedSegment.direction === 'Left') {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: (selectedSegment.direction === 'Left') ? lastSegPoint.x - corners.width / 2 : lastSegPoint.x + corners.width / 2,\n                    y: lastSegPoint.y\n                };\n                line2Start = { x: corners.center.x, y: corners.center.y - corners.height };\n                line2End = { x: corners.center.x, y: corners.center.y + corners.height };\n            }\n            else {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: lastSegPoint.x,\n                    y: (selectedSegment.direction === 'Bottom') ? lastSegPoint.y + corners.height / 2 : lastSegPoint.y - corners.height / 2\n                };\n                line2Start = { x: corners.center.x - corners.width, y: corners.center.y };\n                line2End = { x: corners.center.x + corners.width, y: corners.center.y };\n            }\n            var line1 = { x1: line1Start.x, y1: line1Start.y, x2: line1End.x, y2: line1End.y };\n            var line2 = { x1: line2Start.x, y1: line2Start.y, x2: line2End.x, y2: line2End.y };\n            return (intersect3(line1, line2).enabled);\n        }\n        return false;\n    };\n    /**\n     * To destroy the connector editing module\n     * @return {void}\n     * @private\n     */\n    ConnectorEditing.prototype.destroy = function () {\n        /**\n         * Destroys the connector editing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorEditing.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'ConnectorEditingTool';\n    };\n    return ConnectorEditing;\n}(ToolBase));\nexport { ConnectorEditing };\n","import { Point } from '../primitives/point';\nimport { Container } from '../core/containers/container';\nimport { Connector } from '../objects/connector';\nimport { NodeDrawingTool, ConnectorDrawingTool, TextDrawingTool, PolygonDrawingTool, PolyLineDrawingTool } from './tool';\nimport { Node } from '../objects/node';\nimport { SelectTool, MoveTool, ResizeTool, RotateTool, ConnectTool, ExpandTool, LabelTool, ZoomPanTool } from './tool';\nimport { LabelDragTool, LabelResizeTool, LabelRotateTool } from './tool';\nimport { ConnectorEditing } from './connector-editing';\nimport { Selector } from './selector';\nimport { findToolToActivate, isSelected, getCursor, contains } from './actions';\nimport { DiagramAction, KeyModifiers, Keys, DiagramEvent, DiagramTools, RendererAction } from '../enum/enum';\nimport { isPointOverConnector, findObjectType, insertObject, getObjectFromCollection, getTooltipOffset } from '../utility/diagram-util';\nimport { getObjectType, getInOutConnectPorts, removeChildNodes } from '../utility/diagram-util';\nimport { canZoomPan, canDraw, canDrag, canZoomTextEdit, canVitualize, canPreventClearSelection } from './../utility/constraints-util';\nimport { canMove, canEnablePointerEvents, canSelect, canEnableToolTip } from './../utility/constraints-util';\nimport { canOutConnect, canInConnect, canPortInConnect, canPortOutConnect, canAllowDrop, canUserInteract, defaultTool } from './../utility/constraints-util';\nimport { updateTooltip } from '../objects/tooltip';\nimport { PortVisibility, NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { addTouchPointer, measureHtmlText, getAdornerLayerSvg } from '../utility/dom-util';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { cloneObject as clone, cloneObject } from './../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from './../primitives/matrix';\nimport { removeRulerMarkers, drawRulerMarkers, getRulerSize, updateRuler } from '../ruler/ruler';\nimport { canContinuousDraw, canDrawOnce } from '../utility/constraints-util';\nimport { getFunction, cornersPointsBeforeRotation } from '../utility/base-util';\nimport { updateCanvasBounds, checkChildNodeInContainer, checkParentAsContainer, removeChildInContainer } from './container-interaction';\nimport { moveChildInStack, renderStackHighlighter, } from './container-interaction';\nimport { updateSwimLaneObject } from '../utility/swim-lane-util';\nimport { getConnectors, updateHeaderMaxWidth, laneInterChanged, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { randomId } from '../index';\n/**\n * This module handles the mouse and touch events\n */\nvar DiagramEventHandler = /** @class */ (function () {\n    /** @private */\n    function DiagramEventHandler(diagram, commandHandler) {\n        this.currentAction = 'None';\n        /**   @private  */\n        this.focus = false;\n        this.isBlocked = false;\n        this.isMouseDown = false;\n        this.inAction = false;\n        this.doingAutoScroll = false;\n        this.diagram = null;\n        this.objectFinder = null;\n        this.tool = null;\n        this.eventArgs = null;\n        this.diagram = diagram;\n        this.objectFinder = new ObjectFinder();\n        this.commandHandler = commandHandler;\n    }\n    Object.defineProperty(DiagramEventHandler.prototype, \"action\", {\n        get: function () {\n            return this.currentAction;\n        },\n        set: function (action) {\n            if (action !== this.currentAction) {\n                if (this.currentAction === 'PortDraw') {\n                    this.diagram.tool &= ~DiagramTools.DrawOnce;\n                    if (this.tool) {\n                        this.tool.mouseUp({ position: this.currentPosition });\n                    }\n                    this.tool = null;\n                }\n                if (action === 'Rotate' || action === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.add('e-diagram-rotate');\n                }\n                else if (this.currentAction === 'Rotate' || this.currentAction === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n                }\n                this.currentAction = action;\n                if (this.currentAction !== 'None' && this.currentAction !== 'Select' &&\n                    !(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                    this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.ToolAction;\n                }\n                else {\n                    this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n                }\n                this.diagram.setCursor(this.diagram.getCursor(action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramEventHandler.prototype, \"blocked\", {\n        get: function () {\n            return this.isBlocked;\n        },\n        set: function (blocked) {\n            this.isBlocked = blocked;\n            if (this.blocked) {\n                this.diagram.setCursor('not-allowed');\n            }\n            else {\n                this.diagram.setCursor(this.diagram.getCursor(this.action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramEventHandler.prototype.getMousePosition = function (e) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            offsetX = touchArg.changedTouches[0].clientX;\n            offsetY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            offsetX = e.clientX;\n            offsetY = e.clientY;\n        }\n        var position = new Size();\n        position = getRulerSize(this.diagram);\n        var boundingRect = this.diagram.element.getBoundingClientRect();\n        offsetX = offsetX + this.diagram.diagramCanvas.scrollLeft - boundingRect.left - position.width;\n        offsetY = offsetY + this.diagram.diagramCanvas.scrollTop - boundingRect.top - position.height;\n        offsetX /= this.diagram.scroller.transform.scale;\n        offsetY /= this.diagram.scroller.transform.scale;\n        offsetX -= this.diagram.scroller.transform.tx;\n        offsetY -= this.diagram.scroller.transform.ty;\n        return { x: offsetX, y: offsetY };\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            _this.updateViewPortSize(_this.diagram.element);\n        }, 300);\n        return false;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.updateViewPortSize = function (element) {\n        var container = document.getElementById(element.id);\n        if (container) {\n            var bounds = container.getBoundingClientRect();\n            this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n            var position = new Size();\n            position = getRulerSize(this.diagram);\n            var width = this.diagram.getSizeValue(this.diagram.width, position.width);\n            var height = this.diagram.getSizeValue(this.diagram.height, position.height);\n            this.diagram.diagramCanvas.style.width = width;\n            this.diagram.diagramCanvas.style.height = height;\n            this.diagram.scroller.setSize();\n            this.diagram.transformLayers();\n            if (this.diagram.rulerSettings.showRulers) {\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.canHideResizers = function () {\n        return ((this.tool instanceof MoveTool || this.tool instanceof RotateTool) && this.isMouseDown);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.updateCursor = function () {\n        if ((this.diagram.selectedItems.nodes.length === 1 || this.diagram.selectedItems.connectors.length === 1)) {\n            var list = [];\n            list = list.concat(this.diagram.selectedItems.nodes, this.diagram.selectedItems.connectors);\n            this.blocked = (this.isMouseDown && list.length === 1 && this.tool instanceof SelectTool && !canMove(list[0]));\n        }\n    };\n    DiagramEventHandler.prototype.isForeignObject = function (target, isTextBox) {\n        var foreignobject = target;\n        if (foreignobject) {\n            while (foreignobject.parentNode !== null) {\n                if (typeof foreignobject.className === 'string' &&\n                    ((!isTextBox && foreignobject.className.indexOf('foreign-object') !== -1) ||\n                        (isTextBox && foreignobject.className.indexOf('e-diagram-text-edit') !== -1))) {\n                    return foreignobject;\n                }\n                else {\n                    foreignobject = foreignobject.parentNode;\n                }\n            }\n        }\n        return null;\n    };\n    DiagramEventHandler.prototype.isMetaKey = function (evt) {\n        return navigator.platform.match('Mac') ? evt.metaKey : evt.ctrlKey;\n    };\n    DiagramEventHandler.prototype.renderUmlHighLighter = function (args) {\n        this.diagram.commandHandler.removeStackHighlighter();\n        var node = this.diagram.selectedItems.nodes[0];\n        if (node && node.container && node.container.type === 'Stack' && node.shape.type === 'UmlClassifier') {\n            var bound = node.wrapper.bounds;\n            if (!bound.containsPoint(this.currentPosition)) {\n                var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n                var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                if (target && target.parentId && (target.parentId === node.id)) {\n                    var isVertical = this.diagram.nameTable[target.parentId].container.orientation === 'Vertical';\n                    renderStackHighlighter(target.wrapper, isVertical, args.position, this.diagram, true);\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.isDeleteKey = function (key, value) {\n        return (navigator.platform.match('Mac') && key === 'Backspace' && value === 'delete');\n    };\n    DiagramEventHandler.prototype.isMouseOnScrollBar = function (evt) {\n        var x = evt.offsetX;\n        var y = evt.offsetY;\n        var diagramCanvas = this.diagram.diagramCanvas;\n        var height = diagramCanvas.offsetHeight;\n        var width = diagramCanvas.offsetWidth;\n        var topLeft;\n        var topRight;\n        var bottomLeft;\n        var bottomRight;\n        var bounds;\n        if (height < diagramCanvas.scrollHeight) {\n            //default scrollbar width in browser is '17pixels'.\n            topLeft = { x: (width - 17), y: 0 };\n            topRight = { x: width, y: 0 };\n            bottomLeft = { x: (width - 17), y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        if (width < diagramCanvas.scrollWidth) {\n            topLeft = { x: 0, y: (height - 17) };\n            topRight = { x: width, y: (height - 17) };\n            bottomLeft = { x: 0, y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.updateVirtualization = function () {\n        var _this = this;\n        var delay = 50;\n        var removeObjectInterval;\n        removeObjectInterval = setInterval(function (args) {\n            _this.diagram.removeVirtualObjects(removeObjectInterval);\n        }, delay);\n        setTimeout(function () {\n            _this.diagram.deleteVirtualObject = true;\n        }, delay);\n    };\n    DiagramEventHandler.prototype.mouseDown = function (evt) {\n        this.focus = true;\n        var touches;\n        touches = evt.touches;\n        if (this.isMouseOnScrollBar(evt)) {\n            this.isScrolling = true;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram)) ||\n            (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.action === 'Select' || this.action === 'Drag') {\n                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n            }\n            if (((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                && (evt.button === 2 || evt.buttons === 2))) {\n                var arg = {\n                    element: this.diagram, position: this.currentPosition, count: evt.buttons, actualObject: this.eventArgs.actualObject\n                };\n                this.inAction = false;\n                this.tool.mouseUp(this.eventArgs);\n            }\n            else if (((this.inAction === true) && this.isMouseDown === true &&\n                (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool))) {\n                this.isMouseDown = true;\n                this.eventArgs = {};\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n            }\n            else {\n                this.isMouseDown = true;\n                this.currentPosition = this.prevPosition = this.getMousePosition(evt);\n                this.eventArgs = {};\n                if (this.diagram.textEditing && !this.isMouseOnScrollBar(evt)) {\n                    this.diagram.endEdit();\n                    this.diagram.textEditing = false;\n                }\n                var target = void 0;\n                var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n                var obj = this.objectFinder.findObjectUnderMouse(this.diagram, objects, this.action, this.inAction, this.eventArgs, evt);\n                var sourceElement = null;\n                if (obj !== null) {\n                    sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                    if (sourceElement) {\n                        target = this.commandHandler.findTarget(sourceElement, obj);\n                    }\n                }\n                this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                //work around - correct it\n                var ctrlKey = this.isMetaKey(evt);\n                if (ctrlKey && evt.shiftKey && this.diagram.connectorEditingToolModule) {\n                    this.action = 'SegmentEnd';\n                }\n                else if ((ctrlKey || evt.shiftKey) && (!canZoomPan(this.diagram))) {\n                    this.action = 'Select';\n                }\n                this.tool = this.diagram.getTool(this.action);\n                if (!this.tool) {\n                    this.action = 'Select';\n                    this.tool = this.diagram.getTool(this.action);\n                }\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                if (ctrlKey || evt.shiftKey) {\n                    var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } : { ctrlKey: true };\n                    this.eventArgs.info = info;\n                }\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n                this.initialEventArgs = { source: this.eventArgs.source, sourceWrapper: this.eventArgs.sourceWrapper };\n                this.initialEventArgs.position = this.currentPosition;\n                this.initialEventArgs.info = this.eventArgs.info;\n                this.inAction = false;\n                if (evt.type === 'touchstart') {\n                    if (touches && touches.length >= 2) {\n                        this.touchStartList = addTouchPointer(this.touchStartList, evt, touches);\n                    }\n                    if (!touches) {\n                        evt.preventDefault();\n                    }\n                }\n            }\n        }\n        if (!this.isForeignObject(evt.target) && !this.isForeignObject(evt.target, true) && (!touches)) {\n            evt.preventDefault();\n        }\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.mouseMoveExtend = function (e, obj) {\n        if (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) {\n            this.tool.mouseMove(this.eventArgs);\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            this.checkAutoScroll(e);\n        }\n        else {\n            if (!this.blocked) {\n                (this.tool.mouseMove(this.eventArgs));\n            }\n        }\n        if (this.eventArgs.target) {\n            this.hoverElement = this.eventArgs.target;\n        }\n        var isNode = this.eventArgs.target instanceof Node && obj instanceof Node ? false : true;\n        if (this.tool instanceof ConnectTool) {\n            this.diagram.updatePortVisibility(this.hoverElement instanceof Node ? this.hoverElement : this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, isNode);\n        }\n        if (this.hoverElement instanceof Node\n            && this.hoverNode instanceof Node && this.hoverNode && this.hoverNode.id !== this.hoverElement.id) {\n            this.diagram.updatePortVisibility(this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, true);\n        }\n        this.hoverElement = isNode ? null : obj;\n        this.hoverNode = isNode ? null : obj;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.checkAction = function (obj) {\n        if (this.action === 'LabelSelect' && this.eventArgs.sourceWrapper &&\n            (this.eventArgs.sourceWrapper instanceof TextElement || this.eventArgs.sourceWrapper instanceof DiagramHtmlElement)) {\n            var annotation = this.commandHandler.findTarget(this.eventArgs.sourceWrapper, this.eventArgs.source);\n            if (!isSelected(this.diagram, annotation, false, this.eventArgs.sourceWrapper) && canMove(annotation)) {\n                this.action = 'LabelDrag';\n                this.tool = this.getTool(this.action);\n                this.tool.mouseDown(this.initialEventArgs);\n            }\n        }\n        else if (canMove(obj) && canSelect(obj) && this.initialEventArgs &&\n            this.initialEventArgs.source && this.action === 'Select') {\n            if (!isSelected(this.diagram, this.eventArgs.source, false) &&\n                this.eventArgs.source instanceof Selector) {\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n            }\n            if (!(obj instanceof Connector) || (obj instanceof Connector &&\n                !(contains(this.currentPosition, obj.sourcePoint, obj.hitPadding) ||\n                    contains(this.currentPosition, obj.targetPoint, obj.hitPadding)))) {\n                this.action = 'Drag';\n            }\n            this.tool = this.getTool(this.action);\n            this.tool.mouseDown(this.initialEventArgs);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseMove = function (e, touches) {\n        this.focus = true;\n        if (this.isScrolling) {\n            e.preventDefault();\n            return;\n        }\n        if (canUserInteract(this.diagram) || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            this.currentPosition = this.getMousePosition(e);\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            drawRulerMarkers(this.diagram, this.currentPosition);\n            var force = false;\n            var target = void 0;\n            if (e.type === 'touchmove') {\n                touches = e.touches;\n                if (touches && touches.length > 1) {\n                    this.touchMoveList = addTouchPointer(this.touchMoveList, e, touches);\n                    if (this.action !== 'PinchZoom') {\n                        force = true;\n                    }\n                }\n            }\n            if (Point.equals(this.currentPosition, this.prevPosition) === false || this.inAction) {\n                if (this.isMouseDown === false || force) {\n                    this.eventArgs = {};\n                    var sourceElement = null;\n                    if (obj !== null) {\n                        sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                        if (obj !== this.hoverElement) {\n                            var content_1 = this.getContent();\n                            if (this.hoverElement && this.hoverElement.tooltip.openOn === 'Auto' && content_1 !== '') {\n                                this.elementLeave();\n                                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n                            }\n                            if (obj instanceof Node) {\n                                this.hoverNode = obj;\n                            }\n                            this.hoverElement = obj;\n                            this.elementEnter(this.currentPosition, false);\n                        }\n                        else if (!this.hoverElement && this.hoverElement === obj) {\n                            this.elementEnter(this.currentPosition, true);\n                        }\n                        if (sourceElement) {\n                            target = this.commandHandler.findTarget(sourceElement, obj);\n                        }\n                    }\n                    this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    this.tool = this.getTool(this.action);\n                    this.mouseEvents();\n                    if (this.tool instanceof ConnectorDrawingTool ||\n                        this.tool instanceof PolyLineDrawingTool ||\n                        this.tool instanceof PolygonDrawingTool) {\n                        this.tool.mouseMove(this.eventArgs);\n                    }\n                    else if (touches && this.tool instanceof ZoomPanTool) {\n                        this.tool.mouseDown(this.eventArgs);\n                    }\n                    this.updateCursor();\n                    this.renderUmlHighLighter(this.eventArgs);\n                    var isNode = false;\n                    if (!(this.hoverElement && (!(this.tool instanceof ZoomPanTool)) && obj instanceof Node &&\n                        (this.diagram.selectedItems.nodes.length === 0 || !isSelected(this.diagram, this.hoverElement)))) {\n                        isNode = true;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, isNode);\n                    var content = this.getContent();\n                    if (obj === null && this.hoverElement && this.hoverElement.tooltip.openOn === 'Auto' && content) {\n                        this.hoverElement = null;\n                        this.elementLeave();\n                    }\n                    force = false;\n                }\n                else {\n                    this.eventArgs.position = this.currentPosition;\n                    if (this.action === 'Drag' && !isSelected(this.diagram, this.eventArgs.source, false) &&\n                        this.eventArgs.source instanceof Selector) {\n                        this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    }\n                    this.mouseEvents();\n                    if (e.ctrlKey || e.shiftKey) {\n                        var info = (e.ctrlKey && e.shiftKey) ? { ctrlKey: e.ctrlKey, shiftKey: e.shiftKey } : { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.checkAction(obj);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    this.updateCursor();\n                    this.inAction = true;\n                    this.initialEventArgs = null;\n                    if (this.action === 'Drag' || this.action === 'Rotate') {\n                        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Interactions;\n                    }\n                    this.mouseMoveExtend(e, obj);\n                }\n                this.prevPosition = this.currentPosition;\n                if (!this.isForeignObject(e.target, true)) {\n                    e.preventDefault();\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.getContent = function () {\n        var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n            this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n            ((this.hoverElement instanceof Connector) &&\n                this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n        var content = isPrivateTooltip ? this.hoverElement.tooltip.content :\n            this.diagram.tooltip.content;\n        return content;\n    };\n    DiagramEventHandler.prototype.checkAutoScroll = function (e) {\n        var autoScrollPosition = this.startAutoScroll(e);\n        if (!autoScrollPosition && this.doingAutoScroll) {\n            this.doingAutoScroll = false;\n            clearInterval(this.timeOutValue);\n        }\n        else if (autoScrollPosition) {\n            if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n                || this.tool instanceof SelectTool) && this.inAction) {\n                var diagram_1 = this;\n                var delay_1 = 100;\n                if (this.diagram.scrollSettings.canAutoScroll && autoScrollPosition && !this.doingAutoScroll) {\n                    this.doingAutoScroll = true;\n                    this.timeOutValue = setInterval(function (args) {\n                        diagram_1.doAutoScroll(autoScrollPosition, e, delay_1);\n                    }, delay_1);\n                }\n            }\n        }\n        else {\n            this.blocked = !(this.tool.mouseMove(this.eventArgs));\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseUp = function (evt) {\n        var touches;\n        if (this.diagram.mode === 'SVG' && canVitualize(this.diagram)) {\n            this.updateVirtualization();\n        }\n        this.diagram.previousSelectedObject = null;\n        this.diagram.diagramRenderer.rendererActions =\n            this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n        touches = evt.touches;\n        if (this.isScrolling) {\n            this.isScrolling = false;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram))\n            || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.tool && (!(this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) ||\n                ((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                    && evt.detail === 2))) {\n                if (!this.isForeignObject(evt.target) && this.isMouseDown) {\n                    document.getElementById(this.diagram.element.id + 'content').focus();\n                }\n                if (!this.inAction && evt.which !== 3) {\n                    if (this.action === 'Drag') {\n                        this.action = 'Select';\n                        var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                        var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                        var isMultipleSelect = true;\n                        if ((!evt.ctrlKey && this.isMouseDown\n                            && (this.diagram.selectedItems.nodes.length + this.diagram.selectedItems.connectors.length) > 1)\n                            && evt.which === 1 && !canPreventClearSelection(this.diagram.diagramActions)) {\n                            isMultipleSelect = false;\n                            this.commandHandler.clearSelection();\n                        }\n                        if (!isSelected(this.diagram, obj) || (!isMultipleSelect)) {\n                            this.commandHandler.selectObjects([obj]);\n                        }\n                    }\n                }\n                var history_1 = this.updateContainerProperties();\n                var isGroupAction = void 0;\n                this.addUmlNode();\n                this.inAction = false;\n                this.isMouseDown = false;\n                this.currentPosition = this.getMousePosition(evt);\n                if (this.diagram.selectedObject.helperObject) {\n                    isGroupAction = this.updateContainerBounds();\n                }\n                if (this.tool && (this.tool.prevPosition || this.tool instanceof LabelTool)) {\n                    this.eventArgs.position = this.currentPosition;\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    var ctrlKey = this.isMetaKey(evt);\n                    if (ctrlKey || evt.shiftKey) {\n                        var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } :\n                            { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    if (this.diagram.diagramActions & DiagramAction.Interactions) {\n                        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Interactions;\n                    }\n                    this.eventArgs.clickCount = evt.detail;\n                    if (this.diagram.selectedObject.helperObject && (this.tool instanceof MoveTool || this.tool instanceof ResizeTool)) {\n                        if (this.diagram.selectedObject.actualObject &&\n                            this.diagram.selectedObject.actualObject.parentId !== '') {\n                            var parentNode = this.diagram.getObject(this.diagram.selectedObject.actualObject.parentId);\n                            if (parentNode && parentNode.isLane) {\n                                this.commandHandler.isContainer = true;\n                            }\n                        }\n                        this.tool.mouseUp(this.eventArgs, history_1.isPreventHistory);\n                    }\n                    else {\n                        this.tool.mouseUp(this.eventArgs);\n                    }\n                    if (history_1.hasStack) {\n                        this.diagram.endGroupAction();\n                    }\n                }\n                if (isGroupAction) {\n                    this.diagram.endGroupAction();\n                }\n                this.updateContainerBounds(true);\n                if (this.diagram.selectedObject && this.diagram.selectedObject.helperObject) {\n                    this.diagram.remove(this.diagram.selectedObject.helperObject);\n                    this.diagram.selectedObject = { helperObject: undefined, actualObject: undefined };\n                }\n                this.blocked = false;\n                if (this.hoverElement) {\n                    var portVisibility = PortVisibility.Connect;\n                    if (isSelected(this.diagram, this.hoverElement)) {\n                        portVisibility |= PortVisibility.Hover;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, portVisibility, true);\n                    this.hoverElement = null;\n                }\n                this.touchStartList = null;\n                this.touchMoveList = null;\n                if (!(this.tool instanceof TextDrawingTool)) {\n                    this.tool = null;\n                }\n            }\n            if (!touches) {\n                evt.preventDefault();\n            }\n            this.diagram.currentDrawingObject = undefined;\n            var selector = this.diagram.selectedItems;\n            if (!this.inAction && selector.wrapper && selector.userHandles.length > 0) {\n                this.diagram.renderSelector(true);\n            }\n            if (!this.inAction && !this.diagram.currentSymbol && this.eventArgs) {\n                var arg = {\n                    element: this.eventArgs.source || this.diagram, position: this.eventArgs.position, count: evt.detail,\n                    actualObject: this.eventArgs.actualObject\n                };\n                this.diagram.triggerEvent(DiagramEvent.click, arg);\n            }\n            this.eventArgs = {};\n        }\n        this.eventArgs = {};\n        this.diagram.commandHandler.removeStackHighlighter(); // end the corresponding tool\n    };\n    DiagramEventHandler.prototype.addSwimLaneObject = function (selectedNode) {\n        var swimlaneNode;\n        var targetNode;\n        var shape;\n        var value;\n        var canInsert;\n        var index = 0;\n        var offset;\n        var actualShape = selectedNode.shape;\n        var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n        if (!targetNode) {\n            targetNode = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        this.diagram.clearSelectorLayer();\n        if (targetNode && !(targetNode.isLane || targetNode.isPhase || targetNode.isHeader)) {\n            for (var i = 0; i < objects.length; i++) {\n                var laneNode = this.diagram.nameTable[objects[i].id];\n                if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                    targetNode = laneNode;\n                }\n            }\n        }\n        if (targetNode && (actualShape.isPhase || (actualShape.isLane && targetNode.isLane))) {\n            var id = targetNode.parentId;\n            swimlaneNode = this.diagram.nameTable[id];\n        }\n        if (swimlaneNode) {\n            shape = swimlaneNode.shape;\n            canInsert = (actualShape.isLane) ? actualShape.orientation === shape.orientation :\n                actualShape.orientation !== shape.orientation;\n        }\n        if (canInsert && targetNode) {\n            if (shape.header && shape.hasHeader && shape.orientation === 'Horizontal') {\n                index = 1;\n            }\n            if (shape.phases.length > 0) {\n                index += 1;\n            }\n            if (actualShape.isPhase) {\n                if (shape.orientation === 'Horizontal') {\n                    offset = this.currentPosition.x - swimlaneNode.wrapper.bounds.x;\n                }\n                else {\n                    offset = this.currentPosition.y - (swimlaneNode.wrapper.bounds.y + shape.header.height);\n                }\n                var phases = { id: randomId(), offset: offset, header: { annotation: { content: 'Phase' } } };\n                this.diagram.addPhases(swimlaneNode, [phases]);\n            }\n            else {\n                var laneHeight = actualShape.lanes[0].header.height;\n                var lane = {\n                    id: randomId(), style: actualShape.lanes[0].style, header: {\n                        annotation: {\n                            content: actualShape.lanes[0].header.annotation.content,\n                            style: actualShape.lanes[0].header.annotation.style\n                        },\n                        style: actualShape.lanes[0].header.style\n                    },\n                };\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                orientation_1 ? lane.height = actualShape.lanes[0].height : lane.width = actualShape.lanes[0].width;\n                if (shape.orientation === 'Horizontal') {\n                    value = targetNode.rowIndex ? targetNode.rowIndex :\n                        this.diagram.nameTable[targetNode.parentId].rowIndex;\n                    if (targetNode.wrapper.offsetY < this.currentPosition.y) {\n                        value += 1;\n                    }\n                }\n                else {\n                    value = targetNode.columnIndex ? targetNode.columnIndex :\n                        this.diagram.nameTable[targetNode.parentId].columnIndex;\n                    if (this.currentPosition.x < targetNode.wrapper.bounds.center.x) {\n                        value -= 1;\n                    }\n                }\n                if (shape.lanes.length > (value - index)) {\n                    lane.header.width = shape.lanes[value - index].header.width;\n                    lane.header.height = shape.lanes[value - index].header.height;\n                }\n                else {\n                    lane.header.width = shape.lanes[value - index - 1].header.width;\n                    lane.header.height = shape.lanes[value - index - 1].header.height;\n                }\n                this.diagram.addLanes(swimlaneNode, [lane], value - index);\n            }\n            this.commandHandler.select(swimlaneNode);\n        }\n        else if (actualShape.isLane) {\n            var swimLaneobj = {\n                id: randomId(), width: selectedNode.width, height: selectedNode.height,\n                shape: {\n                    type: 'SwimLane', header: {\n                        annotation: { content: 'Header' }, height: 50, style: actualShape.lanes[0].header.style\n                    },\n                    phases: [{ id: randomId(), header: { annotation: { content: 'Phase' } } }],\n                    lanes: [{\n                            id: randomId(), height: selectedNode.height, width: selectedNode.width, style: actualShape.lanes[0].style,\n                            header: {\n                                annotation: {\n                                    content: actualShape.lanes[0].header.annotation.content,\n                                    style: actualShape.lanes[0].header.annotation.style\n                                },\n                                style: actualShape.lanes[0].header.style\n                            },\n                        }], orientation: actualShape.orientation,\n                }\n            };\n            if (actualShape.orientation === 'Vertical') {\n                swimLaneobj.width += 20;\n            }\n            swimLaneobj.offsetX = this.currentPosition.x + (swimLaneobj.width / 2);\n            swimLaneobj.offsetY = this.currentPosition.y + (swimLaneobj.height / 2);\n            this.diagram.add(swimLaneobj);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseLeave = function (evt) {\n        //Define what has to happen on mouse leave\n        if (this.tool && this.inAction) {\n            this.tool.mouseLeave(this.eventArgs);\n        }\n        if (this.diagram.selectedObject.helperObject) {\n            this.updateContainerProperties();\n            var isGroupAction = this.updateContainerBounds();\n            if (isGroupAction) {\n                this.diagram.endGroupAction();\n            }\n        }\n        if (this.eventArgs && this.eventArgs.source) {\n            this.diagram.updatePortVisibility(this.eventArgs.source, PortVisibility.Hover, true);\n            this.hoverElement = null;\n        }\n        if (this.tool instanceof ConnectTool && this.eventArgs && this.eventArgs.target && this.eventArgs.target instanceof Node) {\n            this.diagram.updatePortVisibility(this.eventArgs.target, PortVisibility.Hover | PortVisibility.Connect, true);\n            this.hoverElement = null;\n        }\n        var selector = this.diagram.selectedItems;\n        if (selector && selector.wrapper) {\n            this.diagram.renderSelector(true);\n        }\n        if (this.diagram.diagramActions & DiagramAction.Interactions || this.diagram.diagramActions & DiagramAction.ToolAction) {\n            this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n        }\n        this.isMouseDown = false;\n        this.focus = false;\n        this.touchStartList = null;\n        this.touchMoveList = null;\n        this.commandHandler.removeSnap();\n        this.inAction = false;\n        this.eventArgs = {};\n        this.tool = null;\n        removeRulerMarkers();\n        if (this.action === 'Rotate') {\n            this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n        }\n        evt.preventDefault();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseWheel = function (evt) {\n        var up = (evt.wheelDelta > 0 || -40 * evt.detail > 0) ? true : false;\n        var mousePosition = this.getMousePosition(evt);\n        this.diagram.tooltipObject.close();\n        var ctrlKey = this.isMetaKey(evt);\n        if (ctrlKey) {\n            this.diagram.zoom(up ? (1.2) : 1 / (1.2), mousePosition);\n            evt.preventDefault();\n        }\n        else {\n            var horizontalOffset = this.diagram.scroller.horizontalOffset;\n            var verticalOffset = this.diagram.scroller.verticalOffset;\n            var change = up ? 20 : -20;\n            if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                this.eventArgs = {};\n                this.getMouseEventArgs(mousePosition, this.eventArgs);\n                this.eventArgs.position = mousePosition;\n                this.tool.mouseWheel(this.eventArgs);\n            }\n            if (evt.shiftKey) {\n                this.diagram.scroller.zoom(1, change, 0, mousePosition);\n            }\n            else {\n                this.diagram.scroller.zoom(1, 0, change, mousePosition);\n            }\n            if (horizontalOffset !== this.diagram.scroller.horizontalOffset\n                || verticalOffset !== this.diagram.scroller.verticalOffset) {\n                evt.preventDefault();\n            }\n        }\n        if (this.diagram.textEditing) {\n            this.diagram.isTriggerEvent = true;\n            if (this.diagram.activeLabel.parentId) {\n                var node = this.diagram.getObject(this.diagram.activeLabel.parentId);\n                this.diagram.startTextEdit(node, this.diagram.activeLabel.id);\n            }\n            this.diagram.isTriggerEvent = false;\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.keyDown = function (evt) {\n        if (!(this.diagram.diagramActions & DiagramAction.TextEdit) &&\n            !(this.checkEditBoxAsTarget(evt)) || (evt.key === 'Escape' || evt.keyCode === 27)) {\n            var i = void 0;\n            var command = void 0;\n            var keycode = evt.keyCode ? evt.keyCode : evt.which;\n            var key = evt.key;\n            var ctrlKey = this.isMetaKey(evt);\n            if (this.diagram.commandManager && this.diagram.commands) {\n                var commands = this.diagram.commands;\n                for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n                    var i_1 = _a[_i];\n                    command = this.diagram.commands[i_1];\n                    if (command && (command.gesture.keyModifiers || command.gesture.key)) {\n                        if ((keycode === command.gesture.key || (key === Keys[command.gesture.key])\n                            || this.isDeleteKey(key, i_1))\n                            && (((!command.gesture.keyModifiers) && (!evt.altKey) && (!evt.shiftKey) && (!ctrlKey)) ||\n                                (command.gesture.keyModifiers && (ctrlKey || evt.altKey || evt.shiftKey) &&\n                                    (this.altKeyPressed(command.gesture.keyModifiers) && evt.altKey) ||\n                                    (this.shiftKeyPressed(command.gesture.keyModifiers) && evt.shiftKey) ||\n                                    (this.ctrlKeyPressed(command.gesture.keyModifiers) && ctrlKey)))) {\n                            var canExecute = getFunction(command.canExecute);\n                            if (canExecute && canExecute({\n                                'keyDownEventArgs': KeyboardEvent,\n                                parameter: command.parameter\n                            })) {\n                                evt.preventDefault();\n                                if (evt.key === 'Escape') {\n                                    if (this.checkEditBoxAsTarget(evt)) {\n                                        document.getElementById(this.diagram.diagramCanvas.id).focus();\n                                    }\n                                    else if (this.diagram.currentSymbol) {\n                                        var selectedSymbols = 'selectedSymbols';\n                                        var source = 'sourceElement';\n                                        var intDestroy = 'intDestroy';\n                                        this.diagram.removeFromAQuad(this.diagram.currentSymbol);\n                                        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[this.diagram.currentSymbol.id]);\n                                        this.diagram.removeElements(this.diagram.currentSymbol);\n                                        removeChildNodes(this.diagram.currentSymbol, this.diagram);\n                                        delete this.diagram.nameTable[this.diagram.currentSymbol.id];\n                                        var sourceElement = this.diagram.droppable[source];\n                                        sourceElement.draggable[intDestroy]();\n                                        var element = this.diagram.droppable[selectedSymbols];\n                                        element.parentNode.removeChild(element);\n                                        var diagramActions = this.diagram.diagramActions;\n                                        this.diagram.diagramActions =\n                                            this.diagram.addConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.tool.mouseUp(this.eventArgs);\n                                        this.diagram.diagramRenderer.rendererActions = this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                                        if (this.diagram.previousSelectedObject) {\n                                            this.diagram.select(this.diagram.previousSelectedObject);\n                                        }\n                                        this.action = 'Select';\n                                        this.diagram.previousSelectedObject = null;\n                                        this.diagram.currentSymbol = null;\n                                        this.diagram.diagramActions =\n                                            this.diagram.removeConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.isMouseDown = false;\n                                    }\n                                }\n                                if (command.execute) {\n                                    // if (i === 'nudgeUp' || i === 'nudgeRight' || i === 'nudgeDown' || i === 'nudgeLeft') {\n                                    //     command.execute()\n                                    // } else {\n                                    var execute = getFunction(command.execute);\n                                    execute({ 'keyDownEventArgs': KeyboardEvent, parameter: command.parameter });\n                                    // }\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.startAutoScroll = function (e) {\n        var position = this.getMousePosition(e);\n        position.x *= this.diagram.scroller.currentZoom;\n        position.y *= this.diagram.scroller.currentZoom;\n        var rulerSize = getRulerSize(this.diagram);\n        var movingPosition;\n        var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            if (position.x + this.diagram.scroller.horizontalOffset + autoScrollBorder.right + rulerSize.width >=\n                this.diagram.scroller.viewPortWidth - 18) {\n                movingPosition = 'right';\n            }\n            else if (position.x + this.diagram.scroller.horizontalOffset < autoScrollBorder.left) {\n                movingPosition = 'left';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset + autoScrollBorder.bottom + rulerSize.height >\n                this.diagram.scroller.viewPortHeight - 18) {\n                movingPosition = 'bottom';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset < autoScrollBorder.top) {\n                movingPosition = 'top';\n            }\n        }\n        return movingPosition;\n    };\n    DiagramEventHandler.prototype.doAutoScroll = function (option, e, delay, autoScroll) {\n        var position = option;\n        if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n            || this.tool instanceof SelectTool) && this.inAction) {\n            var diagram = this;\n            var pos = this.getMousePosition(e);\n            var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n            var newDelay = delay ? delay : 100;\n            var left = 0;\n            var top_1 = 0;\n            var point = { x: pos.x, y: pos.y };\n            switch (position) {\n                case 'right':\n                    point.x = pos.x + 10;\n                    left = 10;\n                    break;\n                case 'left':\n                    point.x = pos.x - 10;\n                    left = -10;\n                    break;\n                case 'bottom':\n                    point.y = pos.y + 10;\n                    top_1 = 10;\n                    break;\n                case 'top':\n                    point.y = pos.y - 10;\n                    top_1 = -10;\n                    break;\n            }\n            this.eventArgs.position = { x: point.x, y: point.y };\n            this.tool.mouseMove(this.eventArgs);\n            this.diagram.scroller.zoom(1, -left, -top_1, pos);\n        }\n    };\n    DiagramEventHandler.prototype.mouseEvents = function () {\n        var target = this.diagram.findObjectsUnderMouse(this.currentPosition);\n        for (var i = 0; i < target.length; i++) {\n            if (this.eventArgs.actualObject === target[i]) {\n                target.splice(i, 1);\n            }\n        }\n        var arg = {\n            targets: target,\n            element: (this.eventArgs.source === this.eventArgs.actualObject) ? undefined : this.eventArgs.source,\n            actualObject: this.eventArgs.actualObject\n        };\n        if (this.lastObjectUnderMouse && (!this.eventArgs.actualObject || (this.lastObjectUnderMouse !== this.eventArgs.actualObject))) {\n            var arg_1 = { targets: undefined, element: this.lastObjectUnderMouse, actualObject: undefined };\n            this.diagram.triggerEvent(DiagramEvent.mouseLeave, arg_1);\n            this.lastObjectUnderMouse = null;\n        }\n        if (!this.lastObjectUnderMouse && this.eventArgs.source || (this.lastObjectUnderMouse !== this.eventArgs.actualObject)) {\n            this.lastObjectUnderMouse = this.eventArgs.actualObject;\n            this.diagram.triggerEvent(DiagramEvent.mouseEnter, arg);\n        }\n        if (this.eventArgs.actualObject) {\n            this.diagram.triggerEvent(DiagramEvent.mouseOver, arg);\n        }\n    };\n    DiagramEventHandler.prototype.elementEnter = function (mousePosition, elementOver) {\n        if (!elementOver) {\n            var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n                this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n                ((this.hoverElement instanceof Connector) && this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n            var content = this.getContent();\n            if (this.hoverElement.tooltip.openOn === 'Auto' && content !== '') {\n                updateTooltip(this.diagram, isPrivateTooltip ? this.hoverElement : undefined);\n            }\n            var offset = getTooltipOffset(this.diagram, mousePosition, this.hoverElement);\n            if (this.hoverElement.tooltip.openOn === 'Auto' && content !== '') {\n                this.diagram.tooltipObject.close();\n                this.diagram.tooltipObject.offsetX = offset.x;\n                this.diagram.tooltipObject.offsetY = offset.y;\n                this.diagram.tooltipObject.dataBind();\n            }\n            if (canEnableToolTip(this.hoverElement, this.diagram) && this.hoverElement.tooltip.openOn === 'Auto') {\n                this.diagram.tooltipObject.open(this.diagram.element);\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementLeave = function () {\n        this.diagram.tooltipObject.close();\n    };\n    DiagramEventHandler.prototype.altKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Alt) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.ctrlKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Control) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.shiftKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Shift) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.scrolled = function (evt) {\n        this.diagram.updateScrollOffset();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.doubleClick = function (evt) {\n        if (canUserInteract(this.diagram)) {\n            var annotation = void 0;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            if (obj !== null && canUserInteract(this.diagram)) {\n                var node = obj;\n                annotation = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                    var arg_2 = {\n                        source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n                    };\n                    this.tool.mouseUp(this.eventArgs);\n                    this.isMouseDown = false;\n                    this.eventArgs = {};\n                    this.tool = null;\n                    evt.preventDefault();\n                }\n                else {\n                    var layer = this.diagram.commandHandler.getObjectLayer(obj.id);\n                    if (layer && !layer.lock && layer.visible) {\n                        if (!(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                            var id = '';\n                            if (obj.shape.shape === 'TextAnnotation') {\n                                id = obj.id.split('_textannotation_')[1];\n                            }\n                            this.diagram.startTextEdit(obj, id || (annotation instanceof TextElement ?\n                                (annotation.id).split(obj.id + '_')[1] : undefined));\n                        }\n                    }\n                }\n            }\n            var arg = {\n                source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n            };\n            this.diagram.triggerEvent(DiagramEvent.doubleClick, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.itemClick = function (actualTarget, diagram) {\n        var obj = actualTarget;\n        if (checkParentAsContainer(this.diagram, obj, true)) {\n            return obj;\n        }\n        return null;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.inputChange = function (evt) {\n        var minWidth = 90;\n        var maxWidth;\n        var minHeight = 12;\n        var fontsize;\n        var textWrapper;\n        var node;\n        var height;\n        var width;\n        var textBounds;\n        var textBoxWidth;\n        var transforms;\n        var scale;\n        var editTextBox = document.getElementById(this.diagram.element.id + '_editBox');\n        var editTextBoxDiv = document.getElementById(this.diagram.element.id + '_editTextBoxDiv');\n        var text = (editTextBox.value);\n        var line = text.split('\\n');\n        node = (this.diagram.selectedItems.nodes[0]) ? this.diagram.selectedItems.nodes[0] : this.diagram.selectedItems.connectors[0];\n        if ((!node && this.tool instanceof TextDrawingTool) || node.shape.type === 'SwimLane') {\n            node = this.diagram.nameTable[this.diagram.activeLabel.parentId];\n        }\n        if (node && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n            textWrapper = this.diagram.getWrapper(node.wrapper, this.diagram.activeLabel.id);\n            maxWidth = node.wrapper.bounds.width < textWrapper.bounds.width ? node.wrapper.bounds.width : textWrapper.bounds.width;\n            maxWidth = maxWidth > minWidth ? maxWidth : minWidth;\n            textBounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n            fontsize = Number((editTextBox.style.fontSize).split('px')[0]);\n            if (line.length > 1 && line[line.length - 1] === '') {\n                textBounds.height = textBounds.height + fontsize;\n            }\n            transforms = this.diagram.scroller.transform;\n            scale = canZoomTextEdit(this.diagram) ? transforms.scale : 1;\n            width = textBounds.width;\n            width = ((minWidth > width) ? minWidth : width) * scale;\n            height = ((minHeight > textBounds.height) ? minHeight : textBounds.height) * scale;\n            editTextBoxDiv.style.left = ((((textWrapper.bounds.center.x + transforms.tx) * transforms.scale) - width / 2) - 2.5) + 'px';\n            editTextBoxDiv.style.top = ((((textWrapper.bounds.center.y + transforms.ty) * transforms.scale) - height / 2) - 3) + 'px';\n            editTextBoxDiv.style.width = width + 'px';\n            editTextBoxDiv.style.height = height + 'px';\n            editTextBox.style.minHeight = minHeight + 'px';\n            editTextBox.style.minWidth = minWidth + 'px';\n            editTextBox.style.width = width + 'px';\n            editTextBox.style.height = height + 'px';\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.isAddTextNode = function (node, focusOut) {\n        if (this.tool instanceof TextDrawingTool || focusOut) {\n            this.tool = null;\n            if (node && (!(canContinuousDraw(this.diagram)))) {\n                this.diagram.drawingObject = undefined;\n                this.diagram.currentDrawingObject = undefined;\n            }\n            if (getObjectFromCollection(this.diagram.nodes, node.id) ||\n                getObjectFromCollection(this.diagram.connectors, node.id) ||\n                (this.diagram.bpmnModule && this.diagram.bpmnModule.textAnnotationConnectors.indexOf(node) > -1)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.checkEditBoxAsTarget = function (evt) {\n        if ((evt.target && evt.target.id === this.diagram.element.id + '_editBox')) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.getMouseEventArgs = function (position, args, source) {\n        args.position = position;\n        var obj;\n        var objects;\n        if (!source) {\n            if (this.action === 'Drag' || this.action === 'ConnectorSourceEnd' || this.action === 'SegmentEnd' ||\n                this.action === 'OrthoThumb' || this.action === 'BezierSourceThumb' || this.action === 'BezierTargetThumb' ||\n                this.action === 'ConnectorTargetEnd' || this.action.indexOf('Rotate') !== -1 || this.action.indexOf('Resize') !== -1) {\n                obj = this.diagram.selectedItems;\n                if (!this.diagram.currentSymbol && this.action === 'Drag' && obj && this.diagram.selectedItems.nodes.length > 0 &&\n                    this.diagram.selectedItems.nodes[0].shape.type === 'SwimLane') {\n                    objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                    obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                }\n            }\n            else {\n                objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            }\n        }\n        else {\n            objects = this.diagram.findObjectsUnderMouse(this.currentPosition, source);\n            obj = this.diagram.findTargetObjectUnderMouse(objects, this.action, this.inAction, args.position, source);\n        }\n        if (obj && obj.isHeader) {\n            obj = this.diagram.nameTable[obj.parentId];\n            this.eventArgs.actualObject = obj;\n        }\n        var wrapper;\n        if (obj) {\n            wrapper = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n        }\n        if (!source) {\n            args.source = obj;\n            args.sourceWrapper = wrapper;\n        }\n        else {\n            args.target = obj;\n            args.targetWrapper = wrapper;\n        }\n        args.actualObject = this.eventArgs.actualObject;\n        args.startTouches = this.touchStartList;\n        args.moveTouches = this.touchMoveList;\n        return args;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.resetTool = function () {\n        this.action = 'Select';\n        this.hoverElement = null;\n        this.hoverNode = null;\n        this.tool = this.diagram.getTool(this.action);\n        this.updateCursor();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getTool = function (action) {\n        switch (action) {\n            case 'Select':\n                return new SelectTool(this.commandHandler, true);\n            case 'Drag':\n                return new MoveTool(this.commandHandler);\n            case 'Rotate':\n                return new RotateTool(this.commandHandler);\n            case 'LayoutAnimation':\n                return new ExpandTool(this.commandHandler);\n            case 'Hyperlink':\n                return new LabelTool(this.commandHandler);\n            case 'ResizeSouthEast':\n            case 'ResizeSouthWest':\n            case 'ResizeNorthEast':\n            case 'ResizeNorthWest':\n            case 'ResizeSouth':\n            case 'ResizeNorth':\n            case 'ResizeWest':\n            case 'ResizeEast':\n                return new ResizeTool(this.commandHandler, action);\n            case 'ConnectorSourceEnd':\n            case 'ConnectorTargetEnd':\n            case 'BezierSourceThumb':\n            case 'BezierTargetThumb':\n                return new ConnectTool(this.commandHandler, action);\n            case 'SegmentEnd':\n            case 'OrthoThumb':\n                return new ConnectorEditing(this.commandHandler, action);\n            case 'Draw':\n                var shape = 'shape';\n                var type = findObjectType(this.diagram.drawingObject);\n                if (type === 'Node' && this.diagram.drawingObject.shape.type === 'Text') {\n                    return new TextDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                    !(this.diagram.drawingObject.shape.points)) {\n                    return new PolygonDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' ||\n                    (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                        (this.diagram.drawingObject.shape.points))) {\n                    return new NodeDrawingTool(this.commandHandler, this.diagram.drawingObject);\n                }\n                else if (type === 'Connector' && this.diagram.drawingObject.type === 'Polyline') {\n                    return new PolyLineDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Connector') {\n                    return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n                }\n                break;\n            case 'Pan':\n                return new ZoomPanTool(this.commandHandler, false);\n            case 'PinchZoom':\n                return new ZoomPanTool(this.commandHandler, true);\n            case 'PortDrag':\n                return new MoveTool(this.commandHandler, 'Port');\n            case 'PortDraw':\n                return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n            case 'LabelSelect':\n                return new SelectTool(this.commandHandler, true, 'LabelSelect');\n            case 'LabelDrag':\n                return new LabelDragTool(this.commandHandler);\n            case 'LabelResizeSouthEast':\n            case 'LabelResizeSouthWest':\n            case 'LabelResizeNorthEast':\n            case 'LabelResizeNorthWest':\n            case 'LabelResizeSouth':\n            case 'LabelResizeNorth':\n            case 'LabelResizeWest':\n            case 'LabelResizeEast':\n                return new LabelResizeTool(this.commandHandler, action);\n            case 'LabelRotate':\n                return new LabelRotateTool(this.commandHandler);\n            //for coverage\n            // case 'Custom':\n            //     return this.diagram.getTool(action);\n        }\n        return null;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getCursor = function (action) {\n        var object = (this.diagram.selectedItems.annotation) ?\n            this.diagram.selectedItems.wrapper.children[0] : this.diagram.selectedItems;\n        var rotateAngle = (this.diagram.selectedItems.annotation) ?\n            (object.rotateAngle + object.parentTransform) : object.rotateAngle;\n        return getCursor(action, rotateAngle);\n    };\n    //start region - interface betweend diagram and interaction\n    /** @private */\n    DiagramEventHandler.prototype.findElementUnderMouse = function (obj, position) {\n        return this.objectFinder.findElementUnderSelectedItem(obj, position);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.objectFinder.findObjectsUnderMouse(position, this.diagram, this.eventArgs, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, this.currentPosition);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findTargetUnderMouse = function (objects, action, inAction, position, source) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, position, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return findToolToActivate(obj, wrapper, this.currentPosition, this.diagram, this.touchStartList, this.touchMoveList, target);\n    };\n    DiagramEventHandler.prototype.updateContainerBounds = function (isAfterMouseUp) {\n        var isGroupAction = false;\n        if (this.diagram.selectedObject.helperObject) {\n            var boundsUpdate = (this.tool instanceof ResizeTool) ? true : false;\n            var obj = this.diagram.selectedObject.actualObject;\n            var parentNode = this.diagram.nameTable[obj.parentId];\n            if (isAfterMouseUp) {\n                removeChildInContainer(this.diagram, obj, this.currentPosition, boundsUpdate);\n            }\n            else {\n                if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                    this.diagram.updateDiagramObject(obj);\n                }\n                isGroupAction = updateCanvasBounds(this.diagram, obj, this.currentPosition, boundsUpdate);\n                this.diagram.updateSelector();\n                if (obj.isLane || obj.isPhase) {\n                    this.diagram.clearSelection();\n                    this.commandHandler.select(obj);\n                }\n            }\n        }\n        return isGroupAction;\n    };\n    DiagramEventHandler.prototype.updateContainerProperties = function () {\n        var helperObject;\n        var isChangeProperties = false;\n        var hasStack;\n        var connectors;\n        var hasGroup = false;\n        var obj;\n        var history = { hasStack: false, isPreventHistory: false };\n        if (this.diagram.selectedObject.helperObject) {\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            helperObject = this.diagram.selectedObject.helperObject;\n            obj = this.diagram.selectedObject.actualObject;\n            if (obj.shape.type === 'SwimLane') {\n                connectors = getConnectors(this.diagram, obj.wrapper.children[0], 0, true);\n            }\n            if (obj.shape.type !== 'SwimLane' && obj.parentId &&\n                this.diagram.getObject(obj.parentId).shape.type === 'SwimLane') {\n                if (target instanceof Node && this.diagram.getObject(target.parentId) &&\n                    this.diagram.getObject(target.parentId).shape.type !== 'SwimLane') {\n                    target = this.diagram.getObject(target.parentId);\n                }\n            }\n            if (this.currentAction === 'Drag' && obj.container && obj.container.type === 'Canvas' && obj.parentId &&\n                this.diagram.getObject(obj.parentId).shape.type === 'SwimLane' && target && target !== obj &&\n                target.container && target.container.type === 'Canvas' && target.isLane &&\n                obj.isLane && target.parentId === obj.parentId) {\n                laneInterChanged(this.diagram, obj, target, this.currentPosition);\n                history.isPreventHistory = true;\n            }\n            else {\n                var parentNode = this.diagram.nameTable[obj.parentId];\n                if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                    obj.offsetX = helperObject.offsetX;\n                    obj.offsetY = helperObject.offsetY;\n                    if (obj && obj.shape && obj.shape.type !== 'UmlClassifier') {\n                        obj.width = helperObject.width;\n                        obj.height = helperObject.height;\n                    }\n                    obj.rotateAngle = helperObject.rotateAngle;\n                }\n                var undoElement = void 0;\n                if (parentNode && parentNode.container && parentNode.container.type === 'Stack') {\n                    this.diagram.startGroupAction();\n                    hasGroup = true;\n                }\n                if (!target && parentNode && parentNode.container && parentNode.container.type === 'Stack' && this.action === 'Drag') {\n                    var index = parentNode.wrapper.children.indexOf(obj.wrapper);\n                    undoElement = { targetIndex: undefined, target: undefined, sourceIndex: index, source: clone(obj) };\n                    if (index > -1) {\n                        var children = parentNode.children;\n                        children.splice(children.indexOf(obj.id), 1);\n                        this.diagram.nameTable[obj.id].parentId = '';\n                        hasStack = true;\n                        parentNode.wrapper.children.splice(index, 1);\n                    }\n                }\n                moveChildInStack(obj, target, this.diagram, this.action);\n                parentNode = checkParentAsContainer(this.diagram, obj) ? this.diagram.nameTable[obj.parentId] :\n                    (this.diagram.nameTable[obj.parentId] || obj);\n                if (parentNode && parentNode.container && parentNode.container.type === 'Canvas') {\n                    parentNode.wrapper.maxWidth = parentNode.maxWidth = parentNode.wrapper.actualSize.width;\n                    parentNode.wrapper.maxHeight = parentNode.maxHeight = parentNode.wrapper.actualSize.height;\n                    isChangeProperties = true;\n                }\n                if (checkParentAsContainer(this.diagram, obj, true) && parentNode && parentNode.container.type === 'Canvas') {\n                    checkChildNodeInContainer(this.diagram, obj);\n                }\n                else {\n                    history = this.updateContainerPropertiesExtend(parentNode, obj, connectors, helperObject, history);\n                }\n                if (obj.shape.lanes) {\n                    this.updateLaneChildNode(obj);\n                }\n                if (isChangeProperties) {\n                    parentNode.maxWidth = parentNode.wrapper.maxWidth = undefined;\n                    parentNode.maxHeight = parentNode.wrapper.maxHeight = undefined;\n                }\n                if (hasStack) {\n                    this.diagram.nodePropertyChange(parentNode, {}, {\n                        offsetX: parentNode.offsetX, offsetY: parentNode.offsetY, width: parentNode.width, height: parentNode.height,\n                        rotateAngle: parentNode.rotateAngle\n                    });\n                    var entry = {\n                        type: 'StackChildPositionChanged', redoObject: { sourceIndex: undefined, source: undoElement.source },\n                        undoObject: undoElement, category: 'Internal'\n                    };\n                    if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                        this.diagram.addHistoryEntry(entry);\n                    }\n                }\n                if (obj && obj.container && (obj.container.type === 'Stack' ||\n                    (obj.container.type === 'Canvas' && obj.parentId === ''))) {\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = true;\n                    }\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                    });\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = false;\n                    }\n                }\n            }\n            updateConnectorsProperties(connectors, this.diagram);\n            history.hasStack = hasGroup;\n        }\n        return history;\n    };\n    DiagramEventHandler.prototype.updateLaneChildNode = function (obj) {\n        for (var i = 0; i < (obj.shape.lanes.length); i++) {\n            if (obj.shape.lanes[i].children && obj.shape.lanes[i].children.length > 0) {\n                for (var j = 0; j < obj.shape.lanes[i].children.length; j++) {\n                    var id = obj.shape.lanes[i].children[j].id;\n                    var childNode = this.diagram.nameTable[id];\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.updateContainerPropertiesExtend = function (parentNode, obj, connectors, helperObject, history) {\n        if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth' || obj.shape.type === 'SwimLane') {\n            var undoObj = cloneObject(obj);\n            var isUpdateRow = false;\n            if (parentNode && parentNode.container && parentNode.container.type === 'Grid') {\n                var shape = parentNode.shape.type === 'SwimLane' ? true : false;\n                var container = (shape ? parentNode.wrapper.children[0] : parentNode.wrapper);\n                var padding = shape ? parentNode.shape.padding : undefined;\n                var x = parentNode.wrapper.bounds.x;\n                var y = parentNode.wrapper.bounds.y;\n                if (obj.columnIndex !== undefined && (parentNode.container.orientation === 'Horizontal' &&\n                    ((shape && obj.isPhase) || (!shape && obj.rowIndex === 1))) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        ((!shape && obj.rowIndex > 0 && obj.columnIndex > 0) || (shape && obj.isLane)))) {\n                    if (parentNode.container.orientation === 'Horizontal' && obj.isPhase && obj.wrapper.width > obj.maxWidth) {\n                        obj.maxWidth = obj.wrapper.width;\n                        obj.wrapper.maxWidth = obj.wrapper.width;\n                    }\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateColumnWidth(obj.columnIndex, helperObject.width, true, padding);\n                    if (obj.isPhase) {\n                        var id = parentNode.shape.phases[obj.columnIndex].header.id;\n                        var node = this.diagram.nameTable[id];\n                        if (node.maxWidth < helperObject.width) {\n                            node.maxWidth = helperObject.width;\n                            node.wrapper.maxWidth = helperObject.width;\n                        }\n                    }\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.width = (parentNode.width) ? container.width : parentNode.width;\n                        updateHeaderMaxWidth(this.diagram, parentNode);\n                        parentNode.wrapper.width = parentNode.width;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, false);\n                    }\n                }\n                else if (obj.rowIndex !== undefined) {\n                    isUpdateRow = true;\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateRowHeight(obj.rowIndex, helperObject.height, true, padding);\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.height = (parentNode.height) ? container.height : parentNode.height;\n                        parentNode.wrapper.height = parentNode.height;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, true);\n                    }\n                }\n                if (parentNode.shape.type === 'SwimLane') {\n                    history.isPreventHistory = true;\n                }\n                this.diagram.nodePropertyChange(parentNode, {}, {\n                    offsetX: parentNode.offsetX, offsetY: parentNode.offsetY,\n                    rotateAngle: parentNode.rotateAngle\n                });\n                this.diagram.drag(parentNode, x - parentNode.wrapper.bounds.x, y - parentNode.wrapper.bounds.y);\n            }\n            else {\n                if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                    obj.wrapper.measureChildren = true;\n                }\n                this.diagram.nodePropertyChange(obj, {}, {\n                    offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                });\n                obj.wrapper.measureChildren = false;\n            }\n            obj.wrapper.measure(new Size(obj.wrapper.width, obj.wrapper.height));\n            obj.wrapper.arrange(obj.wrapper.desiredSize);\n            if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth') {\n                var redoObject = cloneObject(obj);\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObj, redoObject: redoObject\n                };\n                this.diagram.addHistoryEntry(entry);\n            }\n        }\n        updateConnectorsProperties(connectors, this.diagram);\n        return history;\n    };\n    DiagramEventHandler.prototype.addUmlNode = function () {\n        var node = this.diagram.selectedItems.nodes[0];\n        var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x + 20, y: this.currentPosition.y });\n        var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        if (!target) {\n            objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n            target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        if (node && node.container && node.container.type === 'Stack' && target && target.parentId\n            && target.parentId === node.id) {\n            var innerNode = target;\n            var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n            var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n            if (highlighter) {\n                var index = node.wrapper.children.indexOf(target.wrapper) + 1;\n                var temp = new Node(this.diagram, 'nodes', {\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                    annotations: target.annotations, verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                    minHeight: 25\n                }, true);\n                temp.annotations[0].content = ' + Name : Type';\n                var id = innerNode.id.split('_');\n                temp.id = randomId() + temp.id;\n                temp.parentId = node.id;\n                temp.zIndex = -1;\n                temp.umlIndex = index;\n                this.diagram.startGroupAction();\n                var redoElement = {\n                    sourceIndex: node.wrapper.children.indexOf(temp.wrapper), source: temp,\n                    target: undefined, targetIndex: undefined\n                };\n                this.diagram.add(temp);\n                this.diagram.updateConnectorEdges(node);\n                this.diagram.select([this.diagram.nameTable[temp.id]]);\n                this.diagram.endGroupAction();\n                this.diagram.startTextEdit();\n            }\n        }\n    };\n    return DiagramEventHandler;\n}());\nexport { DiagramEventHandler };\n/** @private */\nvar ObjectFinder = /** @class */ (function () {\n    function ObjectFinder() {\n    }\n    /** @private */\n    ObjectFinder.prototype.findObjectsUnderMouse = function (pt, diagram, eventArgs, source, actions) {\n        // finds the collection of the object that is under the mouse;\n        var actualTarget = [];\n        if (source && source instanceof Selector) {\n            if (source.nodes.length + source.connectors.length === 1) {\n                source = (source.nodes[0] || source.connectors[0]);\n                if (source.children && source.children.length === 0) {\n                    eventArgs.actualObject = source;\n                }\n            }\n        }\n        var container;\n        var bounds;\n        var child;\n        var matrix;\n        var objArray = diagram.spatialSearch.findObjects(new Rect(pt.x - 50, pt.y - 50, 100, 100));\n        var layerObjTable = {};\n        var layerTarger;\n        for (var _i = 0, objArray_1 = objArray; _i < objArray_1.length; _i++) {\n            var obj = objArray_1[_i];\n            var point = pt;\n            bounds = obj.wrapper.outerBounds;\n            var pointInBounds = (obj.rotateAngle) ? false : bounds.containsPoint(point);\n            if ((obj !== source || diagram.currentDrawingObject instanceof Connector) &&\n                (obj instanceof Connector) ? obj !== diagram.currentDrawingObject : true && obj.wrapper.visible) {\n                var layer = diagram.commandHandler.getObjectLayer(obj.id);\n                if (layer && !layer.lock && layer.visible) {\n                    layerTarger = layerObjTable[layer.zIndex] = layerObjTable[layer.zIndex] || [];\n                    if (obj.rotateAngle) {\n                        container = obj.wrapper;\n                        bounds = cornersPointsBeforeRotation(container);\n                        for (var _a = 0, _b = container.children; _a < _b.length; _a++) {\n                            child = _b[_a];\n                            matrix = identityMatrix();\n                            rotateMatrix(matrix, -(child.rotateAngle + child.parentTransform), child.offsetX, child.offsetY);\n                            point = transformPointByMatrix(matrix, pt);\n                            if (cornersPointsBeforeRotation(child).containsPoint(point)) {\n                                pointInBounds = true;\n                            }\n                        }\n                    }\n                    if (!source || (isSelected(diagram, obj) === false)) {\n                        if (canEnablePointerEvents(obj, diagram)) {\n                            if ((obj instanceof Connector) ? isPointOverConnector(obj, pt) : pointInBounds) {\n                                var padding = (obj instanceof Connector) ? obj.hitPadding || 0 : 0;\n                                var element = void 0;\n                                element = this.findElementUnderMouse(obj, pt, padding);\n                                if (element && obj.id !== 'helper') {\n                                    insertObject(obj, 'zIndex', layerTarger);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        for (var _c = 0, _d = diagram.layers; _c < _d.length; _c++) {\n            var layer = _d[_c];\n            actualTarget = actualTarget.concat(layerObjTable[layer.zIndex] || []);\n            for (var _e = 0, actualTarget_1 = actualTarget; _e < actualTarget_1.length; _e++) {\n                var obj = actualTarget_1[_e];\n                var eventHandler = 'eventHandler';\n                if (obj.shape.type === 'Bpmn' && obj.processId && (!(diagram[eventHandler].tool instanceof MoveTool) ||\n                    (diagram[eventHandler].tool instanceof MoveTool) && canAllowDrop(obj))) {\n                    var index = actualTarget.indexOf(diagram.nameTable[obj.processId]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n                if (obj.shape.type === 'UmlClassifier' && obj.container && obj.container.type === 'Stack') {\n                    var index = actualTarget.indexOf(diagram.nameTable[diagram.nameTable[obj.id].wrapper.children[0].id]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < actualTarget.length; i++) {\n            var parentObj = diagram.nameTable[actualTarget[i].parentId];\n            if (parentObj) {\n                var portElement = this.findElementUnderMouse(parentObj, pt);\n                for (var j = 0; j < parentObj.ports.length; j++) {\n                    if (portElement.id.match('_' + parentObj.ports[j].id + '$')) {\n                        var port = parentObj.ports[j];\n                        if (canDrag(port, diagram) || canDraw(port, diagram)) {\n                            return actualTarget;\n                        }\n                    }\n                }\n            }\n            while (parentObj) {\n                var index = actualTarget.indexOf(parentObj);\n                if (index !== -1) {\n                    actualTarget.splice(index, 1);\n                }\n                else {\n                    break;\n                }\n                parentObj = diagram.nameTable[parentObj.parentId];\n            }\n        }\n        if (eventArgs && !eventArgs.source) {\n            for (var i = 0; i < actualTarget.length; i++) {\n                var parentNode = diagram.nameTable[actualTarget[i].parentId];\n                if (parentNode && parentNode.shape.type === 'SwimLane') {\n                    for (var j = 0; j < actualTarget.length; j++) {\n                        var connector = actualTarget[j];\n                        if (connector instanceof Connector) {\n                            actualTarget.splice(i, 1);\n                        }\n                    }\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /** @private */\n    ObjectFinder.prototype.isTarget = function (actualTarget, diagram, action) {\n        var connector = diagram.selectedItems.connectors[0];\n        var node;\n        node = action === 'ConnectorSourceEnd' ? diagram.nameTable[connector.targetID] :\n            node = diagram.nameTable[connector.sourceID];\n        if (node && (!node.processId && !actualTarget.processId || node.processId !== actualTarget.processId)) {\n            if (node.processId !== actualTarget.processId) {\n                actualTarget = null;\n            }\n            if (actualTarget && actualTarget.parentId &&\n                diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                actualTarget = diagram.nameTable[actualTarget.parentId];\n            }\n        }\n        if (action === 'ConnectorSourceEnd' && connector.targetID) {\n            var targetNode = diagram.nameTable[connector.targetID];\n            if (targetNode && targetNode.shape && (targetNode.shape.shape === 'TextAnnotation')) {\n                var id = connector.id.split('_');\n                if (((targetNode.shape.type === 'Bpmn') && actualTarget.shape.type !== 'Bpmn') || (id[0] === actualTarget.id) ||\n                    actualTarget.shape.shape === 'TextAnnotation') {\n                    actualTarget = null;\n                }\n                if (actualTarget.parentId &&\n                    diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                    actualTarget = diagram.nameTable[actualTarget.parentId];\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:disable */\n    /** @private */\n    ObjectFinder.prototype.findObjectUnderMouse = function (diagram, objects, action, inAction, eventArg, position, source) {\n        //we will get the wrapper object here\n        //we have to choose the object to be interacted with from the given wrapper\n        //Find the object that is under mouse\n        var eventHandler = 'eventHandler';\n        var inPort;\n        var outPort;\n        var actualTarget = null;\n        if (objects.length !== 0) {\n            if (source && source instanceof Selector) {\n                if (source.nodes.length + source.connectors.length === 1) {\n                    source = (source.nodes[0] || source.connectors[0]);\n                }\n            }\n            if ((action === 'ConnectorSourceEnd' && source || action === 'PortDraw') ||\n                ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && getObjectType(diagram.drawingObject) === Connector)) {\n                var connector = diagram.selectedItems.connectors[0];\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    outPort = getInOutConnectPorts(objects[i], false);\n                    if (objects[i] instanceof Node && (canOutConnect(objects[i]) || (canPortOutConnect(outPort)))) {\n                        actualTarget = objects[i];\n                        if (connector) {\n                            actualTarget = this.isTarget(actualTarget, diagram, action);\n                        }\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (action === 'ConnectorTargetEnd' && source) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    inPort = getInOutConnectPorts(objects[i], true);\n                    if (objects[i] instanceof Node && (canInConnect(objects[i]) || (canPortInConnect(inPort)))) {\n                        actualTarget = objects[i];\n                        actualTarget = this.isTarget(actualTarget, diagram, action);\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (source && (action === 'Drag' || (diagram[eventHandler].tool instanceof MoveTool))) {\n                var index = 0;\n                for (var i = 0; i < objects.length; i++) {\n                    var temp = objects[i];\n                    if (source !== temp && (temp instanceof Connector ||\n                        !position || temp.wrapper.bounds.containsPoint(position))) {\n                        if (canAllowDrop(temp)) {\n                            if (!actualTarget) {\n                                actualTarget = temp;\n                                index = actualTarget.zIndex;\n                            }\n                            else {\n                                actualTarget = index >= temp.zIndex ? actualTarget : temp;\n                                index = Math.max(index, temp.zIndex);\n                            }\n                        }\n                    }\n                }\n                if (actualTarget && actualTarget.shape.type === 'Bpmn') {\n                    if (diagram.selectedItems.nodes.length > 0 && diagram.selectedItems.nodes[0].shape.type === 'Bpmn') {\n                        actualTarget = actualTarget;\n                    }\n                    else {\n                        actualTarget = null;\n                    }\n                }\n                if (actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n                return actualTarget;\n            }\n            else if (action === 'Select' && diagram[eventHandler].tool) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Connector) {\n                        if (objects[i - 1] instanceof Node && objects[i - 1].ports) {\n                            var portElement = this.findTargetElement(objects[i - 1].wrapper, position, undefined);\n                            if ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$')))) {\n                                return objects[i - 1];\n                            }\n                            for (var j = 0; j < objects[i - 1].ports.length; j++) {\n                                if (portElement && portElement.id.match('_' + objects[i - 1].ports[j].id + '$')) {\n                                    if (canDraw(objects[i - 1].ports[j], diagram)) {\n                                        return objects[i - 1];\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                actualTarget = objects[objects.length - 1];\n                eventArg.actualObject = actualTarget;\n                if (!diagram[eventHandler].itemClick(actualTarget, true)) {\n                    if (actualTarget.parentId) {\n                        var obj = actualTarget;\n                        var selected = isSelected(diagram, obj);\n                        while (obj) {\n                            if (isSelected(diagram, obj) && !selected) {\n                                break;\n                            }\n                            actualTarget = obj;\n                            obj = diagram.nameTable[obj.parentId];\n                        }\n                    }\n                }\n            }\n            else if (action === 'Pan' || action === 'LayoutAnimation') {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node) {\n                        var portElement = this.findTargetElement(objects[i].wrapper, position, undefined);\n                        if ((action === 'LayoutAnimation' || action === 'Pan') || ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$'))))) {\n                            return objects[i];\n                        }\n                    }\n                }\n            }\n            else {\n                actualTarget = objects[objects.length - 1];\n                if (eventArg && actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:enable */\n    /** @private */\n    ObjectFinder.prototype.findElementUnderSelectedItem = function (obj, position) {\n        //rewrite this for multiple selection\n        if (obj instanceof Selector) {\n            if (obj.nodes.length === 1 && (!obj.connectors || !obj.connectors.length)) {\n                return this.findElementUnderMouse(obj.nodes[0], position);\n            }\n            else if ((!obj.nodes || obj.nodes.length) && obj.connectors.length === 1) {\n                return this.findElementUnderMouse(obj.connectors[0], position);\n            }\n        }\n        else {\n            return this.findElementUnderMouse(obj, position);\n        }\n        return null;\n    };\n    ObjectFinder.prototype.findElementUnderMouse = function (obj, position, padding) {\n        return this.findTargetElement(obj.wrapper, position, padding);\n    };\n    /** @private */\n    ObjectFinder.prototype.findTargetElement = function (container, position, padding) {\n        for (var i = container.children.length - 1; i >= 0; i--) {\n            var element = container.children[i];\n            if (element && element.outerBounds.containsPoint(position)) {\n                if (element instanceof Container) {\n                    var target = this.findTargetElement(element, position);\n                    if (target) {\n                        return target;\n                    }\n                }\n                if (element.bounds.containsPoint(position)) {\n                    return element;\n                }\n            }\n        }\n        if (container.bounds.containsPoint(position, padding) && container.style.fill !== 'none') {\n            return container;\n        }\n        return null;\n    };\n    return ObjectFinder;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    // tslint:disable-next-line:no-any\n    function Layer(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /**  @private   */\n        _this.objectZIndex = -1;\n        /**   @private  */\n        _this.zIndexTable = {};\n        _this.objects = [];\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Layer.prototype, \"id\", void 0);\n    __decorate([\n        Property(true)\n    ], Layer.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], Layer.prototype, \"lock\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"objects\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property(-1)\n    ], Layer.prototype, \"zIndex\", void 0);\n    return Layer;\n}(ChildProperty));\nexport { Layer };\n","import { Connector, getBezierPoints, isEmptyVector } from '../objects/connector';\nimport { Node, BpmnSubEvent, BpmnAnnotation } from '../objects/node';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { cloneObject as clone, cloneObject, getBounds, getFunction } from './../utility/base-util';\nimport { completeRegion, getTooltipOffset, sort, findObjectIndex, intersect3, getAnnotationPosition } from './../utility/diagram-util';\nimport { updatePathElement } from './../utility/diagram-util';\nimport { randomId, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { Selector } from './selector';\nimport { hasSelection, isSelected, hasSingleConnection } from './actions';\nimport { DiagramEvent } from '../enum/enum';\nimport { canSelect, canMove, canRotate, canDragSourceEnd, canDragTargetEnd, canSingleSelect, canDrag } from './../utility/constraints-util';\nimport { canMultiSelect, canContinuousDraw } from './../utility/constraints-util';\nimport { canPanX, canPanY, canPageEditable } from './../utility/constraints-util';\nimport { SnapConstraints, DiagramTools, DiagramAction } from '../enum/enum';\nimport { getDiagramElement, getAdornerLayerSvg, getHTMLLayer, getAdornerLayer } from '../utility/dom-util';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { getObjectType, getPoint, intersect2, getOffsetOfConnector } from './../utility/diagram-util';\nimport { Layer } from '../diagram/layer';\nimport { SelectorConstraints } from '../enum/enum';\nimport { remove } from '@syncfusion/ej2-base';\nimport { getOppositeDirection, getPortDirection, findAngle } from './../utility/connector';\nimport { swapBounds, findPoint, orthoConnection2Segment, getIntersection } from './../utility/connector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { renderContainerHelper } from './container-interaction';\nimport { checkChildNodeInContainer, checkParentAsContainer, addChildToContainer } from './container-interaction';\nimport { renderStackHighlighter } from './container-interaction';\nimport { getConnectors, updateConnectorsProperties, findLaneIndex } from './../utility/swim-lane-util';\nimport { swimLaneSelection, pasteSwimLane, gridSelection } from '../utility/swim-lane-util';\n/**\n * Defines the behavior of commands\n */\nvar CommandHandler = /** @class */ (function () {\n    function CommandHandler(diagram) {\n        /**   @private  */\n        this.clipboardData = {};\n        /**   @private  */\n        this.connectorsTable = [];\n        /**   @private  */\n        this.processTable = {};\n        /** @private */\n        this.isContainer = false;\n        this.childTable = {};\n        this.parentTable = {};\n        this.diagram = diagram;\n    }\n    Object.defineProperty(CommandHandler.prototype, \"snappingModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.snappingModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CommandHandler.prototype, \"layoutAnimateModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.layoutAnimateModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    CommandHandler.prototype.startTransaction = function (protectChange) {\n        this.state = { element: this.diagram.selectedItems, backup: null };\n        if (protectChange) {\n            this.diagram.protectPropertyChange(true);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'none';\n    };\n    /** @private */\n    CommandHandler.prototype.endTransaction = function (protectChange) {\n        this.state = null;\n        if (protectChange) {\n            this.diagram.protectPropertyChange(false);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'all';\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.showTooltip = function (node, position, content, toolName, isTooltipVisible) {\n        var _this = this;\n        if (isTooltipVisible) {\n            this.diagram.tooltipObject.position = 'BottomCenter';\n            this.diagram.tooltipObject.animation = { open: { delay: 0, duration: 0 } };\n            this.diagram.tooltip.relativeMode = toolName === 'ConnectTool' ? 'Mouse' : 'Object';\n            this.diagram.tooltipObject.openDelay = 0;\n            this.diagram.tooltipObject.closeDelay = 0;\n        }\n        if (this.diagram.selectedItems.setTooltipTemplate) {\n            var template = void 0;\n            var setTooltipTemplate = getFunction(this.diagram.selectedItems.setTooltipTemplate);\n            if (setTooltipTemplate) {\n                template = setTooltipTemplate(node, this.diagram);\n            }\n            if (template instanceof HTMLElement) {\n                content = template.cloneNode(true);\n            }\n            else {\n                content = template ? template : content;\n            }\n        }\n        this.diagram.tooltipObject.content = content;\n        var tooltipOffset = getTooltipOffset(this.diagram, { x: position.x, y: position.y }, node);\n        this.diagram.tooltipObject.offsetX = tooltipOffset.x + (toolName === 'ConnectTool' ? 10 : 0);\n        this.diagram.tooltipObject.offsetY = tooltipOffset.y + 10;\n        this.diagram.tooltipObject.dataBind();\n        if (isTooltipVisible) {\n            setTimeout(function () {\n                _this.diagram.tooltipObject.open(_this.diagram.element);\n            }, 1);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.closeTooltip = function () {\n        this.diagram.tooltipObject.close();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canEnableDefaultTooltip = function () {\n        if (this.diagram.selectedItems.constraints & SelectorConstraints.ToolTip) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelector = function () {\n        this.diagram.updateSelector();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.triggerEvent = function (event, args) {\n        if (event === DiagramEvent.drop || event === DiagramEvent.positionChange ||\n            event === DiagramEvent.connectionChange) {\n            if (this.diagram.currentSymbol) {\n                return;\n            }\n            if (event === DiagramEvent.drop) {\n                args.source = this.diagram;\n            }\n            if (this.diagram.currentDrawingObject) {\n                return;\n            }\n        }\n        this.diagram.triggerEvent(event, args);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dragOverElement = function (args, currentPosition) {\n        if (this.diagram.currentSymbol) {\n            var dragOverArg = {\n                element: args.source, target: args.target, mousePosition: currentPosition, diagram: this.diagram\n            };\n            this.triggerEvent(DiagramEvent.dragOver, dragOverArg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.disConnect = function (obj, endPoint) {\n        var oldChanges = {};\n        var newChanges = {};\n        var selectorModel;\n        var connector;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (obj && connector && (hasSingleConnection(this.diagram) || this.diagram.currentDrawingObject)) {\n            if (endPoint && (endPoint === 'ConnectorSourceEnd' || endPoint === 'ConnectorTargetEnd')) {\n                var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                if (connector[nodeEndId]) { //connector.sourceID || connector.targetID\n                    oldChanges[nodeEndId] = connector[nodeEndId];\n                    connector[nodeEndId] = '';\n                    newChanges[nodeEndId] = connector[nodeEndId];\n                    if (connector.sourcePortID || connector.targetPortID) {\n                        oldChanges[portEndId] = connector[portEndId];\n                        connector[portEndId] = '';\n                        newChanges[portEndId] = connector[portEndId];\n                    }\n                    this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n                }\n            }\n            else if ((endPoint !== 'OrthoThumb' && endPoint !== 'SegmentEnd') && (connector.sourceID || connector.targetID)) {\n                oldChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                connector.sourceID = '';\n                connector.sourcePortID = '';\n                connector.targetID = '';\n                connector.targetPortID = '';\n                newChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                var arg = {\n                    connector: connector, oldValue: oldChanges,\n                    newValue: newChanges, cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n                if (arg.cancel) {\n                    connector.sourceID = oldChanges.sourceID;\n                    connector.sourcePortID = oldChanges.sourcePortID;\n                    connector.targetID = oldChanges.targetID;\n                    connector.targetPortID = oldChanges.targetPortID;\n                }\n                else {\n                    this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                    this.diagram.updateDiagramObject(connector);\n                    arg = {\n                        connector: connector, oldValue: oldChanges,\n                        newValue: newChanges, cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                    this.triggerEvent(DiagramEvent.connectionChange, arg);\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.connectionEventChange = function (connector, oldChanges, newChanges, endPoint) {\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        var arg = {\n            connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n            newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n            cancel: false, state: 'Changing', connectorEnd: endPoint\n        };\n        this.triggerEvent(DiagramEvent.connectionChange, arg);\n        if (arg.cancel) {\n            connector[nodeEndId] = oldChanges[nodeEndId];\n            connector[portEndId] = oldChanges[portEndId];\n            newChanges = oldChanges;\n        }\n        else {\n            this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            this.diagram.updateDiagramObject(connector);\n            arg = {\n                connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changed', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findTarget = function (element, argsTarget, source, connection) {\n        var target;\n        if (argsTarget instanceof Node) {\n            if (element && element.id === argsTarget.id + '_content') {\n                return argsTarget;\n            }\n            if (source && argsTarget.shape.type === 'Bpmn' && argsTarget.shape.shape === 'Activity') {\n                if (argsTarget.shape.activity.subProcess.type === 'Transaction') {\n                    var transaction = argsTarget.shape.activity.subProcess.transaction;\n                    if (transaction.success.visible && element.id.indexOf(argsTarget.id + '_success') === 0) {\n                        return transaction.success;\n                    }\n                    if (transaction.cancel.visible && element.id.indexOf(argsTarget.id + '_cancel') === 0) {\n                        return transaction.cancel;\n                    }\n                    if (transaction.failure.visible && element.id.indexOf(argsTarget.id + '_failure') === 0) {\n                        return transaction.failure;\n                    }\n                }\n            }\n            if (element instanceof PathElement) {\n                for (var i = 0; i < argsTarget.ports.length; i++) {\n                    var port = argsTarget.ports[i];\n                    if (element.id === argsTarget.id + '_' + port.id) {\n                        return port;\n                    }\n                }\n            }\n        }\n        if (!connection) {\n            var annotation = void 0;\n            for (var i = 0; i < argsTarget.annotations.length; i++) {\n                annotation = argsTarget.annotations[i];\n                if (element.id === argsTarget.id + '_' + annotation.id) {\n                    return annotation;\n                }\n            }\n        }\n        return argsTarget;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canDisconnect = function (endPoint, args, targetPortId, targetNodeId) {\n        var selector;\n        var connect;\n        if (args.source instanceof Selector) {\n            selector = args.source;\n            connect = selector.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connect = this.diagram.currentDrawingObject;\n        }\n        var targetObject = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEnd = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEnd = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (connect[nodeEnd] !== targetNodeId || connect[portEnd] !== targetPortId) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.changeAnnotationDrag = function (args) {\n        var selectorModel;\n        var connector;\n        if (args.source && args.source.connectors &&\n            args.source.connectors.length && this.diagram.bpmnModule &&\n            this.diagram.bpmnModule.textAnnotationConnectors.indexOf(args.source.connectors[0]) > -1) {\n            if (args.source instanceof Selector) {\n                selectorModel = args.source;\n                connector = selectorModel.connectors[0];\n            }\n            var id = connector.id.split('_');\n            var annotationId = id[id.length - 1];\n            var nodeId = id[id.length - 3] || id[0];\n            if (args.target && args.target.id !== nodeId &&\n                args.target.shape.shape !== 'TextAnnotation') {\n                this.diagram.startGroupAction();\n                var parentNode = this.diagram.nameTable[id[0]];\n                var clonedNode = this.getAnnotation(parentNode, id[1]);\n                var annotationNode = {\n                    id: id[1] + randomId(),\n                    angle: Point.findAngle(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    text: clonedNode.text,\n                    length: Point.distancePoints(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                    nodeId: clonedNode.nodeId\n                };\n                var annotationObj = new BpmnAnnotation(args.target.shape, 'annotations', annotationNode, true);\n                this.diagram.bpmnModule.checkAndRemoveAnnotations(this.diagram.nameTable[connector.targetID], this.diagram);\n                this.diagram.refreshCanvasLayers();\n                annotationObj.id = id[1];\n                this.diagram.addTextAnnotation(annotationObj, args.target);\n                this.diagram.endGroupAction();\n            }\n            else if (connector) {\n                connector.sourceID = nodeId;\n                this.diagram.connectorPropertyChange(connector, {}, { sourceID: nodeId });\n                this.diagram.updateDiagramObject(connector);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.connect = function (endPoint, args) {\n        var newChanges = {};\n        var oldChanges = {};\n        var oldNodeId;\n        var oldPortId;\n        var selectorModel;\n        var connector;\n        if (args.source instanceof Selector) {\n            selectorModel = args.source;\n            connector = selectorModel.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        var target = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (target instanceof Node) {\n            oldChanges[nodeEndId] = connector[nodeEndId];\n            connector[nodeEndId] = target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            oldChanges[portEndId] = connector[portEndId];\n            this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n        }\n        else {\n            oldNodeId = connector[nodeEndId];\n            oldPortId = connector[portEndId];\n            connector[portEndId] = target.id;\n            connector[nodeEndId] = args.target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            newChanges[portEndId] = connector[portEndId];\n            var arg = {\n                connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changing', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n            if (arg.cancel) {\n                connector[nodeEndId] = oldNodeId;\n                connector[portEndId] = oldPortId;\n                newChanges[nodeEndId] = oldNodeId;\n                newChanges[portEndId] = oldPortId;\n            }\n            else {\n                this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                this.diagram.updateDiagramObject(connector);\n                arg = {\n                    connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                    newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }, cancel: false,\n                    state: 'Changed', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n            }\n        }\n        this.renderHighlighter(args, undefined, endPoint === 'ConnectorSourceEnd');\n    };\n    /** @private */\n    CommandHandler.prototype.cut = function () {\n        var index;\n        this.clipboardData.pasteIndex = 0;\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.startGroupAction();\n        }\n        this.clipboardData.clipObject = this.copyObjects();\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.endGroupAction();\n        }\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addLayer = function (layer, objects) {\n        layer.id = layer.id || randomId();\n        layer.zIndex = this.diagram.layers.length;\n        layer = new Layer(this.diagram, 'layers', layer, true);\n        layer.objectZIndex = -1;\n        layer.zIndexTable = {};\n        this.diagram.layers.push(layer);\n        this.diagram.layerZIndexTable[layer.zIndex] = layer.id;\n        this.diagram.activeLayer = layer;\n        var layers = layer.objects;\n        if (objects) {\n            for (var i = 0; i < objects.length; i++) {\n                this.diagram.add(objects[i]);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getObjectLayer = function (objectName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            var objIndex = layers[i].objects.indexOf(objectName);\n            if (objIndex > -1) {\n                return layers[i];\n            }\n        }\n        return this.diagram.activeLayer;\n    };\n    /** @private */\n    CommandHandler.prototype.getLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            if (layers[i].id === layerName) {\n                return layers[i];\n            }\n        }\n        return undefined;\n    };\n    /** @private */\n    CommandHandler.prototype.removeLayer = function (layerId) {\n        var layers = this.getLayer(layerId);\n        if (layers) {\n            var index = this.diagram.layers.indexOf(layers);\n            var layerObject = layers.objects;\n            for (var i = layerObject.length - 1; i >= 0; i--) {\n                this.diagram.unSelect(this.diagram.nameTable[layerObject[i]]);\n                this.diagram.remove(this.diagram.nameTable[layerObject[i]]);\n                if (layers.id !== 'default_layer') {\n                    if (this.diagram.activeLayer.id === layerId) {\n                        this.diagram.activeLayer = this.diagram.layers[this.diagram.layers.length - 1];\n                    }\n                }\n            }\n            delete this.diagram.layerZIndexTable[layers.zIndex];\n            this.diagram.layers.splice(index, 1);\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.moveObjects = function (objects, targetLayer) {\n        var layer = this.getLayer(targetLayer) || this.diagram.activeLayer;\n        this.diagram.setActiveLayer(layer.id);\n        var targerNodes;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var i = objects_1[_i];\n            var layer_1 = this.getObjectLayer(i);\n            var index = layer_1.objects.indexOf(i);\n            if (index > -1) {\n                targerNodes = this.diagram.nameTable[i];\n                this.diagram.unSelect(targerNodes);\n                this.diagram.remove(this.diagram.nameTable[i]);\n                this.diagram.add(targerNodes);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.cloneLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        var layer = this.getLayer(layerName);\n        if (layer) {\n            var cloneObject_1 = [];\n            var newlayer = {\n                id: layerName + '_' + randomId(), objects: [], visible: true, lock: false\n            };\n            this.addLayer(newlayer);\n            newlayer.zIndex = this.diagram.layers.length - 1;\n            var multiSelect = cloneObject_1.length !== 1;\n            for (var _i = 0, _a = layer.objects; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                cloneObject_1.push(this.diagram.nameTable[obj]);\n            }\n            this.paste(cloneObject_1);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.copy = function () {\n        this.clipboardData.pasteIndex = 1;\n        this.clipboardData.clipObject = this.copyObjects();\n        return this.clipboardData.clipObject;\n    };\n    /** @private */\n    CommandHandler.prototype.copyObjects = function () {\n        var selectedItems = [];\n        var obj = [];\n        this.clipboardData.childTable = {};\n        if (this.diagram.selectedItems.connectors.length > 0) {\n            selectedItems = this.diagram.selectedItems.connectors;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = void 0;\n                if (this.diagram.bpmnModule &&\n                    this.diagram.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[j]) > -1) {\n                    element = cloneObject((this.diagram.nameTable[selectedItems[j].targetID]));\n                }\n                else {\n                    element = cloneObject((selectedItems[j]));\n                }\n                obj.push(element);\n            }\n        }\n        if (this.diagram.selectedItems.nodes.length > 0) {\n            selectedItems = selectedItems.concat(this.diagram.selectedItems.nodes);\n            for (var j = 0; j < this.diagram.selectedItems.nodes.length; j++) {\n                var node = clone(this.diagram.selectedItems.nodes[j]);\n                var processTable = {};\n                this.copyProcesses(node);\n                obj.push(clone(node));\n                var matrix = identityMatrix();\n                rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n                if (node.children) {\n                    var childTable = this.clipboardData.childTable;\n                    var tempNode = void 0;\n                    var elements = [];\n                    var nodes = this.getAllDescendants(node, elements, true);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = this.diagram.nameTable[nodes[i].id];\n                        var clonedObject = childTable[tempNode.id] = clone(tempNode);\n                        var newOffset = transformPointByMatrix(matrix, { x: clonedObject.wrapper.offsetX, y: clonedObject.wrapper.offsetY });\n                        if (tempNode instanceof Node) {\n                            clonedObject.offsetX = newOffset.x;\n                            clonedObject.offsetY = newOffset.y;\n                            clonedObject.rotateAngle -= node.rotateAngle;\n                        }\n                    }\n                    this.clipboardData.childTable = childTable;\n                }\n                if (node.shape.type === 'SwimLane') {\n                    var swimlane = this.diagram.getObject(this.diagram.selectedItems.nodes[j].id);\n                    var childTable = this.clipboardData.childTable;\n                    var connectorsList = getConnectors(this.diagram, swimlane.wrapper.children[0], 0, true);\n                    for (var i = 0; i < connectorsList.length; i++) {\n                        var connector = this.diagram.getObject(connectorsList[i]);\n                        childTable[connector.id] = clone(connector);\n                    }\n                }\n                if (node && node.isLane) {\n                    var childTable = this.clipboardData.childTable;\n                    var swimlane = this.diagram.getObject(node.parentId);\n                    var laneIndex = findLaneIndex(swimlane, node);\n                    childTable[node.id] = cloneObject(swimlane.shape.lanes[laneIndex]);\n                    childTable[node.id].width = swimlane.wrapper.actualSize.width;\n                }\n            }\n        }\n        if (this.clipboardData.pasteIndex === 0) {\n            this.startGroupAction();\n            for (var _i = 0, selectedItems_1 = selectedItems; _i < selectedItems_1.length; _i++) {\n                var item = selectedItems_1[_i];\n                if (this.diagram.nameTable[item.id]) {\n                    if (this.diagram.bpmnModule &&\n                        this.diagram.bpmnModule.textAnnotationConnectors.indexOf(item) > -1) {\n                        this.diagram.remove(this.diagram.nameTable[item.targetID]);\n                    }\n                    else {\n                        this.diagram.remove(item);\n                    }\n                }\n            }\n            this.endGroupAction();\n        }\n        this.sortByZIndex(obj, 'zIndex');\n        return obj;\n    };\n    CommandHandler.prototype.copyProcesses = function (node) {\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                this.processTable[i] = (clone(this.diagram.nameTable[i]));\n                if (this.processTable[i].shape.activity.subProcess.processes &&\n                    this.processTable[i].shape.activity.subProcess.processes.length > 0) {\n                    this.copyProcesses(this.processTable[i]);\n                }\n            }\n            this.clipboardData.processTable = this.processTable;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.group = function () {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        var obj = {};\n        var group;\n        obj.id = 'group' + randomId();\n        obj = new Node(this.diagram, 'nodes', obj, true);\n        obj.children = [];\n        selectedItems = this.diagram.selectedItems.nodes;\n        selectedItems = selectedItems.concat(this.diagram.selectedItems.connectors);\n        for (var i = 0; i < selectedItems.length; i++) {\n            if (!selectedItems[i].parentId) {\n                obj.children.push(selectedItems[i].id);\n            }\n        }\n        group = this.diagram.add(obj);\n        if (group) {\n            this.select(group);\n        }\n        var entry = { type: 'Group', undoObject: obj, redoObject: obj, category: 'Internal' };\n        this.addHistoryEntry(entry);\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.unGroup = function (obj) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        if (obj) {\n            selectedItems.push(obj);\n        }\n        else {\n            selectedItems = this.diagram.selectedItems.nodes;\n        }\n        for (var i = 0; i < selectedItems.length; i++) {\n            var node = selectedItems[i];\n            var entry = {\n                type: 'UnGroup', undoObject: cloneObject(node),\n                redoObject: cloneObject(node), category: 'Internal'\n            };\n            if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n            if (node.children) {\n                if (node.ports && node.ports.length > 0) {\n                    this.diagram.removePorts(node, node.ports);\n                }\n                if (node.annotations && node.annotations.length > 0) {\n                    this.diagram.removeLabels(node, node.annotations);\n                }\n                var parentNode = this.diagram.nameTable[node.parentId];\n                for (var j = node.children.length - 1; j >= 0; j--) {\n                    (this.diagram.nameTable[node.children[j]]).parentId = '';\n                    this.diagram.deleteChild(this.diagram.nameTable[node.children[j]], node);\n                    if (node.parentId && node.children[j]) {\n                        this.diagram.addChild(parentNode, node.children[j]);\n                    }\n                }\n                if (node.parentId) {\n                    this.diagram.deleteChild(node, parentNode);\n                }\n            }\n            this.diagram.removeNode(node);\n            this.clearSelection();\n        }\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.paste = function (obj) {\n        if (obj || this.clipboardData.clipObject) {\n            this.diagram.protectPropertyChange(true);\n            var copiedItems = obj ? this.getNewObject(obj) :\n                this.clipboardData.clipObject;\n            if (copiedItems) {\n                var multiSelect = copiedItems.length !== 1;\n                var groupAction = false;\n                var objectTable = {};\n                var keyTable = {};\n                if (this.clipboardData.pasteIndex !== 0) {\n                    this.clearSelection();\n                }\n                if (this.diagram.undoRedoModule) {\n                    groupAction = true;\n                    this.diagram.historyManager.startGroupAction();\n                }\n                for (var _i = 0, copiedItems_1 = copiedItems; _i < copiedItems_1.length; _i++) {\n                    var copy = copiedItems_1[_i];\n                    objectTable[copy.id] = copy;\n                }\n                for (var j = 0; j < copiedItems.length; j++) {\n                    var copy = copiedItems[j];\n                    if (getObjectType(copy) === Connector) {\n                        var clonedObj = clone(copy);\n                        var nodeId = clonedObj.sourceID;\n                        clonedObj.sourceID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.sourceID = keyTable[nodeId];\n                        }\n                        nodeId = clonedObj.targetID;\n                        clonedObj.targetID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.targetID = keyTable[nodeId];\n                        }\n                        var newObj = this.cloneConnector(clonedObj, multiSelect);\n                        keyTable[copy.id] = newObj.id;\n                    }\n                    else {\n                        var newNode = this.cloneNode(copy, multiSelect);\n                        //bpmn text annotations will not be pasted\n                        if (newNode) {\n                            keyTable[copy.id] = newNode.id;\n                            var edges = copy.inEdges;\n                            if (edges) {\n                                for (var _a = 0, edges_1 = edges; _a < edges_1.length; _a++) {\n                                    var edge = edges_1[_a];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.targetID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { targetID: '', targetPortID: '' }, { targetID: newConnector.targetID, targetPortID: newConnector.targetPortID });\n                                    }\n                                }\n                            }\n                            edges = copy.outEdges;\n                            if (edges) {\n                                for (var _b = 0, edges_2 = edges; _b < edges_2.length; _b++) {\n                                    var edge = edges_2[_b];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.sourceID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { sourceID: '', sourcePortID: '' }, { sourceID: newConnector.sourceID, sourcePortID: newConnector.sourcePortID });\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (groupAction === true) {\n                    this.diagram.historyManager.endGroupAction();\n                    groupAction = false;\n                }\n                if (this.diagram.mode !== 'SVG') {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.clipboardData.pasteIndex++;\n                this.diagram.protectPropertyChange(false);\n            }\n        }\n    };\n    CommandHandler.prototype.getNewObject = function (obj) {\n        var newObj;\n        var newobjs = [];\n        this.clipboardData.pasteIndex = 1;\n        for (var i = 0; i < obj.length; i++) {\n            newObj = cloneObject(obj[i]);\n            newobjs.push(newObj);\n        }\n        return newobjs;\n    };\n    CommandHandler.prototype.cloneConnector = function (connector, multiSelect) {\n        var newConnector;\n        var cloneObject = clone(connector);\n        this.translateObject(cloneObject);\n        cloneObject.zIndex = -1;\n        newConnector = this.diagram.add(cloneObject);\n        this.selectObjects([newConnector], multiSelect);\n        return newConnector;\n    };\n    CommandHandler.prototype.cloneNode = function (node, multiSelect, children, groupnodeID) {\n        var newNode;\n        var connectorsTable = {};\n        var cloneObject = clone(node);\n        var process;\n        var temp = this.diagram.nameTable[node.parentId];\n        if (node.shape && node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            process = cloneObject.shape.activity.subProcess.processes;\n            cloneObject.zIndex = -1;\n            cloneObject.shape.activity.subProcess.processes = undefined;\n        }\n        if (node.shape && node.shape.type === 'SwimLane') {\n            pasteSwimLane(node, this.diagram, this.clipboardData);\n        }\n        else if (temp && temp.shape.type === 'SwimLane') {\n            pasteSwimLane(clone(temp), this.diagram, this.clipboardData, node, true);\n        }\n        else if (node.children && node.children.length && (!children || !children.length)) {\n            newNode = this.cloneGroup(node, multiSelect);\n        }\n        else if (node.shape && node.shape.shape === 'TextAnnotation' && node.id.indexOf('_textannotation_') !== -1 &&\n            this.diagram.nameTable[node.id]) {\n            var checkAnnotation = node.id.split('_textannotation_');\n            var parentNode = void 0;\n            var annotation = this.diagram.nameTable[node.id];\n            for (var j = 0; j < annotation.inEdges.length; j++) {\n                var connector = this.diagram.nameTable[annotation.inEdges[j]];\n                if (connector) {\n                    parentNode = this.diagram.nameTable[connector.sourceID];\n                    var clonedNode = this.getAnnotation(parentNode, checkAnnotation[1]);\n                    var annotationNode = {\n                        id: checkAnnotation[1] + randomId(),\n                        angle: clonedNode.angle,\n                        text: clonedNode.text,\n                        length: clonedNode.length,\n                        shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                        nodeId: clonedNode.nodeId\n                    };\n                    this.diagram.addTextAnnotation(annotationNode, parentNode);\n                }\n            }\n        }\n        else {\n            this.translateObject(cloneObject, groupnodeID);\n            cloneObject.zIndex = -1;\n            if (children) {\n                cloneObject.children = children;\n            }\n            newNode = this.diagram.add(cloneObject);\n        }\n        for (var _i = 0, _a = Object.keys(connectorsTable); _i < _a.length; _i++) {\n            var i = _a[_i];\n            this.diagram.add(connectorsTable[i]);\n        }\n        if (process && process.length) {\n            newNode.shape.activity.subProcess.processes = process;\n            this.cloneSubProcesses(newNode);\n        }\n        if (newNode) {\n            this.selectObjects([newNode], multiSelect);\n        }\n        return newNode;\n    };\n    CommandHandler.prototype.getAnnotation = function (parent, annotationId) {\n        var currentAnnotation = parent.shape.annotations;\n        if (currentAnnotation && currentAnnotation.length) {\n            for (var g = 0; g <= currentAnnotation.length; g++) {\n                if (currentAnnotation[g].id === annotationId) {\n                    return currentAnnotation[g];\n                }\n            }\n        }\n        return undefined;\n    };\n    CommandHandler.prototype.cloneSubProcesses = function (node) {\n        var connector = [];\n        var temp = {};\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            var process = node.shape.activity.subProcess.processes;\n            for (var g = 0; g < process.length; g++) {\n                var child = this.diagram.nameTable[process[g]] || this.clipboardData.processTable[process[g]];\n                for (var _i = 0, _a = child.outEdges; _i < _a.length; _i++) {\n                    var j = _a[_i];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                for (var _b = 0, _c = child.inEdges; _b < _c.length; _b++) {\n                    var j = _c[_b];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                var innerChild = cloneObject(this.clipboardData.processTable[process[g]]);\n                innerChild.processId = node.id;\n                var newNode = this.cloneNode(innerChild, false);\n                temp[process[g]] = newNode.id;\n                process[g] = newNode.id;\n                this.diagram.addProcess(newNode, node.id);\n                for (var _d = 0, connector_1 = connector; _d < connector_1.length; _d++) {\n                    var i = connector_1[_d];\n                    var node_1 = this.diagram.nameTable[i] || this.diagram.connectorTable[i];\n                    var clonedNode = cloneObject(node_1);\n                    if (temp[clonedNode.sourceID] && temp[clonedNode.targetID]) {\n                        clonedNode.zIndex = -1;\n                        clonedNode.id += randomId();\n                        clonedNode.sourceID = temp[clonedNode.sourceID];\n                        clonedNode.targetID = temp[clonedNode.targetID];\n                        connector.splice(connector.indexOf(i), 1);\n                        this.diagram.add(clonedNode);\n                    }\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.cloneGroup = function (obj, multiSelect) {\n        var value;\n        var newChildren = [];\n        var children = [];\n        var connectorObj = [];\n        var newObj;\n        var oldID = [];\n        children = children.concat(obj.children);\n        var id = randomId();\n        if (this.clipboardData.childTable || obj.children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                var childObj = void 0;\n                if (this.clipboardData.childTable) {\n                    childObj = this.clipboardData.childTable[children[i]];\n                }\n                else {\n                    childObj = this.diagram.nameTable[children[i]];\n                }\n                childObj.parentId = '';\n                if (childObj) {\n                    if (getObjectType(childObj) === Connector) {\n                        connectorObj.push(childObj);\n                    }\n                    else {\n                        newObj = this.cloneNode(childObj, multiSelect, undefined, id);\n                        oldID.push(childObj.id);\n                        newChildren.push(newObj.id);\n                    }\n                }\n            }\n        }\n        for (var k = 0; k < connectorObj.length; k++) {\n            if (connectorObj[k].sourceID || connectorObj[k].targetID) {\n                for (var j = 0; j < oldID.length; j++) {\n                    if (connectorObj[k].sourceID === (oldID[j])) {\n                        connectorObj[k].sourceID += id;\n                    }\n                    if (connectorObj[k].targetID === (oldID[j])) {\n                        connectorObj[k].targetID += id;\n                    }\n                }\n            }\n            newObj = this.cloneConnector(connectorObj[k], multiSelect);\n            newChildren.push(newObj.id);\n        }\n        var parentObj = this.cloneNode(obj, multiSelect, newChildren);\n        if (parentObj && parentObj.container && parentObj.shape && parentObj.shape.type === 'UmlClassifier') {\n            this.diagram.updateDiagramObject(parentObj);\n            parentObj.wrapper.measure(new Size());\n        }\n        return parentObj;\n    };\n    /** @private */\n    CommandHandler.prototype.translateObject = function (obj, groupnodeID) {\n        obj.id += groupnodeID || randomId();\n        var diff = this.clipboardData.pasteIndex * 10;\n        if (getObjectType(obj) === Connector) {\n            obj.sourcePoint = {\n                x: obj.sourcePoint.x + diff, y: obj.sourcePoint.y + diff\n            };\n            obj.targetPoint = {\n                x: obj.targetPoint.x + diff, y: obj.targetPoint.y + diff\n            };\n            if (obj.type === 'Bezier') {\n                var segments = obj.segments;\n                for (var i = 0; i < segments.length; i++) {\n                    if (!Point.isEmptyPoint(segments[i].point1)) {\n                        segments[i].point1 = {\n                            x: segments[i].point1.x + diff, y: segments[i].point1.y + diff\n                        };\n                    }\n                    if (!Point.isEmptyPoint(segments[i].point2)) {\n                        segments[i].point2 = {\n                            x: segments[i].point2.x + diff, y: segments[i].point2.y + diff\n                        };\n                    }\n                }\n            }\n            if (obj.type === 'Straight' || obj.type === 'Bezier') {\n                if (obj.segments && obj.segments.length > 0) {\n                    var segments = obj.segments;\n                    for (var i = 0; i < segments.length - 1; i++) {\n                        segments[i].point.x += diff;\n                        segments[i].point.y += diff;\n                    }\n                }\n            }\n        }\n        else {\n            obj.offsetX += diff;\n            obj.offsetY += diff;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawObject = function (obj) {\n        var newObj;\n        var cloneObject;\n        cloneObject = clone(this.diagram.drawingObject);\n        for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            cloneObject[prop] = obj[prop];\n        }\n        if (getObjectType(this.diagram.drawingObject) === Node) {\n            newObj = new Node(this.diagram, 'nodes', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'node') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        else {\n            newObj = new Connector(this.diagram, 'connectors', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'connector') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        this.diagram.updateDiagramObject(newObj);\n        this.diagram.currentDrawingObject = newObj;\n        return newObj;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addObjectToDiagram = function (obj) {\n        var newObj;\n        this.diagram.removeFromAQuad(obj);\n        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[obj.id]);\n        delete this.diagram.nameTable[obj.id];\n        newObj = this.diagram.add(obj);\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n        this.selectObjects([newObj]);\n        if (obj && (!(canContinuousDraw(this.diagram)))) {\n            this.diagram.tool &= ~DiagramTools.DrawOnce;\n            this.diagram.currentDrawingObject = undefined;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addText = function (obj, currentPosition) {\n        var annotation = this.diagram.findElementUnderMouse(obj, currentPosition);\n        this.diagram.startTextEdit(obj, annotation instanceof TextElement ? (annotation.id).split('_')[1] : undefined);\n    };\n    /** @private */\n    CommandHandler.prototype.selectObjects = function (obj, multipleSelection, oldValue) {\n        var arg = {\n            oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Addition', cancel: false\n        };\n        var select = true;\n        this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        var canDoMultipleSelection = canMultiSelect(this.diagram);\n        var canDoSingleSelection = canSingleSelect(this.diagram);\n        if (canDoSingleSelection || canDoMultipleSelection) {\n            if (!canDoMultipleSelection && ((obj.length > 1) || (multipleSelection && obj.length === 1))) {\n                if (obj.length === 1) {\n                    this.clearSelection();\n                }\n                else {\n                    return;\n                }\n            }\n            if (!canDoSingleSelection && obj.length === 1 && (!multipleSelection || !hasSelection(this.diagram))) {\n                this.clearSelection();\n                return;\n            }\n        }\n        if (!arg.cancel) {\n            for (var i = 0; i < obj.length; i++) {\n                var newObj = obj[i];\n                select = true;\n                if (!hasSelection(this.diagram)) {\n                    this.select(newObj, i > 0 || multipleSelection, true);\n                }\n                else {\n                    if ((i > 0 || multipleSelection) && newObj.children && !newObj.parentId) {\n                        for (var i_1 = 0; i_1 < this.diagram.selectedItems.nodes.length; i_1++) {\n                            var parentNode = this.diagram.nameTable[this.diagram.selectedItems.nodes[i_1].parentId];\n                            if (parentNode) {\n                                parentNode = this.findParent(parentNode);\n                                if (parentNode) {\n                                    if (newObj.id === parentNode.id) {\n                                        this.selectGroup(newObj);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    this.selectProcesses(newObj);\n                    select = this.selectBpmnSubProcesses(newObj);\n                    if (select) {\n                        this.select(newObj, i > 0 || multipleSelection, true);\n                    }\n                }\n            }\n            arg = {\n                oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Addition', cancel: false\n            };\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            this.diagram.renderSelector(multipleSelection || (obj && obj.length > 1));\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findParent = function (node) {\n        if (node.parentId) {\n            node = this.diagram.nameTable[node.parentId];\n            this.findParent(node);\n        }\n        return node;\n    };\n    CommandHandler.prototype.selectProcesses = function (newObj) {\n        if (this.hasProcesses(newObj)) {\n            var processes = (newObj).shape.activity.subProcess.processes;\n            for (var i = 0; i < processes.length; i++) {\n                var innerChild = this.diagram.nameTable[processes[i]];\n                if (this.hasProcesses(innerChild)) {\n                    this.selectObjects([innerChild], true);\n                }\n                this.unSelect(innerChild);\n            }\n        }\n    };\n    CommandHandler.prototype.selectGroup = function (newObj) {\n        for (var j = 0; j < newObj.children.length; j++) {\n            var innerChild = this.diagram.nameTable[newObj.children[j]];\n            if (innerChild.children) {\n                this.selectGroup(innerChild);\n            }\n            this.unSelect(this.diagram.nameTable[newObj.children[j]]);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.selectBpmnSubProcesses = function (node) {\n        var select = true;\n        var parent;\n        if (node.processId) {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.processId])) {\n                select = false;\n            }\n            else {\n                select = this.selectBpmnSubProcesses(this.diagram.nameTable[node.processId]);\n            }\n        }\n        else if (node instanceof Connector) {\n            if (node.sourceID && this.diagram.nameTable[node.sourceID] &&\n                this.diagram.nameTable[node.sourceID].processId) {\n                parent = this.diagram.nameTable[node.sourceID].processId;\n            }\n            if (node.targetID && this.diagram.nameTable[node.targetID] &&\n                this.diagram.nameTable[node.targetID].processId) {\n                parent = this.diagram.nameTable[node.targetID].processId;\n            }\n            if (parent) {\n                if (isSelected(this.diagram, this.diagram.nameTable[parent])) {\n                    return false;\n                }\n                else {\n                    select = this.selectBpmnSubProcesses(this.diagram.nameTable[parent]);\n                }\n            }\n        }\n        return select;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.hasProcesses = function (node) {\n        if (node) {\n            if ((node.shape.type === 'Bpmn') && node.shape.activity &&\n                node.shape.activity.subProcess.processes &&\n                node.shape.activity.subProcess.processes.length > 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.select = function (obj, multipleSelection, preventUpdate) {\n        var hasLayer = this.getObjectLayer(obj.id);\n        if ((canSelect(obj) && !(obj instanceof Selector) && !isSelected(this.diagram, obj))\n            && (hasLayer && !hasLayer.lock && hasLayer.visible) && obj.wrapper.visible) {\n            multipleSelection = hasSelection(this.diagram) ? multipleSelection : false;\n            if (!multipleSelection) {\n                this.clearSelection();\n            }\n            var selectorModel = this.diagram.selectedItems;\n            var convert = obj;\n            if (convert instanceof Node) {\n                if (obj.isHeader) {\n                    var node = this.diagram.nameTable[obj.parentId];\n                    selectorModel.nodes.push(node);\n                }\n                else {\n                    selectorModel.nodes.push(obj);\n                }\n            }\n            else {\n                selectorModel.connectors.push(obj);\n            }\n            if (!multipleSelection) {\n                selectorModel.init(this.diagram);\n                if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                    var wrapper = gridSelection(this.diagram, selectorModel);\n                    if (wrapper) {\n                        selectorModel.wrapper.children[0] = wrapper;\n                    }\n                    selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n                }\n            }\n            else {\n                selectorModel.wrapper.rotateAngle = selectorModel.rotateAngle = 0;\n                selectorModel.wrapper.children.push(obj.wrapper);\n            }\n            if (!preventUpdate) {\n                this.diagram.renderSelector(multipleSelection);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelSelect = function (obj, textWrapper) {\n        var selectorModel = (this.diagram.selectedItems);\n        selectorModel.nodes = selectorModel.connectors = [];\n        if (obj instanceof Node) {\n            selectorModel.nodes[0] = obj;\n        }\n        else {\n            selectorModel.connectors[0] = obj;\n        }\n        selectorModel.annotation = (this.findTarget(textWrapper, obj));\n        selectorModel.init(this.diagram);\n        this.diagram.renderSelector(false);\n    };\n    /** @private */\n    CommandHandler.prototype.unSelect = function (obj) {\n        var objArray = [];\n        objArray.push(obj);\n        var arg = {\n            oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Removal', cancel: false\n        };\n        if (!this.diagram.currentSymbol) {\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        }\n        if (isSelected(this.diagram, obj)) {\n            var selectormodel = this.diagram.selectedItems;\n            var index = void 0;\n            if (obj instanceof Node) {\n                index = selectormodel.nodes.indexOf(obj, 0);\n                selectormodel.nodes.splice(index, 1);\n            }\n            else {\n                index = selectormodel.connectors.indexOf(obj, 0);\n                selectormodel.connectors.splice(index, 1);\n            }\n            arg = {\n                oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: false\n            };\n            if (!arg.cancel) {\n                index = selectormodel.wrapper.children.indexOf(obj.wrapper, 0);\n                selectormodel.wrapper.children.splice(index, 1);\n                this.diagram.updateSelector();\n                if (!this.diagram.currentSymbol) {\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getChildElements = function (child) {\n        var children = [];\n        for (var i = 0; i < child.length; i++) {\n            var childNode = child[i];\n            if (childNode.children && childNode.children.length > 0) {\n                children.concat(this.getChildElements(childNode.children));\n            }\n            else {\n                children.push(childNode.id);\n                if (childNode instanceof TextElement) {\n                    children.push(childNode.id + '_text');\n                }\n            }\n        }\n        return children;\n    };\n    /** @private */\n    CommandHandler.prototype.moveSvgNode = function (nodeId, targetID) {\n        var diagramDiv = getDiagramElement(targetID + '_groupElement', this.diagram.element.id);\n        var backNode = getDiagramElement(nodeId + '_groupElement', this.diagram.element.id);\n        diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n    };\n    /** @private */\n    CommandHandler.prototype.sendLayerBackward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex !== 0) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects;\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index - 1]).objects[0];\n                if (targetObject) {\n                    for (var _i = 0, currentLayerObject_1 = currentLayerObject; _i < currentLayerObject_1.length; _i++) {\n                        var obj = currentLayerObject_1[_i];\n                        this.moveSvgNode(obj, targetObject);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index - 1]);\n            targetLayer.zIndex = targetLayer.zIndex + 1;\n            layer.zIndex = layer.zIndex - 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index - 1];\n            this.diagram.layerZIndexTable[index - 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringLayerForward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex < this.diagram.layers.length - 1) {\n            var index = layer.zIndex;\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index + 1]);\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects[0];\n                var targetLayerObjects = targetLayer.objects;\n                for (var _i = 0, targetLayerObjects_1 = targetLayerObjects; _i < targetLayerObjects_1.length; _i++) {\n                    var obj = targetLayerObjects_1[_i];\n                    if (obj) {\n                        this.moveSvgNode(obj, currentLayerObject);\n                    }\n                }\n            }\n            targetLayer.zIndex = targetLayer.zIndex - 1;\n            layer.zIndex = layer.zIndex + 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index + 1];\n            this.diagram.layerZIndexTable[index + 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendToBack = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var index = this.diagram.nameTable[objectId].zIndex;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            for (var i = index; i > 0; i--) {\n                if (zIndexTable[i]) {\n                    //When there are empty records in the zindex table\n                    if (!zIndexTable[i - 1]) {\n                        zIndexTable[i - 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i - 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects forward\n                        zIndexTable[i] = zIndexTable[i - 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[0] = this.diagram.nameTable[objectId].id;\n            this.diagram.nameTable[objectId].zIndex = 0;\n            if (this.diagram.mode === 'SVG') {\n                var i = 1;\n                var target = zIndexTable[i];\n                while (!target && i < index) {\n                    target = zIndexTable[++i];\n                }\n                this.moveSvgNode(objectId, target);\n                this.updateNativeNodeIndex(objectId);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringToFront = function () {\n        if (hasSelection(this.diagram)) {\n            var objectName = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectName));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            //find the maximum zIndex of the tabel\n            var tabelLength = Number(Object.keys(zIndexTable).sort(function (a, b) { return Number(a) - Number(b); }).reverse()[0]);\n            var index = this.diagram.nameTable[objectName].zIndex;\n            for (var i = index; i < tabelLength; i++) {\n                //When there are empty records in the zindex table\n                if (zIndexTable[i]) {\n                    if (!zIndexTable[i + 1]) {\n                        zIndexTable[i + 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i + 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects backward\n                        zIndexTable[i] = zIndexTable[i + 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[tabelLength] = this.diagram.nameTable[objectName].id;\n            this.diagram.nameTable[objectName].zIndex = tabelLength;\n            if (this.diagram.mode === 'SVG') {\n                var diagramLayer = this.diagram.diagramLayer;\n                var child = this.getChildElements(this.diagram.nameTable[objectName].wrapper.children);\n                var targerNodes = [];\n                var element = getDiagramElement(objectName + '_groupElement', this.diagram.element.id);\n                var nodes = this.diagram.selectedItems.nodes;\n                if (nodes.length > 0 && (nodes[0].shape.type === 'Native' || nodes[0].shape.type === 'HTML')) {\n                    element.parentNode.removeChild(element);\n                    for (var j = 0; j < this.diagram.views.length; j++) {\n                        element = getDiagramElement(objectName + (nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement'), this.diagram.views[j]);\n                        var lastChildNode = element.parentNode.lastChild;\n                        lastChildNode.parentNode.insertBefore(element, lastChildNode.nextSibling);\n                    }\n                    var htmlLayer = getHTMLLayer(this.diagram.element.id);\n                    this.diagram.diagramRenderer.renderElement(this.diagram.nameTable[objectName].wrapper, diagramLayer, htmlLayer);\n                }\n                else {\n                    var target = void 0;\n                    var layer = this.getObjectLayer(objectName);\n                    for (var i = 0; i < layer.objects.length; i++) {\n                        if (layer.objects[i] !== objectName) {\n                            this.moveSvgNode(layer.objects[i], objectName);\n                            this.updateNativeNodeIndex(objectName);\n                        }\n                    }\n                }\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sortByZIndex = function (nodeArray, sortID) {\n        var id = sortID ? sortID : 'zIndex';\n        nodeArray = nodeArray.sort(function (a, b) {\n            return a[id] - b[id];\n        });\n        return nodeArray;\n    };\n    /** @private */\n    CommandHandler.prototype.sendForward = function () {\n        if (hasSelection(this.diagram)) {\n            var nodeId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerIndex = this.diagram.layers.indexOf(this.getObjectLayer(nodeId));\n            var zIndexTable = this.diagram.layers[layerIndex].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var index = this.diagram.nameTable[nodeId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(index.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_1 = temp; _i < temp_1.length; _i++) {\n                var i = temp_1[_i];\n                if (index.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerIndex === currentLayer && (Number(this.diagram.nameTable[nodeId].zIndex) < Number(i.zIndex)) &&\n                        index.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                        break;\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[0].zIndex;\n                var currentObject = index.zIndex;\n                var temp_2 = zIndexTable[overlapObject];\n                //swap the nodes\n                this.diagram.layers[0].zIndexTable[overlapObject] = index.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                this.diagram.layers[0].zIndexTable[currentObject] = intersectArray[0].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                    this.updateNativeNodeIndex(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendBackward = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var node = this.diagram.nameTable[objectId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(node.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_3 = temp; _i < temp_3.length; _i++) {\n                var i = temp_3[_i];\n                if (node.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerNum === currentLayer && (Number(this.diagram.nameTable[objectId].zIndex) > Number(i.zIndex)) &&\n                        node.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[intersectArray.length - 1].zIndex;\n                var currentObject = node.zIndex;\n                var temp_4 = zIndexTable[overlapObject];\n                //swap the nodes\n                zIndexTable[overlapObject] = node.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                zIndexTable[currentObject] = intersectArray[intersectArray.length - 1].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                    this.updateNativeNodeIndex(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.updateNativeNodeIndex = function (nodeId, targetID) {\n        var nodes = this.diagram.selectedItems.nodes;\n        for (var i = 0; i < this.diagram.views.length; i++) {\n            if (nodes.length > 0\n                && (nodes[0].shape.type === 'HTML'\n                    || nodes[0].shape.type === 'Native')) {\n                var id = nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement';\n                var backNode = getDiagramElement(nodeId + id, this.diagram.views[i]);\n                var diagramDiv = targetID ? getDiagramElement(targetID + id, this.diagram.views[i])\n                    : backNode.parentElement.firstChild;\n                if (backNode.parentNode.id === diagramDiv.parentNode.id) {\n                    diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.initSelectorWrapper = function () {\n        var selectorModel = this.diagram.selectedItems;\n        selectorModel.init(this.diagram);\n        if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n            selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.doRubberBandSelection = function (region) {\n        this.clearSelectionRectangle();\n        var selArray = [];\n        var rubberArray = [];\n        selArray = this.diagram.getNodesConnectors(selArray);\n        if (this.diagram.selectedItems.rubberBandSelectionMode === 'CompleteIntersect') {\n            rubberArray = completeRegion(region, selArray);\n        }\n        else {\n            rubberArray = this.diagram.spatialSearch.findObjects(region);\n        }\n        if (rubberArray.length) {\n            this.selectObjects(rubberArray, true);\n        }\n    };\n    CommandHandler.prototype.clearSelectionRectangle = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var element = adornerSvg.getElementById(this.diagram.element.id + '_diagramAdorner_selected_region');\n        if (element) {\n            remove(element);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragConnectorEnds = function (endPoint, obj, point, segment, target, targetPortId) {\n        var selectorModel;\n        var connector;\n        var node;\n        var tx;\n        var segmentPoint;\n        var ty;\n        var index;\n        var checkBezierThumb = false;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            this.clearSelection();\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (endPoint === 'BezierSourceThumb' || endPoint === 'BezierTargetThumb') {\n            checkBezierThumb = true;\n        }\n        if (endPoint === 'ConnectorSourceEnd' || endPoint === 'BezierSourceThumb') {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint1.x : connector.sourcePoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint1.y : connector.sourcePoint.y);\n            return this.dragSourceEnd(connector, tx, ty, null, point, endPoint, undefined, target, targetPortId, undefined, segment);\n        }\n        else {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint2.x : connector.targetPoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint2.y : connector.targetPoint.y);\n            return this.dragTargetEnd(connector, tx, ty, null, point, endPoint, undefined, segment);\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.getSelectedObject = function () {\n        var selectormodel = this.diagram.selectedItems;\n        return (selectormodel.nodes).concat(selectormodel.connectors);\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelection = function (triggerAction) {\n        if (hasSelection(this.diagram)) {\n            var selectormodel = this.diagram.selectedItems;\n            var arrayNodes = this.getSelectedObject();\n            if (this.diagram.currentSymbol) {\n                this.diagram.previousSelectedObject = arrayNodes;\n            }\n            var arg = {\n                oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changing', type: 'Removal', cancel: false\n            };\n            if (triggerAction) {\n                this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            }\n            if (!arg.cancel) {\n                selectormodel.offsetX = 0;\n                selectormodel.offsetY = 0;\n                selectormodel.width = 0;\n                selectormodel.height = 0;\n                selectormodel.rotateAngle = 0;\n                selectormodel.nodes = [];\n                selectormodel.connectors = [];\n                selectormodel.wrapper = null;\n                selectormodel.annotation = undefined;\n                this.diagram.clearSelectorLayer();\n                if (triggerAction) {\n                    arg = {\n                        oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                        state: 'Changed', type: 'Removal', cancel: false\n                    };\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelectedItems = function () {\n        var selectedNodes = this.diagram.selectedItems.nodes ? this.diagram.selectedItems.nodes.length : 0;\n        var selectedConnectors = this.diagram.selectedItems.connectors ? this.diagram.selectedItems.connectors.length : 0;\n        this.clearSelection((selectedNodes + selectedConnectors) > 0 ? true : false);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeStackHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderStackHighlighter = function (args, target) {\n        var source = this.diagram.selectedItems.nodes[0];\n        var symbolDrag;\n        var node;\n        var selectorModel;\n        if (!target) {\n            var objects = this.diagram.findObjectsUnderMouse(args.position);\n            target = this.diagram.findObjectUnderMouse(objects, 'Drag', true);\n            if (target && !(target.isLane || target.isPhase || target.isHeader)) {\n                for (var i = 0; i < objects.length; i++) {\n                    var laneNode = this.diagram.nameTable[objects[i].id];\n                    if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                        target = laneNode;\n                    }\n                }\n            }\n        }\n        if (source && target && target.isLane && source.shape && !source.shape.isPhase) {\n            node = this.diagram.nameTable[target.parentId];\n            if (this.diagram.currentSymbol && node.shape.type === 'SwimLane') {\n                symbolDrag = true;\n            }\n            if ((source && !source.parentId && source.shape.type !== 'SwimLane') ||\n                (source && source.parentId && this.diagram.nameTable[source.parentId] && this.diagram.nameTable[source.parentId].isLane &&\n                    (source.parentId !== target.parentId && source.parentId !== target.id))) {\n                selectorModel = this.diagram.selectedItems;\n                var canvas = gridSelection(this.diagram, selectorModel, target.id, true);\n                if (canvas) {\n                    selectorModel.wrapper.children[0] = canvas;\n                }\n                this.diagram.renderSelector(false, true);\n                selectorModel.wrapper.children[0] = selectorModel.nodes[0].wrapper;\n            }\n        }\n        if (source && target && target.parentId && source.shape && source.shape.isPhase) {\n            var node_2 = this.diagram.nameTable[target.parentId];\n            if (node_2.shape.type === 'SwimLane') {\n                this.diagram.selectedItems.wrapper.children[0] = this.diagram.nameTable[target.parentId].wrapper;\n                this.diagram.renderSelector(false, true);\n            }\n        }\n        if ((symbolDrag && this.diagram.currentSymbol.shape.isLane) || (source && target &&\n            source.parentId && target.parentId && !source.isPhase && (source.parentId === target.parentId)\n            && (source.id !== target.id) && node &&\n            (node.container && (node.container.type === 'Stack' || node.container.type === 'Grid')))) {\n            var canvas = void 0;\n            var value = node.container.orientation === 'Vertical';\n            var isVertical = node.container === 'Stack' ? value : !value;\n            if (node.container.type === 'Grid' && target.isLane &&\n                ((!this.diagram.currentSymbol &&\n                    (node.shape.orientation === 'Horizontal' && target.rowIndex !== source.rowIndex) ||\n                    (node.shape.orientation === 'Vertical' && target.columnIndex !== source.columnIndex))\n                    || (this.diagram.currentSymbol &&\n                        this.diagram.currentSymbol.shape.orientation === node.container.orientation))) {\n                selectorModel = this.diagram.selectedItems;\n                canvas = gridSelection(this.diagram, selectorModel, target.id, symbolDrag);\n            }\n            var wrapper = node.container.type === 'Stack' ? target.wrapper : canvas;\n            if (wrapper) {\n                renderStackHighlighter(wrapper, isVertical, args.position, this.diagram, false, true);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drag = function (obj, tx, ty) {\n        var tempNode;\n        var elements = [];\n        if (canMove(obj) && this.checkBoundaryConstraints(tx, ty, obj.wrapper.bounds) && canPageEditable(this.diagram)) {\n            if (obj instanceof Node) {\n                var oldValues = { offsetX: obj.offsetX, offsetY: obj.offsetY };\n                obj.offsetX += tx;\n                obj.offsetY += ty;\n                if (obj.children && !(obj.container)) {\n                    var nodes = this.getAllDescendants(obj, elements);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = (this.diagram.nameTable[nodes[i].id]);\n                        this.drag(tempNode, tx, ty);\n                    }\n                    this.updateInnerParentProperties(obj);\n                }\n                if (checkParentAsContainer(this.diagram, obj, true)) {\n                    checkChildNodeInContainer(this.diagram, obj);\n                }\n                else {\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = true;\n                    }\n                    this.diagram.nodePropertyChange(obj, oldValues, { offsetX: obj.offsetX, offsetY: obj.offsetY }, undefined, undefined, false);\n                    obj.wrapper.measureChildren = false;\n                }\n                if (obj.shape.type === 'SwimLane' && !this.diagram.currentSymbol) {\n                    var grid = obj.wrapper.children[0];\n                    var connectors = getConnectors(this.diagram, grid, 0, true);\n                    updateConnectorsProperties(connectors, this.diagram);\n                }\n            }\n            else {\n                var connector = obj;\n                var oldValues = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                var update = connector.type === 'Bezier' ? true : false;\n                var hasEnds = false;\n                if (!connector.sourceWrapper) {\n                    this.dragSourceEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!connector.targetWrapper) {\n                    this.dragTargetEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!hasEnds) {\n                    this.dragControlPoint(connector, tx, ty, true);\n                    var conn = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, oldValues, conn);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.connectorSegmentChange = function (actualObject, existingInnerBounds, isRotate) {\n        var tx;\n        var ty;\n        var segmentChange = true;\n        if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n            if (actualObject.outEdges.length > 0) {\n                for (var k = 0; k < actualObject.outEdges.length; k++) {\n                    var connector = this.diagram.nameTable[actualObject.outEdges[k]];\n                    if (connector.targetID !== '') {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.targetID]) ? false : true;\n                    }\n                    else {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.id]) ? false : true;\n                    }\n                    if (connector.type === 'Orthogonal' && connector.segments && connector.segments.length > 1) {\n                        if (!isRotate) {\n                            if (segmentChange) {\n                                switch (connector.segments[0].direction) {\n                                    case 'Bottom':\n                                        tx = actualObject.wrapper.bounds.bottomCenter.x - existingInnerBounds.bottomCenter.x;\n                                        ty = actualObject.wrapper.bounds.bottomCenter.y - existingInnerBounds.bottomCenter.y;\n                                        break;\n                                    case 'Top':\n                                        tx = actualObject.wrapper.bounds.topCenter.x - existingInnerBounds.topCenter.x;\n                                        ty = actualObject.wrapper.bounds.topCenter.y - existingInnerBounds.topCenter.y;\n                                        break;\n                                    case 'Left':\n                                        tx = actualObject.wrapper.bounds.middleLeft.x - existingInnerBounds.middleLeft.x;\n                                        ty = actualObject.wrapper.bounds.middleLeft.y - existingInnerBounds.middleLeft.y;\n                                        break;\n                                    case 'Right':\n                                        tx = actualObject.wrapper.bounds.middleRight.x - existingInnerBounds.middleRight.x;\n                                        ty = actualObject.wrapper.bounds.middleRight.y - existingInnerBounds.middleRight.y;\n                                        break;\n                                }\n                                this.dragSourceEnd(connector, tx, ty, true, null, 'ConnectorSourceEnd', undefined, undefined, undefined, true);\n                            }\n                        }\n                        else {\n                            var firstSegment = connector.segments[0];\n                            var secondSegment = connector.segments[1];\n                            var cornerPoints = swapBounds(actualObject.wrapper, actualObject.wrapper.corners, actualObject.wrapper.bounds);\n                            var sourcePoint = findPoint(cornerPoints, firstSegment.direction);\n                            sourcePoint = getIntersection(connector, connector.sourceWrapper, sourcePoint, { x: connector.sourceWrapper.offsetX, y: connector.sourceWrapper.offsetY }, false);\n                            var source = {\n                                corners: undefined, point: sourcePoint, margin: undefined, direction: firstSegment.direction\n                            };\n                            var target = {\n                                corners: undefined, point: secondSegment.points[1], margin: undefined, direction: undefined\n                            };\n                            var intermediatePoints = orthoConnection2Segment(source, target);\n                            firstSegment.length = Point.distancePoints(intermediatePoints[0], intermediatePoints[1]);\n                            if (secondSegment.direction && secondSegment.length) {\n                                secondSegment.length = Point.distancePoints(intermediatePoints[1], intermediatePoints[2]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateEndPoint = function (connector, oldChanges) {\n        var conn = {\n            sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint,\n            sourceID: connector.sourceID ? connector.sourceID : undefined,\n            targetID: connector.targetID ? connector.targetID : undefined,\n            sourcePortID: connector.sourcePortID ? connector.sourcePortID : undefined,\n            targetPortID: connector.targetPortID ? connector.targetPortID : undefined,\n            segments: connector.segments ? connector.segments : undefined\n        };\n        var newValue = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n        if (connector.sourceID) {\n            newValue.sourceID = connector.sourceID;\n        }\n        if (connector.targetID) {\n            newValue.targetID = connector.targetID;\n        }\n        if (connector.sourcePortID) {\n            newValue.sourcePortID = connector.sourcePortID;\n        }\n        if (connector.targetPortID) {\n            newValue.targetPortID = connector.targetPortID;\n        }\n        if (connector.segments) {\n            newValue.segments = connector.segments;\n        }\n        this.diagram.connectorPropertyChange(connector, oldChanges ? oldChanges : {}, newValue);\n        // this.diagram.refreshDiagramLayer();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.dragSourceEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, target, targetPortId, isDragSource, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var oldChanges = {};\n        var checkBoundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragSourceEnd(connector) && checkBoundaryConstraints\n            && (endPoint !== 'BezierSourceThumb') && canPageEditable(this.diagram)) {\n            oldChanges = { sourcePoint: connector.sourcePoint };\n            connector.sourcePoint.x += tx;\n            connector.sourcePoint.y += ty;\n            if (endPoint === 'ConnectorSourceEnd' && connector.type === 'Orthogonal') {\n                this.changeSegmentLength(connector, target, targetPortId, isDragSource);\n            }\n            if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                this.updatePathElementOffset(connector);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            oldChanges = { sourcePoint: connector.sourcePoint };\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector, oldChanges);\n        }\n        this.diagram.refreshCanvasLayers();\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Update Path Element offset\n     */\n    CommandHandler.prototype.updatePathElementOffset = function (connector) {\n        connector.wrapper.children.splice(3, 1);\n        var pathElement = new PathElement();\n        var anglePoints = connector.intermediatePoints;\n        pathElement = updatePathElement(anglePoints, connector);\n        connector.wrapper.children.splice(3, 0, pathElement);\n    };\n    /**\n     * Upadte the connector segments when change the source node\n     */\n    CommandHandler.prototype.changeSegmentLength = function (connector, target, targetPortId, isDragSource) {\n        if (connector.segments && connector.segments[0].direction !== null\n            && ((!target && connector.sourceID === '') || isDragSource)) {\n            var first = connector.segments[0];\n            var second = connector.segments[1];\n            var node = this.diagram.nameTable[connector.sourceID];\n            var secPoint = void 0;\n            first.points[0] = connector.sourcePoint;\n            if (first.direction === 'Top' || first.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = connector.sourcePoint.x;\n                second.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = connector.sourcePoint.y;\n                second.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (first.direction && (first.length || first.length === 0)) {\n                first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n            }\n            if (second.direction && (second.length || second.length === 0)) {\n                second.length = Point.distancePoints(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n                second.direction = Point.direction(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n            }\n            if (connector.sourcePortID !== '' && first.length < 10) {\n                if (connector.segments.length > 2) {\n                    var next = connector.segments[2];\n                    var nextDirection = Point.direction(next.points[0], next.points[1]);\n                    if (first.direction === getOppositeDirection(nextDirection)) {\n                        if (first.direction === 'Right') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleRight.x + 20;\n                        }\n                        else if (first.direction === 'Left') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleLeft.x - 20;\n                        }\n                        else if (first.direction === 'Top') {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.topCenter.y - 20;\n                        }\n                        else {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.bottomCenter.y + 20;\n                        }\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        }\n                        first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n                    }\n                    else if (first.direction === nextDirection && next.direction && next.length) {\n                        if (first.direction === 'Top' || first.direction === 'Bottom') {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].x = next.points[0].x;\n                        }\n                        else {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].y = next.points[0].y;\n                        }\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        connector.segments.splice(0, 2);\n                    }\n                    else {\n                        first.length = 20;\n                    }\n                }\n                else {\n                    first.length = 20;\n                }\n            }\n            else if (first.length < 1) {\n                if (connector.sourceID !== '') {\n                    if (second.direction === 'Right') {\n                        secPoint = node.wrapper.corners.middleRight;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Left') {\n                        secPoint = node.wrapper.corners.middleLeft;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Top') {\n                        secPoint = node.wrapper.corners.topCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    else {\n                        secPoint = node.wrapper.corners.bottomCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    second.length = Point.distancePoints(secPoint, second.points[second.points.length - 1]);\n                    if (connector.segments.length > 2) {\n                        var next = connector.segments[2];\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(second.points[second.points.length - 1], next.points[next.points.length - 1]);\n                        }\n                    }\n                    connector.segments.splice(0, 1);\n                }\n                else {\n                    connector.segments.splice(0, 1);\n                }\n            }\n        }\n        else {\n            if (target && !targetPortId && connector.sourceID !== target.id &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToNode(connector, target);\n            }\n            if (target && targetPortId && connector.sourcePortID !== targetPortId &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToPort(connector, target, targetPortId);\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint to port\n     */\n    CommandHandler.prototype.changeSourceEndToPort = function (connector, target, targetPortId) {\n        var port = this.diagram.getWrapper(target.wrapper, targetPortId);\n        var point = { x: port.offsetX, y: port.offsetY };\n        var direction = getPortDirection(point, cornersPointsBeforeRotation(target.wrapper), target.wrapper.bounds, false);\n        var firstSegment = connector.segments[0];\n        var secondSegment = connector.segments[1];\n        if (firstSegment.direction !== direction) {\n            var segments = [];\n            var segValues = {};\n            if (firstSegment.direction === getOppositeDirection(direction)) {\n                segValues = {};\n                var segValues1 = void 0;\n                if (direction === 'Top' || direction === 'Bottom') {\n                    segValues1 = (direction === 'Top') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].y - point.y)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.y - firstSegment.points[0].y)\n                        };\n                    segValues = (firstSegment.points[0].x > point.x) ?\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Right', length: (firstSegment.points[0].x - point.x) } :\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Left', length: (point.x - firstSegment.points[0].x) };\n                }\n                else {\n                    segValues1 = (direction === 'Right') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].x - point.x)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.x - firstSegment.points[0].x)\n                        };\n                    segValues = (firstSegment.points[0].y > point.y) ?\n                        { type: 'Orthogonal', direction: 'Top', isTerminal: true, length: (firstSegment.points[0].y - point.y) } :\n                        { type: 'Orthogonal', direction: 'Bottom', isTerminal: true, length: (point.y - firstSegment.points[0].y) };\n                }\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues1, true));\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            else {\n                segValues = { type: 'Orthogonal', direction: direction, length: 20, isTerminal: true };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            if (firstSegment.direction !== getOppositeDirection(direction)) {\n                if (direction === 'Top' || direction === 'Bottom') {\n                    firstSegment.points[0].x = point.x;\n                    firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = (direction === 'Top') ?\n                        point.y - 20 : point.y + 20;\n                }\n                else {\n                    firstSegment.points[0].y = point.y;\n                    firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = (direction === 'Right') ?\n                        point.x + 20 : point.x - 20;\n                }\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n            }\n            connector.segments = segments.concat(connector.segments);\n        }\n        else {\n            firstSegment.points[0] = point;\n            if (direction === 'Top' || direction === 'Bottom') {\n                firstSegment.points[firstSegment.points.length - 1].x = point.x;\n            }\n            else {\n                firstSegment.points[firstSegment.points.length - 1].y = point.y;\n            }\n            firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n            secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n        }\n    };\n    /**\n     * @private\n     * Remove terinal segment in initial\n     */\n    CommandHandler.prototype.removeTerminalSegment = function (connector, changeTerminal) {\n        for (var i = 0; i < connector.segments.length - 2; i++) {\n            var segment = connector.segments[0];\n            if (segment.isTerminal) {\n                if (changeTerminal) {\n                    segment.isTerminal = false;\n                }\n                else {\n                    connector.segments.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint from point to node\n     */\n    CommandHandler.prototype.changeSourceEndToNode = function (connector, target) {\n        this.removeTerminalSegment(connector);\n        var sourceWrapper = target.wrapper.children[0].corners;\n        var sourcePoint;\n        var sourcePoint2;\n        var firstSegment = connector.segments[0];\n        var nextSegment = connector.segments[1];\n        var segments = [];\n        if (firstSegment.direction === 'Right' || firstSegment.direction === 'Left') {\n            sourcePoint = (firstSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n            if (firstSegment.length > sourceWrapper.width || ((firstSegment.direction === 'Left' &&\n                sourcePoint.x >= firstSegment.points[0].x) || (firstSegment.direction === 'Right' &&\n                sourcePoint.x <= firstSegment.points[0].x))) {\n                firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = sourcePoint.y;\n                firstSegment.points[0].x = sourcePoint.x;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                sourcePoint2 = (direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Top') ? firstSegment.points[firstSegment.points.length - 1].y - (sourcePoint2.y + 20) :\n                            (sourcePoint2.y + 20) - firstSegment.points[firstSegment.points.length - 1].y;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].x - sourcePoint2.x;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Right' : 'Left';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n        else {\n            sourcePoint = (firstSegment.direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n            if (firstSegment.length > sourceWrapper.height || ((firstSegment.direction === 'Top' &&\n                sourcePoint.y >= firstSegment.points[0].y) ||\n                (firstSegment.direction === 'Bottom' && sourcePoint.y <= firstSegment.points[0].y))) {\n                firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = sourcePoint.x;\n                firstSegment.points[0].y = sourcePoint.y;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                sourcePoint2 = (nextSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Left') ? firstSegment.points[firstSegment.points.length - 1].x - (sourcePoint2.x + 20) :\n                            (sourcePoint2.x + 20) - firstSegment.points[firstSegment.points.length - 1].x;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].y - sourcePoint2.y;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Bottom' : 'Top';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n    };\n    /**\n     * Translate the bezier points during the interaction\n     */\n    CommandHandler.prototype.translateBezierPoints = function (connector, value, tx, ty, seg, point, update) {\n        var index = (connector.segments.indexOf(seg));\n        var segment = connector.segments[index];\n        if (segment) {\n            if (value === 'BezierSourceThumb' && (segment.vector1.angle || segment.vector1.distance)) {\n                segment.vector1 = {\n                    distance: connector.distance(connector.sourcePoint, point),\n                    angle: Point.findAngle(connector.sourcePoint, point),\n                };\n            }\n            else if (value === 'BezierTargetThumb' && (segment.vector2.angle || segment.vector2.distance)) {\n                segment.vector2 = {\n                    distance: connector.distance(connector.targetPoint, point),\n                    angle: Point.findAngle(connector.targetPoint, point),\n                };\n            }\n            else if ((value === 'ConnectorSourceEnd' && !connector.sourceID || value === 'ConnectorTargetEnd' && !connector.targetID)\n                && update && isEmptyVector(segment.vector1) && isEmptyVector(segment.vector2)) {\n                if (Point.isEmptyPoint(segment.point1)) {\n                    segment.bezierPoint1 = getBezierPoints(connector.sourcePoint, connector.targetPoint);\n                }\n                if (Point.isEmptyPoint(segment.point2)) {\n                    segment.bezierPoint2 = getBezierPoints(connector.targetPoint, connector.sourcePoint);\n                }\n            }\n            else if (value === 'BezierSourceThumb' || (value === 'ConnectorSourceEnd' && !update && isEmptyVector(segment.vector1))) {\n                segment.bezierPoint1.x += tx;\n                segment.bezierPoint1.y += ty;\n                if ((!Point.isEmptyPoint(segment.point1)) || (update)) {\n                    segment.point1 = { x: segment.bezierPoint1.x, y: segment.bezierPoint1.y };\n                }\n            }\n            else if (value === 'BezierTargetThumb' || (value === 'ConnectorTargetEnd' && !update && isEmptyVector(segment.vector2))) {\n                segment.bezierPoint2.x += tx;\n                segment.bezierPoint2.y += ty;\n                if ((!Point.isEmptyPoint(segment.point2)) || (update)) {\n                    segment.point2 = { x: segment.bezierPoint2.x, y: segment.bezierPoint2.y };\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragTargetEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var oldChanges;\n        var boundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragTargetEnd(connector) && endPoint !== 'BezierTargetThumb'\n            && boundaryConstraints && canPageEditable(this.diagram)) {\n            oldChanges = { targetPoint: connector.targetPoint };\n            connector.targetPoint.x += tx;\n            connector.targetPoint.y += ty;\n            if (endPoint === 'ConnectorTargetEnd' && connector.type === 'Orthogonal' &&\n                connector.segments && connector.segments.length > 0) {\n                var prev = connector.segments[connector.segments.length - 2];\n                if (prev && connector.segments[connector.segments.length - 1].points.length === 2) {\n                    if (prev.direction === 'Left' || prev.direction === 'Right') {\n                        prev.points[prev.points.length - 1].x = connector.targetPoint.x;\n                    }\n                    else {\n                        prev.points[prev.points.length - 1].y = connector.targetPoint.y;\n                    }\n                    prev.length = Point.distancePoints(prev.points[0], prev.points[prev.points.length - 1]);\n                    prev.direction = Point.direction(prev.points[0], prev.points[prev.points.length - 1]);\n                }\n            }\n            if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                this.updatePathElementOffset(connector);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            oldChanges = { targetPoint: connector.targetPoint };\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector, oldChanges);\n        }\n        this.diagram.refreshCanvasLayers();\n        return boundaryConstraints;\n    };\n    /** @private */\n    CommandHandler.prototype.dragControlPoint = function (obj, tx, ty, preventUpdate, segmentNumber) {\n        var connector = this.diagram.nameTable[obj.id];\n        if ((connector.type === 'Straight' || connector.type === 'Bezier') && connector.segments.length > 0) {\n            if (segmentNumber !== undefined && connector.segments[segmentNumber]) {\n                connector.segments[segmentNumber].point.x += tx;\n                connector.segments[segmentNumber].point.y += ty;\n            }\n            else {\n                for (var i = 0; i < connector.segments.length - 1; i++) {\n                    connector.segments[i].point.x += tx;\n                    connector.segments[i].point.y += ty;\n                }\n            }\n            if (!preventUpdate) {\n                this.updateEndPoint(connector);\n            }\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.rotateObjects = function (parent, objects, angle, pivot, includeParent) {\n        pivot = pivot || {};\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivot.x, pivot.y);\n        var oldValues;\n        for (var _i = 0, objects_2 = objects; _i < objects_2.length; _i++) {\n            var obj = objects_2[_i];\n            if (obj instanceof Node) {\n                if (canRotate(obj) && canPageEditable(this.diagram)) {\n                    if (includeParent !== false || parent !== obj) {\n                        oldValues = { rotateAngle: obj.rotateAngle };\n                        obj.rotateAngle += angle;\n                        obj.rotateAngle = (obj.rotateAngle + 360) % 360;\n                        var newOffset = transformPointByMatrix(matrix, { x: obj.offsetX, y: obj.offsetY });\n                        obj.offsetX = newOffset.x;\n                        obj.offsetY = newOffset.y;\n                        this.diagram.nodePropertyChange(obj, oldValues, { rotateAngle: obj.rotateAngle });\n                    }\n                    if (obj.processId) {\n                        var parent_1 = this.diagram.nameTable[obj.processId];\n                        var bound = this.diagram.bpmnModule.getChildrenBound(parent_1, obj.id, this.diagram);\n                        this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n                    }\n                    if (obj.children && obj.children.length && !obj.container) {\n                        this.getChildren(obj, objects);\n                    }\n                }\n            }\n            else {\n                this.rotatePoints(obj, angle, pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY });\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        this.diagram.refreshCanvasLayers();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.snapConnectorEnd = function (currentPosition) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            this.diagram.snappingModule.snapConnectorEnd(currentPosition);\n        }\n        return currentPosition;\n    };\n    /**   @private  */\n    CommandHandler.prototype.snapAngle = function (angle) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            return this.snappingModule.snapAngle(this.diagram, angle);\n        }\n        else {\n            return 0;\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.rotatePoints = function (conn, angle, pivot) {\n        if (!conn.sourceWrapper || !conn.targetWrapper) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, angle, pivot.x, pivot.y);\n            conn.sourcePoint = transformPointByMatrix(matrix, conn.sourcePoint);\n            conn.targetPoint = transformPointByMatrix(matrix, conn.targetPoint);\n            if (conn.shape.type === 'Bpmn' && conn.shape.sequence === 'Default') {\n                this.updatePathElementOffset(conn);\n            }\n            var newProp = { sourcePoint: conn.sourcePoint, targetPoint: conn.targetPoint };\n            this.diagram.connectorPropertyChange(conn, {}, newProp);\n        }\n    };\n    CommandHandler.prototype.updateInnerParentProperties = function (tempNode) {\n        var elements = [];\n        var protect = 'isProtectedOnChange';\n        var protectChange = this.diagram[protect];\n        this.diagram.protectPropertyChange(true);\n        var innerParents = this.getAllDescendants(tempNode, elements, false, true);\n        for (var i = 0; i < innerParents.length; i++) {\n            var obj = this.diagram.nameTable[innerParents[i].id];\n            obj.offsetX = obj.wrapper.offsetX;\n            obj.offsetY = obj.wrapper.offsetY;\n            obj.width = obj.wrapper.width;\n            obj.height = obj.wrapper.height;\n        }\n        this.diagram.protectPropertyChange(protectChange);\n    };\n    /** @private */\n    CommandHandler.prototype.scale = function (obj, sw, sh, pivot, refObject) {\n        var node = this.diagram.nameTable[obj.id];\n        var tempNode = node;\n        var elements = [];\n        var element = node.wrapper;\n        if (!refObject) {\n            refObject = obj;\n        }\n        var refWrapper = refObject.wrapper;\n        var x = refWrapper.offsetX - refWrapper.actualSize.width * refWrapper.pivot.x;\n        var y = refWrapper.offsetY - refWrapper.actualSize.height * refWrapper.pivot.y;\n        var refPoint = getPoint(x, y, refWrapper.actualSize.width, refWrapper.actualSize.height, refWrapper.rotateAngle, refWrapper.offsetX, refWrapper.offsetY, pivot);\n        if (element.actualSize.width !== undefined && element.actualSize.height !== undefined && canPageEditable(this.diagram)) {\n            if (tempNode.children && !(tempNode.container)) {\n                var nodes = this.getAllDescendants(tempNode, elements);\n                for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                    var temp = nodes_1[_i];\n                    this.scaleObject(sw, sh, refPoint, temp, element, refObject);\n                }\n                obj.wrapper.measure(new Size());\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                this.diagram.updateGroupOffset(node);\n                this.updateInnerParentProperties(tempNode);\n            }\n            else {\n                this.scaleObject(sw, sh, refPoint, node, element, refObject);\n            }\n            var bounds = getBounds(obj.wrapper);\n            var checkBoundaryConstraints = this.checkBoundaryConstraints(undefined, undefined, bounds);\n            if (!checkBoundaryConstraints) {\n                this.scale(obj, 1 / sw, 1 / sh, pivot);\n                return false;\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.getAllDescendants = function (node, nodes, includeParent, innerParent) {\n        var temp = node;\n        var parentNodes = [];\n        for (var i = 0; i < temp.children.length; i++) {\n            node = (this.diagram.nameTable[temp.children[i]]);\n            if (node) {\n                if (!node.children) {\n                    nodes.push(node);\n                }\n                else {\n                    if (includeParent) {\n                        nodes.push(node);\n                    }\n                    if (innerParent) {\n                        parentNodes.push(node);\n                    }\n                    nodes = this.getAllDescendants(node, nodes);\n                }\n            }\n        }\n        return (innerParent) ? parentNodes : nodes;\n    };\n    /**   @private  */\n    CommandHandler.prototype.getChildren = function (node, nodes) {\n        var temp = node;\n        if (node.children) {\n            for (var i = 0; i < temp.children.length; i++) {\n                node = (this.diagram.nameTable[temp.children[i]]);\n                nodes.push(node);\n            }\n        }\n        return nodes;\n    };\n    /** @private */\n    CommandHandler.prototype.cloneChild = function (id) {\n        var node = this.diagram.nameTable[id];\n        return node;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleObject = function (sw, sh, pivot, obj, element, refObject) {\n        sw = sw < 0 ? 1 : sw;\n        sh = sh < 0 ? 1 : sh;\n        var process;\n        var oldValues = {};\n        if (sw !== 1 || sh !== 1) {\n            var width = void 0;\n            var height = void 0;\n            if (obj instanceof Node) {\n                var node = obj;\n                var isResize = void 0;\n                var bound = void 0;\n                oldValues = {\n                    width: obj.wrapper.actualSize.width, height: obj.wrapper.actualSize.height,\n                    offsetX: obj.wrapper.offsetX, offsetY: obj.wrapper.offsetY,\n                    margin: { top: node.margin.top, left: node.margin.left }\n                };\n                if (node.shape.type === 'Bpmn' && node.shape.activity.subProcess.processes\n                    && node.shape.activity.subProcess.processes.length > 0) {\n                    bound = this.diagram.bpmnModule.getChildrenBound(node, node.id, this.diagram);\n                    isResize = node.wrapper.bounds.containsRect(bound);\n                }\n                width = node.wrapper.actualSize.width * sw;\n                height = node.wrapper.actualSize.height * sh;\n                if (node.maxWidth !== undefined && node.maxWidth !== 0) {\n                    width = Math.min(node.maxWidth, width);\n                }\n                if (node.minWidth !== undefined && node.minWidth !== 0) {\n                    width = Math.max(node.minWidth, width);\n                }\n                if (node.maxHeight !== undefined && node.maxHeight !== 0) {\n                    height = Math.min(node.maxHeight, height);\n                }\n                if (node.minHeight !== undefined && node.minHeight !== 0) {\n                    height = Math.max(node.minHeight, height);\n                }\n                if (isResize) {\n                    width = Math.max(width, (bound.right - node.wrapper.bounds.x));\n                    height = Math.max(height, (bound.bottom - node.wrapper.bounds.y));\n                }\n                sw = width / node.actualSize.width;\n                sh = height / node.actualSize.height;\n            }\n            var matrix = identityMatrix();\n            var refWrapper = void 0;\n            if (!refObject) {\n                refObject = obj;\n            }\n            refWrapper = refObject.wrapper;\n            rotateMatrix(matrix, -refWrapper.rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, sw, sh, pivot.x, pivot.y);\n            rotateMatrix(matrix, refWrapper.rotateAngle, pivot.x, pivot.y);\n            if (obj instanceof Node) {\n                var node = obj;\n                var left = void 0;\n                var top_1;\n                var newPosition = transformPointByMatrix(matrix, { x: node.wrapper.offsetX, y: node.wrapper.offsetY });\n                var oldleft = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                var oldtop = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                if (width > 0) {\n                    if (node.processId) {\n                        var parent_2 = this.diagram.nameTable[node.processId];\n                        if (!parent_2.maxWidth || ((node.margin.left + width) < parent_2.maxWidth)) {\n                            node.width = width;\n                            node.offsetX = newPosition.x;\n                        }\n                    }\n                    else {\n                        node.width = width;\n                        node.offsetX = newPosition.x;\n                    }\n                }\n                if (height > 0) {\n                    if (node.processId) {\n                        var parent_3 = this.diagram.nameTable[node.processId];\n                        if (!parent_3.maxHeight || ((node.margin.top + height) < parent_3.maxHeight)) {\n                            node.height = height;\n                            node.offsetY = newPosition.y;\n                        }\n                    }\n                    else {\n                        node.height = height;\n                        node.offsetY = newPosition.y;\n                    }\n                }\n                left = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                top_1 = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                var parent_4 = this.diagram.nameTable[node.processId];\n                if (parent_4 && ((node.margin.top + (top_1 - oldtop)) <= 0 ||\n                    (node.margin.left + (left - oldleft) <= 0))) {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        margin: { top: node.margin.top, left: node.margin.left }\n                    });\n                }\n                else {\n                    if (checkParentAsContainer(this.diagram, obj, true)) {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        this.diagram.nodePropertyChange(obj, oldValues, {\n                            width: node.width, height: node.height, offsetX: node.offsetX, offsetY: node.offsetY,\n                            margin: { top: node.margin.top + (top_1 - oldtop), left: node.margin.left + (left - oldleft) }\n                        });\n                    }\n                }\n            }\n            else {\n                var connector = obj;\n                var oldValues_1 = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                if (!connector.sourceWrapper || !connector.targetWrapper) {\n                    this.scaleConnector(connector, matrix, oldValues_1);\n                }\n            }\n            var parentNode = this.diagram.nameTable[obj.processId];\n            if (parentNode) {\n                var parent_5 = parentNode.wrapper.bounds;\n                var child = obj.wrapper.bounds;\n                var bound = this.diagram.bpmnModule.getChildrenBound(parentNode, obj.id, this.diagram);\n                this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n            }\n        }\n    };\n    CommandHandler.prototype.scaleConnector = function (connector, matrix, oldValues) {\n        connector.sourcePoint = transformPointByMatrix(matrix, connector.sourcePoint);\n        connector.targetPoint = transformPointByMatrix(matrix, connector.targetPoint);\n        if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n            this.updatePathElementOffset(connector);\n        }\n        var newProp = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n        this.diagram.connectorPropertyChange(connector, oldValues, newProp);\n    };\n    /** @private */\n    CommandHandler.prototype.portDrag = function (obj, portElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var port = this.findTarget(portElement, obj);\n        var bounds = getBounds(obj.wrapper);\n        if (port && canDrag(port, this.diagram)) {\n            oldValues = this.getPortChanges(obj, port);\n            port.offset.x += (tx / bounds.width);\n            port.offset.y += (ty / bounds.height);\n            changedvalues = this.getPortChanges(obj, port);\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelDrag = function (obj, textElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var label;\n        label = this.findTarget(textElement, obj);\n        var bounds = cornersPointsBeforeRotation(obj.wrapper);\n        oldValues = this.getAnnotationChanges(obj, label);\n        if (label instanceof ShapeAnnotation) {\n            label.offset.x += (tx / bounds.width);\n            label.offset.y += (ty / bounds.height);\n        }\n        else {\n            this.updatePathAnnotationOffset(obj, label, tx, ty);\n            if (label instanceof PathAnnotation) {\n                label.alignment = 'Center';\n            }\n        }\n        changedvalues = this.getAnnotationChanges(obj, label);\n        if (obj instanceof Node) {\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(obj, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(obj);\n        if (!isSelected(this.diagram, label, false, textElement)) {\n            this.labelSelect(obj, textElement);\n        }\n    };\n    CommandHandler.prototype.updatePathAnnotationOffset = function (object, label, tx, ty, newPosition, size) {\n        var textWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var offsetX = textWrapper.offsetX;\n        var offsetY = textWrapper.offsetY;\n        var offset;\n        var intermediatePoints = object.intermediatePoints;\n        var prev;\n        var pointLength = 0;\n        var totalLength = 0;\n        var intersectingOffset;\n        var currentPosition = (newPosition) ? newPosition : { x: offsetX + tx, y: offsetY + ty };\n        var intersetingPts = this.getInterceptWithSegment(currentPosition, intermediatePoints);\n        var newOffset = intermediatePoints[intermediatePoints.length - 1];\n        totalLength = Point.getLengthFromListOfPoints(intermediatePoints);\n        if (intersetingPts.length > 0) {\n            if (label.dragLimit.top || label.dragLimit.bottom || label.dragLimit.left || label.dragLimit.right) {\n                var minDistance = { minDistance: null };\n                newOffset = this.getRelativeOffset(currentPosition, intermediatePoints, minDistance);\n                var distance = { minDistance: null };\n                intersectingOffset = this.getRelativeOffset(currentPosition, intersetingPts, distance);\n                if (minDistance != null && distance.minDistance < minDistance.minDistance) {\n                    newOffset = intersectingOffset;\n                }\n                else {\n                    var connectorOffset = getOffsetOfConnector(object.intermediatePoints, label, object.wrapper.bounds);\n                    newOffset = connectorOffset.point;\n                }\n            }\n            else {\n                intersectingOffset = intersetingPts[intersetingPts.length - 1];\n                newOffset = intersectingOffset;\n            }\n            if (newOffset) {\n                var p = void 0;\n                var bounds = void 0;\n                for (p = 0; p < intermediatePoints.length; p++) {\n                    if (prev != null) {\n                        bounds = Rect.toBounds([prev, intermediatePoints[p]]);\n                        if (bounds.containsPoint(newOffset)) {\n                            pointLength += Point.findLength(prev, newOffset);\n                            break;\n                        }\n                        else {\n                            pointLength += Point.findLength(prev, intermediatePoints[p]);\n                        }\n                    }\n                    prev = intermediatePoints[p];\n                }\n                offset = { x: pointLength / totalLength, y: 0 };\n            }\n            this.updateLabelMargin(object, label, offset, currentPosition, size, tx, ty);\n        }\n        else {\n            this.updateLabelMargin(object, label, null, currentPosition, size, tx, ty);\n        }\n    };\n    CommandHandler.prototype.getRelativeOffset = function (currentPosition, points, minDistance) {\n        var newOffset;\n        var distance;\n        var pt;\n        var i;\n        for (i = 0; i < points.length; i++) {\n            pt = points[i];\n            distance = Math.round(Math.sqrt(Math.pow((currentPosition.x - pt.x), 2) +\n                Math.pow((currentPosition.y - pt.y), 2)));\n            if (minDistance.minDistance === null ||\n                Math.min(Math.abs(minDistance.minDistance), Math.abs(distance)) === Math.abs(distance)) {\n                newOffset = pt;\n                minDistance.minDistance = distance;\n            }\n        }\n        return newOffset;\n    };\n    ;\n    CommandHandler.prototype.dragLimitValue = function (label, point, tempPt, contentDimension) {\n        var x = false;\n        var y = false;\n        if ((tempPt.x >= (point.x - label.dragLimit.left - (contentDimension.width / 2))) &&\n            (tempPt.x <= point.x + label.dragLimit.right + (contentDimension.width / 2))) {\n            x = true;\n        }\n        if ((tempPt.y >= (point.y - label.dragLimit.top - (contentDimension.height / 2))) &&\n            (tempPt.y <= point.y + label.dragLimit.bottom + (contentDimension.height / 2))) {\n            y = true;\n        }\n        return { x: x, y: y };\n    };\n    ;\n    CommandHandler.prototype.updateLabelMargin = function (node, label, offset, tempPt, size, tx, ty) {\n        offset = offset ? offset : { x: label.offset, y: 0 };\n        if (label && offset && offset.x > 0 && offset.x < 1) {\n            var point = void 0;\n            var length_1 = Point.getLengthFromListOfPoints(node.intermediatePoints);\n            point = this.getPointAtLength(length_1 * offset.x, node.intermediatePoints, 0);\n            var curZoomfactor = this.diagram.scrollSettings.currentZoom;\n            var dragLimit = label.dragLimit;\n            if (dragLimit.top || dragLimit.bottom || dragLimit.left || dragLimit.right) {\n                var labelBounds = this.diagram.getWrapper(node.wrapper, label.id);\n                var contentDimension = new Rect(0, 0, 0, 0);\n                var annotationWrtapper = this.diagram.getWrapper(node.wrapper, label.id);\n                contentDimension.x = ((annotationWrtapper).offsetX / curZoomfactor) + tx;\n                contentDimension.y = (annotationWrtapper.offsetY / curZoomfactor) + ty;\n                contentDimension.width = annotationWrtapper.bounds.width / curZoomfactor;\n                contentDimension.height = annotationWrtapper.bounds.height / curZoomfactor;\n                var draggableBounds = new Rect(point.x - (dragLimit.left || 0) - contentDimension.width / 2, point.y - (dragLimit.top || 0) - contentDimension.height / 2, (dragLimit.left || 0) + (dragLimit.right || 0) + contentDimension.width, (dragLimit.top || 0) + (dragLimit.bottom || 0) + contentDimension.height);\n                if (draggableBounds.containsPoint(tempPt)) {\n                    tempPt = tempPt;\n                }\n                else {\n                    var lineIntersects = void 0;\n                    var line1 = [point, tempPt];\n                    lineIntersects = this.boundsInterSects(line1, draggableBounds, false);\n                    for (var _i = 0, lineIntersects_1 = lineIntersects; _i < lineIntersects_1.length; _i++) {\n                        var i = lineIntersects_1[_i];\n                        var ptt = i;\n                        tempPt = ptt;\n                    }\n                }\n                var cursorLimit = this.dragLimitValue(label, point, tempPt, contentDimension);\n                label.margin = {\n                    left: cursorLimit.x ? tempPt.x - point.x : label.margin.left,\n                    top: cursorLimit.y ? tempPt.y - point.y : label.margin.top, right: 0, bottom: 0\n                };\n            }\n            else {\n                label.margin = { left: tempPt.x - point.x, top: tempPt.y - point.y, right: 0, bottom: 0 };\n            }\n            label.offset = offset.x;\n            if (size) {\n                label.width = size.width;\n                label.height = size.height;\n            }\n        }\n    };\n    CommandHandler.prototype.boundsInterSects = function (polyLine, bounds, self) {\n        var intersects;\n        if (bounds) {\n            var polyLine2 = [\n                { x: bounds.x, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y }\n            ];\n            intersects = this.intersect(polyLine, polyLine2, self);\n        }\n        return intersects;\n    };\n    ;\n    CommandHandler.prototype.intersect = function (polyLine1, polyLine2, self) {\n        var intersect = [];\n        for (var i = 0; i < polyLine1.length - 1; i++) {\n            for (var j = 0; j < polyLine2.length - 1; j++) {\n                var p = intersect2(polyLine1[i], polyLine1[i + 1], polyLine2[j], polyLine2[j + 1]);\n                if (p.x !== 0 && p.y !== 0) {\n                    intersect.push(p);\n                }\n            }\n        }\n        return intersect;\n    };\n    ;\n    CommandHandler.prototype.getPointAtLength = function (length, points, angle) {\n        angle = 0;\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        var pt;\n        for (var i = 0; i < points.length; i++) {\n            pt = points[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = Point.findLength(pre, pt);\n                var r = void 0;\n                var deg = void 0;\n                var x = void 0;\n                var y = void 0;\n                if (run + l >= length) {\n                    r = length - run;\n                    deg = Point.findAngle(pre, pt);\n                    x = r * Math.cos(deg * Math.PI / 180);\n                    y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    angle = deg;\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    CommandHandler.prototype.getInterceptWithSegment = function (currentPosition, conPoints) {\n        var intercepts = [];\n        var imgLine = [];\n        var segemnt = [];\n        var tarAngle;\n        var srcAngle;\n        var maxLength;\n        maxLength = Point.findLength({ x: 0, y: 0 }, { x: this.diagram.scroller.viewPortWidth, y: this.diagram.scroller.viewPortHeight });\n        for (var i = 1; i < conPoints.length; i++) {\n            segemnt = [conPoints[i - 1], conPoints[i]];\n            imgLine = [];\n            srcAngle = Math.round(Point.findAngle(segemnt[0], segemnt[1]) % 360);\n            tarAngle = Math.round(Point.findAngle(segemnt[1], segemnt[0]) % 360);\n            var angleAdd = (srcAngle > 0 && srcAngle <= 90) || (srcAngle > 180 && srcAngle <= 270) ? 90 : -90;\n            imgLine.push(Point.transform(currentPosition, srcAngle + angleAdd, maxLength));\n            imgLine.push(Point.transform(currentPosition, tarAngle + angleAdd, maxLength));\n            var lineUtil1 = { x1: segemnt[0].x, y1: segemnt[0].y, x2: segemnt[1].x, y2: segemnt[1].y };\n            var lineUtil2 = { x1: imgLine[0].x, y1: imgLine[0].y, x2: imgLine[1].x, y2: imgLine[1].y };\n            var line3 = intersect3(lineUtil1, lineUtil2);\n            if (line3.enabled) {\n                intercepts.push(line3.intersectPt);\n            }\n        }\n        return intercepts;\n    };\n    /** @private */\n    CommandHandler.prototype.getAnnotationChanges = function (object, label) {\n        var index = findObjectIndex(object, label.id, true);\n        var annotations = {};\n        annotations[index] = {\n            width: label.width, height: label.height, offset: (object instanceof Node) ? ({\n                x: label.offset.x,\n                y: label.offset.y\n            }) : label.offset,\n            rotateAngle: label.rotateAngle,\n            margin: { left: label.margin.left, right: label.margin.right, top: label.margin.top, bottom: label.margin.bottom },\n            horizontalAlignment: label.horizontalAlignment, verticalAlignment: label.verticalAlignment,\n            alignment: ((object instanceof Connector) ? label.alignment : undefined)\n        };\n        return { annotations: annotations };\n    };\n    /** @private */\n    CommandHandler.prototype.getPortChanges = function (object, port) {\n        var index = findObjectIndex(object, port.id, false);\n        var ports = {};\n        ports[index] = { offset: port.offset };\n        return { ports: ports };\n    };\n    /** @private */\n    CommandHandler.prototype.labelRotate = function (object, label, currentPosition, selector) {\n        var oldValues;\n        var changedvalues;\n        oldValues = this.getAnnotationChanges(object, label);\n        var matrix = identityMatrix();\n        var rotateAngle = label.rotateAngle;\n        var labelWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var angle = findAngle({ x: labelWrapper.offsetX, y: labelWrapper.offsetY }, currentPosition) + 90;\n        var snapAngle = this.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        if (label instanceof PathAnnotation && label.segmentAngle) {\n            var getPointloop = getAnnotationPosition(object.intermediatePoints, label, object.wrapper.bounds);\n            angle -= getPointloop.angle;\n        }\n        angle = (angle + 360) % 360;\n        label.rotateAngle += angle - (label.rotateAngle + labelWrapper.parentTransform);\n        label.margin.bottom += (labelWrapper.verticalAlignment === 'Top') ? (-label.height / 2) : ((labelWrapper.verticalAlignment === 'Bottom') ? (label.height / 2) : 0);\n        label.margin.right += (labelWrapper.horizontalAlignment === 'Left') ? (-label.width / 2) : ((labelWrapper.horizontalAlignment === 'Right') ? (label.width / 2) : 0);\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        else {\n            label.horizontalAlignment = label.verticalAlignment = 'Center';\n        }\n        selector.wrapper.rotateAngle = selector.rotateAngle = label.rotateAngle;\n        changedvalues = this.getAnnotationChanges(object, label);\n        if (object instanceof Node) {\n            this.diagram.nodePropertyChange(object, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(object, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(object);\n    };\n    /** @private */\n    CommandHandler.prototype.labelResize = function (node, label, deltaWidth, deltaHeight, pivot, selector) {\n        var oldValues;\n        var changedvalues;\n        var rotateAngle;\n        oldValues = this.getAnnotationChanges(node, label);\n        var textElement = selector.wrapper.children[0];\n        if ((deltaWidth && deltaWidth !== 1) || (deltaHeight && deltaHeight !== 1)) {\n            var newMat = identityMatrix();\n            var matrix = identityMatrix();\n            rotateMatrix(newMat, -node.rotateAngle, node.offsetX, node.offsetY);\n            rotateAngle = ((textElement.rotateAngle + ((node instanceof Node) ? node.rotateAngle : 0)) + 360) % 360;\n            rotateMatrix(matrix, -rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, deltaWidth, deltaHeight, pivot.x, pivot.y);\n            rotateMatrix(matrix, rotateAngle, pivot.x, pivot.y);\n            var newPosition = transformPointByMatrix(matrix, { x: textElement.offsetX, y: textElement.offsetY });\n            var height = textElement.actualSize.height * deltaHeight;\n            var width = textElement.actualSize.width * deltaWidth;\n            var shape = this.findTarget(textElement, node);\n            if (shape instanceof PathAnnotation) {\n                this.updatePathAnnotationOffset(node, label, 0, 0, newPosition, new Size(width, height));\n            }\n            else {\n                var bounds = cornersPointsBeforeRotation(node.wrapper);\n                newPosition = transformPointByMatrix(newMat, newPosition);\n                newPosition.x = newPosition.x - textElement.margin.left + textElement.margin.right;\n                newPosition.y = newPosition.y - textElement.margin.top + textElement.margin.bottom;\n                newPosition.y += (shape.verticalAlignment === 'Top') ? (-height / 2) : ((shape.verticalAlignment === 'Bottom') ? (height / 2) : 0);\n                newPosition.x += (shape.horizontalAlignment === 'Left') ? (-width / 2) : ((shape.horizontalAlignment === 'Right') ? (width / 2) : 0);\n                var offsetx = bounds.width / (newPosition.x - bounds.x);\n                var offsety = bounds.height / (newPosition.y - bounds.y);\n                if (width > 1) {\n                    shape.width = width;\n                    shape.offset.x = 1 / offsetx;\n                }\n                if (height > 1) {\n                    shape.height = height;\n                    shape.offset.y = 1 / offsety;\n                }\n            }\n        }\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        changedvalues = this.getAnnotationChanges(node, label);\n        if (node instanceof Node) {\n            this.diagram.nodePropertyChange(node, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(node, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(node);\n    };\n    /** @private */\n    CommandHandler.prototype.getSubProcess = function (source) {\n        var selector = { nodes: [], connectors: [] };\n        var process;\n        if (source instanceof Node) {\n            process = source.processId;\n        }\n        else if (source && source.nodes && (source.nodes.length)\n            && source.nodes[0].processId) {\n            process = source.nodes[0].processId;\n        }\n        if (process) {\n            selector.nodes.push(clone(this.diagram.nameTable[process]));\n            return selector;\n        }\n        return selector;\n    };\n    /**   @private  */\n    CommandHandler.prototype.checkBoundaryConstraints = function (tx, ty, nodeBounds) {\n        var pageSettings = this.diagram.pageSettings;\n        var boundaryConstraints = this.diagram.pageSettings.boundaryConstraints;\n        var scroller = this.diagram.scroller;\n        if (boundaryConstraints === 'Page' || boundaryConstraints === 'Diagram') {\n            var selectorBounds = !nodeBounds ? this.diagram.selectedItems.wrapper.bounds : undefined;\n            var width = boundaryConstraints === 'Page' ? pageSettings.width : scroller.viewPortWidth;\n            var height = boundaryConstraints === 'Page' ? pageSettings.height : scroller.viewPortHeight;\n            var bounds = nodeBounds;\n            var right = (nodeBounds ? bounds.right : selectorBounds.right) + (tx || 0);\n            var left = (nodeBounds ? bounds.left : selectorBounds.left) + (tx || 0);\n            var top_2 = (nodeBounds ? bounds.top : selectorBounds.top) + (ty || 0);\n            var bottom = (nodeBounds ? bounds.bottom : selectorBounds.bottom) + (ty || 0);\n            if (right <= width && left >= 0\n                && bottom <= height && top_2 >= 0) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    };\n    //interfaces\n    /** @private */\n    CommandHandler.prototype.dragSelectedObjects = function (tx, ty) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        if (this.checkBoundaryConstraints(tx, ty)) {\n            this.diagram.drag(obj, tx, ty);\n            this.diagram.refreshCanvasLayers();\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleSelectedItems = function (sx, sy, pivot) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n            this.state.backup.width = obj.width;\n            this.state.backup.height = obj.height;\n            this.state.backup.pivot = pivot;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.scale(obj, sx, sy, pivot);\n    };\n    /** @private */\n    CommandHandler.prototype.rotateSelectedItems = function (angle) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.angle = obj.rotateAngle;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.rotate(obj, angle);\n    };\n    /** @private */\n    CommandHandler.prototype.hasSelection = function () {\n        return hasSelection(this.diagram);\n    };\n    /** @private */\n    CommandHandler.prototype.isSelected = function (element) {\n        return isSelected(this.diagram, element);\n    };\n    /**\n     * initExpand is used for layout expand and collapse interaction\n     */\n    CommandHandler.prototype.initExpand = function (args) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        var node = (args.target || args.source);\n        var oldValues = { isExpanded: node.isExpanded };\n        node.isExpanded = !node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.diagramActions |= DiagramAction.PreventIconsUpdate;\n        this.diagram.nodePropertyChange(node, oldValues, { isExpanded: node.isExpanded });\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.PreventIconsUpdate;\n        this.diagram.preventNodesUpdate = false;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.expandNode = function (node, diagram) {\n        var animation;\n        var objects;\n        var preventNodesUpdate = this.diagram.preventNodesUpdate;\n        var expand = node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.preventConnectorsUpdate = true;\n        this.expandCollapse(node, expand, this.diagram);\n        node.isExpanded = expand;\n        this.diagram.layout.fixedNode = node.id;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation && this.diagram.organizationalChartModule) {\n            this.diagram.organizationalChartModule.isAnimation = true;\n        }\n        objects = this.diagram.doLayout();\n        this.diagram.preventNodesUpdate = preventNodesUpdate;\n        this.diagram.preventConnectorsUpdate = false;\n        if (this.diagram.layoutAnimateModule && this.diagram.organizationalChartModule) {\n            this.layoutAnimateModule.expand(this.diagram.layout.enableAnimation, objects, node, this.diagram);\n        }\n        else {\n            var arg = {\n                element: clone(node), state: (node.isExpanded) ? true : false\n            };\n            this.triggerEvent(DiagramEvent.expandStateChange, arg);\n        }\n        return objects;\n    };\n    CommandHandler.prototype.getparentexpand = function (target, diagram, visibility, connector) {\n        var boolean;\n        for (var i = 0; i < target.inEdges.length; i++) {\n            var newConnector = diagram.nameTable[target.inEdges[i]];\n            var previousNode = diagram.nameTable[newConnector.sourceID];\n            if (previousNode.isExpanded && !visibility && previousNode.id !== connector.sourceID && newConnector.visible) {\n                return false;\n            }\n            else {\n                boolean = true;\n            }\n        }\n        return boolean;\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    CommandHandler.prototype.expandCollapse = function (source, visibility, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            var value = this.getparentexpand(target, diagram, visibility, connector);\n            connector.visible = visibility;\n            var oldValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            var newValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            if (value) {\n                if (target.isExpanded) {\n                    this.expandCollapse(target, visibility, diagram);\n                }\n                target.visible = visibility;\n                target.style.opacity = (this.diagram.layoutAnimateModule &&\n                    this.diagram.layout.enableAnimation && visibility) ? 0.1 : target.style.opacity;\n                diagram.nodePropertyChange(target, oldValues, newValues);\n            }\n            diagram.connectorPropertyChange(connector, oldValues, newValues);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateNodeDimension = function (obj, rect) {\n        if (obj instanceof Node) {\n            obj.offsetX = rect.x + rect.width / 2;\n            obj.offsetY = rect.y + rect.height / 2;\n            obj.width = rect.width;\n            obj.height = rect.height;\n            obj.wrapper.children[0].canMeasurePath = true;\n            this.diagram.nodePropertyChange(obj, {}, {\n                width: rect.width, height: rect.height, offsetX: obj.offsetX,\n                offsetY: obj.offsetY\n            });\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateConnectorPoints = function (obj, rect) {\n        if (obj instanceof Connector) {\n            this.diagram.connectorPropertyChange(obj, {}, {\n                targetPoint: obj.targetPoint\n            });\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.diagram.drawSelectionRectangle(x, y, width, height);\n    };\n    /** @private */\n    CommandHandler.prototype.startGroupAction = function () {\n        this.diagram.startGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.endGroupAction = function () {\n        this.diagram.endGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.removeChildFromBPmn = function (child, newTarget, oldTarget) {\n        var obj = this.diagram.nameTable[child.id] || child.nodes[0];\n        if (oldTarget) {\n            if ((obj) && obj.processId && obj.processId === oldTarget.wrapper.id) {\n                var node = clone(obj);\n                node.processId = obj.processId;\n                this.diagram.startGroupAction();\n                var edges = [];\n                edges = edges.concat(obj.outEdges, obj.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    var connector = this.diagram.nameTable[edges[i]];\n                    if (connector) {\n                        this.diagram.remove(connector);\n                    }\n                }\n                var nodeCollection = void 0;\n                nodeCollection = (this.diagram.nameTable[obj.processId].shape.activity.subProcess.processes) || [];\n                nodeCollection.splice(nodeCollection.indexOf((obj).id), 1);\n                this.diagram.bpmnModule.removeChildFromBPMN(this.diagram.nameTable[obj.processId].wrapper, (obj).id);\n                this.diagram.nameTable[(obj).id].processId = '';\n                obj.offsetX = obj.wrapper.offsetX;\n                obj.offsetY = obj.wrapper.offsetY;\n                var undoElement = clone(obj);\n                var entry = {\n                    type: 'PositionChanged', redoObject: { nodes: [undoElement] }, undoObject: { nodes: [node] }, category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n                this.diagram.endGroupAction();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.isDroppable = function (source, targetNodes) {\n        var node = this.diagram.nameTable[source.id] || source.nodes[0];\n        if (node) {\n            if (node.shape.shape === 'TextAnnotation') {\n                return true;\n            }\n            if (node && node.shape.type === 'Bpmn') {\n                if ((node.processId === targetNodes.id) || (node.id === targetNodes.processId) ||\n                    targetNodes.shape.type === 'Bpmn'\n                        && targetNodes.shape.activity.subProcess.collapsed) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderHighlighter = function (args, connectHighlighter, source) {\n        var bounds = new Rect();\n        if (args.target instanceof Node || (connectHighlighter && args.source instanceof Node)) {\n            var tgt = connectHighlighter ? args.source : args.target;\n            var tgtWrap = connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            var target = this.findTarget(tgtWrap, tgt, source, true);\n            var element = void 0;\n            if (target instanceof BpmnSubEvent) {\n                var portId = target.id;\n                var node = args.target;\n                var parent_6 = node.wrapper.children[0].children[0].children[2];\n                for (var _i = 0, _a = parent_6.children; _i < _a.length; _i++) {\n                    var child = _a[_i];\n                    if (child.id === node.id + '_' + portId) {\n                        element = child.children[0];\n                        break;\n                    }\n                }\n            }\n            else {\n                element = target instanceof Node ?\n                    target.wrapper : connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            }\n            this.diagram.renderHighlighter(element);\n        }\n    };\n    //additional events\n    /** @private */\n    CommandHandler.prototype.mouseOver = function (source, target, position) {\n        //mouse over\n        //returns whether the source can move over the target or not\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.snapPoint = function (startPoint, endPoint, tx, ty) {\n        var obj = this.diagram.selectedItems;\n        var point;\n        var towardsLeft = endPoint.x < startPoint.x;\n        var towardsTop = endPoint.y < startPoint.y;\n        point = { x: tx, y: ty };\n        var snappedPoint = point;\n        if (this.snappingModule) {\n            snappedPoint = this.diagram.snappingModule.snapPoint(this.diagram, obj, towardsLeft, towardsTop, point, startPoint, endPoint);\n        }\n        return snappedPoint;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeSnap = function () {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) && this.snappingModule) {\n            this.snappingModule.removeGuidelines(this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dropAnnotation = function (source, target) {\n        var node = (source instanceof Node) ? source : source.nodes[0];\n        if (this.diagram.bpmnModule && target.shape.type === 'Bpmn'\n            && node.shape.shape === 'TextAnnotation') {\n            var hasTarget = 'hasTarget';\n            node[hasTarget] = target.id;\n            node.shape.annotation.nodeId = target.id;\n            if (!this.diagram.currentSymbol) {\n                this.diagram.addTextAnnotation(node.shape.annotation, target);\n                node.shape.annotation.nodeId = '';\n                this.diagram.remove(node);\n            }\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    ;\n    /** @private */\n    CommandHandler.prototype.drop = function (source, target, position) {\n        //drop\n        if (this.diagram.bpmnModule) {\n            this.diagram.bpmnModule.dropBPMNchild(target, (source instanceof Node) ? source : source.nodes[0], this.diagram);\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addHistoryEntry = function (entry) {\n        this.diagram.addHistoryEntry(entry);\n    };\n    /** @private */\n    CommandHandler.prototype.align = function (objects, option, type) {\n        if (objects.length > 0) {\n            var i = 0;\n            var bounds = (type === 'Object') ? getBounds(objects[0].wrapper) : this.diagram.selectedItems.wrapper.bounds;\n            var undoObj = { nodes: [], connectors: [] };\n            var redoObj = { nodes: [], connectors: [] };\n            for (i = ((type === 'Object') ? (i + 1) : i); i < objects.length; i++) {\n                var tx = 0;\n                var ty = 0;\n                var objectBounds = getBounds(objects[i].wrapper);\n                if (option === 'Left') {\n                    tx = bounds.left + objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Right') {\n                    tx = bounds.right - objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Top') {\n                    ty = bounds.top + objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Bottom') {\n                    ty = bounds.bottom - objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Center') {\n                    tx = bounds.center.x - objectBounds.center.x;\n                }\n                else if (option === 'Middle') {\n                    ty = bounds.center.y - objectBounds.center.y;\n                }\n                undoObj = this.storeObject(undoObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoObj = this.storeObject(redoObj, objects[i]);\n            }\n            undoObj = clone(undoObj);\n            redoObj = clone(redoObj);\n            var entry = {\n                type: 'Align', category: 'Internal',\n                undoObject: cloneObject(undoObj), redoObject: cloneObject(redoObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.distribute = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var j = 0;\n            var rect = new Rect();\n            var b = [];\n            var temp = void 0;\n            var right = 0;\n            var left = 0;\n            var top_3 = 0;\n            var bottom = 0;\n            var center = 0;\n            var middle = 0;\n            var btt = 0;\n            var sum = 0;\n            var undoSelectorObj = { nodes: [], connectors: [] };\n            var redoSelectorObj = { nodes: [], connectors: [] };\n            objects = sort(objects, option);\n            for (i = 1; i < objects.length; i++) {\n                right = right + objects[i].wrapper.bounds.topRight.x - objects[i - 1].wrapper.bounds.topRight.x;\n                left = left + objects[i].wrapper.bounds.topLeft.x - objects[i - 1].wrapper.bounds.topLeft.x;\n                top_3 = top_3 + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.topRight.y;\n                bottom = bottom + objects[i].wrapper.bounds.bottomRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n                center = center + objects[i].wrapper.bounds.center.x - objects[i - 1].wrapper.bounds.center.x;\n                middle = middle + objects[i].wrapper.bounds.center.y - objects[i - 1].wrapper.bounds.center.y;\n                btt = btt + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n            }\n            for (i = 1; i < objects.length - 1; i++) {\n                var tx = 0;\n                var ty = 0;\n                var prev = getBounds(objects[i - 1].wrapper);\n                var current = getBounds(objects[i].wrapper);\n                if (option === 'RightToLeft' || option === 'Center') {\n                    tx = prev.center.x - current.center.x + (center / (objects.length - 1));\n                }\n                else if (option === 'Right') {\n                    tx = prev.topRight.x - current.topRight.x + (right / (objects.length - 1));\n                }\n                else if (option === 'Left') {\n                    tx = prev.topLeft.x - current.topLeft.x + (left / (objects.length - 1));\n                }\n                else if (option === 'Middle') {\n                    ty = prev.center.y - current.center.y + (middle / (objects.length - 1));\n                }\n                else if (option === 'Top') {\n                    ty = prev.topRight.y - current.topRight.y + (top_3 / (objects.length - 1));\n                }\n                else if (option === 'Bottom') {\n                    ty = prev.bottomRight.y - current.bottomRight.y + (bottom / (objects.length - 1));\n                }\n                else if (option === 'BottomToTop') {\n                    ty = prev.bottomRight.y - current.topRight.y + (btt / (objects.length - 1));\n                }\n                undoSelectorObj = this.storeObject(undoSelectorObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoSelectorObj = this.storeObject(redoSelectorObj, objects[i]);\n            }\n            undoSelectorObj = clone(undoSelectorObj);\n            redoSelectorObj = clone(redoSelectorObj);\n            var entry = {\n                type: 'Distribute', category: 'Internal',\n                undoObject: cloneObject(undoSelectorObj), redoObject: cloneObject(redoSelectorObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sameSize = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var pivot = void 0;\n            pivot = { x: 0.5, y: 0.5 };\n            var bounds = getBounds(objects[0].wrapper);\n            var undoObject = { nodes: [], connectors: [] };\n            var redoObject = { nodes: [], connectors: [] };\n            for (i = 1; i < objects.length; i++) {\n                var rect = getBounds(objects[i].wrapper);\n                var sw = 1;\n                var sh = 1;\n                if (option === 'Width') {\n                    sw = bounds.width / rect.width;\n                }\n                else if (option === 'Height') {\n                    sh = bounds.height / rect.height;\n                }\n                else if (option === 'Size') {\n                    sw = bounds.width / rect.width;\n                    sh = bounds.height / rect.height;\n                }\n                undoObject = this.storeObject(undoObject, objects[i]);\n                this.scale(objects[i], sw, sh, pivot);\n                redoObject = this.storeObject(redoObject, objects[i]);\n            }\n            this.diagram.updateSelector();\n            undoObject = clone(undoObject);\n            redoObject = clone(redoObject);\n            var entry = {\n                type: 'Sizing', category: 'Internal',\n                undoObject: cloneObject(undoObject), redoObject: cloneObject(redoObject)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    CommandHandler.prototype.storeObject = function (selectorObject, obj) {\n        if (obj instanceof Node) {\n            selectorObject.nodes.push(clone(obj));\n        }\n        else {\n            selectorObject.connectors.push(clone(obj));\n        }\n        return selectorObject;\n    };\n    /** @private */\n    CommandHandler.prototype.scroll = function (scrollX, scrollY, focusPoint) {\n        var panx = canPanX(this.diagram);\n        var pany = canPanY(this.diagram);\n        this.diagram.pan((scrollX = panx ? scrollX : 0) * this.diagram.scroller.currentZoom, (scrollY = pany ? scrollY : 0) * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawHighlighter = function (element) {\n        this.diagram.renderHighlighter(element.wrapper);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeHighlighter = function () {\n        this.diagram.clearHighlighter();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderContainerHelper = function (node) {\n        return renderContainerHelper(this.diagram, node);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.isParentAsContainer = function (node, isChild) {\n        return checkParentAsContainer(this.diagram, node, isChild);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dropChildToContainer = function (parent, node) {\n        addChildToContainer(this.diagram, parent, node);\n    };\n    /** @private */\n    CommandHandler.prototype.checkSelection = function (selector, corner) {\n        var node;\n        var wrapper;\n        var child;\n        var index;\n        var shape;\n        if (selector.nodes.length === 1 && selector.connectors.length === 0) {\n            if (checkParentAsContainer(this.diagram, selector.nodes[0], true)) {\n                node = (selector.nodes[0].shape === 'SwimLane') ? selector.nodes[0] :\n                    this.diagram.nameTable[selector.nodes[0].parentId];\n                var child_1 = selector.nodes[0];\n                if (node.shape.type === 'SwimLane') {\n                    var orientation_1 = (node.shape.orientation === 'Horizontal') ? true : false;\n                    if ((child_1.isPhase && ((orientation_1 && corner === 'ResizeSouth') || (!orientation_1 && corner === 'ResizeEast'))) ||\n                        (child_1.isLane && ((orientation_1 && corner === 'ResizeEast') || (!orientation_1 && corner === 'ResizeSouth')))) {\n                        swimLaneSelection(this.diagram, node, corner);\n                    }\n                }\n                else if (node.container.type === 'Grid') {\n                    if (((node.container.orientation === 'Horizontal' && child_1.rowIndex === 1) ||\n                        (node.container.orientation === 'Vertical' && child_1.rowIndex > 0 && child_1.columnIndex > 0))) {\n                        if (corner === 'ResizeSouth') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === node.rows.length - 1 && obj.columnIndex === 0) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (corner === 'ResizeEast') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === 1 && obj.columnIndex === node.columns.length - 1) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                swimLaneSelection(this.diagram, selector.nodes[0], corner);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.zoom = function (scale, scrollX, scrollY, focusPoint) {\n        this.diagram.scroller.zoom(scale, scrollX * this.diagram.scroller.currentZoom, scrollY * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    return CommandHandler;\n}());\nexport { CommandHandler };\n","import { Rect } from '../primitives/rect';\nimport { RealAction } from '../enum/enum';\nimport { identityMatrix, scaleMatrix, translateMatrix, transformPointByMatrix, multiplyMatrix } from '../primitives/matrix';\nimport { updateRuler } from '../ruler/ruler';\nimport { canZoom, canPan, canVitualize } from './../utility/constraints-util';\n/**\n */\nvar DiagramScroller = /** @class */ (function () {\n    function DiagramScroller(diagram) {\n        /** @private */\n        this.transform = { tx: 0, ty: 0, scale: 1 };\n        /**   @private  */\n        this.oldCollectionObjects = [];\n        /**   @private  */\n        this.removeCollection = [];\n        this.vPortWidth = 0;\n        this.vPortHeight = 0;\n        this.currentZoomFActor = 1;\n        this.hOffset = 0;\n        this.vOffset = 0;\n        this.scrolled = false;\n        this.hScrollSize = 0;\n        this.vScrollSize = 0;\n        this.diagram = diagram;\n        this.objects = [];\n        this.transform = diagram.scroller ? diagram.scroller.transform : { tx: 0, ty: 0, scale: 1 };\n        this.vPortWidth = diagram.scrollSettings.viewPortWidth;\n        this.vPortHeight = diagram.scrollSettings.viewPortHeight;\n        this.currentZoomFActor = diagram.scrollSettings.currentZoom;\n        this.hOffset = diagram.scrollSettings.horizontalOffset;\n        this.vOffset = diagram.scrollSettings.verticalOffset;\n    }\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortHeight\", {\n        /** @private */\n        get: function () {\n            return this.vPortHeight;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortHeight = offset;\n            this.diagram.scrollSettings.viewPortHeight = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"currentZoom\", {\n        /** @private */\n        get: function () {\n            return this.currentZoomFActor;\n        },\n        /** @private */\n        set: function (offset) {\n            this.currentZoomFActor = offset;\n            this.diagram.scrollSettings.currentZoom = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortWidth\", {\n        /** @private */\n        get: function () {\n            return this.vPortWidth;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortWidth = offset;\n            this.diagram.scrollSettings.viewPortWidth = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"horizontalOffset\", {\n        /** @private */\n        get: function () {\n            return this.hOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.hOffset = offset;\n            if (Math.abs(this.hOffset - this.diagram.scrollSettings.horizontalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.hScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.horizontalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"verticalOffset\", {\n        /** @private */\n        get: function () {\n            return this.vOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vOffset = offset;\n            if (Math.abs(this.vOffset - this.diagram.scrollSettings.verticalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.vScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.verticalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramScroller.prototype.updateScrollOffsets = function (hOffset, vOffset) {\n        var offsetX = 0;\n        var offsetY = 0;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        offsetX = Math.max(0, hOffset - pageBounds.left);\n        offsetY = Math.max(0, vOffset - pageBounds.top);\n        if (hOffset !== undefined && vOffset !== undefined) {\n            this.horizontalOffset = offsetX;\n            this.verticalOffset = offsetY;\n            this.diagram.setOffset(offsetX, offsetY);\n        }\n        else {\n            this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n    };\n    /** @private */\n    DiagramScroller.prototype.setScrollOffset = function (hOffset, vOffset) {\n        this.scrolled = false;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = -pageBounds.left;\n        var y = -pageBounds.top;\n        var set = false;\n        var viewWidth = this.viewPortWidth * this.currentZoom;\n        var viewHeight = this.viewPortHeight * this.currentZoom;\n        var newX = x - hOffset;\n        if (newX !== this.horizontalOffset) {\n            if (x < this.horizontalOffset) {\n                if (this.horizontalOffset > newX) {\n                    this.horizontalOffset -= hOffset;\n                }\n                else {\n                    this.horizontalOffset = newX;\n                }\n                set = true;\n            }\n            var right = Math.max(pageBounds.right + this.vScrollSize, viewWidth);\n            if (!set && right < -newX + this.viewPortWidth) {\n                var actualRight = -newX + viewWidth - this.vScrollSize;\n                var currentRight = -this.horizontalOffset + viewWidth - this.vScrollSize;\n                if (actualRight < currentRight) {\n                    //define\n                    this.horizontalOffset = newX;\n                }\n                else {\n                    if (actualRight - pageBounds.right > actualRight - currentRight) {\n                        this.horizontalOffset = newX;\n                    }\n                    else {\n                        this.horizontalOffset = -(pageBounds.right + this.vScrollSize - viewWidth);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.horizontalOffset = x - hOffset;\n            }\n        }\n        set = false;\n        //vertical offset\n        var newY = y - vOffset;\n        if (newY !== this.verticalOffset) {\n            if (y < this.verticalOffset) {\n                if (this.verticalOffset > newY) {\n                    this.verticalOffset -= vOffset;\n                }\n                else {\n                    this.verticalOffset = newY;\n                }\n                set = true;\n            }\n            var bottom = Math.max(pageBounds.bottom + this.hScrollSize, viewHeight);\n            if (!set && bottom < -newY + viewHeight) {\n                var actualBottom = -newY + viewHeight - this.hScrollSize;\n                var currentBottom = -this.verticalOffset + viewHeight - this.hScrollSize;\n                if (actualBottom < currentBottom) {\n                    //define\n                    this.verticalOffset = newY;\n                }\n                else {\n                    if (actualBottom - pageBounds.bottom > actualBottom - currentBottom) {\n                        this.verticalOffset = newY;\n                    }\n                    else {\n                        this.verticalOffset = -(pageBounds.bottom + this.hScrollSize - viewHeight);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.verticalOffset = y - vOffset;\n            }\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n        this.setSize();\n    };\n    /** @private */\n    DiagramScroller.prototype.getObjects = function (coll1, coll2) {\n        var objects = [];\n        for (var i = 0; i < coll1.length; i++) {\n            var isExist = false;\n            for (var j = 0; j < coll2.length; j++) {\n                if (coll1[i] === coll2[j]) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isExist) {\n                objects.push(coll1[i]);\n            }\n        }\n        return objects;\n    };\n    /**   @private  */\n    DiagramScroller.prototype.virtualizeElements = function () {\n        var viewWidth = this.viewPortWidth / this.currentZoom;\n        var viewHeight = this.viewPortHeight / this.currentZoom;\n        var oObjects = this.diagram.spatialSearch.findObjects(new Rect(-this.horizontalOffset / this.currentZoom, -this.verticalOffset / this.currentZoom, viewWidth, viewHeight));\n        var oObjectsID = [];\n        for (var i = 0; i < oObjects.length; i++) {\n            oObjectsID.push(oObjects[i].id);\n        }\n        var newObjects = this.getObjects(oObjectsID, this.oldCollectionObjects);\n        if (this.oldCollectionObjects.length === 0) {\n            this.oldCollectionObjects = oObjectsID;\n        }\n        var removeObjects = this.getObjects(this.oldCollectionObjects, oObjectsID);\n        this.diagram.updateVirtualObjects(newObjects, false, removeObjects);\n        this.oldCollectionObjects = oObjectsID;\n    };\n    /** @private */\n    DiagramScroller.prototype.setSize = function () {\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = Math.min(pageBounds.x, -this.horizontalOffset);\n        var y = Math.min(pageBounds.y, -this.verticalOffset);\n        var difX = -this.horizontalOffset + this.viewPortWidth - pageBounds.right;\n        var difY = -this.verticalOffset + this.viewPortHeight - pageBounds.bottom;\n        var hScrollSize = this.scrollerWidth;\n        var vScrollSize = this.scrollerWidth;\n        if (-this.verticalOffset <= pageBounds.y && -this.verticalOffset + this.viewPortHeight >= pageBounds.bottom) {\n            vScrollSize = 0;\n        }\n        if (-this.horizontalOffset <= pageBounds.x && -this.horizontalOffset + this.viewPortWidth >= pageBounds.right) {\n            hScrollSize = 0;\n        }\n        this.hScrollSize = hScrollSize;\n        this.vScrollSize = vScrollSize;\n        var oldWidth = this.diagramWidth;\n        var oldHeight = this.diagramHeight;\n        this.diagramWidth = Math.max(pageBounds.right, -this.horizontalOffset + this.viewPortWidth - vScrollSize) - x;\n        this.diagramHeight = Math.max(pageBounds.bottom, -this.verticalOffset + this.viewPortHeight - hScrollSize) - y;\n        if (oldWidth !== this.diagramWidth || oldHeight !== this.diagramHeight) {\n            this.diagram.setSize(this.diagramWidth, this.diagramHeight);\n        }\n        this.diagram.transformLayers();\n        this.diagram.element.style.overflow = 'hidden';\n    };\n    /** @private */\n    DiagramScroller.prototype.setViewPortSize = function (width, height) {\n        this.viewPortWidth = width;\n        this.viewPortHeight = height;\n    };\n    /**\n     * To get page pageBounds\n     * @private\n     */\n    DiagramScroller.prototype.getPageBounds = function (boundingRect, region, hasPadding) {\n        var rect = new Rect();\n        var pageBounds;\n        var temp = 0;\n        if (region !== 'Content' && this.diagram.pageSettings.width !== null && this.diagram.pageSettings.height !== null) {\n            var width = this.diagram.pageSettings.width;\n            var height = this.diagram.pageSettings.height;\n            var negwidth = 0;\n            var negheight = 0;\n            if (this.diagram.pageSettings.multiplePage) {\n                rect = this.diagram.spatialSearch.getPageBounds(0, 0);\n                if (rect.right > width) {\n                    var x = Math.ceil(rect.right / width);\n                    width = width * x;\n                }\n                if (rect.bottom > height) {\n                    var x = Math.ceil(rect.bottom / height);\n                    height = height * x;\n                }\n                if (rect.left < 0 && Math.abs(rect.left) > negwidth) {\n                    var x = Math.ceil(Math.abs(rect.left) / this.diagram.pageSettings.width);\n                    negwidth = this.diagram.pageSettings.width * x;\n                }\n                if (rect.top < 0 && Math.abs(rect.top) > negheight) {\n                    var x = Math.ceil(Math.abs(rect.top) / this.diagram.pageSettings.height);\n                    negheight = this.diagram.pageSettings.height * x;\n                }\n            }\n            pageBounds = new Rect((-negwidth), (-negheight), width + negwidth, height + negheight);\n        }\n        else {\n            var origin = boundingRect ? undefined : 0;\n            pageBounds = this.diagram.spatialSearch.getPageBounds(origin, origin);\n        }\n        if (hasPadding) {\n            var scrollpadding = this.diagram.scrollSettings.padding;\n            pageBounds.x -= scrollpadding.left;\n            pageBounds.y -= scrollpadding.top;\n            pageBounds.width += (scrollpadding.left + scrollpadding.right);\n            pageBounds.height += (scrollpadding.top + scrollpadding.bottom);\n        }\n        return pageBounds;\n    };\n    /**\n     * To get page break when PageBreak is set as true\n     * @private\n     */\n    DiagramScroller.prototype.getPageBreak = function (pageBounds) {\n        var i = 0;\n        var j = 0;\n        var v = -1;\n        var collection = [];\n        var x1 = 0;\n        var x2 = 0;\n        var y1 = 0;\n        var y2 = 0;\n        var left = this.diagram.pageSettings.margin.left;\n        var right = this.diagram.pageSettings.margin.right;\n        var top = this.diagram.pageSettings.margin.top;\n        var bottom = this.diagram.pageSettings.margin.bottom;\n        var widthCount = 1;\n        var heightCount = 1;\n        var segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n        while (pageBounds.width > i) {\n            i = i + (this.diagram.pageSettings.width ? this.diagram.pageSettings.width : pageBounds.width);\n            if (i === this.diagram.pageSettings.width) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.left + left, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n            if (i < pageBounds.width) {\n                x1 = pageBounds.topLeft.x + this.diagram.pageSettings.width * widthCount;\n                y1 = pageBounds.topLeft.y + top;\n                x2 = pageBounds.bottomLeft.x + this.diagram.pageSettings.width * widthCount;\n                y2 = pageBounds.bottomLeft.y - bottom;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                widthCount++;\n            }\n            if (pageBounds.width === i) {\n                segment = {\n                    x1: pageBounds.right - right, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        while (pageBounds.height > j) {\n            j = j + (this.diagram.pageSettings.height ? this.diagram.pageSettings.height : pageBounds.height);\n            if (j === this.diagram.pageSettings.height) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.top + top\n                };\n                collection[++v] = segment;\n            }\n            if (j < pageBounds.height) {\n                x1 = pageBounds.topLeft.x + left;\n                y1 = pageBounds.topLeft.y + this.diagram.pageSettings.height * heightCount;\n                x2 = pageBounds.topRight.x - right;\n                y2 = pageBounds.topRight.y + this.diagram.pageSettings.height * heightCount;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                heightCount++;\n            }\n            if (pageBounds.height === j) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.bottom - bottom,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        return collection;\n    };\n    /** @private */\n    DiagramScroller.prototype.zoom = function (factor, deltaX, deltaY, focusPoint) {\n        if (canZoom(this.diagram) && factor !== 1 || (canPan(this.diagram) && factor === 1)) {\n            var matrix = identityMatrix();\n            scaleMatrix(matrix, this.currentZoom, this.currentZoom);\n            translateMatrix(matrix, this.horizontalOffset, this.verticalOffset);\n            focusPoint = focusPoint || {\n                x: (this.viewPortWidth / 2 - this.horizontalOffset) / this.currentZoom,\n                y: (this.viewPortHeight / 2 - this.verticalOffset) / this.currentZoom\n            };\n            focusPoint = transformPointByMatrix(matrix, focusPoint);\n            if ((this.currentZoom * factor) >= this.diagram.scrollSettings.minZoom &&\n                (this.currentZoom * factor) <= this.diagram.scrollSettings.maxZoom) {\n                this.currentZoom *= factor;\n                var pageBounds = this.getPageBounds(undefined, undefined, true);\n                pageBounds.x *= this.currentZoom;\n                pageBounds.y *= this.currentZoom;\n                //target Matrix\n                var targetMatrix = identityMatrix();\n                scaleMatrix(targetMatrix, factor, factor, focusPoint.x, focusPoint.y);\n                translateMatrix(targetMatrix, deltaX || 0, deltaY || 0);\n                multiplyMatrix(matrix, targetMatrix);\n                var newOffset = transformPointByMatrix(matrix, { x: 0, y: 0 });\n                if (factor === 1) {\n                    newOffset = this.applyScrollLimit(newOffset.x, newOffset.y);\n                }\n                this.transform = {\n                    tx: Math.max(newOffset.x, -pageBounds.left) / this.currentZoom,\n                    ty: Math.max(newOffset.y, -pageBounds.top) / this.currentZoom,\n                    scale: this.currentZoom\n                };\n                this.horizontalOffset = newOffset.x;\n                this.verticalOffset = newOffset.y;\n                this.setSize();\n                if (this.diagram.mode !== 'SVG' && canVitualize(this.diagram)) {\n                    this.diagram.scroller.virtualizeElements();\n                }\n                if (this.diagram.mode !== 'SVG' && !canVitualize(this.diagram)) {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.fitToPage = function (options) {\n        options = options || {};\n        var mode = options.mode;\n        var region = options.region;\n        var margin = options.margin || {};\n        var canZoomIn = options.canZoomIn;\n        var customBounds = options.customBounds;\n        margin.bottom = margin.bottom || 25;\n        margin.top = margin.top || 25;\n        margin.left = margin.left || 25;\n        margin.right = margin.right || 25;\n        var bounds = customBounds;\n        var factor;\n        var deltaX = -this.horizontalOffset;\n        var deltaY = -this.verticalOffset;\n        region = region ? region : 'PageSettings';\n        //fit mode\n        if ((region === 'PageSettings' && this.diagram.pageSettings.width && this.diagram.pageSettings.height)\n            || (this.diagram.nodes.length > 0 || this.diagram.connectors.length > 0)) {\n            mode = mode ? mode : 'Page';\n            if (region !== 'CustomBounds') {\n                bounds = this.getPageBounds(true, region, true);\n            }\n            var scale = { x: 0, y: 0 };\n            scale.x = (this.viewPortWidth - (margin.left + margin.right)) / (bounds.width);\n            scale.y = (this.viewPortHeight - (margin.top + margin.bottom)) / (bounds.height);\n            if (!canZoomIn && ((bounds.width - this.horizontalOffset) < this.viewPortWidth) &&\n                (bounds.height - this.verticalOffset) < this.viewPortHeight) {\n                scale.x = Math.min(1, scale.x);\n                scale.y = Math.min(1, scale.y);\n            }\n            var zoomFactor = void 0;\n            var centerX = void 0;\n            var centerY = void 0;\n            switch (mode) {\n                case 'Width':\n                    zoomFactor = scale.x;\n                    factor = zoomFactor / this.currentZoom;\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY -= -this.verticalOffset * factor;\n                    deltaY = region !== 'CustomBounds' ? deltaY : deltaY - this.verticalOffset * factor;\n                    break;\n                case 'Height':\n                    zoomFactor = scale.y;\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = ((this.viewPortWidth - (bounds.width) * zoomFactor) / 2) - bounds.x * zoomFactor;\n                    centerY = ((this.viewPortHeight - (bounds.height) * zoomFactor) / 2) - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n                case 'Page':\n                    zoomFactor = Math.min(scale.x, scale.y);\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    centerY = (this.viewPortHeight - (bounds.height) * zoomFactor) / 2 - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n            }\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n        else {\n            factor = 1 / this.currentZoom;\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringIntoView = function (rect) {\n        var x = 0;\n        var y = 0;\n        var scale = this.currentZoom;\n        var bounds = rect;\n        var hoffset = -this.horizontalOffset;\n        var voffset = -this.verticalOffset;\n        bounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var view = new Rect(hoffset, voffset, this.viewPortWidth, this.viewPortHeight);\n        if (!(view.containsRect(bounds))) {\n            if (bounds.right > (-hoffset + this.viewPortWidth)) {\n                x = bounds.right - this.viewPortWidth;\n            }\n            if (bounds.x < -hoffset) {\n                x = bounds.x;\n            }\n            if (bounds.bottom > (-voffset + this.viewPortHeight)) {\n                y = bounds.bottom - this.viewPortHeight;\n            }\n            if (bounds.y < -voffset) {\n                y = bounds.y;\n            }\n            this.zoom(1, -this.horizontalOffset - x, -this.verticalOffset - y, null);\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringToCenter = function (bounds) {\n        var scale = this.currentZoom;\n        var actualbounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var hoffset = actualbounds.x + actualbounds.width / 2 - this.viewPortWidth / 2;\n        var voffset = actualbounds.y + actualbounds.height / 2 - this.viewPortHeight / 2;\n        this.zoom(1, -this.horizontalOffset - hoffset, -this.verticalOffset - voffset, null);\n    };\n    DiagramScroller.prototype.applyScrollLimit = function (hOffset, vOffset) {\n        if (this.diagram.scrollSettings.scrollLimit !== 'Infinity') {\n            var bounds = void 0;\n            if (this.diagram.scrollSettings.scrollLimit === 'Limited') {\n                bounds = this.diagram.scrollSettings.scrollableArea;\n            }\n            bounds = bounds || this.getPageBounds(true);\n            bounds.x *= this.currentZoom;\n            bounds.y *= this.currentZoom;\n            bounds.width *= this.currentZoom;\n            bounds.height *= this.currentZoom;\n            hOffset *= -1;\n            vOffset *= -1;\n            var allowedRight = Math.max(bounds.right, this.viewPortWidth);\n            if (!(hOffset <= bounds.x && (hOffset + this.viewPortWidth >= bounds.right ||\n                hOffset >= bounds.right - this.viewPortWidth)\n                || hOffset >= bounds.x && (hOffset + this.viewPortWidth <= allowedRight))) {\n                //not allowed case\n                if (hOffset >= bounds.x) {\n                    hOffset = Math.max(bounds.x, Math.min(hOffset, hOffset - (hOffset + this.viewPortWidth - this.vScrollSize - allowedRight)));\n                }\n                else {\n                    var allowed = bounds.right - this.viewPortWidth;\n                    hOffset = Math.min(allowed, bounds.x);\n                }\n            }\n            var allowedBottom = Math.max(bounds.bottom, this.viewPortHeight);\n            if (!(vOffset <= bounds.y && vOffset + this.viewPortHeight >= bounds.bottom\n                || vOffset >= bounds.y && vOffset + this.viewPortHeight <= allowedBottom)) {\n                //not allowed case\n                if (vOffset >= bounds.y) {\n                    vOffset = Math.max(bounds.y, Math.min(vOffset, vOffset - (vOffset + this.viewPortHeight - this.hScrollSize - allowedBottom)));\n                }\n                else {\n                    var allowed = bounds.bottom - this.viewPortHeight;\n                    vOffset = Math.min(bounds.y, allowed);\n                }\n            }\n            hOffset *= -1;\n            vOffset *= -1;\n        }\n        return { x: hOffset, y: vOffset };\n    };\n    return DiagramScroller;\n}());\nexport { DiagramScroller };\n","/**\n * Quad helps to maintain a set of objects that are contained within the particular region\n */\n/** @private */\nvar Quad = /** @class */ (function () {\n    /** @private */\n    function Quad(left, top, width, height, spatialSearching) {\n        this.objects = [];\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.spatialSearch = spatialSearching;\n    }\n    /** @private */\n    Quad.prototype.findQuads = function (currentViewPort, quads) {\n        if (this.first != null && this.first.isIntersect(currentViewPort)) {\n            this.first.findQuads(currentViewPort, quads);\n        }\n        if (this.second != null && this.second.isIntersect(currentViewPort)) {\n            this.second.findQuads(currentViewPort, quads);\n        }\n        if (this.third != null && this.third.isIntersect(currentViewPort)) {\n            this.third.findQuads(currentViewPort, quads);\n        }\n        if (this.fourth != null && this.fourth.isIntersect(currentViewPort)) {\n            this.fourth.findQuads(currentViewPort, quads);\n        }\n        if (this.objects.length > 0) {\n            quads.push(this);\n        }\n    };\n    Quad.prototype.isIntersect = function (t) {\n        if (this.left + this.width < t.left || this.top + this.height < t.top || this.left > t.right || this.top > t.bottom) {\n            return false;\n        }\n        return true;\n    };\n    /** @private */\n    Quad.prototype.selectQuad = function () {\n        var target = null;\n        var current = this;\n        var quadSet;\n        while (current != null) {\n            quadSet = current.getQuad(target);\n            current = quadSet.source;\n            target = quadSet.target || target;\n        }\n        return target;\n    };\n    Quad.prototype.getQuad = function (target) {\n        target = null;\n        var halfWidth = this.width / 2;\n        var halfHeight = this.height / 2;\n        if (halfWidth >= 1000 && halfHeight >= 1000) {\n            var xCenter = this.left + halfWidth;\n            var yCenter = this.top + halfHeight;\n            if (this.spatialSearch.childRight <= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.first) {\n                        var newQuad = new Quad(this.left, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.first = newQuad;\n                    }\n                    return { source: this.first };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.third) {\n                        var newQuad = new Quad(this.left, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.third = newQuad;\n                    }\n                    return { source: this.third };\n                }\n            }\n            else if (this.spatialSearch.childLeft >= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.second) {\n                        var newQuad = new Quad(xCenter, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.second = newQuad;\n                    }\n                    return { source: this.second };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.fourth) {\n                        var newQuad = new Quad(xCenter, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.fourth = newQuad;\n                    }\n                    return { source: this.fourth };\n                }\n            }\n        }\n        target = this;\n        this.objects.push(this.spatialSearch.childNode);\n        return { target: this };\n    };\n    /** @private */\n    Quad.prototype.isContained = function () {\n        if (this.spatialSearch.childLeft >= this.left && this.spatialSearch.childRight <= this.left + this.width &&\n            this.spatialSearch.childTop >= this.top && this.spatialSearch.childBottom <= this.top + this.height) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    Quad.prototype.addIntoAQuad = function (node) {\n        var quadAddition = {};\n        this.spatialSearch.setCurrentNode(node);\n        var quad = null;\n        while (!quadAddition.isAdded) {\n            quadAddition = this.spatialSearch.parentQuad.add(quad);\n            quad = quadAddition.quad;\n        }\n        return quad;\n    };\n    Quad.prototype.add = function (quad) {\n        quad = null;\n        if (this.isContained()) {\n            quad = this.selectQuad();\n            return { isAdded: true, quad: quad };\n        }\n        else {\n            var newParent = void 0;\n            var isempty = this.objects.length === 0 && !this.first && !this.second && !this.third &&\n                !this.fourth;\n            var newWidth = this.width * 2;\n            var newHeight = this.height * 2;\n            if (this.spatialSearch.childLeft < this.left) {\n                if (this.spatialSearch.childTop < this.top) {\n                    newParent = new Quad(this.left - this.width, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.fourth = this;\n                    }\n                }\n                else {\n                    newParent = new Quad(this.left - this.width, this.top, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.second = this;\n                    }\n                }\n            }\n            else if (this.spatialSearch.childTop < this.top) {\n                newParent = new Quad(this.left, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.third = this;\n                }\n            }\n            else {\n                newParent = new Quad(this.left, this.top, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.first = this;\n                }\n            }\n            this.parent = newParent;\n            this.spatialSearch.parentQuad = newParent;\n            return { isAdded: false, quad: quad };\n            //newParent.AddIntoaQuad(node);\n        }\n    };\n    return Quad;\n}());\nexport { Quad };\n","import { Rect } from '../../primitives/rect';\nimport { Quad } from './quad';\n/**\n * Spatial search module helps to effectively find the objects over diagram\n */\nvar SpatialSearch = /** @class */ (function () {\n    /** @private */\n    function SpatialSearch(objectTable) {\n        this.quadSize = 500;\n        this.objectTable = objectTable;\n        this.parentQuad = new Quad(0, 0, this.quadSize * 2, this.quadSize * 2, this);\n        this.pageLeft = Number.MAX_VALUE;\n        this.pageRight = -Number.MAX_VALUE;\n        this.pageTop = Number.MAX_VALUE;\n        this.pageBottom = -Number.MAX_VALUE;\n        this.quadTable = {};\n    }\n    /** @private */\n    SpatialSearch.prototype.removeFromAQuad = function (node) {\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            var index = this.objectIndex(quad.objects, node);\n            if (index !== -1) {\n                quad.objects.splice(index, 1);\n                this.update(quad);\n                delete this.quadTable[node.id];\n            }\n        }\n    };\n    SpatialSearch.prototype.update = function (quad) {\n        if (quad.parent && quad.objects.length === 0 && quad.first && quad.second && quad.third && quad.fourth) {\n            var parent_1 = quad.parent;\n            if (parent_1.first === quad) {\n                parent_1.first = null;\n            }\n            else if (parent_1.second === quad) {\n                parent_1.second = null;\n            }\n            else if (parent_1.third === quad) {\n                parent_1.third = null;\n            }\n            else if (parent_1.fourth === quad) {\n                parent_1.fourth = null;\n            }\n            this.update(quad.parent);\n        }\n        else {\n            if (quad === this.parentQuad && !quad.first && !quad.second && !quad.third && !quad.fourth) {\n                quad.left = 0;\n                quad.width = 1000;\n                quad.top = 0;\n                quad.height = 1000;\n            }\n            return;\n        }\n    };\n    SpatialSearch.prototype.addIntoAQuad = function (node) {\n        var quad = this.parentQuad.addIntoAQuad(node);\n        this.quadTable[node.id] = quad;\n    };\n    /** @private */\n    SpatialSearch.prototype.objectIndex = function (objects, node) {\n        for (var i = 0; i < objects.length; i++) {\n            if ((objects[i]).id === node.id) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateQuad = function (node) {\n        this.setCurrentNode(node);\n        var nodBounds = node.outerBounds;\n        if (!(!isNaN(nodBounds.x) && !isNaN(nodBounds.y) &&\n            !isNaN(nodBounds.width) && !isNaN(nodBounds.height))) {\n            return false;\n        }\n        //nodBounds = new Rect(nodBounds.X.Valid(), nodBounds.Y.Valid(), nodBounds.Width.Valid(), nodBounds.Height.Valid());\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            if (!quad.isContained()) {\n                this.removeFromAQuad(node);\n                this.addIntoAQuad(node);\n            }\n        }\n        else {\n            this.addIntoAQuad(node);\n        }\n        if (this.isWithinPageBounds(nodBounds) &&\n            this.leftElement !== node &&\n            this.topElement !== node &&\n            this.rightElement !== node &&\n            this.bottomElement !== node) {\n            //contained - no change\n        }\n        else {\n            var modified = false;\n            if (this.pageLeft !== this.childLeft || node !== this.leftElement) {\n                if (this.pageLeft >= this.childLeft) {\n                    this.pageLeft = this.childLeft;\n                    this.leftElement = node;\n                    modified = true;\n                }\n                else if (node === this.leftElement) {\n                    this.pageLeft = Number.MAX_VALUE;\n                    this.findLeft(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageTop !== this.childTop || node !== this.topElement) {\n                if (this.pageTop >= this.childTop) {\n                    this.pageTop = this.childTop;\n                    this.topElement = node;\n                    modified = true;\n                }\n                else if (node === this.topElement) {\n                    this.pageTop = Number.MAX_VALUE;\n                    this.findTop(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageBottom !== this.childBottom || node !== this.bottomElement) {\n                if (this.pageBottom <= this.childBottom) {\n                    modified = true;\n                    this.pageBottom = this.childBottom;\n                    this.bottomElement = node;\n                }\n                else if (node === this.bottomElement) {\n                    this.pageBottom = -Number.MAX_VALUE;\n                    this.findBottom(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageRight !== this.childRight || node !== this.rightElement) {\n                if (this.pageRight <= this.childRight) {\n                    this.pageRight = this.childRight;\n                    this.rightElement = node;\n                    modified = true;\n                }\n                else if (node === this.rightElement) {\n                    this.pageRight = -Number.MAX_VALUE;\n                    this.findRight(this.parentQuad);\n                    modified = true;\n                }\n            }\n            return modified;\n        }\n        this.setCurrentNode(null);\n        return false;\n    };\n    SpatialSearch.prototype.isWithinPageBounds = function (node) {\n        if (node.left >= this.pageLeft && node.right <= this.pageRight && node.top >= this.pageTop\n            && node.bottom <= this.pageBottom) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.findQuads = function (region) {\n        var quads = [];\n        this.parentQuad.findQuads(region, quads);\n        return quads;\n    };\n    /** @private */\n    SpatialSearch.prototype.findObjects = function (region) {\n        var quads = this.findQuads(region);\n        var objects = [];\n        for (var _i = 0, quads_1 = quads; _i < quads_1.length; _i++) {\n            var quad = quads_1[_i];\n            for (var _a = 0, _b = quad.objects; _a < _b.length; _a++) {\n                var obj = _b[_a];\n                if (obj.outerBounds.intersects(region)) {\n                    objects.push(this.objectTable[obj.id]);\n                }\n            }\n        }\n        return objects;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateBounds = function (node) {\n        var modified = false;\n        if (node === this.topElement) {\n            this.pageTop = Number.MAX_VALUE;\n            this.topElement = null;\n            this.findTop(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.leftElement) {\n            this.pageLeft = Number.MAX_VALUE;\n            this.leftElement = null;\n            this.findLeft(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.rightElement) {\n            this.pageRight = -Number.MAX_VALUE;\n            this.rightElement = null;\n            this.findRight(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.bottomElement) {\n            this.pageBottom = -Number.MAX_VALUE;\n            this.bottomElement = null;\n            this.findBottom(this.parentQuad);\n            modified = true;\n        }\n        return modified;\n    };\n    SpatialSearch.prototype.findBottom = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.third || quad.fourth) {\n                if (quad.third) {\n                    this.findBottom(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findBottom(quad.fourth);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findBottom(quad.second);\n                }\n                if (quad.first) {\n                    this.findBottom(quad.first);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageBottom <= node.outerBounds.bottom) {\n                this.pageBottom = node.outerBounds.bottom;\n                this.bottomElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findRight = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.second || quad.fourth) {\n                if (quad.second) {\n                    this.findRight(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findRight(quad.fourth);\n                }\n            }\n            else {\n                if (quad.first) {\n                    this.findRight(quad.first);\n                }\n                if (quad.third) {\n                    this.findRight(quad.third);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageRight <= node.outerBounds.right) {\n                this.pageRight = node.outerBounds.right;\n                this.rightElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findLeft = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.third) {\n                if (quad.first) {\n                    this.findLeft(quad.first);\n                }\n                if (quad.third) {\n                    this.findLeft(quad.third);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findLeft(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findLeft(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageLeft >= node.outerBounds.left) {\n                this.pageLeft = node.outerBounds.left;\n                this.leftElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findTop = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.second) {\n                if (quad.first) {\n                    this.findTop(quad.first);\n                }\n                if (quad.second) {\n                    this.findTop(quad.second);\n                }\n            }\n            else {\n                if (quad.third) {\n                    this.findTop(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findTop(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageTop >= node.outerBounds.top) {\n                this.pageTop = node.outerBounds.top;\n                this.topElement = node;\n            }\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.setCurrentNode = function (node) {\n        this.childNode = node;\n        if (node) {\n            var r = node.outerBounds;\n            this.childLeft = Number(r.left);\n            this.childTop = Number(r.top);\n            this.childRight = Number(r.right);\n            this.childBottom = Number(r.bottom);\n        }\n        else {\n            this.childLeft = Number.MAX_VALUE;\n            this.childTop = Number.MAX_VALUE;\n            this.childRight = -Number.MAX_VALUE;\n            this.childBottom = -Number.MAX_VALUE;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.getPageBounds = function (originX, originY) {\n        if (this.pageLeft === Number.MAX_VALUE) {\n            return new Rect(0, 0, 0, 0);\n        }\n        var left = originX !== undefined ? Math.min(this.pageLeft, 0) : this.pageLeft;\n        var top = originY !== undefined ? Math.min(this.pageTop, 0) : this.pageTop;\n        return new Rect(Math.round(left), Math.round(top), Math.round(this.pageRight - left), Math.round(this.pageBottom - top));\n    };\n    /** @private */\n    SpatialSearch.prototype.getQuad = function (node) {\n        return this.quadTable[node.id];\n    };\n    return SpatialSearch;\n}());\nexport { SpatialSearch };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Defines the serialization settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * serializationSettings: { preventDefaults: true },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar SerializationSettings = /** @class */ (function (_super) {\n    __extends(SerializationSettings, _super);\n    function SerializationSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SerializationSettings.prototype, \"preventDefaults\", void 0);\n    return SerializationSettings;\n}(ChildProperty));\nexport { SerializationSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, Collection, EventHandler, L10n, Droppable, remove, Ajax, isBlazor } from '@syncfusion/ej2-base';\nimport { Browser, Event } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { SvgRenderer } from './rendering/svg-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { PageSettings, ScrollSettings } from './diagram/page-settings';\nimport { ServiceLocator } from './objects/service';\nimport { Container } from './core/containers/container';\nimport { Node, BpmnShape } from './objects/node';\nimport { flipConnector, updatePortEdges, alignElement } from './utility/diagram-util';\nimport { Connector } from './objects/connector';\nimport { SnapSettings } from './diagram/grid-lines';\nimport { RulerSettings } from './diagram/ruler-settings';\nimport { removeRulerElements, updateRuler, getRulerSize } from './ruler/ruler';\nimport { renderRuler, renderOverlapElement } from './ruler/ruler';\nimport { Size } from './primitives/size';\nimport { Keys, KeyModifiers, DiagramTools, AnnotationConstraints, NodeConstraints, RendererAction } from './enum/enum';\nimport { DiagramConstraints, SelectorConstraints, PortVisibility, DiagramEvent } from './enum/enum';\nimport { DiagramAction, ThumbsConstraints } from './enum/enum';\nimport { RealAction, ElementAction, PortConstraints } from './enum/enum';\nimport { PathElement } from './core/elements/path-element';\nimport { TextElement } from './core/elements/text-element';\nimport { updateStyle, removeItem, updateConnector, updateShape, setUMLActivityDefaults, findNodeByName } from './utility/diagram-util';\nimport { setSwimLaneDefaults } from './utility/diagram-util';\nimport { checkPortRestriction, serialize, deserialize, updateHyperlink, getObjectType, removeGradient } from './utility/diagram-util';\nimport { Rect } from './primitives/rect';\nimport { getPortShape } from './objects/dictionary/common';\nimport { ShapeAnnotation, PathAnnotation } from './objects/annotation';\nimport { Canvas } from './core/containers/canvas';\nimport { GridPanel, ColumnDefinition } from './core/containers/grid';\nimport { DataSource } from './diagram/data-source';\nimport { Layout } from './layout/layout-base';\nimport { Selector } from './interaction/selector';\nimport { DiagramEventHandler } from './interaction/event-handlers';\nimport { CommandHandler } from './interaction/command-manager';\nimport { DiagramScroller } from './interaction/scroller';\nimport { isSelected } from './interaction/actions';\nimport { SpatialSearch } from './interaction/spatial-search/spatial-search';\nimport { setAttributeSvg, setAttributeHtml, measureHtmlText, removeElement, createMeasureElements, getDomIndex } from './utility/dom-util';\nimport { getDiagramElement, getScrollerWidth, getHTMLLayer } from './utility/dom-util';\nimport { getBackgroundLayer, createHtmlElement, createSvgElement, getNativeLayerSvg } from './utility/dom-util';\nimport { getPortLayerSvg, getDiagramLayerSvg } from './utility/dom-util';\nimport { getAdornerLayerSvg, getSelectorElement, getGridLayerSvg, getBackgroundLayerSvg } from './utility/dom-util';\nimport { CommandManager, ContextMenuSettings } from './diagram/keyboard-commands';\nimport { canDelete, canInConnect, canOutConnect, canRotate, canVitualize, canDrawThumbs } from './utility/constraints-util';\nimport { canPortInConnect, canPortOutConnect } from './utility/constraints-util';\nimport { canResize, canSingleSelect, canZoomPan, canZoomTextEdit } from './utility/constraints-util';\nimport { canDragSourceEnd, canDragTargetEnd, canDragSegmentThumb, enableReadOnly, canMove } from './utility/constraints-util';\nimport { findAnnotation, arrangeChild, getInOutConnectPorts, removeChildNodes } from './utility/diagram-util';\nimport { randomId, cloneObject, extendObject, getFunction, getBounds } from './utility/base-util';\nimport { DiagramTooltip, initTooltip } from './objects/tooltip';\nimport { PointPort } from './objects/port';\nimport { canShadow } from './utility/constraints-util';\nimport { Layer } from './diagram/layer';\nimport { DiagramNativeElement } from './core/elements/native-element';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { canAllowDrop } from './utility/constraints-util';\nimport { checkParentAsContainer, addChildToContainer, updateLaneBoundsAfterAddChild } from './interaction/container-interaction';\nimport { getConnectors, updateConnectorsProperties, phaseDefine } from './utility/swim-lane-util';\nimport { swimLaneMeasureAndArrange } from './utility/swim-lane-util';\nimport { arrangeChildNodesInSwimLane, updateHeaderMaxWidth, updatePhaseMaxWidth } from './utility/swim-lane-util';\nimport { addLane, addPhase } from './utility/swim-lane-util';\nimport { SerializationSettings } from './diagram/serialization-settings';\nimport { removeSwimLane, removeLane, removePhase, removeLaneChildNode } from './utility/swim-lane-util';\nimport { RowDefinition } from './core/containers/grid';\n/**\n * Represents the Diagram control\n * ```html\n * <div id='diagram'/>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Diagram = /** @class */ (function (_super) {\n    __extends(Diagram, _super);\n    /**\n     * Constructor for creating the widget\n     */\n    function Diagram(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.version = 17.1;\n        /** @private */\n        _this.connectorTable = {};\n        /** @private */\n        _this.groupTable = {};\n        /** @private */\n        _this.activeLabel = { id: '', parentId: '', isGroup: false, text: undefined };\n        /** @private */\n        _this.textEditing = false;\n        /** @private */\n        _this.isTriggerEvent = false;\n        /** @private */\n        _this.preventNodesUpdate = false;\n        /** @private */\n        _this.preventConnectorsUpdate = false;\n        /** @private */\n        _this.selectionConnectorsList = [];\n        /** @private */\n        _this.deleteVirtualObject = false;\n        _this.crudDeleteNodes = [];\n        /** @private */\n        _this.selectedObject = { helperObject: undefined, actualObject: undefined };\n        _this.renderTimer = null;\n        var child;\n        var node;\n        for (var i = 0; options && options.nodes && i < options.nodes.length; i++) {\n            child = options.nodes[i];\n            node = _this.nodes[i];\n            if (child.children && child.children.length > 0) {\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'transparent';\n                }\n                if (!child.style || !child.style.strokeColor) {\n                    node.style.strokeColor = 'transparent';\n                }\n            }\n            if (child.shape && child.shape.type === 'UmlActivity') {\n                setUMLActivityDefaults(child, node);\n            }\n            if (child.shape && child.shape.type === 'SwimLane') {\n                setSwimLaneDefaults(child, node);\n            }\n        }\n        return _this;\n    }\n    Diagram.prototype.clearCollection = function (isConnector) {\n        var collection = [];\n        var obj;\n        for (var _i = 0, _a = Object.keys(this.nameTable); _i < _a.length; _i++) {\n            var key = _a[_i];\n            obj = this.nameTable[key];\n            if (obj && ((isConnector && obj instanceof Connector) || (!isConnector && obj instanceof Node))) {\n                collection.push(obj);\n            }\n        }\n        this.clearObjects(collection);\n    };\n    /**\n     * Updates the diagram control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    /* tslint:disable */\n    Diagram.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // Model Changed\n        var newValue;\n        var oldValue;\n        var isPropertyChanged = true;\n        var refreshLayout = false;\n        var refereshColelction = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                case 'height':\n                    this.element.style.width = this.getSizeValue(this.width);\n                    this.element.style.height = this.getSizeValue(this.height);\n                    this.eventHandler.updateViewPortSize(this.element);\n                    for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                        var view = _c[_b];\n                        var temp = this.views[view];\n                        if (!(temp instanceof Diagram)) {\n                            temp.updateView(temp);\n                        }\n                    }\n                    break;\n                case 'nodes':\n                    if (newProp.nodes.length > 0 && oldProp.nodes.length === 0) {\n                        this.clearCollection();\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _d = 0, _e = Object.keys(newProp.nodes); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var index = Number(key);\n                            var actualObject = this.nodes[index];\n                            var changedProp = newProp.nodes[index];\n                            refreshLayout = refreshLayout || changedProp.excludeFromLayout !== undefined;\n                            this.nodePropertyChange(actualObject, oldProp.nodes[index], changedProp, undefined, true, true);\n                            var args = {\n                                element: actualObject, cause: this.diagramActions,\n                                oldValue: oldProp.nodes[index],\n                                newValue: newProp.nodes[index]\n                            };\n                            this.triggerEvent(DiagramEvent.propertyChange, args);\n                            if (isPropertyChanged) {\n                                isPropertyChanged = false;\n                            }\n                        }\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'connectors':\n                    var oldObject = void 0;\n                    if (newProp.connectors.length > 0 && oldProp.connectors.length === 0) {\n                        this.clearCollection(true);\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _f = 0, _g = Object.keys(newProp.connectors); _f < _g.length; _f++) {\n                            var key = _g[_f];\n                            var index = Number(key);\n                            var actualObject = this.connectors[index];\n                            var changedProp = newProp.connectors[index];\n                            this.connectorPropertyChange(actualObject, oldProp.connectors[index], changedProp, true, true);\n                            var args = {\n                                element: actualObject, cause: this.diagramActions,\n                                oldValue: oldProp.connectors[index],\n                                newValue: newProp.connectors[index]\n                            };\n                            this.triggerEvent(DiagramEvent.propertyChange, args);\n                            if (actualObject && actualObject.parentId && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier') {\n                                this.updateConnectorEdges(this.nameTable[actualObject.parentId] || actualObject);\n                            }\n                            if (isPropertyChanged) {\n                                isPropertyChanged = false;\n                            }\n                        }\n                        this.updateBridging();\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'bridgeDirection':\n                    this.updateBridging();\n                    if (this.mode === 'Canvas') {\n                        this.refreshDiagramLayer();\n                    }\n                    break;\n                case 'backgroundColor':\n                    this.intOffPageBackground();\n                    break;\n                case 'pageSettings':\n                    this.validatePageSize();\n                    this.updatePage();\n                    break;\n                case 'selectedItems':\n                    if (newProp.selectedItems.userHandles && this.selectedItems.wrapper && this.selectedItems.userHandles) {\n                        if (this.selectedItems.userHandles.length > 0) {\n                            this.renderSelector(true);\n                            break;\n                        }\n                    }\n                    if (newProp.selectedItems.constraints) {\n                        this.renderSelector(true);\n                        break;\n                    }\n                    break;\n                case 'snapSettings':\n                    this.updateSnapSettings(newProp);\n                    break;\n                case 'commandManager':\n                    this.initCommands();\n                    break;\n                case 'layout':\n                    refreshLayout = true;\n                    break;\n                case 'dataSourceSettings':\n                    this.clear();\n                    this.initObjects();\n                    if (this.layout.type === 'None') {\n                        refereshColelction = true;\n                    }\n                    else {\n                        refreshLayout = true;\n                    }\n                    break;\n                case 'tooltip':\n                    initTooltip(this);\n                    break;\n                case 'rulerSettings':\n                    this.updateRulerSettings(newProp);\n                    break;\n                case 'layers':\n                    this.updateLayer(newProp);\n                    break;\n                case 'scrollSettings':\n                    this.updateScrollSettings(newProp);\n                    break;\n                case 'locale':\n                    this.realActions |= RealAction.PreventDataInit;\n                    _super.prototype.refresh.call(this);\n                    this.realActions &= ~RealAction.PreventDataInit;\n                    break;\n                case 'contextMenuSettings':\n                    if (newProp.contextMenuSettings.showCustomMenuOnly !== undefined) {\n                        this.contextMenuSettings.showCustomMenuOnly = newProp.contextMenuSettings.showCustomMenuOnly;\n                    }\n                    if (newProp.contextMenuSettings.show !== undefined) {\n                        this.contextMenuSettings.show = newProp.contextMenuSettings.show;\n                    }\n                    if (newProp.contextMenuSettings.items) {\n                        var items = newProp.contextMenuSettings.items;\n                        for (var _h = 0, _j = Object.keys(items); _h < _j.length; _h++) {\n                            var key = _j[_h];\n                            var index = Number(key);\n                            this.contextMenuSettings.items[index] = items[index];\n                        }\n                    }\n                    break;\n                case 'serializationSettings':\n                    if (newProp.serializationSettings.preventDefaults !== undefined) {\n                        this.serializationSettings.preventDefaults = newProp.serializationSettings.preventDefaults;\n                    }\n                    break;\n            }\n        }\n        if (refreshLayout) {\n            this.doLayout();\n        }\n        if (isPropertyChanged) {\n            var args = { element: this, cause: this.diagramActions, oldValue: oldProp, newValue: newProp };\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n        if (!refereshColelction && (this.canLogChange()) && (this.modelChanged(newProp, oldProp))) {\n            var entry = { type: 'PropertyChanged', undoObject: oldProp, redoObject: newProp, category: 'Internal' };\n            this.addHistoryEntry(entry);\n        }\n        this.resetDiagramActions();\n        if (refereshColelction) {\n            this.initObjects(true);\n            this.refreshDiagramLayer();\n        }\n        this.resetTemplate();\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateSnapSettings = function (newProp) {\n        if (newProp.snapSettings.constraints !== undefined || newProp.snapSettings.horizontalGridlines ||\n            newProp.snapSettings.verticalGridlines) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n    };\n    Diagram.prototype.updateRulerSettings = function (newProp) {\n        if (newProp.rulerSettings.dynamicGrid !== undefined) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n        if (newProp.rulerSettings.showRulers !== undefined) {\n            this.intOffPageBackground();\n            this.scroller.setSize();\n            this.renderRulers();\n        }\n        else if (newProp.rulerSettings.horizontalRuler !== undefined ||\n            newProp.rulerSettings.verticalRuler !== undefined) {\n            if (newProp.rulerSettings.horizontalRuler.thickness !== undefined ||\n                newProp.rulerSettings.verticalRuler.thickness !== undefined) {\n                removeRulerElements(this);\n                this.intOffPageBackground();\n                this.scroller.setSize();\n                this.renderRulers();\n            }\n            else {\n                updateRuler(this);\n            }\n        }\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Diagram.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Diagram.prototype.preRender = function () {\n        this.initializePrivateVariables();\n        this.isProtectedOnChange = true;\n        this.serviceLocator = new ServiceLocator;\n        this.initializeServices();\n        this.setCulture();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        this.initDiagram();\n        this.initViews();\n        this.unWireEvents();\n        this.wireEvents();\n        this.element.classList.add('e-diagram');\n    };\n    Diagram.prototype.initializePrivateVariables = function () {\n        this.defaultLocale = {\n            Copy: 'Copy',\n            Cut: 'Cut',\n            Paste: 'Paste',\n            Undo: 'Undo',\n            Redo: 'Redo',\n            SelectAll: 'Select All',\n            Grouping: 'Grouping',\n            Group: 'Group',\n            UnGroup: 'Un Group',\n            Order: 'Order',\n            BringToFront: 'Bring To Front',\n            MoveForward: 'Move Forward',\n            SendToBack: 'Send To Back',\n            SendBackward: 'Send Backward'\n        };\n        this.layerZIndex = -1;\n        this.layerZIndexTable = {};\n        this.nameTable = {};\n        this.pathTable = {};\n        this.groupTable = {};\n        this.commands = {};\n        if (!this.isLoading) {\n            this.views = [];\n        }\n        this.commandHandler = new CommandHandler(this);\n        this.eventHandler = new DiagramEventHandler(this, this.commandHandler);\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.scroller = new DiagramScroller(this);\n    };\n    Diagram.prototype.initializeServices = function () {\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    };\n    /**\n     * Method to set culture for chart\n     */\n    Diagram.prototype.setCulture = function () {\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n    };\n    /**\n     * Renders the diagram control with nodes and connectors\n     */\n    Diagram.prototype.render = function () {\n        var collapsedNode = [];\n        if (this.dataSourceSettings.crudAction.read) {\n            this.renderInitialCrud();\n        }\n        this.initHistory();\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), this.mode === 'SVG');\n        this.initLayers();\n        this.initializeDiagramLayers();\n        this.diagramRenderer.setLayers();\n        this.initObjects(true);\n        this.doLayout();\n        this.validatePageSize();\n        this.renderPageBreaks();\n        this.diagramRenderer.renderSvgGridlines(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.commandHandler.initSelectorWrapper();\n        /**\n         * Used to render context menu\n         */\n        this.notify('initial-load', {});\n        /**\n         * Used to load context menu\n         */\n        this.trigger('load');\n        this.scroller.setSize();\n        this.scroller.updateScrollOffsets();\n        this.refreshDiagramLayer();\n        if (this.scrollSettings.verticalOffset > 0 || this.scrollSettings.horizontalOffset > 0) {\n            this.updateScrollOffset();\n        }\n        /**\n         * Used to end the context menu rendering\n         */\n        if (Browser.isDevice) {\n            this.tool = DiagramTools.ZoomPan | DiagramTools.SingleSelect;\n        }\n        this.notify('initial-end', {});\n        this.isProtectedOnChange = false;\n        this.tooltipObject = initTooltip(this);\n        this.diagramActions = DiagramAction.Render;\n        var nodes = this.nodes;\n        for (var i = 0; i < nodes.length; i++) {\n            if (!nodes[i].isExpanded) {\n                collapsedNode.push(nodes[i]);\n            }\n        }\n        if (collapsedNode.length) {\n            for (var i = collapsedNode.length - 1; i >= 0; i--) {\n                this.commandHandler.expandNode(collapsedNode[i], this);\n            }\n        }\n        this.initCommands();\n        this.updateTemplate();\n        this.isLoading = false;\n        if (isBlazor()) {\n            this.tool = DiagramTools.ZoomPan;\n        }\n    };\n    Diagram.prototype.updateTemplate = function () {\n        var node;\n        var annotation;\n        var pathAnnotation;\n        for (var i = 0; i < this.nodes.length; i++) {\n            node = this.nodes[i];\n            annotation = node.annotations[0];\n            if (node.shape.type === 'HTML' || node.shape.type === 'Native') {\n                updateBlazorTemplate(this.element.id + 'content_diagram', 'Content', this.nodes[i].shape);\n            }\n            else if (annotation && annotation.template instanceof HTMLElement) {\n                updateBlazorTemplate(this.element.id + 'template_diagram', 'Template', annotation);\n            }\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            pathAnnotation = this.connectors[i].annotations[0];\n            if (pathAnnotation && pathAnnotation.template instanceof HTMLElement) {\n                updateBlazorTemplate(this.element.id + 'template_diagram', 'Template', pathAnnotation);\n            }\n        }\n    };\n    Diagram.prototype.resetTemplate = function () {\n        var htmlNode;\n        var templateAnnotation;\n        var path;\n        for (var i = 0; i < this.nodes.length; i++) {\n            htmlNode = this.nodes[i];\n            templateAnnotation = htmlNode.annotations[0];\n            if (htmlNode.shape.type === 'HTML' && htmlNode.shape.content instanceof HTMLElement) {\n                resetBlazorTemplate(this.element.id + 'content', 'Content');\n            }\n            else if (templateAnnotation && templateAnnotation.template instanceof HTMLElement) {\n                resetBlazorTemplate(this.element.id + 'template', 'Template');\n            }\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            path = this.connectors[i].annotations[0];\n            if (path && path.template instanceof HTMLElement) {\n                resetBlazorTemplate(this.element.id + 'template', 'Template');\n            }\n        }\n    };\n    Diagram.prototype.renderInitialCrud = function () {\n        var tempObj = this;\n        if (tempObj.dataSourceSettings.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                if (tempObj.dataSourceSettings.dataManager) {\n                    tempObj.dataSourceSettings.dataManager = JSON.parse(data);\n                }\n                else {\n                    tempObj.dataSourceSettings.dataSource = JSON.parse(data);\n                }\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n        if (tempObj.dataSourceSettings.connectionDataSource.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.connectionDataSource.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                tempObj.dataSourceSettings.connectionDataSource.dataManager = JSON.parse(data);\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n    };\n    /**\n     * Returns the module name of the diagram\n     */\n    Diagram.prototype.getModuleName = function () {\n        return 'diagram';\n    };\n    /**\n     * @private\n     * Returns the name of class Diagram\n     */\n    Diagram.prototype.getClassName = function () {\n        return 'Diagram';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    Diagram.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        modules.push({\n            member: 'Bridging',\n            args: []\n        });\n        modules.push({\n            member: 'ConnectorEditingTool',\n            args: []\n        });\n        if (this.constraints & DiagramConstraints.UndoRedo) {\n            modules.push({\n                member: 'UndoRedo',\n                args: []\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.enableAnimation) {\n            modules.push({\n                member: 'LayoutAnimate',\n                args: []\n            });\n        }\n        if (this.snapSettings.constraints) {\n            modules.push({\n                member: 'Snapping',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'PrintandExport',\n            args: [this]\n        });\n        if (this.contextMenuSettings.show) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree') {\n            modules.push({\n                member: 'OrganizationalChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'ComplexHierarchicalTree') {\n            modules.push({\n                member: 'ComplexHierarchicalTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'MindMap') {\n            modules.push({\n                member: 'MindMapChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'RadialTree') {\n            modules.push({\n                member: 'RadialTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'SymmetricalLayout') {\n            modules.push({\n                member: 'SymmetricalLayout',\n                args: []\n            });\n        }\n        if (this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource ||\n            this.dataSourceSettings.crudAction.read || this.dataSourceSettings.connectionDataSource.crudAction.read) {\n            modules.push({\n                member: 'DataBinding',\n                args: []\n            });\n        }\n        return modules;\n    };\n    /**\n     * Destroys the diagram control\n     */\n    Diagram.prototype.destroy = function () {\n        clearInterval(this.renderTimer);\n        this.renderTimer = null;\n        if (this.hRuler && this.vRuler) {\n            this.hRuler.destroy();\n            this.vRuler.destroy();\n        }\n        this.tooltipObject.destroy();\n        this.droppable.destroy();\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-diagram');\n            var tooltipelement = document.getElementsByClassName('e-tooltip-wrap');\n            while (tooltipelement.length > 0) {\n                tooltipelement[0].parentNode.removeChild(tooltipelement[0]);\n            }\n            var content = document.getElementById(this.element.id + 'content');\n            if (content) {\n                this.element.removeChild(content);\n            }\n            var measureElement = 'measureElement';\n            if (window[measureElement]) {\n                window[measureElement].usageCount -= 1;\n                if (window[measureElement].usageCount === 0) {\n                    window[measureElement].parentNode.removeChild(window[measureElement]);\n                    window[measureElement] = null;\n                }\n            }\n        }\n    };\n    /**\n     * Wires the mouse events with diagram control\n     */\n    Diagram.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.diagramCanvas, startEvent, this.eventHandler.mouseDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'keydown', this.eventHandler.keyDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'scroll', this.eventHandler.scrolled, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel, this.eventHandler);\n        EventHandler.add(window, 'resize', this.eventHandler.windowResize, this.eventHandler);\n        this.initDroppables();\n    };\n    /**\n     * Unwires the mouse events from diagram control\n     */\n    Diagram.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stopEvent = Browser.touchEndEvent;\n        EventHandler.remove(this.diagramCanvas, startEvent, this.eventHandler.mouseDown);\n        EventHandler.remove(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove);\n        EventHandler.remove(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp);\n        EventHandler.remove(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave);\n        EventHandler.remove(this.diagramCanvas, 'keydown', this.eventHandler.keyDown);\n        EventHandler.remove(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick);\n        EventHandler.remove(this.diagramCanvas, 'scroll', this.eventHandler.scrolled);\n        EventHandler.remove(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel);\n        EventHandler.remove(window, 'resize', this.eventHandler.windowResize);\n    };\n    //public methods - start region\n    /**\n     * Selects the given collection of objects\n     * @param objects Defines the collection of nodes and connectors to be selected\n     * @param multipleSelection Defines whether the existing selection has to be cleared or not\n     */\n    Diagram.prototype.select = function (objects, multipleSelection) {\n        if (objects != null) {\n            this.commandHandler.selectObjects(objects, multipleSelection);\n        }\n    };\n    /**\n     * Selects the all the objects.\n     */\n    Diagram.prototype.selectAll = function () {\n        var selectedItems = [];\n        selectedItems = this.getObjectsOfLayer(this.activeLayer.objects);\n        this.select(selectedItems);\n    };\n    /**\n     * Removes the given object from selection list\n     * @param obj Defines the object to be unselected\n     */\n    Diagram.prototype.unSelect = function (obj) {\n        if (obj && isSelected(this, obj)) {\n            this.commandHandler.unSelect(obj);\n        }\n    };\n    /**\n     * Removes all elements from the selection list\n     */\n    Diagram.prototype.clearSelection = function () {\n        this.commandHandler.clearSelection(true);\n    };\n    /**\n     * Update the diagram clipboard dimension\n     */\n    Diagram.prototype.updateViewPort = function () {\n        this.eventHandler.updateViewPortSize(this.element);\n    };\n    Diagram.prototype.cutCommand = function () {\n        this.cut();\n    };\n    /**\n     * Removes the selected nodes and connectors from diagram and moves them to diagram clipboard\n     */\n    Diagram.prototype.cut = function () {\n        this.commandHandler.cut();\n    };\n    /**\n     * Add a process into the sub-process\n     */\n    Diagram.prototype.addProcess = function (process, parentId) {\n        if (this.bpmnModule) {\n            this.bpmnModule.addProcess(process, parentId, this);\n        }\n    };\n    /**\n     * Remove a process from the sub-process\n     */\n    Diagram.prototype.removeProcess = function (id) {\n        if (this.bpmnModule) {\n            this.bpmnModule.removeProcess(id, this);\n        }\n    };\n    Diagram.prototype.pasteCommand = function () {\n        this.paste();\n    };\n    /**\n     * Adds the given objects/ the objects in the diagram clipboard to diagram control\n     * @param obj Defines the objects to be added to diagram\n     */\n    Diagram.prototype.paste = function (obj) {\n        this.commandHandler.paste(obj);\n    };\n    /**\n     * fit the diagram to the page with respect to mode and region\n     */\n    Diagram.prototype.fitToPage = function (options) {\n        this.scroller.fitToPage(options);\n    };\n    /**\n     * bring the specified bounds into the viewport\n     */\n    Diagram.prototype.bringIntoView = function (bound) {\n        this.scroller.bringIntoView(bound);\n    };\n    /**\n     * bring the specified bounds to the center of the viewport\n     */\n    Diagram.prototype.bringToCenter = function (bound) {\n        this.scroller.bringToCenter(bound);\n    };\n    Diagram.prototype.copyCommand = function () {\n        this.copy();\n    };\n    /**\n     * Copies the selected nodes and connectors to diagram clipboard\n     */\n    Diagram.prototype.copy = function () {\n        var obj = this.commandHandler.copy();\n        return obj;\n    };\n    /**\n     * Group the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.group = function () {\n        this.commandHandler.group();\n    };\n    /**\n     * UnGroup the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.unGroup = function () {\n        this.commandHandler.unGroup();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendToBack = function () {\n        this.commandHandler.sendToBack();\n    };\n    /**\n     * set the active layer\n     *  @param layerName defines the name of the layer which is to be active layer\n     */\n    Diagram.prototype.setActiveLayer = function (layerName) {\n        var layer = this.commandHandler.getLayer(layerName);\n        this.activeLayer = layer;\n    };\n    /**\n     * add the layer into diagram\n     * @param layer defines the layer model which is to be added\n     * @param layerObject defines the object of the layer\n     */\n    Diagram.prototype.addLayer = function (layer, layerObject) {\n        this.commandHandler.addLayer(layer, layerObject);\n    };\n    /**\n     * remove the layer from diagram\n     * @param layerId define the id of the layer\n     */\n    Diagram.prototype.removeLayer = function (layerId) {\n        this.commandHandler.removeLayer(layerId);\n    };\n    /**\n     * move objects from the layer to another layer from diagram\n     * @param objects define the objects id of string array\n     */\n    Diagram.prototype.moveObjects = function (objects, targetLayer) {\n        this.commandHandler.moveObjects(objects, targetLayer);\n    };\n    /**\n     * move the layer backward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.sendLayerBackward = function (layerName) {\n        this.commandHandler.sendLayerBackward(layerName);\n    };\n    /**\n     * move the layer forward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.bringLayerForward = function (layerName) {\n        this.commandHandler.bringLayerForward(layerName);\n    };\n    /**\n     * clone a layer with its object\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.cloneLayer = function (layerName) {\n        this.commandHandler.cloneLayer(layerName);\n    };\n    /**\n     * bring the selected nodes or connectors to front\n     */\n    Diagram.prototype.bringToFront = function () {\n        this.commandHandler.bringToFront();\n    };\n    /**\n     * send the selected nodes or connectors forward\n     */\n    Diagram.prototype.moveForward = function () {\n        this.commandHandler.sendForward();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendBackward = function () {\n        this.commandHandler.sendBackward();\n    };\n    /**\n     * gets the node or connector having the given name\n     */\n    Diagram.prototype.getObject = function (name) {\n        return this.nameTable[name];\n    };\n    /**\n     * gets the active layer back\n     */\n    Diagram.prototype.getActiveLayer = function () {\n        return this.activeLayer;\n    };\n    Diagram.prototype.nudgeCommand = function (direction, x, y) {\n        if (typeof direction !== 'object') {\n            this.nudge(direction);\n        }\n    };\n    /**\n     * Moves the selected objects towards the given direction\n     * @param direction Defines the direction by which the objects have to be moved\n     * @param x Defines the distance by which the selected objects have to be horizontally moved\n     * @param y Defines the distance by which the selected objects have to be vertically moved\n     */\n    Diagram.prototype.nudge = function (direction, x, y) {\n        var tx = 0;\n        var ty = 0;\n        var negativeDirection;\n        if (direction === 'Left' || direction === 'Right') {\n            negativeDirection = (direction === 'Left');\n            tx = (negativeDirection ? -1 : 1) * (x ? x : 1);\n        }\n        else {\n            negativeDirection = (direction === 'Up');\n            ty = (negativeDirection ? -1 : 1) * (y ? y : 1);\n        }\n        var obj = this.selectedItems;\n        var annotation = this.selectedItems.wrapper.children[0];\n        if (annotation instanceof TextElement) {\n            this.commandHandler.labelDrag(obj.nodes[0], annotation, tx, ty);\n        }\n        else {\n            this.drag(obj, tx, ty);\n        }\n        this.refreshCanvasLayers();\n    };\n    /**\n     * Drags the given object by the specified pixels\n     * @param obj Defines the nodes/connectors to be dragged\n     * @param tx Defines the distance by which the given objects have to be horizontally moved\n     * @param ty Defines the distance by which the given objects have to be vertically moved\n     */\n    Diagram.prototype.drag = function (obj, tx, ty) {\n        if (this.bpmnModule && (obj instanceof Node)) {\n            var updated = this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n            if (updated) {\n                return;\n            }\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = true;\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    this.drag(node, tx, ty);\n                    if (node.parentId) {\n                        var parent_1 = this.nameTable[node.parentId];\n                        if (parent_1.isLane) {\n                            var swimlane = this.nameTable[parent_1.parentId];\n                            updateLaneBoundsAfterAddChild(parent_1, swimlane, node, this);\n                        }\n                    }\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.drag(conn, tx, ty);\n                    if (this.selectionConnectorsList.indexOf(conn) === -1) {\n                        this.selectionConnectorsList.push(conn);\n                    }\n                }\n            }\n            this.updateSelector();\n        }\n        else {\n            if (obj instanceof Node) {\n                if (this.bpmnModule) {\n                    this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n                }\n            }\n            this.commandHandler.drag(obj, tx, ty);\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = false;\n            for (var _d = 0, _e = this.selectionConnectorsList; _d < _e.length; _d++) {\n                var connectors = _e[_d];\n                this.updateConnectorProperties(this.nameTable[connectors.id]);\n                if (connectors.shape.type === 'Bpmn' && connectors.shape.sequence === 'Default') {\n                    this.commandHandler.updatePathElementOffset(connectors);\n                }\n            }\n            this.selectionConnectorsList = [];\n        }\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            this.updateSelector();\n        }\n    };\n    /**\n     * Scales the given objects by the given ratio\n     * @param obj Defines the objects to be resized\n     * @param sx Defines the ratio by which the objects have to be horizontally scaled\n     * @param sy Defines the ratio by which the objects have to be vertically scaled\n     * @param pivot Defines the reference point with respect to which the objects will be resized\n     */\n    Diagram.prototype.scale = function (obj, sx, sy, pivot) {\n        var checkBoundaryConstraints = true;\n        if (obj instanceof Selector) {\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    checkBoundaryConstraints = this.commandHandler.scale(node, sx, sy, pivot, obj);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.commandHandler.scale(conn, sx, sy, pivot, obj);\n                }\n            }\n            this.updateSelector();\n            this.refreshCanvasLayers();\n        }\n        else {\n            this.commandHandler.scale(obj, sx, sy, pivot, (obj.children ? obj : undefined));\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Rotates the given nodes/connectors by the given angle\n     * @param obj Defines the objects to be rotated\n     * @param angle Defines the angle by which the objects have to be rotated\n     * @param pivot Defines the reference point with reference to which the objects have to be rotated\n     */\n    Diagram.prototype.rotate = function (obj, angle, pivot) {\n        var checkBoundaryConstraints;\n        if (obj) {\n            pivot = pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY };\n            if (obj instanceof Selector) {\n                obj.rotateAngle += angle;\n                obj.wrapper.rotateAngle += angle;\n                var bounds = getBounds(obj.wrapper);\n                checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bounds);\n                if (!checkBoundaryConstraints) {\n                    obj.rotateAngle -= angle;\n                    obj.wrapper.rotateAngle -= angle;\n                    return checkBoundaryConstraints;\n                }\n                var objects = [];\n                objects = objects.concat(obj.nodes);\n                objects = objects.concat(obj.connectors);\n                this.commandHandler.rotateObjects(obj, objects, angle, pivot);\n            }\n            else {\n                this.commandHandler.rotateObjects(obj, [obj], angle, pivot);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Moves the source point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragSourceEnd = function (obj, tx, ty) {\n        this.commandHandler.dragSourceEnd(obj, tx, ty);\n    };\n    /**\n     * Moves the target point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragTargetEnd = function (obj, tx, ty) {\n        this.commandHandler.dragTargetEnd(obj, tx, ty);\n    };\n    /**\n     * Finds all the objects that is under the given mouse position\n     * @param position Defines the position, the objects under which has to be found\n     * @param source Defines the object, the objects under which has to be found\n     */\n    Diagram.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.eventHandler.findObjectsUnderMouse(position, source);\n    };\n    /**\n     * Finds the object that is under the given mouse position\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.eventHandler.findObjectUnderMouse(objects, action, inAction);\n    };\n    /**\n     * Finds the object that is under the given active object (Source)\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findTargetObjectUnderMouse = function (objects, action, inAction, position, source) {\n        return this.eventHandler.findTargetUnderMouse(objects, action, inAction, position, source);\n    };\n    /**\n     * Finds the child element of the given object at the given position\n     * @param obj Defines the object, the child element of which has to be found\n     * @param position Defines the position, the child element under which has to be found\n     */\n    Diagram.prototype.findElementUnderMouse = function (obj, position) {\n        return this.eventHandler.findElementUnderMouse(obj, position);\n    };\n    /**\n     * Defines the action to be done, when the mouse hovers the given element of the given object\n     * @param obj Defines the object under mouse\n     * @param wrapper Defines the target element of the object under mouse\n     * @param position Defines the current mouse position\n     * @private\n     */\n    Diagram.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return this.eventHandler.findActionToBeDone(obj, wrapper, position, target);\n    };\n    /**\n     * Returns the tool that handles the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getTool = function (action) {\n        var tool;\n        var getCustomTool = getFunction(this.getCustomTool);\n        if (getCustomTool) {\n            tool = getCustomTool(action);\n            if (tool) {\n                return tool;\n            }\n        }\n        return this.eventHandler.getTool(action);\n    };\n    /**\n     * Defines the cursor that corresponds to the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getCursor = function (action, active) {\n        var cursor;\n        var getCustomCursor = getFunction(this.getCustomCursor);\n        if (getCustomCursor) {\n            cursor = getCustomCursor(action, active);\n            if (cursor) {\n                return cursor;\n            }\n        }\n        return this.eventHandler.getCursor(action);\n    };\n    /**\n     * Initializes the undo redo actions\n     * @private\n     */\n    Diagram.prototype.initHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.initHistory(this);\n        }\n    };\n    /**\n     * Adds the given change in the diagram control to the track\n     * @param entry Defines the entry/information about a change in diagram\n     */\n    Diagram.prototype.addHistoryEntry = function (entry) {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo) && !this.currentSymbol) {\n            if (entry.undoObject && entry.undoObject.id === 'helper') {\n                return;\n            }\n            this.undoRedoModule.addHistoryEntry(entry, this);\n            if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n                this.historyChangeTrigger(entry);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.historyChangeTrigger = function (entry) {\n        var change = {};\n        var oldValue = 'oldValue';\n        var newValue = 'newValue';\n        var type = 'type';\n        var source = [];\n        if (entry && entry.redoObject && ((entry.redoObject.nodes) instanceof Array) &&\n            ((entry.redoObject.connectors) instanceof Array)) {\n            source = entry.redoObject.nodes.concat(entry.redoObject.connectors);\n        }\n        else {\n            if (entry.redoObject) {\n                source.push(entry.redoObject);\n            }\n        }\n        change[type] = entry.type;\n        switch (entry.type) {\n            case 'PositionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n            case 'RotationChanged':\n                change[oldValue] = { rotateAngle: entry.undoObject.rotateAngle };\n                change[newValue] = { rotateAngle: entry.redoObject.rotateAngle };\n                break;\n            case 'SizeChanged':\n                change[oldValue] = {\n                    offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY,\n                    width: entry.undoObject.width, height: entry.undoObject.height\n                };\n                change[newValue] = {\n                    offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY,\n                    width: entry.redoObject.width, height: entry.redoObject.height\n                };\n                break;\n            case 'CollectionChanged':\n                change[entry.changeType] = source;\n                break;\n            case 'ConnectionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n        }\n        var arg = {\n            cause: entry.category, source: source, change: change\n        };\n        if (source.length) {\n            this.triggerEvent(DiagramEvent.historyChange, arg);\n        }\n    };\n    /**\n     * Starts grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.startGroupAction = function () {\n        var entry = { type: 'StartGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Closes grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.endGroupAction = function () {\n        var entry = { type: 'EndGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Restores the last action that is performed\n     */\n    Diagram.prototype.undo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.undo(this);\n        }\n    };\n    /**\n     * Restores the last undone action\n     */\n    Diagram.prototype.redo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.redo(this);\n        }\n    };\n    /**\n     * Aligns the group of objects to with reference to the first object in the group\n     * @param objects Defines the objects that have to be aligned\n     * @param option Defines the factor, by which the objects have to be aligned\n     */\n    Diagram.prototype.align = function (option, objects, type) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.align(objects, option, (type ? type : 'Object'));\n    };\n    /**\n     * Arranges the group of objects with equal intervals, but within the group of objects\n     * @param objects Defines the objects that have to be equally spaced\n     * @param option Defines the factor to distribute the shapes\n     */\n    Diagram.prototype.distribute = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.distribute(objects, option);\n    };\n    /**\n     * Scales the given objects to the size of the first object in the group\n     * @param objects Defines the collection of objects that have to be scaled\n     * @param option Defines whether the node has to be horizontally scaled, vertically scaled or both\n     */\n    Diagram.prototype.sameSize = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.sameSize(objects, option);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param factor Defines the factor by which the diagram is zoomed\n     * @param focusedPoint Defines the point with respect to which the diagram has to be zoomed\n     */\n    Diagram.prototype.zoom = function (factor, focusedPoint) {\n        this.scroller.zoom(factor, 0, 0, focusedPoint);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param options used to define the zoom factor, focus point and zoom type.\n     *\n     */\n    Diagram.prototype.zoomTo = function (options) {\n        var factor = options.zoomFactor ? options.zoomFactor : 0.2;\n        factor = options.type === 'ZoomOut' ? 1 / (1 + factor) : (1 + factor);\n        this.scroller.zoom(factor, 0, 0, options.focusPoint);\n    };\n    /**\n     * Pans the diagram control to the given horizontal and vertical offsets\n     * @param horizontalOffset Defines the horizontal distance to which the diagram has to be scrolled\n     * @param verticalOffset Defines the vertical distance to which the diagram has to be scrolled\n     */\n    Diagram.prototype.pan = function (horizontalOffset, verticalOffset, focusedPoint) {\n        this.scroller.zoom(1, horizontalOffset, verticalOffset, focusedPoint);\n    };\n    /**\n     * Resets the zoom and scroller offsets to default values\n     */\n    Diagram.prototype.reset = function () {\n        this.scroller.zoom(1 / this.scroller.currentZoom, -this.scroller.horizontalOffset, -this.scroller.verticalOffset, { x: 0, y: 0 });\n    };\n    /** @private */\n    Diagram.prototype.triggerEvent = function (eventName, args) {\n        if (args) {\n            this.updateEventValue(args);\n        }\n        this.trigger(DiagramEvent[eventName], args);\n    };\n    Diagram.prototype.updateEventValue = function (args) {\n        var element = args.element;\n        if (args.element && element instanceof Selector && (element.nodes.length + element.connectors.length === 1)) {\n            args.element = (element.nodes.length === 1) ? element.nodes[0] : element.connectors[0];\n        }\n    };\n    /**\n     * Shows tooltip for corresponding diagram object\n     * @param obj Defines the object for that tooltip has to be shown\n     */\n    Diagram.prototype.showTooltip = function (obj) {\n        var bounds = getBounds(obj.wrapper);\n        var position = { x: 0, y: 0 };\n        var content = obj.tooltip.content ?\n            obj.tooltip.content : 'X:' + Math.round(bounds.x) + ' ' + 'Y:' + Math.round(bounds.y);\n        if (obj && obj.tooltip.openOn === 'Custom') {\n            if (obj instanceof Node) {\n                position = { x: obj.offsetX + (obj.width / 2), y: obj.offsetY + (obj.height / 2) };\n            }\n            else {\n                position = { x: obj.targetPoint.x, y: obj.targetPoint.x };\n            }\n            this.commandHandler.showTooltip(obj, position, content, 'SelectTool', true);\n        }\n    };\n    /**\n     * hides tooltip for corresponding diagram object\n     * @param obj Defines the object for that tooltip has to be hide\n     */\n    Diagram.prototype.hideTooltip = function (obj) {\n        if (obj && obj.tooltip.openOn === 'Custom') {\n            this.tooltipObject.close();\n        }\n    };\n    /**\n     * Adds the given object to diagram control\n     * @param obj Defines the object that has to be added to diagram\n     */\n    Diagram.prototype.add = function (obj, group) {\n        var newObj;\n        var propertyChangeValue = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        if (obj) {\n            obj = cloneObject(obj);\n            var args = {\n                element: obj, cause: this.diagramActions, state: 'Changing', type: 'Addition', cancel: false\n            };\n            if (obj.id !== 'helper') {\n                this.triggerEvent(DiagramEvent.collectionChange, args);\n            }\n            var activeLayer = void 0;\n            this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n            obj.id = obj.id || randomId();\n            var layers = this.activeLayer;\n            if (!args.cancel && !layers.lock) {\n                if (layers.objects.indexOf(obj.id) < 0 && !layers.lock) {\n                    if (!layers.visible) {\n                        layers.visible = true;\n                        this.dataBind();\n                    }\n                    layers.objects.push(obj.id);\n                }\n                if (getObjectType(obj) === Connector) {\n                    newObj = new Connector(this, 'connectors', obj, true);\n                    newObj.status = 'New';\n                    this.connectors.push(newObj);\n                    this.initObject(newObj);\n                    if (obj.visible === false) {\n                        this.updateElementVisibility(newObj.wrapper, newObj, obj.visible);\n                    }\n                    this.updateEdges(newObj);\n                }\n                else {\n                    newObj = new Node(this, 'nodes', obj, true);\n                    newObj.parentId = obj.parentId;\n                    newObj.umlIndex = obj.umlIndex;\n                    newObj.status = 'New';\n                    this.nodes.push(newObj);\n                    this.initObject(newObj, layers, undefined, group);\n                    if (this.bpmnModule) {\n                        if (newObj.shape.annotations && newObj.shape.annotations.length !== 0) {\n                            for (var _i = 0, _a = this.bpmnModule.getTextAnnotationConn(newObj); _i < _a.length; _i++) {\n                                var obj_1 = _a[_i];\n                                this.initConnectors(obj_1, layers, false);\n                            }\n                        }\n                        if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                            newObj.shape.activity.subProcess.processes.length) {\n                            this.bpmnModule.updateDocks(newObj, this);\n                        }\n                    }\n                    if (newObj.umlIndex > -1 && obj.parentId && this.nameTable[obj.parentId] &&\n                        this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                        var parent_2 = this.nameTable[obj.parentId];\n                        parent_2.children.splice(newObj.umlIndex, 0, newObj.id);\n                        parent_2.wrapper.children.splice(newObj.umlIndex, 0, newObj.wrapper);\n                        parent_2.wrapper.measure(new Size());\n                        parent_2.wrapper.arrange(parent_2.wrapper.desiredSize);\n                        this.updateDiagramObject(parent_2);\n                    }\n                }\n                args = {\n                    element: newObj, cause: this.diagramActions, state: 'Changed', type: 'Addition', cancel: false\n                };\n                if (obj.id !== 'helper') {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group) &&\n                    !(this.diagramActions & DiagramAction.PreventHistory)) {\n                    var entry = {\n                        type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(obj),\n                        redoObject: cloneObject(obj), category: 'Internal'\n                    };\n                    this.addHistoryEntry(entry);\n                }\n                if (this.mode === 'SVG') {\n                    this.updateSvgNodes(newObj);\n                    this.updateDiagramObject(newObj);\n                    if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                        newObj.shape.activity.subProcess.processes.length) {\n                        this.updateProcesses(newObj);\n                    }\n                    this.updateBridging();\n                }\n            }\n        }\n        this.protectPropertyChange(propertyChangeValue);\n        this.resetDiagramActions(DiagramAction.PublicMethod);\n        if (newObj && this.layers.length > 1) {\n            this.moveNode(newObj);\n        }\n        return newObj;\n    };\n    Diagram.prototype.updateSvgNodes = function (node) {\n        if (node.children) {\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var j = _a[_i];\n                if (this.nameTable[j] && this.nameTable[j].parentId) {\n                    var child = getDiagramElement(j + '_groupElement', this.element.id);\n                    child.parentNode.removeChild(child);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateProcesses = function (node) {\n        if (this.bpmnModule && node && node.shape && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length) {\n            var processes = node.shape.activity.subProcess.processes;\n            this.moveSvgNode(node.id);\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var j = processes_1[_i];\n                this.moveSvgNode(j);\n                var edges = [];\n                edges = edges.concat(this.nameTable[j].outEdges, this.nameTable[j].inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    this.moveSvgNode(edges[i]);\n                }\n            }\n            for (var _a = 0, processes_2 = processes; _a < processes_2.length; _a++) {\n                var j = processes_2[_a];\n                if (this.nameTable[j].shape.activity.subProcess.processes &&\n                    this.nameTable[j].shape.activity.subProcess.processes.length) {\n                    this.updateProcesses(this.nameTable[j]);\n                }\n            }\n        }\n        else {\n            this.moveSvgNode(node.id);\n        }\n    };\n    /** @private */\n    Diagram.prototype.moveSvgNode = function (nodeId) {\n        var child = getDiagramElement(nodeId + '_groupElement', this.element.id);\n        var parent = child.parentElement;\n        child.parentNode.removeChild(child);\n        parent.appendChild(child);\n    };\n    /**\n     * Adds the given annotation to the given node\n     * @param annotation Defines the annotation to be added\n     * @param node Defines the node to which the annotation has to be added\n     */\n    Diagram.prototype.addTextAnnotation = function (annotation, node) {\n        if (this.bpmnModule) {\n            var connector = this.bpmnModule.addAnnotation(node, annotation, this);\n            this.initConnectors(connector, this.commandHandler.getObjectLayer(node.id), false);\n            this.updateDiagramObject(node);\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n    };\n    /**\n     * Splice the InEdge and OutEdge of the for the node with respect to corresponding connectors that is deleting\n     */\n    Diagram.prototype.spliceConnectorEdges = function (connector, isSource) {\n        var node;\n        var edges = [];\n        node = isSource ? this.nameTable[connector.sourceID] : this.nameTable[connector.targetID];\n        if (node) {\n            edges = isSource ? node.outEdges : node.inEdges;\n            for (var i = edges.length - 1; i >= 0; i--) {\n                if (edges[i] === connector.id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the dependent connectors if the node is deleted\n     * @private\n     */\n    Diagram.prototype.removeDependentConnector = function (node) {\n        var connector;\n        var edges = [];\n        edges = edges.concat(node.outEdges, node.inEdges);\n        for (var i = edges.length - 1; i >= 0; i--) {\n            connector = this.nameTable[edges[i]];\n            if (connector) {\n                this.connectorTable[connector.id] = cloneObject(connector);\n                this.remove(connector);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeObjectsFromLayer = function (obj) {\n        if (obj.children) {\n            for (var i = 0; i < obj.children.length; i++) {\n                var object = this.nameTable[obj.children[i]];\n                if (object) {\n                    this.removeObjectsFromLayer(object);\n                }\n            }\n        }\n        var layer = this.layers.indexOf(this.commandHandler.getObjectLayer(obj.id));\n        var objects = this.layers[layer].objects;\n        var objIndex = objects.indexOf(obj.id);\n        if (objIndex > -1) {\n            if (isSelected(this, obj)) {\n                this.unSelect(obj);\n            }\n            this.layers[layer].objects.splice(objIndex, 1);\n            delete this.layers[layer].zIndexTable[this.nameTable[obj.id].zIndex];\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeElements = function (currentObj) {\n        if (this.mode === 'SVG' || (this.mode === 'Canvas' && currentObj.shape.type === 'Native')) {\n            var removeElement_1 = getDiagramElement(currentObj.id + '_groupElement', this.element.id);\n            if (removeElement_1) {\n                removeElement_1.parentNode.removeChild(removeElement_1);\n            }\n        }\n        this.refreshCanvasLayers();\n        var children = currentObj.wrapper.children;\n        var element;\n        var view;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] instanceof DiagramNativeElement || ((children[i].id) && (children[i].id).indexOf('icon_content') > 0)) {\n                if ((children[i].id).indexOf('icon_content') > 0 && this.mode === 'SVG') {\n                    element = getDiagramElement(children[i].id + '_shape_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                    element = getDiagramElement(children[i].id + '_rect_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                }\n                for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                    var elementId = _a[_i];\n                    removeElement(children[i].id + '_groupElement', elementId);\n                }\n            }\n            else if (children[i] instanceof DiagramHtmlElement) {\n                for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                    var elementId = _c[_b];\n                    removeElement(children[i].id + '_html_element', elementId);\n                }\n            }\n            removeGradient(children[i].id);\n        }\n    };\n    Diagram.prototype.removeCommand = function () {\n        this.remove();\n    };\n    /**\n     * Removes the given object from diagram\n     * @param obj Defines the object that has to be removed from diagram\n     */\n    /* tslint:disable */\n    Diagram.prototype.remove = function (obj) {\n        var selectedItems = [];\n        selectedItems = selectedItems.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        var args;\n        var groupAction = false;\n        if (obj) {\n            obj = this.nameTable[obj.id];\n            if (obj && obj.shape && obj.shape.type === 'SwimLane') {\n                removeSwimLane(this, obj);\n            }\n            if (obj && (canDelete(obj) || (this.diagramActions & DiagramAction.Clear))) {\n                args = {\n                    element: obj, cause: this.diagramActions,\n                    state: 'Changing', type: 'Removal', cancel: false\n                };\n                if (!(this.diagramActions & DiagramAction.Clear) && (obj.id !== 'helper')) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!args.cancel) {\n                    if (this.bpmnModule) {\n                        if (this.bpmnModule.checkAndRemoveAnnotations(obj, this)) {\n                            this.refreshCanvasLayers();\n                            return;\n                        }\n                    }\n                    if ((!(this.diagramActions & DiagramAction.UndoRedo)) && !(this.diagramActions & DiagramAction.PreventHistory) &&\n                        (obj instanceof Node || obj instanceof Connector)) {\n                        var entry = {\n                            type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj),\n                            redoObject: cloneObject(obj), category: 'Internal'\n                        };\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            if (selectedItems.length > 0 && this.undoRedoModule && !this.layout.type) {\n                                this.historyManager.startGroupAction();\n                                groupAction = true;\n                            }\n                        }\n                        if (obj instanceof Node) {\n                            this.removeDependentConnector(obj);\n                        }\n                        if (!obj.isLane && !obj.isPhase) {\n                            if (!(this.diagramActions & DiagramAction.Clear) && !this.isStackChild(obj)) {\n                                this.addHistoryEntry(entry);\n                            }\n                        }\n                    }\n                    if (obj.children && !obj.isLane && !obj.isPhase) {\n                        this.deleteGroup(obj);\n                    }\n                    if (obj.parentId) {\n                        this.deleteChild(obj);\n                        if (this.nameTable[obj.parentId] && this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                            this.updateDiagramObject(this.nameTable[obj.parentId]);\n                            this.updateConnectorEdges(this.nameTable[obj.parentId]);\n                        }\n                    }\n                    var index = void 0;\n                    this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n                    var currentObj = this.nameTable[obj.id];\n                    if (currentObj instanceof Node) {\n                        if (currentObj.shape.type === 'Bpmn' && this.bpmnModule) {\n                            this.bpmnModule.removeBpmnProcesses(currentObj, this);\n                        }\n                        if (currentObj.isLane || currentObj.isPhase || currentObj.shape.type === 'SwimLane') {\n                            var swimLaneNode = (currentObj.isLane || currentObj.isPhase) ?\n                                this.nameTable[currentObj.parentId] : this.nameTable[currentObj.id];\n                            var grid = swimLaneNode.wrapper.children[0];\n                            if (currentObj.isLane) {\n                                removeLane(this, currentObj, swimLaneNode);\n                            }\n                            else if (currentObj.isPhase) {\n                                removePhase(this, currentObj, swimLaneNode);\n                            }\n                        }\n                        index = this.nodes.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.nodes.splice(index, 1);\n                            this.updateNodeEdges(currentObj);\n                        }\n                    }\n                    else {\n                        index = this.connectors.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.connectors.splice(index, 1);\n                        }\n                        this.updateEdges(currentObj);\n                        this.spliceConnectorEdges(obj, true);\n                        this.spliceConnectorEdges(obj, false);\n                    }\n                    if (groupAction) {\n                        this.historyManager.endGroupAction();\n                    }\n                    if (isSelected(this, currentObj)) {\n                        this.unSelect(currentObj);\n                    }\n                    if (!currentObj.isPhase) {\n                        this.removeObjectsFromLayer(obj);\n                        if (this.currentDrawingObject) {\n                            this.currentDrawingObject.wrapper = undefined;\n                        }\n                        delete this.nameTable[obj.id];\n                        if (selectedItems.length > 0 && selectedItems[0].id === currentObj.id && currentObj.parentId) {\n                            var parentnode = this.nameTable[currentObj.parentId];\n                            if (parentnode && parentnode.isLane && this.nameTable[parentnode.parentId].shape.type === 'SwimLane') {\n                                var swimLaneNode = this.nameTable[parentnode.parentId];\n                                removeLaneChildNode(this, swimLaneNode, parentnode, currentObj);\n                            }\n                        }\n                        this.removeElements(currentObj);\n                        this.updateBridging();\n                        if (this.mode !== 'SVG') {\n                            this.refreshDiagramLayer();\n                        }\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            this.removeFromAQuad(currentObj);\n                            args = {\n                                element: obj, cause: this.diagramActions,\n                                state: 'Changed', type: 'Removal', cancel: false\n                            };\n                            if (obj.id !== 'helper') {\n                                this.triggerEvent(DiagramEvent.collectionChange, args);\n                            }\n                            this.resetTool();\n                        }\n                    }\n                }\n            }\n        }\n        else if (selectedItems.length > 0) {\n            if (this.undoRedoModule) {\n                this.historyManager.startGroupAction();\n                groupAction = true;\n            }\n            for (var i = 0; i < selectedItems.length; i++) {\n                var node = selectedItems[i];\n                if (this.nameTable[selectedItems[i].id]) {\n                    if ((selectedItems[i] instanceof Connector) && this.bpmnModule &&\n                        this.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[i]) > -1) {\n                        this.remove(this.nameTable[selectedItems[i].targetID]);\n                        return;\n                    }\n                    this.remove(selectedItems[i]);\n                }\n            }\n            if (groupAction) {\n                this.historyManager.endGroupAction();\n            }\n            this.clearSelection();\n        }\n        this.tooltipObject.close();\n    };\n    /* tslint:enable */\n    Diagram.prototype.isStackChild = function (obj) {\n        var isstack;\n        var parent = this.nameTable[obj.parentId];\n        if (obj && obj.parentId && parent.container &&\n            (parent.container.type === 'Stack' &&\n                this.nameTable[obj.parentId].shape.type !== 'UmlClassifier')) {\n            isstack = true;\n            var redoElement = {\n                sourceIndex: parent.wrapper.children.indexOf(obj.wrapper), source: obj,\n                target: undefined, targetIndex: undefined\n            };\n            var entry = {\n                type: 'StackChildPositionChanged', redoObject: {\n                    sourceIndex: undefined, source: obj,\n                    target: undefined, targetIndex: undefined\n                },\n                undoObject: redoElement,\n                category: 'Internal'\n            };\n            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n        }\n        return isstack;\n    };\n    /** @private */\n    Diagram.prototype.deleteChild = function (node, parentNode) {\n        var id;\n        parentNode = parentNode ? this.nameTable[parentNode.id] : this.nameTable[node.parentId];\n        if (typeof node === 'string') {\n            id = node;\n        }\n        else {\n            id = node.id;\n        }\n        if (parentNode && parentNode.children) {\n            for (var i = 0; i < parentNode.children.length; i++) {\n                if (parentNode.children[i] === id) {\n                    parentNode.children.splice(i, 1);\n                    for (var j = 0; j < parentNode.wrapper.children.length; j++) {\n                        if (parentNode.wrapper.children[j].id === id) {\n                            parentNode.wrapper.children.splice(j, 1);\n                        }\n                    }\n                }\n            }\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n        }\n    };\n    /** @private  */\n    Diagram.prototype.addChild = function (node, child, index) {\n        var id;\n        var parentNode = this.nameTable[node.id];\n        if (!parentNode.children) {\n            parentNode.children = [];\n        }\n        if (parentNode.children) {\n            if (typeof child === 'string') {\n                if (this.nameTable[child]) {\n                    id = child;\n                }\n            }\n            else {\n                id = child.id = child.id || randomId();\n                this.add(child);\n            }\n            if (id && (!child.umlIndex || child.umlIndex === -1)) {\n                var childNode = this.nameTable[id];\n                childNode.parentId = parentNode.id;\n                if (parentNode.container && parentNode.container.type === 'Stack') {\n                    this.updateStackProperty(parentNode, childNode);\n                }\n                if (index) {\n                    parentNode.children.splice(index, 0, id);\n                    parentNode.wrapper.children.splice(index, 0, childNode.wrapper);\n                }\n                else {\n                    parentNode.children.push(id);\n                    parentNode.wrapper.children.push(childNode.wrapper);\n                }\n                parentNode.wrapper.measure(new Size());\n                parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                if (parentNode.container !== undefined) {\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n                if (!parentNode.parentId ||\n                    (this.nameTable[parentNode.parentId] &&\n                        this.nameTable[parentNode.parentId].shape.type !== 'SwimLane')) {\n                    this.updateDiagramObject(parentNode);\n                }\n            }\n        }\n    };\n    /**\n     * Clears all nodes and objects in the diagram\n     */\n    Diagram.prototype.clear = function () {\n        this.clearObjects();\n    };\n    Diagram.prototype.clearObjects = function (collection) {\n        var objects = [];\n        if (!collection) {\n            objects = objects.concat(this.nodes);\n            objects = objects.concat(this.connectors);\n        }\n        else {\n            objects = collection;\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.Clear;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var obj = objects_1[_i];\n            if (this.nameTable[obj.id]) {\n                this.remove(obj);\n            }\n        }\n        this.diagramActions = this.diagramActions & ~DiagramAction.Clear;\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.initHistory();\n    };\n    Diagram.prototype.startEditCommad = function () {\n        var laneHeader;\n        var node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : undefined;\n        if (node && node instanceof Node) {\n            if (node.isLane && node.parentId) {\n                var swimlane = this.nameTable[node.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (node.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (node.isLane && currentParentId === lanes[i].id) {\n                        laneHeader = this.nameTable[lanes[i].header.id];\n                    }\n                }\n            }\n            else if (node.shape.type === 'SwimLane' && node.shape.header && node.shape.hasHeader) {\n                var id = node.wrapper.children[0].rows[0].cells[0].children[0].id;\n                laneHeader = this.nameTable[id];\n            }\n        }\n        this.startTextEdit(laneHeader);\n    };\n    /**\n     * Specified annotation to edit mode\n     * @param node Defines node/connector that contains the annotation to be edited\n     * @param id Defines annotation id to be edited in the node\n     */\n    Diagram.prototype.startTextEdit = function (node, id) {\n        if (!canZoomPan(this) || canSingleSelect(this)) {\n            this.textEditing = true;\n            var transform = this.scroller.transform;\n            var scale = canZoomTextEdit(this) ? transform.scale : 1;\n            var minWidth = 90;\n            var text = void 0;\n            var bounds = void 0;\n            var attributes = void 0;\n            var x = void 0;\n            var y = void 0;\n            var textWrapper = void 0;\n            if (!node) {\n                node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : this.selectedItems.connectors[0];\n            }\n            if (node) {\n                if (node.shape && node.shape.type === 'UmlClassifier') {\n                    node = this.nameTable[node.children[0]];\n                }\n                var bpmnAnnotation = false;\n                if (this.bpmnModule) {\n                    textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, id);\n                    if (textWrapper) {\n                        node = this.nameTable[node.id.split('_textannotation_')[0]];\n                    }\n                }\n                if (!textWrapper) {\n                    if (node.shape.type !== 'Text' && node.annotations.length === 0) {\n                        if (!(node.constraints & NodeConstraints.ReadOnly)) {\n                            this.activeLabel.isGroup = true;\n                            this.startGroupAction();\n                            this.addLabels(node, [{ id: randomId(), content: '' }]);\n                        }\n                    }\n                    if (!id && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n                        id = (node.shape.type === 'Text') ? (node.wrapper.children[0].id).split('_')[1] : node.annotations[0].id;\n                    }\n                    if (id) {\n                        textWrapper = this.getWrapper(node.wrapper, id);\n                    }\n                }\n                else {\n                    bpmnAnnotation = true;\n                }\n                if (node && textWrapper && !(textWrapper instanceof DiagramHtmlElement) &&\n                    (!enableReadOnly(textWrapper, node) || bpmnAnnotation)) {\n                    var style = (textWrapper.style);\n                    var maxWidth = void 0;\n                    maxWidth = textWrapper.bounds.width < node.wrapper.bounds.width ? textWrapper.bounds.width : node.wrapper.bounds.width;\n                    maxWidth = minWidth > maxWidth ? minWidth : maxWidth;\n                    var textEditing = document.getElementById(this.element.id + '_editTextBoxDiv');\n                    var textArea = document.getElementById(this.element.id + '_editBox');\n                    text = textArea ? textArea.value : textWrapper.content;\n                    this.activeLabel.text = text;\n                    if (!textEditing && !textArea) {\n                        textEditing = createHtmlElement('div', {});\n                        textArea = createHtmlElement('textarea', {});\n                        this.diagramCanvas.appendChild(textEditing);\n                        textEditing.appendChild(textArea);\n                        textArea.appendChild(document.createTextNode(text));\n                    }\n                    bounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n                    if (bounds.isEmpty()) {\n                        if (node.shape.type !== 'Text') {\n                            bounds = new Size(findAnnotation(node, (textWrapper.id).split(node.id + '_')[1]).width || 50, textWrapper.style.fontSize);\n                        }\n                        else {\n                            bounds = new Size((node.width > 50) ? 50 : node.width, textWrapper.style.fontSize);\n                        }\n                    }\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n                        bounds.width = node.wrapper.bounds.width - 20;\n                        x = ((((node.wrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((node.wrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                        textWrapper.style.textAlign = 'Left';\n                    }\n                    else {\n                        bounds.width = Math.max(bounds.width, 50);\n                        x = ((((textWrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((textWrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                    }\n                    attributes = {\n                        'id': this.element.id + '_editTextBoxDiv', 'style': 'position: absolute' + ';left:' + x + 'px;top:' +\n                            y + 'px;width:' + ((bounds.width + 1) * scale) + 'px;height:' + (bounds.height * scale) +\n                            'px; containerName:' + node.id + ';'\n                    };\n                    setAttributeHtml(textEditing, attributes);\n                    attributes = {\n                        'id': this.element.id + '_editBox', 'style': 'width:' + ((bounds.width + 1) * scale) +\n                            'px;height:' + (bounds.height * scale) + 'px;resize: none;outline: none;overflow: hidden;' +\n                            ';font-family:' + style.fontFamily +\n                            ';font-size:' + (style.fontSize * scale) + 'px;text-align:' +\n                            (textWrapper.style.textAlign.toLocaleLowerCase()) + ';', 'class': 'e-diagram-text-edit'\n                    };\n                    setAttributeHtml(textArea, attributes);\n                    textArea.style.fontWeight = (style.bold) ? 'bold' : '';\n                    textArea.style.fontStyle = (style.italic) ? 'italic' : '';\n                    textArea.style.lineHeight = (style.fontSize * 1.2 + 'px;').toString();\n                    textArea.style.textDecoration = (style.textDecoration) ? style.textDecoration : '';\n                    this.activeLabel.parentId = node.id;\n                    this.activeLabel.id = id;\n                    textWrapper.visible = false;\n                    this.updateDiagramObject(node);\n                    this.diagramActions = this.diagramActions | DiagramAction.TextEdit;\n                    if (!this.isTriggerEvent) {\n                        EventHandler.add(textArea, 'input', this.eventHandler.inputChange, this.eventHandler);\n                        EventHandler.add(textArea, 'focusout', this.focusOutEdit, this);\n                        textArea.select();\n                    }\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateNodeExpand = function (node, visibility) {\n        for (var i = 0; i < node.outEdges.length; i++) {\n            var connector = this.nameTable[node.outEdges[i]];\n            var target = this.nameTable[connector.targetID];\n            connector.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(connector.wrapper, connector, false);\n                target.isExpanded = visibility;\n            }\n            this.updateNodeExpand(target, target.isExpanded);\n            target.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(target.wrapper, target, false);\n            }\n        }\n    };\n    Diagram.prototype.updateConnectorAnnotation = function (connector) {\n        if (connector.annotations.length) {\n            var annotationWrapper = void 0;\n            for (var _i = 0, _a = connector.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                annotationWrapper = this.getWrapper(connector.wrapper, annotation.id);\n                connector.updateAnnotation(annotation, connector.intermediatePoints, connector.wrapper.bounds, annotationWrapper, (this.diagramActions & DiagramAction.Interactions));\n            }\n        }\n        connector.wrapper.measure(new Size(connector.wrapper.width, connector.wrapper.height));\n        connector.wrapper.arrange(connector.wrapper.desiredSize);\n    };\n    /**\n     * Automatically updates the diagram objects based on the type of the layout\n     */\n    Diagram.prototype.doLayout = function () {\n        var update = false;\n        var layout;\n        var propChange = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        var viewPort = { x: this.scroller.viewPortWidth, y: this.scroller.viewPortHeight };\n        if (this.organizationalChartModule) {\n            layout = this.organizationalChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.diagramActions);\n            update = true;\n            if (this.layoutAnimateModule && layout.rootNode && !this.diagramActions) {\n                this.updateNodeExpand(layout.rootNode, layout.rootNode.isExpanded);\n            }\n        }\n        else if (this.mindMapChartModule) {\n            this.mindMapChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.dataSourceSettings.root);\n            update = true;\n        }\n        else if (this.radialTreeModule) {\n            this.radialTreeModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.symmetricalLayoutModule) {\n            this.symmetricalLayoutModule.maxIteration = this.layout.maxIteration;\n            this.symmetricalLayoutModule.springLength = this.layout.springLength;\n            this.symmetricalLayoutModule.springFactor = this.layout.springFactor;\n            this.symmetricalLayoutModule.updateLayout(this.nodes, this.connectors, this.symmetricalLayoutModule, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.complexHierarchicalTreeModule) {\n            var nodes = this.complexHierarchicalTreeModule.getLayoutNodesCollection(this.nodes);\n            this.complexHierarchicalTreeModule.doLayout(nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        if (update) {\n            this.preventUpdate = true;\n            var connectors = {};\n            for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                var node = obj;\n                if (!this.preventNodesUpdate && (!this.diagramActions || !(this.diagramActions & DiagramAction.PreventIconsUpdate))) {\n                    this.updateIcon(node);\n                    this.updateDefaultLayoutIcons(node);\n                }\n                this.preventNodesUpdate = true;\n                this.nodePropertyChange(node, {}, { offsetX: node.offsetX, offsetY: node.offsetY }, true);\n                this.preventNodesUpdate = false;\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n                this.updateDiagramObject(node, true);\n                if (node.inEdges.length > 0) {\n                    for (var j = 0; j < node.inEdges.length; j++) {\n                        var connector = this.nameTable[node.inEdges[j]];\n                        connectors[connector.id] = connector;\n                    }\n                }\n                if (node.outEdges.length > 0) {\n                    for (var k = 0; k < node.outEdges.length; k++) {\n                        var connection = this.nameTable[node.outEdges[k]];\n                        connectors[connection.id] = connection;\n                    }\n                }\n            }\n            for (var _b = 0, _c = Object.keys(connectors); _b < _c.length; _b++) {\n                var conn = _c[_b];\n                var connector = connectors[conn];\n                var points = this.getPoints(connector);\n                updateConnector(connector, points);\n                if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                    this.commandHandler.updatePathElementOffset(connector);\n                }\n                connector.wrapper.measure(new Size(undefined, undefined));\n                connector.wrapper.arrange(connector.wrapper.desiredSize);\n                this.updateConnectorAnnotation(connector);\n                this.updateQuad(connector);\n                this.updateDiagramObject(connector, true);\n            }\n            this.preventUpdate = false;\n            this.updatePage();\n            if ((!(this.diagramActions & DiagramAction.Render)) || this.mode === 'Canvas') {\n                this.refreshDiagramLayer();\n            }\n        }\n        if (!propChange) {\n            this.protectPropertyChange(propChange);\n        }\n        return layout;\n    };\n    /**\n     * Serializes the diagram control as a string\n     */\n    Diagram.prototype.saveDiagram = function () {\n        return serialize(this);\n    };\n    /**\n     * Converts the given string as a Diagram Control\n     * @param data Defines the behavior of the diagram to be loaded\n     */\n    Diagram.prototype.loadDiagram = function (data) {\n        return deserialize(data, this);\n    };\n    /**\n     * To  get the html diagram content\n     * @param styleSheets defines the collection of style files to be considered while exporting.\n     */\n    Diagram.prototype.getDiagramContent = function (styleSheets) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.getDiagramContent(styleSheets);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To export diagram native/html image\n     * @param image defines image content to be exported.\n     * @param options defines the image properties.\n     */\n    Diagram.prototype.exportImage = function (image, options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To print native/html nodes of diagram\n     * @param image defines image content.\n     * @param options defines the properties of the image\n     */\n    Diagram.prototype.printImage = function (image, options) {\n        if (this.printandExportModule) {\n            options.printOptions = true;\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To limit the history entry of the diagram\n     * @param stackLimit defines stackLimit of the history manager.\n     */\n    Diagram.prototype.setStackLimit = function (stackLimit) {\n        if (this.undoRedoModule && stackLimit) {\n            this.historyManager.stackLimit = stackLimit;\n            this.undoRedoModule.applyLimit(this.historyManager.currentEntry, stackLimit, this, true);\n        }\n    };\n    /**\n     * To clear history of the diagram\n     */\n    Diagram.prototype.clearHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.clearHistory(this);\n        }\n    };\n    /**\n     * To get the bound of the diagram\n     */\n    Diagram.prototype.getDiagramBounds = function () {\n        if (this.printandExportModule) {\n            var bounds = this.printandExportModule.getDiagramBounds('', {});\n            bounds.width = bounds.width > this.scrollSettings.viewPortWidth ?\n                bounds.width + (bounds.x > 0 ? bounds.x : 0) : this.scrollSettings.viewPortWidth;\n            bounds.height = bounds.height > this.scrollSettings.viewPortHeight ?\n                bounds.height + (bounds.y > 0 ? bounds.y : 0) : this.scrollSettings.viewPortHeight;\n            bounds.x = bounds.x > 0 ? 0 : bounds.x;\n            bounds.y = bounds.y > 0 ? 0 : bounds.y;\n            return bounds;\n        }\n        return new Rect();\n    };\n    /**\n     * To export Diagram\n     * @param options defines the how the image to be exported.\n     */\n    Diagram.prototype.exportDiagram = function (options) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.exportDiagram(options);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To print Diagram\n     * @param optons defines how the image to be printed.\n     */\n    Diagram.prototype.print = function (options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.print(options);\n        }\n    };\n    /**\n     * Add ports at the run time\n     */\n    Diagram.prototype.addPorts = function (obj, ports) {\n        this.protectPropertyChange(true);\n        var newObj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < ports.length; i++) {\n            newObj = new PointPort(obj, 'ports', ports[i], true);\n            obj.ports.push(newObj);\n            if (obj.children) {\n                var container = obj.wrapper;\n                obj.initPorts(this.getDescription, obj.wrapper.children[container.children.length - 1]);\n            }\n            else {\n                var canvas = obj.wrapper;\n                canvas.children.push(obj.initPortWrapper(obj.ports[obj.ports.length - 1]));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'PortCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(obj.width, obj.height));\n        obj.wrapper.arrange(obj.wrapper.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add constraints at run time\n     */\n    Diagram.prototype.addConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType | constraintsValue;\n    };\n    /**\n     * Remove constraints at run time\n     */\n    Diagram.prototype.removeConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType & ~constraintsValue;\n    };\n    /**\n     * Add Labels at the run time\n     */\n    Diagram.prototype.addLabels = function (obj, labels) {\n        this.protectPropertyChange(true);\n        var canvas = obj.wrapper;\n        var newObj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < labels.length; i++) {\n            if (obj instanceof Node) {\n                newObj = new ShapeAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                if (obj.children) {\n                    var node = obj;\n                    for (var i_1 = 0; i_1 < node.wrapper.children.length; i_1++) {\n                        if (node.wrapper.children[i_1].id === node.id + 'group_container') {\n                            var container = node.wrapper.children[i_1];\n                            container.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                        }\n                    }\n                }\n                else {\n                    canvas.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                }\n            }\n            else if (obj instanceof Connector) {\n                newObj = new PathAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                var segment = canvas.children[0];\n                var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n                canvas.children.push(obj.getAnnotationElement(obj.annotations[obj.annotations.length - 1], obj.intermediatePoints, bounds, this.getDescription, this.element.id));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'LabelCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(canvas.width, canvas.height));\n        obj.wrapper.arrange(canvas.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add dynamic Lanes to swimLane at runtime\n     */\n    Diagram.prototype.addLanes = function (node, lane, index) {\n        for (var i = 0; i < lane.length; i++) {\n            addLane(this, node, lane[i], index);\n            if (index !== undefined) {\n                index += 1;\n            }\n        }\n    };\n    /**\n     * Add a phase to a swimLane at runtime\n     */\n    Diagram.prototype.addPhases = function (node, phases) {\n        for (var i = 0; i < phases.length; i++) {\n            addPhase(this, node, phases[i]);\n        }\n    };\n    Diagram.prototype.removelabelExtension = function (obj, labels, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if ((canvas instanceof TextElement) || (canvas instanceof DiagramHtmlElement)) {\n                if (canvas.id.match('_' + labels[j].id + '$')) {\n                    for (var k = 0; k < obj.annotations.length; k++) {\n                        if (canvas.id.match('_' + obj.annotations[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'LabelCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.annotations[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.annotations.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        if (element) {\n                            var element_1 = getDiagramElement(canvas.id, this.element.id);\n                            element_1.parentNode.removeChild(element_1);\n                        }\n                        var textElement = getDiagramElement(canvas.id + '_text', this.element.id);\n                        if (textElement) {\n                            element = getDiagramElement(canvas.id + '_text', this.element.id);\n                            element.parentNode.removeChild(element);\n                        }\n                        var htmlElement = getDiagramElement(canvas.id + '_html_element', this.element.id);\n                        if (htmlElement) {\n                            htmlElement.parentNode.removeChild(htmlElement);\n                        }\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Labels at the run time\n     */\n    Diagram.prototype.removeLabels = function (obj, labels) {\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = labels.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removelabelExtension(obj, labels, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removelabelExtension(obj, labels, j, obj.wrapper);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    Diagram.prototype.removePortsExtenion = function (obj, ports, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if (canvas instanceof PathElement) {\n                if (canvas.id.match('_' + ports[j].id + '$')) {\n                    for (var k = 0; k < obj.ports.length; k++) {\n                        if (canvas.id.match('_' + obj.ports[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'PortCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.ports[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.ports.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        element.parentNode.removeChild(element);\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Ports at the run time\n     */\n    Diagram.prototype.removePorts = function (obj, ports) {\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = ports.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removePortsExtenion(obj, ports, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removePortsExtenion(obj, ports, j, obj.wrapper);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    //public methods - end region\n    //helper methods - start region\n    /**\n     * @private\n     * @param real\n     * @param rulerSize\n     */\n    Diagram.prototype.getSizeValue = function (real, rulerSize) {\n        var value;\n        if (real.toString().indexOf('px') > 0) {\n            value = real.toString();\n        }\n        else if (real.toString().indexOf('%') > 0) {\n            value = rulerSize !== undefined ? '100%' : real.toString();\n        }\n        else {\n            value = real.toString() + 'px';\n        }\n        if (rulerSize) {\n            var position = getRulerSize(this);\n            value = 'calc(' + value + ' - ' + rulerSize + 'px)';\n        }\n        return value;\n    };\n    Diagram.prototype.renderRulers = function () {\n        if (this.rulerSettings.showRulers) {\n            renderOverlapElement(this);\n            renderRuler(this, true);\n            renderRuler(this, false);\n        }\n        else {\n            removeRulerElements(this);\n        }\n    };\n    Diagram.prototype.intOffPageBackground = function () {\n        var position = new Size();\n        position = getRulerSize(this);\n        var element = document.getElementById(this.element.id + 'content');\n        var width = this.getSizeValue(this.width, position.width);\n        var height = this.getSizeValue(this.height, position.height);\n        var style = this.rulerSettings.showRulers ?\n            'width:' + width + '; height:' + height + ';' +\n                'top:' + position.height + 'px;left:' + position.width + 'px;' +\n                'overflow: scroll;position:absolute;overflow:auto;' :\n            'width:' + width + '; height:' + height + ';position:absolute;' +\n                ' left:0px;  top:0px;overflow: auto;';\n        var attr = {\n            'id': this.element.id + 'content',\n            'tabindex': '0',\n            'style': style\n        };\n        if (!element) {\n            this.diagramCanvas = createHtmlElement('div', attr);\n            this.element.appendChild(this.diagramCanvas);\n        }\n        else {\n            this.diagramCanvas = element;\n            this.diagramCanvas.setAttribute('style', style);\n        }\n        this.diagramCanvas.style.background = this.backgroundColor;\n    };\n    Diagram.prototype.initDiagram = function () {\n        this.intOffPageBackground();\n        setAttributeHtml(this.element, {\n            style: 'width:' + this.getSizeValue(this.width) + '; height:'\n                + this.getSizeValue(this.height) + ';position:relative;overflow:hidden;'\n        });\n    };\n    ;\n    Diagram.prototype.renderBackgroundLayer = function (bounds, commonStyle) {\n        var bgLayer = this.createSvg(this.element.id + '_backgroundLayer_svg', bounds.width, bounds.height);\n        bgLayer.setAttribute('style', commonStyle);\n        var backgroundImage = createSvgElement('g', {\n            'id': this.element.id + '_backgroundImageLayer',\n            'class': 'e-background-image-layer'\n        });\n        bgLayer.appendChild(backgroundImage);\n        var attr = { 'id': this.element.id + '_backgroundLayer', 'class': 'e-background-layer' };\n        var background = createSvgElement('g', attr);\n        bgLayer.appendChild(background);\n        this.diagramCanvas.appendChild(bgLayer);\n    };\n    Diagram.prototype.renderGridLayer = function (bounds, commonStyle) {\n        var svgGridSvg = this.createSvg(this.element.id + '_gridline_svg', bounds.width, bounds.height);\n        svgGridSvg.setAttribute('class', 'e-grid-layer');\n        var svgGrid = createSvgElement('g', { 'id': this.element.id + '_gridline', 'width': '100%', 'height': '100%' });\n        var rect = createSvgElement('rect', {\n            'id': this.element.id + '_grid_rect', 'x': '0', 'y': '0', 'width': '100%', 'height': '100%',\n            'fill': 'url(#' + this.element.id + '_pattern)'\n        });\n        svgGrid.appendChild(rect);\n        svgGridSvg.appendChild(svgGrid);\n        this.diagramCanvas.appendChild(svgGridSvg);\n        setAttributeSvg(svgGridSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderDiagramLayer = function (bounds, commonStyle) {\n        var attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;' + commonStyle\n        };\n        this.diagramLayerDiv = createHtmlElement('div', attributes);\n        if (this.mode === 'SVG') {\n            var diagramSvg = this.createSvg(this.element.id + '_diagramLayer_svg', bounds.width, bounds.height);\n            diagramSvg.setAttribute('style', ' pointer-events: none; ');\n            diagramSvg.setAttribute('class', 'e-diagram-layer');\n            var diagramLayer = createSvgElement('g', { 'id': this.element.id + '_diagramLayer' });\n            var transformationLayer = createSvgElement('g', {});\n            this.diagramLayer = diagramLayer;\n            diagramLayer.setAttribute('style', 'pointer-events: all;');\n            transformationLayer.appendChild(diagramLayer);\n            diagramSvg.appendChild(transformationLayer);\n            this.diagramLayerDiv.appendChild(diagramSvg);\n        }\n        else {\n            this.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagram', bounds.width, bounds.height);\n            this.diagramLayer.setAttribute('style', 'position:absolute;left:0px;top:0px;');\n            this.diagramLayerDiv.appendChild(this.diagramLayer);\n        }\n        this.diagramCanvas.appendChild(this.diagramLayerDiv);\n    };\n    Diagram.prototype.initLayers = function () {\n        var commonStyle = 'position:absolute;top:0px;left:0px;overflow:hidden;pointer-events:none;';\n        var container = document.getElementById(this.element.id);\n        var bounds = container.getBoundingClientRect();\n        var scrollerSize = getScrollerWidth();\n        this.scroller.scrollerWidth = scrollerSize;\n        this.scroller.setViewPortSize(bounds.width, bounds.height);\n        this.renderRulers();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n            var measureElements = document.getElementById('measureElement');\n            measureElements.remove();\n        }\n        createMeasureElements();\n        // this.renderBackgroundImageLayer(bounds, commonStyle);\n        this.renderBackgroundLayer(bounds, commonStyle);\n        this.renderGridLayer(bounds, commonStyle);\n        this.renderDiagramLayer(bounds, commonStyle);\n        this.renderHTMLLayer(bounds, commonStyle);\n        this.renderPortsExpandLayer(bounds, commonStyle);\n        this.renderNativeLayer(bounds, commonStyle);\n        this.renderAdornerLayer(bounds, commonStyle);\n    };\n    Diagram.prototype.renderAdornerLayer = function (bounds, commonStyle) {\n        var divElement = createHtmlElement('div', {\n            'id': this.element.id + '_diagramAdornerLayer',\n            'style': 'width:' + bounds.width + 'px;height:' + bounds.height + 'px;' + commonStyle\n        });\n        var svgAdornerSvg = this.createSvg(this.element.id + '_diagramAdorner_svg', bounds.width, bounds.height);\n        svgAdornerSvg.setAttribute('class', 'e-adorner-layer');\n        svgAdornerSvg.setAttribute('style', 'pointer-events:none;');\n        this.adornerLayer = createSvgElement('g', { 'id': this.element.id + '_diagramAdorner' });\n        this.adornerLayer.setAttribute('style', ' pointer-events: all; ');\n        svgAdornerSvg.appendChild(this.adornerLayer);\n        divElement.appendChild(svgAdornerSvg);\n        this.diagramCanvas.appendChild(divElement);\n        var svgSelector = createSvgElement('g', { 'id': this.element.id + '_SelectorElement' });\n        this.adornerLayer.appendChild(svgSelector);\n        setAttributeSvg(svgAdornerSvg, { style: 'pointer-events:none;' });\n    };\n    Diagram.prototype.renderPortsExpandLayer = function (bounds, commonStyle) {\n        var svgPortsSvg = this.createSvg(this.element.id + '_diagramPorts_svg', bounds.width, bounds.height);\n        svgPortsSvg.setAttribute('class', 'e-ports-expand-layer');\n        var svgPortsLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramPorts',\n            'class': 'e-ports-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgPortsLayer);\n        var svgExpandLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramExpander',\n            'class': 'e-expand-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgExpandLayer);\n        this.diagramCanvas.appendChild(svgPortsSvg);\n        setAttributeSvg(svgPortsSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderHTMLLayer = function (bounds, commonStyle) {\n        this.htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;position:absolute;top:0px;' +\n                'left:0px;overflow:hidden;pointer-events:none;',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;pointer-events:all;'\n        });\n        this.htmlLayer.appendChild(htmlLayerDiv);\n        this.diagramCanvas.appendChild(this.htmlLayer);\n    };\n    Diagram.prototype.renderNativeLayer = function (bounds, commonStyle) {\n        var nativeLayerSvg = this.createSvg(this.element.id + '_nativeLayer_svg', bounds.width, bounds.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer', 'style': 'pointer-events:all;' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        this.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer', 'style': commonStyle });\n    };\n    /** @private */\n    Diagram.prototype.createSvg = function (id, width, height) {\n        var svgObj = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        setAttributeSvg(svgObj, { 'id': id, 'width': width, 'height': height });\n        return svgObj;\n    };\n    Diagram.prototype.initObjects = function (isLoad) {\n        if (!this.isLoading) {\n            this.initData();\n        }\n        this.initLayerObjects();\n        this.updateBridging(isLoad);\n    };\n    /** @private */\n    Diagram.prototype.initLayerObjects = function () {\n        var hasLayers = this.layers.length > 1;\n        var set = false;\n        var connectors = [];\n        var tempTabel = {};\n        var bpmnTable = {};\n        var tempNode = [];\n        var groups = [];\n        var i = 0;\n        for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n            var obj = _c[_b];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _d = 0, _e = this.layers; _d < _e.length; _d++) {\n            var layer = _e[_d];\n            for (var _f = 0, _g = layer.objects; _f < _g.length; _f++) {\n                var obj = _g[_f];\n                if (tempTabel[obj]) {\n                    if (!(tempTabel[obj] instanceof Connector)) {\n                        if (tempTabel[obj].children) {\n                            groups.push(obj);\n                        }\n                        else if ((tempTabel[obj].shape instanceof BpmnShape) &&\n                            tempTabel[obj].shape.activity.subProcess.processes &&\n                            tempTabel[obj].shape.activity.subProcess.processes.length > 0) {\n                            bpmnTable[tempTabel[obj].id] = obj;\n                        }\n                        else {\n                            this.initNodes(tempTabel[obj], layer);\n                        }\n                    }\n                    else {\n                        var connector = tempTabel[obj];\n                        if (connector.sourceID && connector.targetID) {\n                            var sourceNode = tempTabel[connector.sourceID];\n                            var targetNode = tempTabel[connector.targetID];\n                            if (sourceNode && sourceNode.wrapper && targetNode && targetNode.wrapper) {\n                                this.initConnectors(tempTabel[obj], layer);\n                            }\n                            else {\n                                connectors.push(tempTabel[obj]);\n                            }\n                        }\n                        else {\n                            this.initConnectors(tempTabel[obj], layer);\n                        }\n                    }\n                }\n            }\n            if (this.bpmnModule) {\n                for (var _h = 0, _j = this.bpmnModule.textAnnotationConnectors; _h < _j.length; _h++) {\n                    var obj = _j[_h];\n                    this.initConnectors(obj, layer, false);\n                }\n            }\n        }\n        for (var _k = 0, _l = Object.keys(bpmnTable); _k < _l.length; _k++) {\n            var obj = _l[_k];\n            this.initObject(tempTabel[obj]);\n            this.bpmnModule.updateDocks(tempTabel[obj], this);\n        }\n        for (var _m = 0, groups_1 = groups; _m < groups_1.length; _m++) {\n            var obj = groups_1[_m];\n            var layer = this.commandHandler.getObjectLayer(obj);\n            this.initNodes(tempTabel[obj], layer);\n        }\n        for (var _o = 0, connectors_1 = connectors; _o < connectors_1.length; _o++) {\n            var connector = connectors_1[_o];\n            var layer = this.commandHandler.getObjectLayer(connector.id);\n            this.initConnectors(connector, layer);\n        }\n    };\n    Diagram.prototype.addToLayer = function (obj, hasLayers) {\n        var layer;\n        if (hasLayers) {\n            layer = this.commandHandler.getObjectLayer(obj.id);\n        }\n        if (!hasLayers || !layer) {\n            if (this.activeLayer.objects.indexOf(obj.id) === -1) {\n                this.activeLayer.objects.push(obj.id);\n            }\n        }\n        this.setZIndex(layer || this.activeLayer, obj);\n    };\n    Diagram.prototype.updateLayer = function (newProp) {\n        for (var _i = 0, _a = Object.keys(newProp.layers); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var layerObject = this.layers[key].objects;\n            for (var _b = 0, layerObject_1 = layerObject; _b < layerObject_1.length; _b++) {\n                var obj = layerObject_1[_b];\n                var node = this.nameTable[obj];\n                if (newProp.layers[key].visible !== undefined) {\n                    this.updateElementVisibility(node.wrapper, node, newProp.layers[key].visible);\n                }\n                else if (newProp.layers[key].lock === true) {\n                    this.unSelect(node);\n                }\n            }\n            if (newProp.layers[key].lock !== undefined) {\n                this.layers[key].lock = newProp.layers[key].lock;\n            }\n        }\n        if (this.mode !== 'SVG') {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateScrollSettings = function (newProp) {\n        var hPan = (-this.scroller.horizontalOffset + newProp.scrollSettings.horizontalOffset || 0);\n        var vPan = (this.scroller.verticalOffset - newProp.scrollSettings.verticalOffset || 0);\n        var oldValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        if (hPan !== 0 || vPan !== 0) {\n            this.pan(hPan, vPan);\n        }\n        var newValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        var arg = {\n            oldValue: oldValue, newValue: newValue, source: this\n        };\n        this.triggerEvent(DiagramEvent.scrollChange, arg);\n        if (this.mode === 'Canvas' && (this.constraints & DiagramConstraints.Virtualization)) {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.initData = function () {\n        var dataSourceSettings = this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource;\n        var adapter = 'adaptorName';\n        if (this.dataBindingModule && !(this.realActions & RealAction.PreventDataInit)) {\n            if (dataSourceSettings && this.dataSourceSettings.connectionDataSource.dataManager) {\n                var dataManager = this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource;\n                this.nodes = this.generateData(dataManager, true);\n                this.connectors = this.generateData(this.dataSourceSettings.connectionDataSource.dataManager, false);\n            }\n            else if (dataSourceSettings && dataSourceSettings.dataSource &&\n                (dataSourceSettings.dataSource.url || (dataSourceSettings[adapter] === 'BlazorAdaptor' &&\n                    !dataSourceSettings.dataSource.url))) {\n                this.dataBindingModule.initSource(this.dataSourceSettings, this);\n            }\n            else {\n                this.dataBindingModule.initData(this.dataSourceSettings, this);\n            }\n        }\n    };\n    Diagram.prototype.generateData = function (dataSource, isNode) {\n        var nodes = [];\n        var i;\n        for (i = 0; i < dataSource.length; i++) {\n            var row = dataSource[i];\n            var node = isNode ? this.makeData(row, true) : this.makeData(row, false);\n            if (node && node.id && (!findNodeByName(nodes, node.id) || !findNodeByName(nodes, node.id))) {\n                nodes.push(node);\n            }\n        }\n        return (nodes);\n    };\n    Diagram.prototype.makeData = function (row, isNode) {\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        var data = {};\n        data.id = row[fields.id] ? row[fields.id] : randomId();\n        if (fields.sourceID) {\n            data.sourceID = row[fields.sourceID];\n        }\n        if (fields.targetID) {\n            data.targetID = row[fields.targetID];\n        }\n        if (row[fields.sourcePointX] && row[fields.sourcePointY]) {\n            data.sourcePoint = { 'x': Number(row[fields.sourcePointX]), 'y': Number(row[fields.sourcePointY]) };\n        }\n        if (row[fields.targetPointX] && row[fields.targetPointY]) {\n            data.targetPoint = { 'x': Number(row[fields.targetPointX]), 'y': Number(row[fields.targetPointY]) };\n        }\n        if (fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++) {\n                data[fields.crudAction.customFields[i]] = row[fields.crudAction.customFields[i]];\n            }\n        }\n        return data;\n    };\n    Diagram.prototype.initNodes = function (obj, layer) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.initConnectors = function (obj, layer, independentObj) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer, independentObj);\n        this.updateEdges(obj);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.setZIndex = function (layer, obj) {\n        //should be changed\n        var currentLayer = layer;\n        if ((obj).zIndex === -1) {\n            while (currentLayer.zIndexTable[currentLayer.objectZIndex + 1]) {\n                layer.objectZIndex++;\n            }\n            obj.zIndex = ++currentLayer.objectZIndex;\n        }\n        else {\n            var index = obj.zIndex;\n            if (currentLayer.zIndexTable[index]) {\n                var tabelLength = Object.keys(currentLayer.zIndexTable).length;\n                var j = 0;\n                for (var i = 0; i < tabelLength; i++) {\n                    if (i === index) {\n                        for (var j_1 = tabelLength; j_1 > index; j_1--) {\n                            currentLayer.zIndexTable[j_1] = currentLayer.zIndexTable[j_1 - 1];\n                            if (this.nameTable[currentLayer.zIndexTable[j_1]]) {\n                                this.nameTable[currentLayer.zIndexTable[j_1]].zIndex = j_1;\n                            }\n                        }\n                        currentLayer.zIndexTable[i] = obj.id;\n                    }\n                    j++;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initializeDiagramLayers = function () {\n        var tempLayers = this.layers;\n        for (var i = 0; i < this.layers.length; i++) {\n            if (this.layers[i].zIndex !== -1) {\n                var temp = this.layers[i];\n                this.layers[i] = this.layers[this.layers[i].zIndex];\n                this.layers[temp.zIndex] = temp;\n            }\n        }\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            layer.zIndex = layer.zIndex !== -1 ? layer.zIndex : this.layers.indexOf(layer);\n            this.layerZIndexTable[layer.zIndex] = layer.id;\n        }\n        for (var i = 0; i < this.layers.length; i++) {\n            for (var j = i + 1; j < this.layers.length; j++) {\n                if (this.layers[i].zIndex > this.layers[j].zIndex) {\n                    var temp = this.layers[i];\n                    this.layers[i] = this.layers[j];\n                    this.layers[j] = temp;\n                }\n            }\n        }\n        if (this.layers.length === 0) {\n            var defaultLayer = {\n                id: 'default_layer', visible: true, lock: false, objects: [], zIndex: 0,\n                objectZIndex: -1, zIndexTable: {}\n            };\n            this.commandHandler.addLayer(defaultLayer);\n        }\n        this.setActiveLayer(this.layers[this.layers.length - 1].id);\n    };\n    /** @private */\n    Diagram.prototype.resetTool = function () {\n        this.eventHandler.resetTool();\n    };\n    Diagram.prototype.initObjectExtend = function (obj, layer, independentObj) {\n        if (independentObj) {\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, obj.wrapper.bounds);\n            layer.zIndexTable[obj.zIndex] = obj.id;\n            if (!checkBoundaryConstraints) {\n                var node = obj instanceof Node ? this.nodes : this.connectors;\n                for (var i = 0; i <= node.length; i++) {\n                    if (node[i] && obj.id === node[i].id) {\n                        node.splice(i, 1);\n                    }\n                }\n                delete layer.zIndexTable[obj.zIndex];\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.initObject = function (obj, layer, independentObj, group) {\n        if (independentObj === void 0) { independentObj = true; }\n        if (obj !== undefined) {\n            if (independentObj) {\n                if (!layer) {\n                    this.addToLayer(obj, false);\n                    layer = this.activeLayer;\n                }\n                //Move the common properties like zindex and id to an abstract class\n                if (obj instanceof Node || obj instanceof Connector) {\n                    this.setZIndex(layer, obj);\n                }\n            }\n            if (obj instanceof Node) {\n                if (independentObj) {\n                    if (obj.id !== 'helper') {\n                        var getDefaults = getFunction(this.getNodeDefaults);\n                        if (getDefaults) {\n                            var defaults = getDefaults(obj, this);\n                            if (defaults && defaults !== obj) {\n                                extendObject(defaults, obj);\n                            }\n                        }\n                    }\n                    this.initNode(obj, this.element.id);\n                }\n            }\n            else if (obj instanceof Connector) {\n                var getDefaults = getFunction(this.getConnectorDefaults);\n                if (getDefaults) {\n                    var defaults = getDefaults(obj, this);\n                    if (defaults && defaults !== obj) {\n                        extendObject(defaults, obj);\n                    }\n                    if (obj.segments.length) {\n                        if (obj.type !== obj.segments[0].type) {\n                            obj.segments = [];\n                        }\n                    }\n                }\n                var sourceNode = this.nameTable[obj.sourceID];\n                var targetNode = this.nameTable[obj.targetID];\n                var port = this.getConnectedPort(sourceNode, obj);\n                var targetPort = this.getConnectedPort(targetNode, obj);\n                var outPort = this.findInOutConnectPorts(sourceNode, false);\n                var inPort = this.findInOutConnectPorts(targetNode, true);\n                if ((sourceNode !== undefined && canOutConnect(sourceNode)) || (obj.sourcePortID !== '' && canPortOutConnect(outPort))) {\n                    obj.sourceWrapper = this.getEndNodeWrapper(sourceNode, obj, true);\n                    if (obj.sourcePortID) {\n                        if (port && port.constraints && !(port.constraints & PortConstraints.None)) {\n                            obj.sourcePortWrapper = this.getWrapper(sourceNode.wrapper, obj.sourcePortID);\n                        }\n                    }\n                }\n                if ((targetNode !== undefined && canInConnect(targetNode)) || (obj.targetPortID !== '' && canPortInConnect(inPort))) {\n                    obj.targetWrapper = this.getEndNodeWrapper(targetNode, obj, false);\n                    if (obj.targetPortID) {\n                        if (targetPort && targetPort.constraints && !(targetPort.constraints & PortConstraints.None)) {\n                            obj.targetPortWrapper = this.getWrapper(targetNode.wrapper, obj.targetPortID);\n                        }\n                    }\n                }\n                if (!independentObj) {\n                    var points = obj.getConnectorPoints(obj.type);\n                    updateConnector(obj, points);\n                }\n                if (independentObj) {\n                    obj.init(this);\n                }\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    if (this.pathTable[obj.wrapper.children[k].data]) {\n                        obj.wrapper.children[k].absoluteBounds =\n                            this.pathTable[obj.wrapper.children[k].data].absoluteBounds;\n                    }\n                }\n                obj.wrapper.measure(new Size(undefined, undefined));\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                for (var j = 0; j < obj.wrapper.children.length; j++) {\n                    this.pathTable[obj.wrapper.children[j].data] = {};\n                    this.pathTable[obj.wrapper.children[j].data].absoluteBounds =\n                        obj.wrapper.children[j].absoluteBounds;\n                }\n            }\n            if (obj instanceof Node && obj.children && obj.container) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    this.nameTable[obj.children[i]].offsetX = this.nameTable[obj.children[i]].wrapper.offsetX;\n                    this.nameTable[obj.children[i]].offsetY = this.nameTable[obj.children[i]].wrapper.offsetY;\n                }\n            }\n            if (this.bpmnModule && obj instanceof Node\n                && obj.shape.type === 'Bpmn' && obj.shape.annotations.length > 0) {\n                this.bpmnModule.updateQuad(obj, this);\n            }\n            this.initObjectExtend(obj, layer, independentObj);\n            this.nameTable[obj.id] = obj;\n            if (obj instanceof Node && obj.children) {\n                if (!group && !obj.container) {\n                    this.updateGroupOffset(obj, true);\n                }\n                this.groupTable[obj.id] = obj.children;\n                for (var i = 0; i < obj.children.length; i++) {\n                    var node = (this.nameTable[obj.children[i]]);\n                    if (node) {\n                        node.parentId = obj.id;\n                    }\n                }\n                if (!this.isLoading && obj.rotateAngle && !obj.container) {\n                    this.commandHandler.rotateObjects(obj, [obj], obj.rotateAngle, { x: obj.offsetX, y: obj.offsetY }, false);\n                }\n            }\n            this.updateQuad(obj);\n        }\n        if (obj.visible === false) {\n            this.updateElementVisibility(obj.wrapper, obj, false);\n        }\n    };\n    Diagram.prototype.getConnectedPort = function (node, connector) {\n        if (node && node.ports) {\n            for (var _i = 0, _a = node.ports; _i < _a.length; _i++) {\n                var port = _a[_i];\n                if (port.id === connector.sourcePortID) {\n                    return port;\n                }\n                else if (port.id === connector.targetPortID) {\n                    return port;\n                }\n            }\n        }\n        return null;\n    };\n    Diagram.prototype.scaleObject = function (obj, size, isWidth) {\n        var actualSize = isWidth ? obj.wrapper.actualSize.width : obj.wrapper.actualSize.height;\n        var sw = (isWidth) ? 1 + ((size - actualSize) / actualSize) : 1;\n        var sh = (isWidth) ? 1 : 1 + ((size - actualSize) / actualSize);\n        var groupOffsetX = obj.offsetX;\n        var groupOffsetY = obj.offsetY;\n        this.realActions |= RealAction.PreventDrag;\n        this.scale(obj, sw, sh, { x: 0.5, y: 0.5 });\n        this.realActions &= ~RealAction.PreventDrag;\n    };\n    Diagram.prototype.updateDefaultLayoutIcons = function (node) {\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.type === 'ComplexHierarchicalTree') {\n            {\n                this.updateDefaultLayoutIcon(node, node.expandIcon);\n                this.updateDefaultLayoutIcon(node, node.collapseIcon);\n            }\n        }\n    };\n    Diagram.prototype.updateDefaultLayoutIcon = function (node, icon) {\n        if (icon.shape !== 'None') {\n            if (icon.horizontalAlignment === 'Auto' && icon.verticalAlignment === 'Auto' &&\n                icon.offset.x === .5 && icon.offset.y === 1) {\n                var iconWrapper = this.getWrapper(node.wrapper, 'icon_content');\n                var offsetX = void 0;\n                var offsetY = void 0;\n                if (this.layout.orientation === 'TopToBottom' || this.layout.orientation === 'BottomToTop') {\n                    offsetX = .5;\n                    offsetY = this.layout.orientation === 'TopToBottom' ? 1 : 0;\n                }\n                else if (this.layout.orientation === 'RightToLeft' || this.layout.orientation === 'LeftToRight') {\n                    offsetX = this.layout.orientation === 'LeftToRight' ? 1 : 0;\n                    offsetY = .5;\n                }\n                iconWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                iconWrapper.horizontalAlignment = 'Center';\n                iconWrapper.verticalAlignment = 'Center';\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.updateGroupOffset = function (node, isUpdateSize) {\n        if ((node.children && node.children.length > 0 && (!node.container)) || (node.processId)) {\n            var node1 = this.nameTable[node.id];\n            if (!(this.realActions & RealAction.PreventScale) && !(this.realActions & RealAction.PreventDrag)) {\n                if (node1.offsetX && !(this.diagramActions & DiagramAction.ToolAction)\n                    && !(this.diagramActions & DiagramAction.PublicMethod)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffX = (node1.offsetX - node.wrapper.offsetX);\n                    node1.offsetX = node.wrapper.offsetX;\n                    if (node.flip === 'None') {\n                        this.drag(node1, diffX, 0);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetX = node.wrapper.offsetX;\n                }\n                if (node1.offsetY && !(this.diagramActions & DiagramAction.ToolAction)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    if (node.flip === 'None') {\n                        this.drag(node1, 0, diffY);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetY = node.wrapper.offsetY;\n                }\n                if (this.diagramActions) {\n                    node1.width = node.wrapper.actualSize.width;\n                    node1.height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n        if (isUpdateSize) {\n            if ((node.children && node.children.length > 0)) {\n                if (this.nameTable[node.id].width !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].width, true);\n                }\n                else {\n                    this.nameTable[node.id].width = node.wrapper.actualSize.width;\n                }\n                if (this.nameTable[node.id].height !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].height, false);\n                }\n                else {\n                    this.nameTable[node.id].height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initNode = function (obj, diagramId, group) {\n        var canvas = obj.initContainer();\n        var portContainer = new Canvas();\n        var content;\n        if (!canvas.children) {\n            canvas.children = [];\n        }\n        if (obj.children) {\n            canvas.measureChildren = false;\n            if (obj.container && (obj.container.type === 'Grid')) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    var childCollection = new Canvas();\n                    var child = this.nameTable[obj.children[i]];\n                    childCollection.children = [];\n                    childCollection.children.push(child.wrapper);\n                    if (child) {\n                        canvas.addObject(child.wrapper, child.rowIndex, child.columnIndex, child.rowSpan, child.columnSpan);\n                    }\n                }\n            }\n            else {\n                for (var i = 0; i < obj.children.length; i++) {\n                    if (this.nameTable[obj.children[i]]) {\n                        var child = this.nameTable[obj.children[i]];\n                        this.updateStackProperty(obj, child, i);\n                        canvas.children.push(child.wrapper);\n                        canvas.elementActions = canvas.elementActions | ElementAction.ElementIsGroup;\n                        child.wrapper.flip = child.wrapper.flip === 'None' ?\n                            obj.wrapper.flip : child.wrapper.flip;\n                    }\n                }\n            }\n            portContainer.id = obj.id + 'group_container';\n            portContainer.style.fill = 'none';\n            portContainer.style.strokeColor = 'none';\n            portContainer.horizontalAlignment = 'Stretch';\n            portContainer.verticalAlignment = 'Stretch';\n            canvas.style = obj.style;\n            portContainer.children = [];\n            portContainer.preventContainer = true;\n            if (obj.container) {\n                portContainer.relativeMode = 'Object';\n            }\n            if (!obj.container || (obj.container.type !== 'Grid')) {\n                canvas.children.push(portContainer);\n            }\n        }\n        else {\n            var setNodeTemplate = getFunction(this.setNodeTemplate);\n            if (setNodeTemplate) {\n                content = setNodeTemplate(obj, this);\n            }\n            if (!content) {\n                content = obj.init(this);\n            }\n            canvas.children.push(content);\n        }\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        wrapperContent = getFunction(this.getDescription);\n        if (wrapperContent) {\n            (obj.children ? canvas : content).description = wrapperContent;\n        }\n        else {\n            (obj.children ? canvas : content).description = obj.annotations.length ? obj.annotations[0].content : obj.id;\n        }\n        var container = obj.children ? portContainer : canvas;\n        obj.initAnnotations(this.getDescription, container, this.element.id, canVitualize(this) ? true : false);\n        obj.initPorts(this.getDescription, container);\n        obj.initIcons(this.getDescription, this.layout, container, diagramId);\n        if (obj.shape.type === 'SwimLane' && obj.wrapper && obj.wrapper.children.length > 0 &&\n            obj.wrapper.children[0] instanceof GridPanel) {\n            swimLaneMeasureAndArrange(obj);\n            arrangeChildNodesInSwimLane(this, obj);\n        }\n        else {\n            canvas.measure(new Size(obj.width, obj.height));\n            if (canvas instanceof GridPanel) {\n                canvas.arrange(canvas.desiredSize, true);\n            }\n            else {\n                canvas.arrange(canvas.desiredSize);\n            }\n        }\n        if (obj.wrapper.flip !== 'None' && obj.wrapper.elementActions & ElementAction.ElementIsGroup) {\n            alignElement(obj.wrapper, obj.wrapper.offsetX, obj.wrapper.offsetY, this, obj.wrapper.flip);\n        }\n        if (obj instanceof Node && obj.container && (obj.width < canvas.outerBounds.width || obj.height < canvas.outerBounds.height) &&\n            canvas.bounds.x <= canvas.outerBounds.x && canvas.bounds.y <= canvas.outerBounds.y) {\n            obj.width = canvas.width = canvas.outerBounds.width;\n            obj.height = canvas.height = canvas.outerBounds.height;\n            canvas.measure(new Size(obj.width, obj.height));\n            canvas.arrange(canvas.desiredSize);\n        }\n        if (obj.container && obj.container.type === 'Grid' && obj.children && obj.children.length > 0) {\n            this.updateChildPosition(obj);\n        }\n    };\n    Diagram.prototype.updateChildPosition = function (obj) {\n        for (var i = 0; i < obj.children.length; i++) {\n            var child = this.getObject(obj.children[i]);\n            child.offsetX = child.wrapper.offsetX;\n            child.offsetY = child.wrapper.offsetY;\n            if (child.children && child.children.length > 0) {\n                this.updateChildPosition(child);\n            }\n        }\n    };\n    Diagram.prototype.canExecute = function () {\n        return true;\n    };\n    Diagram.prototype.updateStackProperty = function (obj, child, index) {\n        if (obj.container && obj.container.type === 'Stack') {\n            if (!child.width) {\n                child.wrapper.horizontalAlignment = 'Stretch';\n                child.horizontalAlignment = 'Stretch';\n            }\n            if (!child.height) {\n                child.verticalAlignment = 'Stretch';\n                child.wrapper.verticalAlignment = 'Stretch';\n            }\n            if (index && obj.shape.type === 'UmlClassifier') {\n                child.umlIndex = index;\n            }\n        }\n    };\n    Diagram.prototype.initViews = function () {\n        if (!this.isLoading) {\n            this.views.push(this.element.id);\n            this.views[this.element.id] = this;\n        }\n    };\n    Diagram.prototype.initCommands = function () {\n        var i;\n        var newCommands = this.commandManager.commands;\n        var commands = {\n            'copy': {\n                execute: this.copyCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.C, keyModifiers: KeyModifiers.Control }\n            },\n            'paste': {\n                execute: this.pasteCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.V, keyModifiers: KeyModifiers.Control }\n            },\n            'cut': {\n                execute: this.cutCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.X, keyModifiers: KeyModifiers.Control }\n            },\n            'delete': {\n                execute: this.removeCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Delete }\n            },\n            'selectAll': {\n                execute: this.selectAll.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.A, keyModifiers: KeyModifiers.Control }\n            },\n            'undo': {\n                execute: this.undo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Z, keyModifiers: KeyModifiers.Control }\n            },\n            'redo': {\n                execute: this.redo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Y, keyModifiers: KeyModifiers.Control }\n            },\n            'nudgeUp': {\n                execute: this.nudgeCommand.bind(this, 'Up'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Up },\n                parameter: 'up'\n            },\n            'nudgeRight': {\n                execute: this.nudgeCommand.bind(this, 'Right'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Right },\n                parameter: 'right'\n            },\n            'nudgeDown': {\n                execute: this.nudgeCommand.bind(this, 'Down'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Down },\n                parameter: 'down'\n            },\n            'nudgeLeft': {\n                execute: this.nudgeCommand.bind(this, 'Left'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Left },\n                parameter: 'left'\n            },\n            'startEdit': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.F2 }\n            },\n            'endEdit': {\n                execute: this.endEditCommand.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Escape }\n            },\n            'focusToNextItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab }\n            },\n            'focusToPreviousItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab, keyModifiers: KeyModifiers.Control }\n            },\n            'selectFocusedItem': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Enter }\n            },\n        };\n        this.initCommandManager(newCommands, commands);\n    };\n    Diagram.prototype.overrideCommands = function (newCommand, commands) {\n        var command;\n        for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n            var key = _a[_i];\n            command = commands[key];\n            if (newCommand.gesture.key === command.gesture.key && newCommand.gesture.keyModifiers === command.gesture.keyModifiers) {\n                delete commands[key];\n                break;\n            }\n        }\n    };\n    Diagram.prototype.initCommandManager = function (newCommands, commands) {\n        var i = 0;\n        if (newCommands) {\n            for (i = 0; i < newCommands.length; i++) {\n                if (commands[newCommands[i].name] && newCommands[i]) {\n                    if (newCommands[i].canExecute) {\n                        commands[newCommands[i].name].canExecute = newCommands[i].canExecute;\n                    }\n                    if (newCommands[i].execute) {\n                        commands[newCommands[i].name].execute = newCommands[i].execute;\n                    }\n                    if (newCommands[i].gesture.key || newCommands[i].gesture.keyModifiers) {\n                        commands[newCommands[i].name].gesture = newCommands[i].gesture;\n                    }\n                    if (newCommands[i].parameter !== '') {\n                        commands[newCommands[i].name].parameter = newCommands[i].parameter;\n                    }\n                }\n                else {\n                    this.overrideCommands(newCommands[i], commands);\n                    commands[newCommands[i].name] = {\n                        execute: newCommands[i].execute, canExecute: newCommands[i].canExecute, gesture: newCommands[i].gesture,\n                        parameter: newCommands[i].parameter\n                    };\n                }\n            }\n        }\n        this.commands = commands;\n    };\n    /** @private */\n    Diagram.prototype.updateNodeEdges = function (node) {\n        for (var _i = 0, _a = node.inEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].targetID = '';\n            }\n        }\n        for (var _b = 0, _c = node.outEdges; _b < _c.length; _b++) {\n            var edge = _c[_b];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].sourceID = '';\n            }\n        }\n        node.inEdges = [];\n        node.outEdges = [];\n    };\n    /** @private */\n    Diagram.prototype.updateIconVisibility = function (node, visibility) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child.id) {\n                var id = child.id.split(node.id)[1];\n                if (id && id.match('^_icon')) {\n                    child.visible = visibility;\n                    this.updateDiagramContainerVisibility(child, visibility);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateEdges = function (obj) {\n        if (obj.sourceID !== undefined && obj.sourceID !== '') {\n            var node = this.nameTable[obj.sourceID];\n            if (node && node.outEdges && node.outEdges.length === 0) {\n                node.outEdges = [];\n            }\n            if (node && node.outEdges && node.outEdges.indexOf(obj.id) === -1) {\n                node.outEdges.push(obj.id);\n            }\n        }\n        if (obj.targetID !== undefined && obj.targetID !== '') {\n            var node = this.nameTable[obj.targetID];\n            if (node && node.inEdges && node.inEdges.length === 0) {\n                node.inEdges = [];\n            }\n            if (node && node.inEdges && node.inEdges.indexOf(obj.id) === -1) {\n                node.inEdges.push(obj.id);\n            }\n            if (node && node.visible && node.outEdges) {\n                var value = node.outEdges.length === 0 ? false : true;\n                this.updateIconVisibility(node, value);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagram = function () {\n        this.initLayerObjects();\n        this.doLayout();\n        this.updateBridging();\n        this.scroller.setSize();\n    };\n    Diagram.prototype.updateCanupdateStyle = function (element, value) {\n        for (var j = 0; j < element.length; j++) {\n            if (element[j].children) {\n                this.updateCanupdateStyle(element[j].children, value);\n            }\n            element[j].canApplyStyle = value;\n        }\n    };\n    Diagram.prototype.getZindexPosition = function (obj, viewId) {\n        var objects = [];\n        var index = undefined;\n        objects = objects.concat(this.nodes);\n        objects = objects.concat(this.connectors);\n        var type;\n        if (obj.zIndex !== -1) {\n            for (var i = 0; i < objects.length; i++) {\n                if (objects[i].zIndex > obj.zIndex) {\n                    if (obj.shape.type === 'HTML' || obj.shape.type === 'Native') {\n                        type = obj.shape.type === 'HTML' ? 'html' : 'native';\n                    }\n                    index = getDomIndex(viewId, objects[i].id, type);\n                }\n            }\n        }\n        return index;\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramObject = function (obj, canIgnoreIndex) {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (this.diagramActions) {\n                if (view.mode === 'SVG') {\n                    var htmlLayer = getHTMLLayer(this.element.id);\n                    var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                    if (this.diagramActions & DiagramAction.Interactions) {\n                        this.updateCanupdateStyle(obj.wrapper.children, true);\n                    }\n                    this.diagramRenderer.updateNode(obj.wrapper, diagramElementsLayer, htmlLayer, undefined, canIgnoreIndex ? undefined : this.getZindexPosition(obj, view.element.id));\n                    this.updateCanupdateStyle(obj.wrapper.children, true);\n                }\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.updateGridContainer = function (grid) {\n        var view;\n        var htmlLayer = getHTMLLayer(this.element.id);\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (view.mode === 'SVG' && this.diagramActions) {\n                var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                this.diagramRenderer.updateNode(grid, diagramElementsLayer, htmlLayer, undefined);\n            }\n            else {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.getObjectsOfLayer = function (objectArray) {\n        var nodeArray = [];\n        for (var _i = 0, objectArray_1 = objectArray; _i < objectArray_1.length; _i++) {\n            var obj = objectArray_1[_i];\n            if (this.nameTable[obj]) {\n                nodeArray.push(this.nameTable[obj]);\n            }\n        }\n        return nodeArray;\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagramLayer = function () {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            switch (view.mode) {\n                case 'SVG':\n                    this.refreshSvgDiagramLayer(view);\n                    break;\n                case 'Canvas':\n                    this.refreshCanvasLayers(view);\n                    break;\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasLayers = function (view) {\n        if (!view) {\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view_1 = this.views[temp];\n                this.refreshCanvasDiagramLayer(view_1);\n            }\n        }\n        else {\n            this.refreshCanvasDiagramLayer(view);\n        }\n    };\n    Diagram.prototype.renderBasicElement = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        for (var i = 0; i < this.basicElements.length; i++) {\n            var element = this.basicElements[i];\n            if (element instanceof Container) {\n                element.prevRotateAngle = 0;\n            }\n            element.measure(new Size(element.width, element.height));\n            element.arrange(element.desiredSize);\n            view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n        }\n    };\n    Diagram.prototype.refreshElements = function (view) {\n        if (!this.isDestroyed) {\n            this.clearCanvas(view);\n            if (view instanceof Diagram) {\n                view.diagramLayer.getContext('2d').setTransform(view.scroller.currentZoom, 0, 0, view.scroller.currentZoom, 0, 0);\n                view.diagramLayer.getContext('2d').scale(1.5, 1.5);\n            }\n            var htmlLayer = getHTMLLayer(view.element.id);\n            var bounds = this.spatialSearch.getPageBounds();\n            this.renderDiagramElements(view.diagramLayer, view.diagramRenderer, htmlLayer);\n            for (var i = 0; i < this.basicElements.length; i++) {\n                var element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize);\n                view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n            }\n            if (view instanceof Diagram) {\n                view.diagramLayer.style.transform = 'scale(' + (2 / 3) + ')';\n                view.diagramLayer.style.transformOrigin = '0 0';\n            }\n            this.renderTimer = null;\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasDiagramLayer = function (view) {\n        var _this = this;\n        if (view.mode !== 'SVG' && !this.isDestroyed) {\n            if (this.basicElements.length > 0) {\n                this.renderBasicElement(view);\n            }\n            if ((!this.diagramActions || (this.diagramActions & DiagramAction.Render) === 0)\n                || (DiagramAction.ToolAction & this.diagramActions) || canVitualize(this) || (this.scroller.currentZoom !== 1)) {\n                this.refreshElements(view);\n            }\n            else if (!this.renderTimer) {\n                this.renderTimer = setTimeout(function () {\n                    _this.refreshElements(view);\n                }, 40);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePortVisibility = function (node, portVisibility, inverse) {\n        var portElement;\n        var drawingObject = !(this.drawingObject && this.drawingObject.shape) ? true : false;\n        if (node instanceof Node && drawingObject && canMove(node)) {\n            var ports = node.ports;\n            var changed = false;\n            for (var i = 0; i < ports.length; i++) {\n                portElement = this.getWrapper(node.wrapper, ports[i].id);\n                if ((portVisibility & PortVisibility.Hover || portVisibility & PortVisibility.Connect)) {\n                    if (checkPortRestriction(ports[i], portVisibility)) {\n                        portElement.visible = !inverse;\n                        changed = true;\n                    }\n                }\n            }\n            if (changed) {\n                this.updateDiagramObject(node);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshSvgDiagramLayer = function (view) {\n        var element;\n        var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(view.element.id);\n        if (!canVitualize(this)) {\n            for (var i = 0; i < this.basicElements.length; i++) {\n                element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize, (!(this.diagramActions & DiagramAction.Render) ? true : false));\n                this.diagramRenderer.renderElement(element, diagramElementsLayer, htmlLayer);\n            }\n            this.renderDiagramElements(diagramElementsLayer, this.diagramRenderer, htmlLayer);\n        }\n        else {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeVirtualObjects = function (clearIntervalVal) {\n        if (this.deleteVirtualObject) {\n            for (var i = 0; i < this.scroller.removeCollection.length; i++) {\n                var obj = this.nameTable[this.scroller.removeCollection[i]];\n                this.removeElements(obj);\n            }\n            this.deleteVirtualObject = false;\n        }\n        clearInterval(clearIntervalVal);\n    };\n    /** @private */\n    Diagram.prototype.updateTextElementValue = function (object) {\n        for (var j = 0; j < object.wrapper.children.length; j++) {\n            var element = object.wrapper.children[j];\n            if (element instanceof TextElement) {\n                element.canMeasure = true;\n                element.measure(new Size(object.width, object.height));\n                element.arrange(element.desiredSize);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateVirtualObjects = function (collection, remove, tCollection) {\n        var diagramElementsLayer = document.getElementById('diagram_diagramLayer');\n        var htmlLayer = getHTMLLayer('diagram');\n        if (this.mode === 'SVG') {\n            for (var i = 0; i < collection.length; i++) {\n                var index = this.scroller.removeCollection.indexOf(collection[i]);\n                if (index >= 0) {\n                    this.scroller.removeCollection.splice(index, 1);\n                }\n                var object = this.nameTable[collection[i]];\n                this.updateTextElementValue(object);\n                this.diagramRenderer.renderElement(object.wrapper, diagramElementsLayer, htmlLayer, undefined, undefined, undefined, undefined, object.zIndex);\n            }\n            for (var k = 0; k < tCollection.length; k++) {\n                this.scroller.removeCollection.push(tCollection[k]);\n            }\n            if (this.scroller.currentZoom !== 1) {\n                this.eventHandler.updateVirtualization();\n            }\n        }\n        else if (this.diagramActions) {\n            this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderDiagramElements = function (canvas, renderer, htmlLayer, transform, fromExport, isOverView) {\n        if (transform === void 0) { transform = true; }\n        var pageBounds = this.scroller.getPageBounds();\n        pageBounds.x *= this.scroller.currentZoom;\n        pageBounds.y *= this.scroller.currentZoom;\n        pageBounds.width *= this.scroller.currentZoom;\n        pageBounds.height *= this.scroller.currentZoom;\n        var difX = -this.scroller.horizontalOffset - pageBounds.x;\n        var difY = -this.scroller.verticalOffset - pageBounds.y;\n        for (var _i = 0, _a = Object.keys(this.layerZIndexTable); _i < _a.length; _i++) {\n            var layerId = _a[_i];\n            var layer = this.commandHandler.getLayer(this.layerZIndexTable[layerId]);\n            var left = void 0;\n            var top_1 = void 0;\n            if (this.mode === 'Canvas' && canVitualize(this) && !this.diagramActions) {\n                this.scroller.virtualizeElements();\n            }\n            var id = (this.mode === 'Canvas' && canVitualize(this) &&\n                this.scroller.oldCollectionObjects.length > 0) ?\n                this.scroller.oldCollectionObjects : undefined;\n            for (var _b = 0, _c = Object.keys(id || layer.zIndexTable); _b < _c.length; _b++) {\n                var node = _c[_b];\n                var renderNode = id ? this.nameTable[id[node]] : this.nameTable[layer.zIndexTable[node]];\n                if (renderNode && !(renderNode.parentId) &&\n                    !(renderNode.processId)) {\n                    var transformValue = {\n                        tx: this.scroller.transform.tx,\n                        ty: this.scroller.transform.ty,\n                        scale: this.scroller.transform.scale\n                    };\n                    if (canVitualize(this)) {\n                        if (this.scroller.currentZoom < 1) {\n                            if (pageBounds.x < 0 || this.scroller.horizontalOffset < 0) {\n                                var verticalValue = this.scroller.verticalOffset < 0 ? this.scroller.verticalOffset : 0;\n                                left = (difX > 0 ? difX : 0) + 'px';\n                                top_1 = ((this.realActions & RealAction.vScrollbarMoved) ? 0 : -verticalValue) + 'px';\n                            }\n                            else {\n                                left = 0 + 'px';\n                                top_1 = 0 + 'px';\n                            }\n                            if (this.realActions & RealAction.hScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.hScrollbarMoved;\n                            }\n                            if (this.realActions & RealAction.vScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.vScrollbarMoved;\n                            }\n                        }\n                        else {\n                            left = (pageBounds.x < 0 ? difX : -this.scroller.horizontalOffset) + 'px';\n                            top_1 = (pageBounds.y < 0 ? difY : -this.scroller.verticalOffset) + 'px';\n                        }\n                        this.diagramLayer.style.left = left;\n                        this.diagramLayer.style.top = top_1;\n                        transformValue.tx = this.scroller.horizontalOffset / transformValue.scale;\n                        transformValue.ty = this.scroller.verticalOffset / transformValue.scale;\n                    }\n                    var status_1 = true;\n                    if (fromExport) {\n                        status_1 = false;\n                    }\n                    this.updateTextElementValue(renderNode);\n                    renderer.renderElement(renderNode.wrapper, canvas, htmlLayer, (!renderer.isSvgMode && transform) ? transformValue : undefined, undefined, undefined, status_1 && (!this.diagramActions || isOverView));\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateBridging = function (isLoad) {\n        if (this.bridgingModule) {\n            for (var i = 0; i < this.connectors.length; i++) {\n                var connector = this.connectors[i];\n                this.bridgingModule.updateBridging(connector, this);\n                var canvas = this.connectors[i].wrapper;\n                if (canvas) {\n                    var pathSegment = canvas.children[0];\n                    var data = pathSegment.data;\n                    connector.getSegmentElement(connector, pathSegment, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n                        this.layout.orientation : undefined);\n                    if (pathSegment.data !== data) {\n                        canvas.measure(new Size());\n                        canvas.arrange(canvas.desiredSize);\n                        if (this.mode === 'SVG' && !isLoad) {\n                            this.updateDiagramObject(connector);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.setCursor = function (cursor) {\n        this.diagramRenderer.setCursor(this.diagramCanvas, cursor);\n    };\n    /** @private */\n    Diagram.prototype.clearCanvas = function (view) {\n        var width;\n        var height;\n        width = view.contentWidth || view.diagramLayer.width / this.scroller.currentZoom;\n        height = view.contentHeight || view.diagramLayer.height / this.scroller.currentZoom;\n        if (view.mode !== 'SVG') {\n            var ctx = CanvasRenderer.getContext(view.diagramLayer);\n            ctx.clearRect(0, 0, width, height);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateScrollOffset = function () {\n        this.scroller.setScrollOffset(this.diagramCanvas.scrollLeft, this.diagramCanvas.scrollTop);\n        updateRuler(this);\n        if (canVitualize(this)) {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.setOffset = function (offsetX, offsetY) {\n        var container = document.getElementById(this.element.id + 'content');\n        if (container) {\n            container.scrollLeft = offsetX;\n            container.scrollTop = offsetY;\n        }\n    };\n    /** @private */\n    Diagram.prototype.setSize = function (width, height) {\n        if (this.diagramLayer && !this.preventUpdate) {\n            var position = getRulerSize(this);\n            width -= position.width;\n            height -= position.height;\n            var bounds = this.spatialSearch.getPageBounds();\n            bounds.x *= this.scroller.currentZoom;\n            bounds.y *= this.scroller.currentZoom;\n            bounds.width *= this.scroller.currentZoom;\n            bounds.height *= this.scroller.currentZoom;\n            var factor = this.mode === 'SVG' ? 1 : 1.5;\n            var diagramLayer = this.mode === 'SVG' ?\n                getDiagramLayerSvg(this.element.id) : this.diagramLayer;\n            var w = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortWidth : width;\n            var h = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortHeight : height;\n            diagramLayer.setAttribute('width', (factor * w).toString());\n            diagramLayer.setAttribute('height', (factor * h).toString());\n            var attr = { 'width': width.toString(), 'height': height.toString() };\n            this.diagramLayerDiv.style.width = width + 'px';\n            this.diagramLayerDiv.style.height = height + 'px';\n            setAttributeSvg(getNativeLayerSvg(this.element.id), attr);\n            setAttributeSvg(getPortLayerSvg(this.element.id), attr);\n            var adornerSVG = getAdornerLayerSvg(this.element.id);\n            setAttributeSvg(adornerSVG, attr);\n            adornerSVG.parentNode.style.width = width + 'px';\n            adornerSVG.parentNode.style.height = height + 'px';\n            var gridLayer = getGridLayerSvg(this.element.id);\n            setAttributeSvg(gridLayer, attr);\n            this.diagramRenderer.updateGrid(this.snapSettings, gridLayer, this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n            setAttributeSvg(getBackgroundLayerSvg(this.element.id), attr);\n            this.htmlLayer.style.width = width + 'px';\n            this.htmlLayer.style.height = height + 'px';\n            if (this.mode !== 'SVG' && !(canVitualize(this))) {\n                this.refreshDiagramLayer();\n            }\n            if (this.mode === 'SVG' && canVitualize(this)) {\n                this.scroller.virtualizeElements();\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.transformLayers = function () {\n        var bounds = this.spatialSearch.getPageBounds();\n        bounds.x *= this.scroller.currentZoom;\n        bounds.y *= this.scroller.currentZoom;\n        bounds.width *= this.scroller.currentZoom;\n        bounds.height *= this.scroller.currentZoom;\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.diagramRenderer.transformLayers(this.scroller.transform, this.mode === 'SVG');\n        this.updateSelector();\n        this.renderPageBreaks(bounds);\n    };\n    /**\n     * Defines how to remove the Page breaks\n     * @private\n     */\n    Diagram.prototype.removePageBreaks = function () {\n        if (this.diagramLayer) {\n            var line = getBackgroundLayer(this.element.id);\n            if (line && line.childNodes) {\n                var length_1 = line.childNodes.length;\n                for (var i = 0; i < length_1; i++) {\n                    line.removeChild(line.childNodes[0]);\n                }\n            }\n        }\n    };\n    /**\n     * Defines how the page breaks has been rendered\n     * @private\n     */\n    Diagram.prototype.renderPageBreaks = function (bounds) {\n        this.removePageBreaks();\n        var backgroundLayer = getBackgroundLayer(this.element.id);\n        if (backgroundLayer) {\n            var i = 0;\n            bounds = this.scroller.getPageBounds(true);\n            var x = (this.scroller.transform.tx + bounds.x) * this.scroller.currentZoom;\n            var y = (this.scroller.transform.ty + bounds.y) * this.scroller.currentZoom;\n            var height = bounds.height * this.scroller.currentZoom;\n            var width = bounds.width * this.scroller.currentZoom;\n            DiagramRenderer.renderSvgBackGroundImage(this.pageSettings.background, this.element, x, y, width, height);\n            var options = {\n                id: backgroundLayer.id + 'rect', x: x,\n                y: y,\n                height: height,\n                width: width, angle: 0, stroke: '', strokeWidth: 1,\n                fill: this.pageSettings.background.color, opacity: 1,\n                pivotX: 0, pivotY: 0, visible: true, dashArray: '0',\n            };\n            this.diagramRenderer.drawRect(backgroundLayer, options);\n            if (this.pageSettings.showPageBreaks) {\n                var collection = this.scroller.getPageBreak(bounds);\n                for (i = 0; i < collection.length; i++) {\n                    this.diagramRenderer.drawLine(backgroundLayer, {\n                        class: 'e-diagram-page-break',\n                        fill: 'none', stroke: '#aaaaaa', strokeWidth: 1, dashArray: '10 10',\n                        opacity: 2, x: 0, y: 0, width: 0, height: 0, angle: 0, pivotX: 0, pivotY: 0, visible: true,\n                        startPoint: {\n                            x: (collection[i].x1 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y1 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        },\n                        endPoint: {\n                            x: (collection[i].x2 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y2 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        }, id: collection[i].y1 === collection[i].y2 ? 'HorizontalLines' : 'VerticalLines'\n                    });\n                }\n            }\n        }\n    };\n    Diagram.prototype.validatePageSize = function () {\n        var temp = 0;\n        if (this.pageSettings.orientation === 'Portrait') {\n            if (this.pageSettings.width > this.pageSettings.height) {\n                temp = this.pageSettings.height;\n                this.pageSettings.height = this.pageSettings.width;\n                this.pageSettings.width = temp;\n            }\n        }\n        else {\n            if (this.pageSettings.height > this.pageSettings.width) {\n                temp = this.pageSettings.width;\n                this.pageSettings.width = this.pageSettings.height;\n                this.pageSettings.height = temp;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.setOverview = function (overview, id) {\n        if (overview) {\n            if (overview) {\n                this.views.push(overview.id);\n                this.views[overview.id] = overview;\n                overview.renderDocument(overview);\n                overview.diagramRenderer.setLayers();\n                overview.updateView(overview);\n                this.renderNodes(overview);\n            }\n        }\n        else {\n            for (var i = 0; i < this.views.length; i++) {\n                if (this.views[i] === id) {\n                    overview = (this.views[id]);\n                }\n            }\n            this.views[id] = undefined;\n            var index = this.views.indexOf(id);\n            this.views.splice(index, 1);\n        }\n    };\n    Diagram.prototype.renderNodes = function (overview) {\n        if (overview) {\n            var renderer = new DiagramRenderer(overview.id, new SvgRenderer(), false);\n            var g = document.getElementById(overview.element.id + '_diagramLayer');\n            var htmlLayer = getHTMLLayer(overview.element.id);\n            this.renderDiagramElements(g, overview.diagramRenderer || renderer, htmlLayer, undefined, undefined, true);\n        }\n    };\n    Diagram.prototype.updateThumbConstraints = function (node, selectorModel, canInitialize) {\n        var state = 0;\n        var length = node.length;\n        for (var i = 0; i < length; i++) {\n            var obj = node[i];\n            var hideRotate = false;\n            var hideResize = false;\n            var thumbConstraints = selectorModel.thumbsConstraints;\n            if (obj instanceof Node) {\n                hideRotate = (obj.shape.type === 'Bpmn' && (obj.shape.shape === 'Activity' &&\n                    (obj.shape.activity.subProcess.collapsed === false)) ||\n                    obj.shape.shape === 'TextAnnotation');\n                hideResize = (obj.shape.type === 'Bpmn' && obj.shape.shape === 'TextAnnotation');\n                if (!canRotate(obj) || !(thumbConstraints & ThumbsConstraints.Rotate) || hideRotate) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n                if (!canResize(obj, 'SouthEast') || !(thumbConstraints & ThumbsConstraints.ResizeSouthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthEast;\n                }\n                if (!canResize(obj, 'NorthWest') || !(thumbConstraints & ThumbsConstraints.ResizeNorthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthWest;\n                }\n                if (!canResize(obj, 'East') || !(thumbConstraints & ThumbsConstraints.ResizeEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeEast;\n                }\n                if (!canResize(obj, 'West') || !(thumbConstraints & ThumbsConstraints.ResizeWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeWest;\n                }\n                if (!canResize(obj, 'North') || !(thumbConstraints & ThumbsConstraints.ResizeNorth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorth;\n                }\n                if (!canResize(obj, 'South') || !(thumbConstraints & ThumbsConstraints.ResizeSouth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouth;\n                }\n                if (!canResize(obj, 'NorthEast') || !(thumbConstraints & ThumbsConstraints.ResizeNorthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthEast;\n                }\n                if (!canResize(obj, 'SouthWest') || !(thumbConstraints & ThumbsConstraints.ResizeSouthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthWest;\n                }\n            }\n            else if (obj instanceof Connector) {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (canDragSourceEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorSource;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorSource;\n                }\n                if (canDragTargetEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorTarget;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorTarget;\n                }\n            }\n            else {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (!canResize(obj)) {\n                    thumbConstraints = thumbConstraints & ~(ThumbsConstraints.ResizeSouthEast | ThumbsConstraints.ResizeSouthWest |\n                        ThumbsConstraints.ResizeSouth | ThumbsConstraints.ResizeEast | ThumbsConstraints.ResizeWest |\n                        ThumbsConstraints.ResizeNorth | ThumbsConstraints.ResizeNorthEast | ThumbsConstraints.ResizeNorthWest);\n                }\n                if (!canRotate(obj)) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n            }\n            selectorModel.thumbsConstraints = thumbConstraints;\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelector = function (multipleSelection, isSwimLane) {\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        var rendererActions = this.diagramRenderer.rendererActions;\n        this.diagramRenderer.rendererActions = this.currentSymbol ?\n            this.addConstraints(rendererActions, RendererAction.DrawSelectorBorder) :\n            this.removeConstraints(rendererActions, RendererAction.DrawSelectorBorder);\n        this.clearSelectorLayer();\n        if (this.commandHandler.hasSelection()) {\n            if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                selectorModel.pivot = selectorModel.nodes[0].pivot;\n            }\n            selectorModel.wrapper.measure(size);\n            selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n            selectorModel.width = selectorModel.wrapper.actualSize.width;\n            selectorModel.height = selectorModel.wrapper.actualSize.height;\n            selectorModel.offsetX = selectorModel.wrapper.offsetX;\n            selectorModel.offsetY = selectorModel.wrapper.offsetY;\n            if (selectorModel.rotateAngle !== 0) {\n                for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                    var obj = _a[_i];\n                    obj.offsetX = obj.wrapper.offsetX;\n                    obj.offsetY = obj.wrapper.offsetY;\n                }\n                for (var _b = 0, _c = selectorModel.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    //update connections\n                }\n            }\n            var bounds = this.spatialSearch.getPageBounds();\n            var selectorElement = void 0;\n            selectorElement = getSelectorElement(this.element.id);\n            selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n            if (selectorModel.annotation) {\n                this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n            }\n            else {\n                this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                this.updateThumbConstraints(selectorModel.connectors, selectorModel, true);\n            }\n            if (selectorModel.annotation) {\n                this.renderSelectorForAnnotation(selectorModel, selectorElement);\n            }\n            else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                if (selectorModel.nodes[0] instanceof Node) {\n                    var node = selectorModel.nodes[0];\n                    if (checkParentAsContainer(this, node)) {\n                        if (!isSwimLane && (node.shape.type !== 'UmlClassifier' && !(node.parentId &&\n                            this.nameTable[node.parentId]\n                            && this.nameTable[node.parentId].shape.type === 'UmlClassifier'))) {\n                            if (!(node.container && (node.container.type === 'Canvas' || node.container.type === 'Grid'))) {\n                                selectorModel.nodes[0].constraints &= ~(NodeConstraints.Rotate | NodeConstraints.HideThumbs);\n                            }\n                            selectorModel.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                        }\n                    }\n                    var constraints = isSwimLane ? true : ((node.constraints & NodeConstraints.HideThumbs) ? true : false);\n                    var swimlane = (node.shape.type === 'SwimLane' || node.isLane || node.isPhase || isSwimLane) ? true : false;\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(node), constraints, swimlane);\n                }\n                else if (selectorModel.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                    var connector = selectorModel.connectors[0];\n                    this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorModel.constraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                }\n            }\n            else {\n                this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel));\n            }\n            if (!(selectorModel.annotation) && !this.currentSymbol) {\n                this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateSelector = function () {\n        var size = new Size();\n        var selector = this.selectedItems;\n        var selectorConstraints = selector.constraints;\n        if (!(this.diagramActions & DiagramAction.ToolAction) && this.selectedItems.nodes.length === 1) {\n            this.selectedItems.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n            this.selectedItems.wrapper.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n        }\n        if (this.selectedItems !== undefined) {\n            this.clearSelectorLayer();\n            if (selector.wrapper !== null && selector.wrapper.children && selector.wrapper.children.length) {\n                selector.wrapper.measure(size);\n                selector.wrapper.arrange(selector.wrapper.desiredSize);\n                if (selector.rotateAngle !== 0 || selector.rotateAngle !== selector.wrapper.prevRotateAngle) {\n                    for (var _i = 0, _a = selector.nodes; _i < _a.length; _i++) {\n                        var obj = _a[_i];\n                        obj.offsetX = obj.wrapper.offsetX;\n                        obj.offsetY = obj.wrapper.offsetY;\n                    }\n                }\n                selector.width = selector.wrapper.actualSize.width;\n                selector.height = selector.wrapper.actualSize.height;\n                selector.offsetX = selector.wrapper.offsetX;\n                selector.offsetY = selector.wrapper.offsetY;\n                var selectorEle = void 0;\n                selectorEle = getSelectorElement(this.element.id);\n                var canHideResizers = this.eventHandler.canHideResizers();\n                selector.thumbsConstraints = ThumbsConstraints.Default;\n                if (selector.annotation) {\n                    this.updateThumbConstraints([selector.annotation], selector);\n                }\n                else {\n                    this.updateThumbConstraints(selector.nodes, selector);\n                    this.updateThumbConstraints(selector.connectors, selector, true);\n                }\n                if ((this.selectedItems.constraints & SelectorConstraints.UserHandle) && (!(selector.annotation)) && !this.currentSymbol) {\n                    this.diagramRenderer.renderUserHandler(selector, selectorEle, this.scroller.transform);\n                }\n                if (selector.annotation) {\n                    this.renderSelectorForAnnotation(selector, selectorEle);\n                }\n                else if (selector.nodes.length + selector.connectors.length === 1) {\n                    if (selector.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                        var connector = selector.connectors[0];\n                        this.diagramRenderer.renderEndPointHandle(connector, selectorEle, selector.thumbsConstraints, selectorConstraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                    }\n                    else if (selector.nodes[0] instanceof Node) {\n                        var stackPanel = selector.nodes[0];\n                        if (checkParentAsContainer(this, selector.nodes[0])) {\n                            if (stackPanel.shape.type !== 'UmlClassifier' && !(stackPanel.parentId &&\n                                this.nameTable[stackPanel.parentId]\n                                && this.nameTable[stackPanel.parentId].shape.type === 'UmlClassifier')) {\n                                if (!(stackPanel.container && (stackPanel.container.type === 'Canvas'\n                                    || stackPanel.container.type === 'Grid'))) {\n                                    selector.nodes[0].constraints &= ~(NodeConstraints.HideThumbs | NodeConstraints.Rotate);\n                                }\n                                selector.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                            }\n                        }\n                        var swimlane = (stackPanel.shape.type === 'SwimLane' || stackPanel.isLane ||\n                            stackPanel.isPhase) ? true : false;\n                        this.diagramRenderer.renderResizeHandle(selector.wrapper.children[0], selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector.nodes[0]), (selector.nodes[0].constraints & NodeConstraints.HideThumbs) ? true : false, swimlane);\n                    }\n                }\n                else {\n                    if (this.diagramActions & DiagramAction.Interactions) {\n                        this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions | RendererAction.PreventRenderSelector;\n                    }\n                    this.diagramRenderer.renderResizeHandle(selector.wrapper, selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector));\n                    this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions & ~RendererAction.PreventRenderSelector;\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelectorForAnnotation = function (selectorModel, selectorElement) {\n        this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.annotation));\n    };\n    /** @private */\n    Diagram.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.clearSelectorLayer();\n        this.diagramRenderer.drawSelectionRectangle(x, y, width, height, this.adornerLayer, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.renderHighlighter = function (element) {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        this.diagramRenderer.renderHighlighter(element, adornerSvg, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.clearHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getNodesConnectors = function (selectedItems) {\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n            selectedItems.push(node);\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            var conn = this.connectors[i];\n            selectedItems.push(conn);\n        }\n        return selectedItems;\n    };\n    /** @private */\n    Diagram.prototype.clearSelectorLayer = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        if (!this.currentSymbol) {\n            var selectionRect = adornerSvg.getElementById(this.adornerLayer.id + '_selected_region');\n            if (selectionRect) {\n                selectionRect.parentNode.removeChild(selectionRect);\n            }\n            this.clearHighlighter();\n            var childNodes = getSelectorElement(this.element.id).childNodes;\n            var child = void 0;\n            for (var i = childNodes.length; i > 0; i--) {\n                child = childNodes[i - 1];\n                child.parentNode.removeChild(child);\n            }\n        }\n        else {\n            var symbolBorder = adornerSvg.getElementById('borderRect_symbol');\n            if (symbolBorder) {\n                symbolBorder.parentNode.removeChild(symbolBorder);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.getWrapper = function (nodes, id) {\n        var wrapper;\n        id = nodes.id + '_' + id;\n        var container = nodes instanceof Canvas ? nodes : this.getPortContainer(this.nameTable[nodes.id]);\n        for (var i = 0; i < container.children.length; i++) {\n            if (id === container.children[i].id) {\n                wrapper = container.children[i];\n            }\n        }\n        return wrapper;\n    };\n    /** @private */\n    Diagram.prototype.getEndNodeWrapper = function (node, connector, source) {\n        if (node.shape.type === 'Bpmn' && node.wrapper.children[0] instanceof Canvas) {\n            if (node.shape.shape === 'Activity') {\n                if (source && node.shape.activity.subProcess.type === 'Transaction'\n                    && connector.sourcePortID) {\n                    var portId = connector.sourcePortID;\n                    var parent_3 = node.wrapper.children[0].children[0].children[2];\n                    if (parent_3.children) {\n                        for (var _i = 0, _a = parent_3.children; _i < _a.length; _i++) {\n                            var child = _a[_i];\n                            if (child.visible && child.id === node.id + '_' + portId) {\n                                return child.children[0];\n                            }\n                        }\n                    }\n                }\n                return node.wrapper.children[0].children[0].children[0];\n            }\n            return node.wrapper.children[0].children[0];\n        }\n        if (!this.containsMargin(node.wrapper.children[0])) {\n            if (!node.children) {\n                return node.wrapper.children[0];\n            }\n        }\n        return node.wrapper;\n    };\n    Diagram.prototype.containsMargin = function (node) {\n        return node.margin && (node.margin.left !== 0 || node.margin.top !== 0 || node.margin.right !== 0 || node.margin.bottom !== 0);\n    };\n    Diagram.prototype.focusOutEdit = function () {\n        this.endEdit();\n    };\n    Diagram.prototype.endEditCommand = function () {\n        this.endEdit();\n        this.textEditing = false;\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.endEdit = function () {\n        if (this.diagramActions & DiagramAction.TextEdit) {\n            var textArea = document.getElementById(this.element.id + '_editBox');\n            var text = textArea.value;\n            EventHandler.remove(textArea, 'input', this.eventHandler.inputChange);\n            EventHandler.remove(textArea, 'focusout', this.focusOutEdit);\n            var element = document.getElementById(this.element.id + '_editTextBoxDiv');\n            var args = { oldValue: this.activeLabel.text, newValue: text, cancel: false };\n            var bpmnAnnotation = false;\n            var node = void 0;\n            element.parentNode.removeChild(element);\n            var textWrapper = void 0;\n            if (this.bpmnModule) {\n                node = this.bpmnModule.isBpmnTextAnnotation(this.activeLabel, this);\n                textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, this.activeLabel.id);\n                bpmnAnnotation = node ? true : false;\n                if (bpmnAnnotation) {\n                    if (element.textContent !== text || text !== this.activeLabel.text) {\n                        this.triggerEvent(DiagramEvent.textEdit, args);\n                        if (!args.cancel) {\n                            this.bpmnModule.updateTextAnnotationContent(node, this.activeLabel, text, this);\n                        }\n                    }\n                }\n            }\n            if (!bpmnAnnotation) {\n                node = this.nameTable[this.activeLabel.parentId];\n                var deleteNode = this.eventHandler.isAddTextNode(node, true);\n                if (!deleteNode && (element.textContent !== text || text !== this.activeLabel.text)) {\n                    this.triggerEvent(DiagramEvent.textEdit, args);\n                }\n                if (!textWrapper) {\n                    textWrapper = this.getWrapper(node.wrapper, this.activeLabel.id);\n                }\n                var annotation = findAnnotation(node, this.activeLabel.id);\n                if (annotation.content !== text && !args.cancel) {\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier'\n                        && text.indexOf('+') === -1 && text.indexOf('-') === -1 && text.indexOf('#') === -1\n                        && text.indexOf('~') === -1 && node.id.indexOf('_umlClass_header') === -1) {\n                        text = ' + ' + text;\n                    }\n                    if (node.isLane || node.isPhase) {\n                        this.protectPropertyChange(true);\n                    }\n                    annotation.content = text;\n                    this.dataBind();\n                    this.updateSelector();\n                    if (node.isLane || node.isPhase) {\n                        this.protectPropertyChange(false);\n                    }\n                }\n                if (deleteNode) {\n                    this.removeObjectsFromLayer(node);\n                    this.removeFromAQuad(node);\n                    delete this.nameTable[this.activeLabel.parentId];\n                    if (text !== '') {\n                        this.clearSelection();\n                        var clonedObject = cloneObject(node);\n                        node = this.add(clonedObject);\n                        this.updateDiagramObject(node);\n                        this.commandHandler.select(this.nameTable[node.id]);\n                    }\n                }\n            }\n            if (this.selectedItems.nodes.length) {\n                var selectedNode = this.nameTable[this.activeLabel.parentId];\n                var swimLaneNode = this.nameTable[selectedNode.parentId];\n                if ((swimLaneNode && swimLaneNode.shape.type === 'SwimLane') || (selectedNode.shape.type === 'SwimLane')) {\n                    var laneHeader = 'LaneHeaderParent';\n                    var phaseHeader = 'PhaseHeaderParent';\n                    if ((selectedNode.shape.type === 'SwimLane')) {\n                        swimLaneNode = this.nameTable[this.activeLabel.parentId];\n                        selectedNode = node;\n                    }\n                    if ((selectedNode.isLane || selectedNode.isPhase)) {\n                        var collection = selectedNode.isLane ?\n                            swimLaneNode.shape.lanes : swimLaneNode.shape.phases;\n                        for (var j = 0; j < collection.length; j++) {\n                            if (collection[j].id === (selectedNode[laneHeader] || selectedNode[phaseHeader])) {\n                                collection[j].header.annotation.content = selectedNode.annotations[0].content;\n                            }\n                        }\n                    }\n                    else if (selectedNode.isHeader && swimLaneNode.shape.hasHeader) {\n                        swimLaneNode.shape.header.annotation.content = selectedNode.annotations[0].content;\n                    }\n                }\n                this.dataBind();\n            }\n            textWrapper.visible = true;\n            this.updateDiagramObject(node);\n            this.diagramActions = this.diagramActions & ~DiagramAction.TextEdit;\n            if (this.activeLabel.isGroup) {\n                this.endGroupAction();\n            }\n            this.activeLabel = { id: '', parentId: '', isGroup: false, text: undefined };\n        }\n    };\n    /** @private */\n    Diagram.prototype.canLogChange = function () {\n        if ((this.diagramActions & DiagramAction.Render) && (!(this.diagramActions & DiagramAction.ToolAction)) &&\n            (!(this.diagramActions & DiagramAction.UndoRedo)) && (!(this.diagramActions & DiagramAction.PublicMethod))) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    Diagram.prototype.modelChanged = function (newProp, oldProp) {\n        if (newProp.connectors || oldProp.connectors || newProp.nodes || oldProp.connectors\n            || newProp.pageSettings || oldProp.pageSettings || newProp.bridgeDirection || oldProp.bridgeDirection) {\n            return true;\n        }\n        return false;\n    };\n    Diagram.prototype.resetDiagramActions = function (action) {\n        var isAction = action ? true : false;\n        if (this.diagramActions & DiagramAction.UndoRedo && (!isAction || (action === DiagramAction.UndoRedo))) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.UndoRedo;\n        }\n        if (this.diagramActions & DiagramAction.PublicMethod && (!isAction || action === DiagramAction.PublicMethod)) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.PublicMethod;\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeNode = function (node) {\n        this.removeObjectsFromLayer(node);\n        this.removeFromAQuad(this.nameTable[node.id]);\n        delete this.nameTable[node.id];\n        if (node.children) {\n            delete this.groupTable[node.id];\n        }\n        this.nodes.splice(this.nodes.indexOf(node), 1);\n    };\n    /** @private */\n    Diagram.prototype.deleteGroup = function (node) {\n        var elements = [];\n        var tempNode = [];\n        if (node.children) {\n            tempNode = this.commandHandler.getChildren(node, elements);\n        }\n        for (var _i = 0, tempNode_1 = tempNode; _i < tempNode_1.length; _i++) {\n            var nodes = tempNode_1[_i];\n            if (this.nameTable[nodes.id]) {\n                this.remove(nodes);\n            }\n        }\n    };\n    //helper methods - end region\n    //property changes - start region\n    /** @private */\n    Diagram.prototype.updateObject = function (actualObject, oldObject, changedProp) {\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            var bound = actualObject.wrapper.children[0].bounds;\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bound);\n            if (!checkBoundaryConstraints) {\n                if (actualObject instanceof Node) {\n                    var oldNode = oldObject;\n                    for (var _i = 0, _a = Object.keys(changedProp); _i < _a.length; _i++) {\n                        var key = _a[_i];\n                        switch (key) {\n                            case 'width':\n                                actualObject.width = oldNode.width;\n                                break;\n                            case 'height':\n                                actualObject.height = oldNode.height;\n                                break;\n                            case 'offsetX':\n                                actualObject.offsetX = oldNode.offsetX;\n                                break;\n                            case 'offsetY':\n                                actualObject.offsetY = oldNode.offsetY;\n                                break;\n                            case 'rotateAngle':\n                                actualObject.rotateAngle = oldNode.rotateAngle;\n                                break;\n                        }\n                    }\n                    this.nodePropertyChange(actualObject, changedProp, oldObject);\n                }\n                else {\n                    for (var _b = 0, _c = Object.keys(changedProp); _b < _c.length; _b++) {\n                        var key = _c[_b];\n                        var oldConnector = oldObject;\n                        var actualSourcePoint = actualObject.sourcePoint;\n                        var actualTargetPoint = actualObject.targetPoint;\n                        switch (key) {\n                            case 'sourcePoint':\n                                actualSourcePoint.x = oldConnector.sourcePoint.x || actualSourcePoint.x;\n                                actualSourcePoint.y = oldConnector.sourcePoint.y || actualSourcePoint.y;\n                                break;\n                            case 'targetPoint':\n                                actualTargetPoint.x = oldConnector.targetPoint.x || actualTargetPoint.x;\n                                actualTargetPoint.y = oldConnector.targetPoint.y || actualTargetPoint.y;\n                        }\n                    }\n                    this.connectorPropertyChange(actualObject, changedProp, oldObject);\n                }\n            }\n        }\n    };\n    Diagram.prototype.nodePropertyChangeExtend = function (actualObject, oldObject, node, update) {\n        if (node.style !== undefined && actualObject.shape.type !== 'Bpmn') {\n            updateStyle(node.style, actualObject.wrapper.children[0]);\n            update = true;\n        }\n        if (node.shadow !== undefined) {\n            this.updateShadow(actualObject.shadow, node.shadow);\n            update = true;\n        }\n        if (node.constraints !== undefined) {\n            if ((oldObject.constraints & NodeConstraints.Select) &&\n                (!(node.constraints & NodeConstraints.Select)) && isSelected(this, actualObject)) {\n                this.clearSelection();\n            }\n            else {\n                this.updateThumbConstraints(this.selectedItems.nodes, this.selectedItems);\n                this.updateSelector();\n                update = true;\n            }\n        }\n        this.swimLaneNodePropertyChange(actualObject, oldObject, node, update);\n        return update;\n    };\n    /* tslint:disable */\n    Diagram.prototype.swimLaneNodePropertyChange = function (actualObject, oldObject, node, update) {\n        if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol) {\n            if (oldObject.shape) {\n                var shape = node.shape;\n                var actualShape = actualObject.shape;\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                var padding = actualShape.padding;\n                var oldShape = oldObject.shape;\n                var grid = actualObject.wrapper.children[0];\n                var oldObjects = void 0;\n                var newObjects = void 0;\n                var id = void 0;\n                if (oldShape.lanes || oldShape.phases) {\n                    if (oldShape.lanes) {\n                        for (var _i = 0, _a = Object.keys(shape.lanes); _i < _a.length; _i++) {\n                            var count = _a[_i];\n                            var indexValue = Number(count);\n                            var lane = oldShape.lanes[indexValue];\n                            var laneIndex = void 0;\n                            var newLane = shape.lanes[indexValue];\n                            if (newLane && newLane.header) {\n                                id = actualShape.lanes[indexValue].header.id;\n                                oldObjects = lane.header;\n                                newObjects = newLane.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (lane.children) {\n                                for (var _b = 0, _c = Object.keys(lane.children); _b < _c.length; _b++) {\n                                    var childNodeIndex = _c[_b];\n                                    id = actualShape.lanes[indexValue].children[Number(childNodeIndex)].id;\n                                    var node_1 = this.nameTable[id];\n                                    oldObjects = lane.children[Number(childNodeIndex)];\n                                    newObjects = newLane.children[Number(childNodeIndex)];\n                                    this.nodePropertyChange(node_1, oldObjects, newObjects);\n                                }\n                            }\n                            if (lane.width && !orientation_1) {\n                                laneIndex = (actualShape.phases && actualShape.phaseSize) ? indexValue + 1 : indexValue;\n                                grid.updateColumnWidth(laneIndex, newLane.width, true, padding);\n                            }\n                            if (lane.height && orientation_1) {\n                                laneIndex = (actualShape.header && actualShape.hasHeader) ? indexValue + 1 : indexValue;\n                                laneIndex += (actualShape.phases && actualShape.phaseSize) ? 1 : 0;\n                                grid.updateRowHeight(laneIndex, newLane.height, true, padding);\n                            }\n                        }\n                    }\n                    if (shape.phases) {\n                        for (var _d = 0, _e = Object.keys(shape.phases); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var indexValue = Number(key);\n                            var phase = shape.phases[indexValue];\n                            var size = void 0;\n                            var rowIndex = (actualShape.header && actualShape.hasHeader) ? 1 : 0;\n                            if (phase && phase.header) {\n                                id = actualShape.phases[indexValue].header.id;\n                                oldObjects = oldShape.phases[indexValue].header;\n                                newObjects = phase.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (phase.offset) {\n                                if (indexValue === 0) {\n                                    size = phase.offset;\n                                }\n                                else {\n                                    var previousPhase = actualShape.phases[indexValue - 1];\n                                    size = phase.offset - previousPhase.offset;\n                                    if (size <= 0) {\n                                        size = phase.offset;\n                                    }\n                                }\n                                if (orientation_1) {\n                                    grid.updateColumnWidth(indexValue, size, true, padding);\n                                    updatePhaseMaxWidth(actualObject, this, grid.rows[rowIndex].cells[indexValue], indexValue);\n                                }\n                                else {\n                                    grid.updateRowHeight(rowIndex + indexValue, size, true, padding);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (shape.phaseSize !== undefined && actualShape.phases.length) {\n                    if (shape.phaseSize === 0 || oldShape.phaseSize === 0) {\n                        if (oldShape.phaseSize) {\n                            if (orientation_1) {\n                                grid.removeRow((actualShape.header && actualShape.hasHeader) ? 1 : 0);\n                                actualObject.height = actualObject.wrapper.height = grid.height;\n                            }\n                            else {\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[1].children = grid.rows[0].cells[0].children;\n                                    grid.rows[0].cells[1].columnSpan = grid.rows[0].cells[0].columnSpan - 1;\n                                    grid.rows[0].cells[0].children = [];\n                                }\n                                grid.removeColumn(0);\n                            }\n                        }\n                        else {\n                            if (orientation_1) {\n                                var rowDef = new RowDefinition();\n                                rowDef.height = shape.phaseSize;\n                                grid.addRow((actualShape.header && actualShape.hasHeader) ? 1 : 0, rowDef, true);\n                                actualObject.height = actualObject.wrapper.height += shape.phaseSize;\n                            }\n                            else {\n                                var colDef = new ColumnDefinition();\n                                colDef.width = shape.phaseSize;\n                                grid.addColumn(0, colDef, true);\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                                    grid.rows[0].cells[1].children = [];\n                                    grid.rows[0].cells[1].columnSpan = 1;\n                                    grid.rows[0].cells[1].minWidth = undefined;\n                                    grid.rows[0].cells[0].columnSpan = actualShape.lanes.length + 1;\n                                }\n                            }\n                            for (var k = 0; k < actualShape.phases.length; k++) {\n                                if (actualShape.phases[k].id === '') {\n                                    actualShape.phases[k].id = randomId();\n                                }\n                                phaseDefine(grid, this, actualObject, (actualShape.header && actualShape.hasHeader) ? 1 : 0, orientation_1, k);\n                            }\n                        }\n                    }\n                    else {\n                        if (orientation_1) {\n                            grid.updateRowHeight((actualShape.header && actualShape.hasHeader) ? 1 : 0, shape.phaseSize, false);\n                        }\n                        else {\n                            grid.updateColumnWidth(0, shape.phaseSize, false);\n                        }\n                    }\n                }\n                if (actualShape.header && actualShape.hasHeader && oldShape.header) {\n                    var id_1 = grid.rows[0].cells[0].children[0].id;\n                    var headerNode = this.nameTable[id_1];\n                    this.nodePropertyChange(headerNode, (oldShape.header), shape.header);\n                }\n                actualObject.height = actualObject.wrapper.height = grid.height;\n                actualObject.width = actualObject.wrapper.width = grid.width;\n            }\n            update = true;\n        }\n        return update;\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.nodePropertyChange = function (actualObject, oldObject, node, isLayout, rotate, propertyChange) {\n        var existingBounds = actualObject.wrapper.outerBounds;\n        var existingInnerBounds = actualObject.wrapper.bounds;\n        var updateConnector = false;\n        var i;\n        var j;\n        var offsetX;\n        var offsetY;\n        var update;\n        var tx;\n        var ty;\n        if (node.width !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].width = node.width;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.width, true);\n            }\n            else {\n                actualObject.wrapper.width = node.width;\n            }\n        }\n        if (node.height !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].height = node.height;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.height, false);\n            }\n            else {\n                actualObject.wrapper.height = node.height;\n            }\n        }\n        update = this.nodePropertyChangeExtend(actualObject, oldObject, node, update);\n        if (node.constraints !== undefined && canShadow(oldObject) !== canShadow(node)) {\n            actualObject.wrapper.children[0].shadow = canShadow(actualObject) ? actualObject.shadow : null;\n        }\n        if (node.offsetX !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetX !== actualObject.wrapper.offsetX && oldObject.offsetX !== undefined) {\n                    var offsetX_1 = node.offsetX - oldObject.offsetX;\n                    actualObject.wrapper.offsetX = actualObject.wrapper.offsetX + offsetX_1;\n                    this.updateFlipOffset(actualObject.wrapper, offsetX_1, 0, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetX = node.offsetX;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.offsetY !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetY !== actualObject.wrapper.offsetY && oldObject.offsetY !== undefined) {\n                    var offsetY_1 = node.offsetY - oldObject.offsetY;\n                    actualObject.wrapper.offsetY = actualObject.wrapper.offsetY + offsetY_1;\n                    this.updateFlipOffset(actualObject.wrapper, 0, offsetY_1, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetY = node.offsetY;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.pivot !== undefined) {\n            actualObject.wrapper.pivot = node.pivot;\n            update = true;\n        }\n        if (node.minWidth !== undefined) {\n            actualObject.wrapper.minWidth = actualObject.wrapper.children[0].minWidth = node.minWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.minHeight !== undefined) {\n            actualObject.wrapper.minHeight = actualObject.wrapper.children[0].minHeight = node.minHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxWidth !== undefined) {\n            actualObject.wrapper.maxWidth = node.maxWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxHeight !== undefined) {\n            actualObject.wrapper.maxHeight = node.maxHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.flip !== undefined) {\n            actualObject.wrapper.flip = node.flip;\n            update = true;\n            updateConnector = true;\n            if (actualObject.wrapper.elementActions & ElementAction.ElementIsGroup) {\n                alignElement(actualObject.wrapper, actualObject.offsetX, actualObject.offsetY, this, node.flip);\n                if (actualObject && actualObject.children) {\n                    for (var _i = 0, _a = actualObject.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        var updateNode = this.nameTable[child];\n                        updateNode.wrapper.flip = node.flip;\n                        this.updatePorts(updateNode, node.flip);\n                    }\n                }\n            }\n            else {\n                actualObject.wrapper.children[0].flip = node.flip;\n                this.updatePorts(actualObject, node.flip);\n            }\n        }\n        if (node.rotateAngle !== undefined) {\n            if (actualObject.children && rotate) {\n                this.commandHandler.rotateObjects(actualObject, [actualObject], actualObject.rotateAngle - actualObject.wrapper.rotateAngle, { x: actualObject.offsetX, y: actualObject.offsetY }, false);\n            }\n            actualObject.wrapper.rotateAngle = node.rotateAngle;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.backgroundColor !== undefined) {\n            actualObject.wrapper.style.fill = node.backgroundColor;\n        }\n        if (node.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (node.shape !== undefined && actualObject.shape.type !== 'Bpmn') {\n            update = true;\n            updateShape(node, actualObject, oldObject, this);\n            updateConnector = true;\n        }\n        if (node.margin) {\n            update = true;\n            this.updateMargin(actualObject, node);\n            updateConnector = true;\n        }\n        if (((node.shape !== undefined && node.shape.type === undefined) || node.width !== undefined\n            || node.height !== undefined || node.style !== undefined) && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            update = true;\n            updateConnector = true;\n            this.bpmnModule.updateBPMN(node, oldObject, actualObject, this);\n        }\n        if (actualObject.shape.type === 'UmlActivity' && actualObject.shape.shape === 'FinalNode') {\n            update = true;\n            updateConnector = true;\n            this.updateUMLActivity(node, oldObject, actualObject, this);\n        }\n        if ((actualObject.shape && actualObject.shape.type === 'UmlClassifier') || (actualObject.parentId &&\n            this.nameTable[actualObject.parentId] && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier')) {\n            update = true;\n            updateConnector = true;\n        }\n        if (node.ports !== undefined) {\n            for (var _b = 0, _c = Object.keys(node.ports); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.ports[key];\n                var actualPort = actualObject.ports[index];\n                this.updatePort(changedObject, actualPort, actualObject.wrapper);\n                updateConnector = true;\n            }\n        }\n        if (node.annotation !== undefined || node.annotations !== undefined || node.width !== undefined) {\n            for (var _d = 0, _e = Object.keys(node.annotations || actualObject.annotations); _d < _e.length; _d++) {\n                var key = _e[_d];\n                var index = Number(key);\n                update = true;\n                var changedObject = void 0;\n                if (node.annotation) {\n                    changedObject = node.annotation;\n                }\n                else {\n                    changedObject = node.annotations ? node.annotations[key] : actualObject.annotations;\n                }\n                var actualAnnotation = actualObject.annotations[index];\n                if (actualAnnotation) {\n                    var updateSize = actualObject.width ? true : false;\n                    this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject, updateSize);\n                }\n            }\n        }\n        if (node.expandIcon !== undefined || node.collapseIcon !== undefined || node.isExpanded !== undefined) {\n            this.updateIcon(actualObject);\n            this.updateDefaultLayoutIcons(actualObject);\n            if (node.isExpanded !== undefined) {\n                this.commandHandler.expandNode(actualObject, this);\n            }\n            update = true;\n        }\n        if (node.tooltip !== undefined) {\n            this.updateTooltip(actualObject, node);\n        }\n        if (update) {\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateTextAnnotationProp(actualObject, { offsetX: (oldObject.offsetX || actualObject.offsetX), offsetY: (oldObject.offsetY || actualObject.offsetY) }, this);\n            }\n            actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n            actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            this.updateObject(actualObject, oldObject, node);\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && !(this.diagramActions & DiagramAction.ToolAction)) {\n                updateHeaderMaxWidth(this, actualObject);\n                var grid = actualObject.wrapper.children[0];\n                var shape = actualObject.shape;\n                var column = grid.columnDefinitions().length;\n                if (shape.orientation === 'Horizontal') {\n                    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n                    updatePhaseMaxWidth(actualObject, this, grid.rows[index].cells[column - 1], column - 1);\n                }\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            }\n            if ((!(this.diagramActions & DiagramAction.ToolAction)) || (this.diagramActions & DiagramAction.UndoRedo)) {\n                if (this.checkSelectedItem(actualObject)) {\n                    this.updateSelector();\n                }\n            }\n            if (!isLayout) {\n                this.commandHandler.connectorSegmentChange(actualObject, existingInnerBounds, (node.rotateAngle !== undefined) ? true : false);\n                if (updateConnector) {\n                    this.updateConnectorEdges(actualObject);\n                }\n            }\n            else {\n                if (actualObject && actualObject.visible && actualObject.outEdges) {\n                    this.updateIconVisibility(actualObject, (actualObject.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateDocks(actualObject, this);\n            }\n            this.updateGroupOffset(actualObject);\n            if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) {\n                this.updateQuad(actualObject);\n            }\n            var objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n            if (objects.length === 0) {\n                if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n                    var parent_4 = this.nameTable[actualObject.parentId];\n                    parent_4.wrapper.measure(new Size(parent_4.wrapper.width, actualObject.wrapper.height));\n                    parent_4.wrapper.arrange(parent_4.wrapper.desiredSize);\n                    parent_4.offsetX = parent_4.wrapper.offsetX;\n                    parent_4.offsetY = parent_4.wrapper.offsetY;\n                }\n            }\n            if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n                this.updateGroupSize(actualObject);\n                if (actualObject.children) {\n                    this.updateGroupOffset(actualObject);\n                }\n            }\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && (this.diagramActions & DiagramAction.Render)) {\n                var connectors = getConnectors(this, actualObject.wrapper.children[0], undefined, true);\n                updateConnectorsProperties(connectors, this);\n            }\n            if (!this.preventNodesUpdate) {\n                this.updateDiagramObject(actualObject);\n                if (!isLayout && updateConnector) {\n                    this.updateConnectorEdges(actualObject);\n                }\n            }\n            if (actualObject.status !== 'New' && this.diagramActions) {\n                actualObject.status = 'Update';\n            }\n        }\n        if (!propertyChange) {\n            var element = actualObject;\n            var args = { element: element, cause: this.diagramActions, oldValue: oldObject, newValue: node };\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n    };\n    Diagram.prototype.updatePorts = function (actualObject, flip) {\n        if (actualObject && actualObject.ports.length > 0) {\n            for (var _i = 0, _a = Object.keys(actualObject.ports); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var actualPort = actualObject.ports[index];\n                var portWrapper = this.getWrapper(actualObject.wrapper, actualPort.id);\n                portWrapper = updatePortEdges(portWrapper, flip, actualPort);\n                portWrapper.relativeMode = 'Point';\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n        }\n    };\n    Diagram.prototype.updateFlipOffset = function (element, diffX, diffY, flip) {\n        if (element.hasChildren()) {\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (flip === 'Horizontal' || flip === 'Both') {\n                    child.flipOffset.x = child.flipOffset.x + diffX;\n                }\n                if (flip === 'Vertical' || flip === 'Both') {\n                    child.flipOffset.y = child.flipOffset.y + diffY;\n                }\n                if (child instanceof Canvas || child instanceof Container) {\n                    this.updateFlipOffset(child, diffX, diffY, flip);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateUMLActivity = function (changedProp, oldObject, actualObject, diagram) {\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (sizeChanged) {\n            var innerFinalNode = actualObject.wrapper.children[0].children[0];\n            innerFinalNode.width = changedProp.width;\n            innerFinalNode.height = changedProp.height;\n            var outerFinalNode = actualObject.wrapper.children[0].children[1];\n            outerFinalNode.width = changedProp.width / 1.5;\n            outerFinalNode.height = changedProp.height / 1.5;\n        }\n    };\n    Diagram.prototype.updateConnectorProperties = function (connector) {\n        if (this.preventConnectorsUpdate) {\n            var index = this.selectionConnectorsList.indexOf(connector);\n            if (index === -1) {\n                this.selectionConnectorsList.push(connector);\n            }\n        }\n        else {\n            var conn = {\n                sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint, sourceID: connector.sourceID,\n                targetID: connector.targetID, sourcePortID: connector.sourcePortID, targetPortID: connector.targetPortID\n            };\n            this.connectorPropertyChange(connector, {}, conn, undefined, true);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateConnectorEdges = function (actualObject) {\n        if (actualObject.inEdges.length > 0) {\n            for (var j = 0; j < actualObject.inEdges.length; j++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.inEdges[j]]);\n            }\n        }\n        if (actualObject.outEdges.length > 0) {\n            for (var k = 0; k < actualObject.outEdges.length; k++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.outEdges[k]]);\n            }\n        }\n        if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n            this.updateConnectorEdges(this.nameTable[actualObject.parentId]);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.connectorProprtyChangeExtend = function (actualObject, oldProp, newProp, updateSelector) {\n        if (newProp.type !== undefined && newProp.type !== oldProp.type) {\n            if (actualObject.segments.length > 0 && newProp.segments === undefined) {\n                actualObject.segments = [];\n            }\n        }\n        if ((newProp.shape !== undefined) && actualObject.shape !== undefined &&\n            actualObject.shape && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            this.bpmnModule.updateBPMNConnector(actualObject, oldProp, newProp, this);\n        }\n        if (actualObject.constraints !== undefined) {\n            this.updateThumbConstraints(this.selectedItems.connectors, this.selectedItems);\n            return updateSelector = true;\n        }\n        return updateSelector;\n    };\n    /** @private */\n    Diagram.prototype.connectorPropertyChange = function (actualObject, oldProp, newProp, disableBridging, propertyChange) {\n        var existingBounds = actualObject.wrapper.bounds;\n        var updateSelector = false;\n        var points = [];\n        updateSelector = this.connectorProprtyChangeExtend(actualObject, oldProp, newProp, updateSelector);\n        var inPort;\n        var outPort;\n        if (newProp.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (newProp.sourcePoint !== undefined || newProp.targetPoint !== undefined\n            || newProp.sourceID !== undefined || newProp.targetID !== undefined || newProp.targetPadding !== undefined ||\n            newProp.sourcePortID !== undefined || newProp.targetPortID !== undefined || newProp.sourcePadding !== undefined ||\n            newProp.type !== undefined || newProp.segments !== undefined || newProp.flip !== undefined) {\n            if ((newProp.sourceID !== undefined && newProp.sourceID !== oldProp.sourceID) || newProp.sourcePortID) {\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                outPort = this.findInOutConnectPorts(sourceNode, false);\n                if (!sourceNode || (canOutConnect(sourceNode) || (actualObject.sourcePortID !== '' && canPortOutConnect(outPort)))) {\n                    actualObject.sourceWrapper = sourceNode ? this.getEndNodeWrapper(sourceNode, actualObject, true) : undefined;\n                }\n                if (newProp.sourceID !== undefined && oldProp.sourceID !== undefined && oldProp.sourceID !== '') {\n                    var oldSource = this.nameTable[oldProp.sourceID];\n                    if (oldSource !== undefined && oldSource.outEdges && oldSource.outEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldSource.outEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.targetID !== undefined && newProp.targetID !== oldProp.targetID) {\n                var targetNode = this.nameTable[newProp.targetID];\n                inPort = this.findInOutConnectPorts(targetNode, true);\n                if (!targetNode || (canInConnect(targetNode) || (actualObject.targetPortID !== '' && canPortInConnect(inPort)))) {\n                    actualObject.targetWrapper = targetNode ? this.getEndNodeWrapper(targetNode, actualObject, false) : undefined;\n                }\n                if (oldProp !== undefined && oldProp.targetID !== undefined && oldProp.targetID !== '') {\n                    var oldTarget = this.nameTable[oldProp.targetID];\n                    if (oldTarget !== undefined && oldTarget.inEdges && oldTarget.inEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldTarget.inEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.sourcePortID !== undefined && newProp.sourcePortID !== oldProp.sourcePortID) {\n                var source = void 0;\n                if (actualObject.sourceID && this.nameTable[actualObject.sourceID]) {\n                    source = this.nameTable[actualObject.sourceID].wrapper;\n                }\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                if (!sourceNode || (canOutConnect(sourceNode) || (actualObject.sourcePortID !== '' && canPortOutConnect(outPort)))) {\n                    actualObject.sourcePortWrapper = source ? this.getWrapper(source, newProp.sourcePortID) : undefined;\n                }\n            }\n            if (newProp.targetPortID !== undefined && newProp.targetPortID !== oldProp.targetPortID) {\n                var target = void 0;\n                if (actualObject.targetID && this.nameTable[actualObject.targetID]) {\n                    target = this.nameTable[actualObject.targetID].wrapper;\n                }\n                var targetNode = this.nameTable[actualObject.targetID];\n                if (!targetNode || (canInConnect(targetNode) || (actualObject.targetPortID !== '' && canPortInConnect(inPort)))) {\n                    actualObject.targetPortWrapper = target ?\n                        this.getWrapper(target, newProp.targetPortID) : undefined;\n                }\n            }\n            if (newProp.flip !== undefined) {\n                actualObject.flip = newProp.flip;\n                flipConnector(actualObject);\n            }\n            points = this.getPoints(actualObject);\n        } //Add prop change for zindex, alignments and margin\n        if (newProp.style !== undefined) {\n            updateStyle(newProp.style, actualObject.wrapper.children[0]);\n        }\n        if (points.length > 0 || newProp.sourceDecorator !== undefined || (newProp.targetDecorator !== undefined\n            && Object.keys(newProp.targetDecorator).indexOf('style') === -1) ||\n            newProp.cornerRadius !== undefined) {\n            updateConnector(actualObject, points.length > 0 ? points : actualObject.intermediatePoints);\n            if (newProp.type !== undefined) {\n                updateSelector = true;\n            }\n            if (points.length > 0) {\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                this.updateConnectorAnnotation(actualObject);\n                this.updateObject(actualObject, oldProp, newProp);\n            } //work-around to update intersected connector bridging\n        }\n        if ((newProp.sourcePoint || newProp.targetPoint || newProp.segments)\n            && this.diagramActions === DiagramAction.Render) {\n            updateSelector = true;\n        }\n        if (!disableBridging) {\n            this.updateBridging();\n        }\n        this.updateAnnotations(newProp, actualObject);\n        actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n        actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        if (existingBounds.equals(existingBounds, actualObject.wrapper.bounds) === false) {\n            this.updateQuad(actualObject);\n            this.updateGroupSize(actualObject);\n        }\n        if (updateSelector === true && this.checkSelectedItem(actualObject)\n            && (!(this.diagramActions & DiagramAction.ToolAction) || (this.diagramActions & DiagramAction.UndoRedo))) {\n            this.updateSelector();\n        }\n        if (!this.preventConnectorsUpdate) {\n            this.updateDiagramObject(actualObject);\n        }\n        if (this.diagramActions && actualObject.status !== 'New') {\n            actualObject.status = 'Update';\n        }\n        if (!propertyChange) {\n            var element = actualObject;\n            var args = { element: element, cause: this.diagramActions, oldValue: oldProp, newValue: newProp };\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n    };\n    Diagram.prototype.findInOutConnectPorts = function (node, isInconnect) {\n        var port = {};\n        if (node) {\n            port = getInOutConnectPorts(node, isInconnect);\n        }\n        return port;\n    };\n    Diagram.prototype.getPoints = function (actualObject, points) {\n        var pts;\n        pts = actualObject.getConnectorPoints(actualObject.type, points, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n            this.layout.orientation : undefined);\n        return pts;\n    };\n    /**\n     * update the  opacity  and visibility for the node  once the layout animation starts\n     */\n    /** @private */\n    Diagram.prototype.updateNodeProperty = function (element, visible, opacity) {\n        if (visible === undefined) {\n            this.updateElementVisibility(element, this.nameTable[element.id], visible);\n        }\n        else {\n            element.style.opacity = opacity;\n            for (var i = 0; i < element.children.length; i++) {\n                if (element.children[i] instanceof Container) {\n                    this.updateNodeProperty(element.children[i], undefined, opacity);\n                }\n                element.children[i].style.opacity = opacity;\n            }\n        }\n    };\n    /**\n     * checkSelected Item for Connector\n     * @private\n     */\n    Diagram.prototype.checkSelectedItem = function (actualObject) {\n        var selectorModel = this.selectedItems;\n        var isSelected = false;\n        var selItems = [];\n        selItems = selItems.concat(selectorModel.nodes, selectorModel.connectors);\n        if (selItems.length > 0) {\n            if (actualObject.id === selItems[selItems.length - 1].id) {\n                isSelected = true;\n            }\n        }\n        return isSelected;\n    };\n    /**\n     * Updates the visibility of the diagram container\n     * @private\n     */\n    Diagram.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * Updates the visibility of the node/connector\n     * @private\n     */\n    Diagram.prototype.updateElementVisibility = function (element, obj, visible) {\n        if (visible !== undefined) {\n            element.visible = visible;\n            if (obj instanceof Node) {\n                //content\n                if (!obj.children) {\n                    element.children[0].visible = visible;\n                    this.updateDiagramContainerVisibility(element.children[0], visible);\n                    if (obj.shape.type === 'Bpmn' && this.bpmnModule) {\n                        this.bpmnModule.updateElementVisibility(obj, visible, this);\n                    }\n                }\n                else {\n                    for (var _i = 0, _a = obj.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        this.updateElementVisibility(this.nameTable[child].wrapper, this.nameTable[child], visible);\n                    }\n                }\n                //ports\n                if (obj.ports) {\n                    for (var _b = 0, _c = obj.ports; _b < _c.length; _b++) {\n                        var port = _c[_b];\n                        if (port.visibility & PortVisibility.Visible) {\n                            var wrapper = this.getWrapper(element, port.id);\n                            wrapper.visible = visible;\n                        }\n                    }\n                }\n                if (obj.annotations) {\n                    for (var _d = 0, _e = obj.annotations; _d < _e.length; _d++) {\n                        var annotation = _e[_d];\n                        var wrapper = this.getWrapper(element, annotation.id);\n                        wrapper.visible = visible;\n                    }\n                }\n            }\n            else {\n                //path and decorators\n                for (var i = 0; i < 3; i++) {\n                    element.children[i].visible = visible;\n                }\n            }\n            if (obj.annotations) {\n                //annotations\n                for (var _f = 0, _g = obj.annotations; _f < _g.length; _f++) {\n                    var annotation = _g[_f];\n                    var wrapper = this.getWrapper(element, annotation.id);\n                    wrapper.visible = visible;\n                }\n            }\n            if (obj.expandIcon || obj.collapseIcon) {\n                var wrapper = this.getWrapper(element, 'icon_content');\n                if (wrapper) {\n                    for (var i = 0; i < wrapper.children.length; i++) {\n                        wrapper.children[i].visible = visible;\n                    }\n                    wrapper.visible = visible;\n                }\n                if (obj && obj.visible && obj.outEdges) {\n                    this.updateIconVisibility(obj, (obj.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (visible === false) {\n                this.unSelect(this.nameTable[element.id]);\n            }\n            if ((obj instanceof Node && !this.preventNodesUpdate) || (obj instanceof Connector && !this.preventConnectorsUpdate)) {\n                //Avoid calling updateDiagramObject method during rendering\n                if (this.diagramActions) {\n                    this.updateDiagramObject(this.nameTable[element.id]);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateAnnotations = function (newProp, actualObject) {\n        if (newProp.annotations !== undefined) {\n            for (var _i = 0, _a = Object.keys(newProp.annotations); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var changedObject = newProp.annotations[key];\n                var actualAnnotation = actualObject.annotations[index];\n                this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateAnnotation = function (changedObject, actualAnnotation, nodes, actualObject, canUpdateSize) {\n        var annotationWrapper;\n        var isMeasure = false;\n        annotationWrapper = this.getWrapper(nodes, actualAnnotation.id);\n        if (annotationWrapper !== undefined) {\n            if (changedObject.width !== undefined && changedObject.height !== undefined) {\n                annotationWrapper.width = changedObject.width;\n                annotationWrapper.height = changedObject.height;\n                isMeasure = true;\n            }\n            if (changedObject.rotateAngle !== undefined) {\n                annotationWrapper.rotateAngle = changedObject.rotateAngle;\n            }\n            if (canUpdateSize && !(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            if (actualAnnotation instanceof PathAnnotation && changedObject.segmentAngle !== undefined) {\n                annotationWrapper.rotateAngle = actualAnnotation.rotateAngle;\n            }\n            if (actualAnnotation instanceof ShapeAnnotation &&\n                changedObject.offset !== undefined) {\n                var offset = changedObject.offset;\n                isMeasure = true;\n                var offsetX = offset.x !== undefined ? offset.x :\n                    actualAnnotation.offset.x;\n                var offsetY = offset.y !== undefined ? offset.y :\n                    actualAnnotation.offset.y;\n                annotationWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                annotationWrapper.relativeMode = 'Point';\n            }\n            else if (actualAnnotation instanceof PathAnnotation &&\n                (changedObject.offset !== undefined ||\n                    changedObject.segmentAngle !== undefined)) {\n                actualObject.updateAnnotation(actualAnnotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n            }\n            if ((actualAnnotation instanceof PathAnnotation) && changedObject.displacement) {\n                if (changedObject.displacement.x !== undefined ||\n                    changedObject.displacement.y !== undefined) {\n                    isMeasure = true;\n                }\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    annotationWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    annotationWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    annotationWrapper.margin.left = changedObject.margin.left;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    annotationWrapper.margin.right = changedObject.margin.right;\n                }\n            }\n            if (isMeasure || canUpdateSize) {\n                annotationWrapper.width = (actualAnnotation.width || actualObject.width);\n                if (actualAnnotation.template) {\n                    annotationWrapper.width = (annotationWrapper.width || annotationWrapper.actualSize.width);\n                    annotationWrapper.height = (actualAnnotation.height || actualObject.height ||\n                        annotationWrapper.actualSize.height);\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                annotationWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                annotationWrapper.verticalAlignment = changedObject.verticalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.visibility !== undefined) {\n                annotationWrapper.visible = (nodes.visible && changedObject.visibility) ? true : false;\n            }\n            if (changedObject.constraints !== undefined) {\n                var updateSelector = false;\n                if ((annotationWrapper.constraints & AnnotationConstraints.Select) &&\n                    (!(changedObject.constraints & AnnotationConstraints.Select)) &&\n                    isSelected(this, actualObject, false, annotationWrapper)) {\n                    updateSelector = true;\n                }\n                annotationWrapper.constraints = changedObject.constraints;\n                if (updateSelector) {\n                    this.clearSelection();\n                }\n            }\n            if (changedObject.style !== undefined) {\n                updateStyle(changedObject.style, annotationWrapper);\n            }\n            if (changedObject.hyperlink !== undefined) {\n                updateHyperlink(changedObject.hyperlink, annotationWrapper, actualAnnotation);\n            }\n            this.updateAnnotationContent(changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes);\n            if (isMeasure === true) {\n                annotationWrapper.measure(new Size(annotationWrapper.width, annotationWrapper.height));\n                annotationWrapper.arrange(annotationWrapper.desiredSize);\n            }\n            if (!(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            // this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateAnnotationContent = function (changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes) {\n        if (changedObject.content !== undefined) {\n            if (annotationWrapper) {\n                isMeasure = true;\n                if ((actualObject.shape.type === 'UmlActivity' &&\n                    actualObject.shape.shape === 'StructuredNode')) {\n                    annotationWrapper.content = '<<' + changedObject.content + '>>';\n                }\n                else {\n                    annotationWrapper.content = changedObject.content;\n                }\n            }\n            if (annotationWrapper instanceof DiagramHtmlElement) {\n                this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n            }\n        }\n        if (changedObject.template !== undefined) {\n            annotationWrapper.content = changedObject.template;\n            this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n        }\n    };\n    Diagram.prototype.updateAnnotationWrapper = function (annotationWrapper, actualObject, actualAnnotation, nodes) {\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var elementId = _a[_i];\n            removeElement(annotationWrapper.id + '_groupElement', elementId);\n            removeElement(annotationWrapper.id + '_html_element', elementId);\n        }\n        if (actualObject instanceof Node) {\n            annotationWrapper =\n                actualObject.initAnnotationWrapper(actualAnnotation, this.element.id);\n        }\n        else if (actualObject instanceof Connector) {\n            var canvas = actualObject.wrapper;\n            var segment = canvas.children[0];\n            var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n            annotationWrapper =\n                actualObject.getAnnotationElement(actualObject.annotations[actualObject.annotations.length - 1], actualObject.intermediatePoints, bounds, this.getDescription, this.element.id);\n        }\n        for (var i = 0; i < nodes.children.length; i++) {\n            if (annotationWrapper.id === nodes.children[i].id) {\n                nodes.children.splice(i, 1, annotationWrapper);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePort = function (changedObject, actualPort, nodes) {\n        var portWrapper;\n        var isMeasure = false;\n        portWrapper = this.getWrapper(nodes, actualPort.id);\n        if (portWrapper !== undefined) {\n            if (changedObject.offset !== undefined) {\n                isMeasure = true;\n                var offsetX = changedObject.offset.x !== undefined ? changedObject.offset.x :\n                    actualPort.offset.x;\n                var offsetY = changedObject.offset.y !== undefined ? changedObject.offset.y :\n                    actualPort.offset.y;\n                portWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                portWrapper.relativeMode = 'Point';\n            }\n            if (changedObject.width !== undefined) {\n                isMeasure = true;\n                portWrapper.width = changedObject.width;\n            }\n            if (changedObject.height !== undefined) {\n                isMeasure = true;\n                portWrapper.height = changedObject.height;\n            }\n            if (changedObject.visibility !== undefined) {\n                portWrapper.visible = (nodes.visible && checkPortRestriction(actualPort, PortVisibility.Visible)) ? true : false;\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    portWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    portWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    portWrapper.margin.right = changedObject.margin.right;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    portWrapper.margin.left = changedObject.margin.left;\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.verticalAlignment = changedObject.verticalAlignment;\n            }\n            if (changedObject.style !== undefined) {\n                if (changedObject.style.fill !== undefined) {\n                    portWrapper.style.fill = changedObject.style.fill;\n                }\n                if (changedObject.style.opacity !== undefined) {\n                    portWrapper.style.opacity = changedObject.style.opacity;\n                }\n                if (changedObject.style.strokeColor !== undefined) {\n                    portWrapper.style.strokeColor = changedObject.style.strokeColor;\n                }\n                if (changedObject.style.strokeWidth !== undefined) {\n                    portWrapper.style.strokeWidth = changedObject.style.strokeWidth;\n                }\n                if (changedObject.style.strokeDashArray !== undefined) {\n                    portWrapper.style.strokeDashArray = changedObject.style.strokeDashArray;\n                }\n            }\n            if (changedObject.shape !== undefined) {\n                if (portWrapper) {\n                    var pathdata = getPortShape(changedObject.shape);\n                    portWrapper.data = pathdata;\n                }\n            }\n            if (changedObject.pathData !== undefined) {\n                portWrapper.data = String(changedObject.pathData);\n                isMeasure = true;\n            }\n            if (isMeasure === true) {\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n            //this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateIcon = function (actualObject) {\n        var iconContainer = this.getWrapper(actualObject.wrapper, 'icon_content');\n        var diagramId = (this.diagramActions & DiagramAction.Render) ? this.element.id : undefined;\n        if (iconContainer) {\n            if (this.mode === 'SVG') {\n                var icon = getDiagramElement(actualObject.wrapper.id + '_icon_content', diagramId);\n                if (icon) {\n                    var iconRect = getDiagramElement(icon.id + '_rect', diagramId);\n                    var iconShape = getDiagramElement(icon.id + '_shape', diagramId);\n                    var nativeContent = getDiagramElement(iconShape.id + '_native_element', diagramId);\n                    if (nativeContent) {\n                        nativeContent.parentNode.removeChild(nativeContent);\n                    }\n                    iconShape.parentNode.removeChild(iconShape);\n                    iconRect.parentNode.removeChild(iconRect);\n                    icon.parentNode.removeChild(icon);\n                }\n            }\n            var index = actualObject.wrapper.children.indexOf(iconContainer);\n            actualObject.wrapper.children.splice(index, 1);\n        }\n        var portContainer = this.getPortContainer(actualObject);\n        actualObject.initIcons(this.getDescription, this.layout, portContainer, this.element.id);\n    };\n    Diagram.prototype.getPortContainer = function (actualObject) {\n        if (actualObject.children) {\n            for (var i = 0; i < actualObject.wrapper.children.length; i++) {\n                if (actualObject.wrapper.children[i].id === actualObject.id + 'group_container') {\n                    return actualObject.wrapper.children[i];\n                }\n            }\n        }\n        return actualObject.wrapper;\n    };\n    Diagram.prototype.updateTooltip = function (actualObject, node) {\n        if (node.tooltip.content !== undefined) {\n            actualObject.tooltip.content = node.tooltip.content;\n        }\n        if (node.tooltip.position !== undefined) {\n            actualObject.tooltip.position = node.tooltip.position;\n        }\n        if (node.tooltip.height !== undefined) {\n            actualObject.tooltip.height = node.tooltip.height;\n        }\n        if (node.tooltip.width !== undefined) {\n            actualObject.tooltip.width = node.tooltip.width;\n        }\n        if (node.tooltip.showTipPointer !== undefined) {\n            actualObject.tooltip.showTipPointer = node.tooltip.showTipPointer;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateQuad = function (obj) {\n        var modified = this.spatialSearch.updateQuad(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeFromAQuad = function (obj) {\n        if (obj.children) {\n            var child = void 0;\n            var children = obj.children;\n            for (var i = 0; i < children.length; i++) {\n                child = this.nameTable[children[i]];\n                if (child) {\n                    this.removeFromAQuad(child);\n                }\n            }\n        }\n        this.spatialSearch.removeFromAQuad(obj.wrapper);\n        var modified = this.spatialSearch.updateBounds(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateGroupSize = function (node) {\n        var tempNode;\n        if (node.parentId) {\n            tempNode = this.nameTable[node.parentId];\n            if (tempNode) {\n                if (tempNode.parentId) {\n                    this.updateGroupSize(tempNode);\n                }\n                else {\n                    tempNode.wrapper.measure(new Size());\n                    tempNode.wrapper.arrange(tempNode.wrapper.desiredSize);\n                    this.updateGroupOffset(tempNode);\n                    this.updateDiagramObject(tempNode);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updatePage = function () {\n        if (this.diagramActions & DiagramAction.Render) {\n            this.scroller.updateScrollOffsets();\n            this.scroller.setSize();\n            //updating overview\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    view.updateView(view);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.protectPropertyChange = function (enable) {\n        this.isProtectedOnChange = enable;\n    };\n    /** @private */\n    Diagram.prototype.updateShadow = function (nodeShadow, changedShadow) {\n        if (changedShadow.angle !== undefined) {\n            nodeShadow.angle = changedShadow.angle;\n        }\n        if (changedShadow.color !== undefined) {\n            nodeShadow.color = changedShadow.color;\n        }\n        if (changedShadow.distance !== undefined) {\n            nodeShadow.distance = changedShadow.distance;\n        }\n        if (changedShadow.opacity !== undefined) {\n            nodeShadow.opacity = changedShadow.opacity;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateMargin = function (node, changes) {\n        if (changes.margin.top !== undefined) {\n            node.margin.top = changes.margin.top;\n        }\n        if (changes.margin.bottom !== undefined) {\n            node.margin.bottom = changes.margin.bottom;\n        }\n        if (changes.margin.left !== undefined) {\n            node.margin.left = changes.margin.left;\n        }\n        if (changes.margin.right !== undefined) {\n            node.margin.right = changes.margin.right;\n        }\n    };\n    //property changes - end region\n    /* tslint:disable */\n    Diagram.prototype.initDroppables = function () {\n        var _this = this;\n        // initiates droppable event\n        var childTable = {};\n        var entryTable = {};\n        var header;\n        var lane;\n        this.droppable = new Droppable(this.element);\n        // this.droppable.accept = '.e-dragclone';\n        // tslint:disable-next-line:no-any\n        this.droppable.over = function (args) {\n            if (!_this.currentSymbol) {\n                if (args.dragData) {\n                    var newObj = void 0;\n                    var isHorizontal = void 0;\n                    document.getElementById(_this.element.id + 'content').focus();\n                    var position = _this.eventHandler.getMousePosition(args.event);\n                    var clonedObject = void 0;\n                    var selectedSymbol = args.dragData.helper;\n                    var paletteId = selectedSymbol.getAttribute('paletteId');\n                    if (paletteId) {\n                        var sourceElement = document.getElementById(paletteId).ej2_instances[0];\n                        var source = 'sourceElement';\n                        _this.droppable[source] = sourceElement;\n                        var selectedSymbols = 'selectedSymbols';\n                        var childtable = 'childTable';\n                        if (sourceElement) {\n                            var obj = sourceElement[selectedSymbols];\n                            clonedObject = cloneObject(sourceElement[selectedSymbols]);\n                            childTable = sourceElement[childtable];\n                            var wrapper = obj.wrapper.children[0].children[0];\n                            if (sourceElement[selectedSymbols] instanceof Node) {\n                                clonedObject.offsetX = position.x + 5 + (clonedObject.width || wrapper.actualSize.width) / 2;\n                                clonedObject.offsetY = position.y + (clonedObject.height || wrapper.actualSize.height) / 2;\n                                var newNode = new Node(_this, 'nodes', clonedObject, true);\n                                if (newNode.shape.type === 'Bpmn' && newNode.shape.activity.subProcess.processes\n                                    && newNode.shape.activity.subProcess.processes.length) {\n                                    newNode.shape.activity.subProcess.processes = [];\n                                }\n                                if (newNode.shape.type === 'SwimLane') {\n                                    _this.diagramActions |= DiagramAction.PreventHistory;\n                                    if (newNode.shape.isLane) {\n                                        newNode.children = [];\n                                        header = {\n                                            id: 'header' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            header.width = newNode.shape.lanes[0].header.width;\n                                            header.height = newNode.shape.lanes[0].height;\n                                        }\n                                        else {\n                                            header.width = newNode.shape.lanes[0].width;\n                                            header.height = newNode.shape.lanes[0].header.height;\n                                        }\n                                        header.style = newNode.shape.lanes[0].header.style;\n                                        header.offsetX = position.x + 5 + header.width / 2;\n                                        header.offsetY = position.y + header.height / 2;\n                                        header = _this.add(header);\n                                        lane = {\n                                            id: 'body' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            lane.width = newNode.shape.lanes[0].width - header.width;\n                                            lane.height = newNode.shape.lanes[0].height;\n                                            lane.offsetX = position.x + 5 + (newNode.shape.lanes[0].header.width + (lane.width / 2));\n                                            lane.offsetY = position.y + lane.height / 2;\n                                        }\n                                        else {\n                                            lane.width = newNode.shape.lanes[0].width;\n                                            lane.height = newNode.shape.lanes[0].height - header.height;\n                                            lane.offsetX = position.x + 5 + lane.width / 2;\n                                            lane.offsetY = position.y + (newNode.shape.lanes[0].header.height + (lane.height / 2));\n                                        }\n                                        lane.style = newNode.shape.lanes[0].style;\n                                        lane = _this.add(lane);\n                                        var group = {\n                                            id: 'group' + randomId(),\n                                            children: [header.id, lane.id],\n                                        };\n                                        group.shape = newNode.shape;\n                                        group.width = newNode.shape.lanes[0].width;\n                                        group.height = newNode.shape.lanes[0].height;\n                                        newNode = _this.add(group);\n                                    }\n                                    _this.diagramActions &= ~DiagramAction.PreventHistory;\n                                }\n                                if (newNode.shape.isPhase) {\n                                    isHorizontal = (newNode.shape.orientation === 'Horizontal') ? true : false;\n                                    if (isHorizontal) {\n                                        newNode.offsetX = position.x + 5 + (newNode.width || wrapper.actualSize.width) / 2;\n                                        newNode.offsetY = position.y;\n                                        newNode.shape.data =\n                                            'M' + 20 + ',' + (newNode.height / 2) + ' L' + (newNode.width - 20) + ',' +\n                                                (newNode.height / 2) + 'z';\n                                        newNode.height = 1;\n                                    }\n                                    else {\n                                        newNode.offsetX = position.x + 5;\n                                        newNode.offsetY = position.y + (newNode.height || wrapper.actualSize.height) / 2;\n                                        newNode.shape.data =\n                                            'M' + (newNode.width / 2) + ',' + 20 + ' L' + (newNode.width / 2) +\n                                                ',' + (newNode.height - 20) + 'z';\n                                        newNode.width = 1;\n                                    }\n                                }\n                                newObj = newNode;\n                                if (clonedObject.children) {\n                                    var parentNode = clonedObject;\n                                    var tempTable = {};\n                                    entryTable = _this.getChildren(parentNode, tempTable, childTable);\n                                    arrangeChild(parentNode, -parentNode.offsetX, -parentNode.offsetY, entryTable, true, _this);\n                                }\n                            }\n                            else if (sourceElement[selectedSymbols] instanceof Connector) {\n                                newObj = new Connector(_this, 'connectors', clonedObject, true);\n                                var bounds = Rect.toBounds([newObj.sourcePoint, newObj.targetPoint]);\n                                var tx = position.x - bounds.left;\n                                var ty = position.y - bounds.top;\n                                newObj.sourcePoint.x += tx;\n                                newObj.sourcePoint.y += ty;\n                                newObj.targetPoint.x += tx;\n                                newObj.targetPoint.y += ty;\n                            }\n                            if (!newObj.shape.isLane) {\n                                newObj.id += randomId();\n                            }\n                            var arg = {\n                                source: sourceElement, element: newObj, cancel: false,\n                                diagram: _this\n                            };\n                            _this['enterObject'] = newObj;\n                            _this['enterTable'] = entryTable;\n                            _this.triggerEvent(DiagramEvent.dragEnter, arg);\n                            if ((newObj instanceof Node) && newObj.shape.type === 'SwimLane' && newObj.shape.isLane) {\n                                var swimLaneObj = arg.element;\n                                var laneObj = swimLaneObj.shape.lanes[0];\n                                var child1 = void 0;\n                                var child2 = void 0;\n                                isHorizontal = (swimLaneObj.shape.orientation === 'Horizontal') ? true : false;\n                                child1 = _this.nameTable[newObj.children[0]];\n                                child2 = _this.nameTable[newObj.children[1]];\n                                if (isHorizontal) {\n                                    header.width = laneObj.header.width;\n                                    header.height = laneObj.height;\n                                    lane.width = laneObj.width - header.width;\n                                    lane.height = laneObj.height;\n                                    lane.offsetX = position.x + 5 + (laneObj.header.width + (child2.width / 2));\n                                    lane.offsetY = position.y + child2.height / 2;\n                                }\n                                else {\n                                    header.width = laneObj.width;\n                                    header.height = laneObj.header.height;\n                                    lane.width = laneObj.width;\n                                    lane.height = laneObj.height - header.height;\n                                    lane.offsetX = position.x + 5 + child2.width / 2;\n                                    lane.offsetY = position.y + (laneObj.header.height + (child2.height / 2));\n                                }\n                                header.offsetX = position.x + 5 + child1.width / 2;\n                                header.offsetY = position.y + child1.height / 2;\n                                newObj.width = laneObj.width;\n                                newObj.height = laneObj.height;\n                            }\n                            if ((newObj instanceof Node) && newObj.shape.isPhase) {\n                                if (isHorizontal) {\n                                    newObj.height = 1;\n                                }\n                                else {\n                                    newObj.width = 1;\n                                }\n                            }\n                            if (!_this.activeLayer.lock && !arg.cancel) {\n                                _this.preventUpdate = true;\n                                if (newObj.children) {\n                                    _this.findChild(newObj, entryTable);\n                                }\n                                _this.preventUpdate = true;\n                                if (newObj.zIndex !== -1) {\n                                    newObj.zIndex = -1;\n                                }\n                                _this.initObject(newObj, undefined, undefined, true);\n                                _this.currentSymbol = newObj;\n                                if (_this.mode !== 'SVG') {\n                                    _this.refreshDiagramLayer();\n                                }\n                                _this.commandHandler.select(newObj);\n                                _this.eventHandler.mouseDown(args.event);\n                                _this.eventHandler.mouseMove(args.event, args);\n                                _this.preventUpdate = false;\n                                _this.updatePage();\n                                selectedSymbol.style.opacity = '0';\n                            }\n                            delete _this['enterObject'];\n                            delete _this['enterTable'];\n                        }\n                        _this.droppable[selectedSymbols] = selectedSymbol;\n                    }\n                }\n            }\n            else {\n                if (args.event.touches && args.event.touches.length) {\n                    _this.eventHandler.mouseMove(args.event, args.event.touches);\n                }\n            }\n        };\n        // tslint:disable-next-line:no-any\n        this.droppable.drop = function (args) {\n            var source = 'sourceElement';\n            var value;\n            if (_this.currentSymbol) {\n                var isPhase = false;\n                var orientation_2;\n                var isConnector = void 0;\n                isConnector = (_this.currentSymbol instanceof Connector) ? true : false;\n                if (args.event.touches) {\n                    _this.eventHandler.mouseUp(args.event);\n                }\n                var newObj = void 0;\n                var node = void 0;\n                var conn = void 0;\n                var arg = {\n                    source: _this.droppable[source],\n                    element: _this.currentSymbol,\n                    target: _this.eventHandler['hoverNode'] || _this.eventHandler['lastObjectUnderMouse'] || _this, cancel: false,\n                    position: { x: _this.currentSymbol.wrapper.offsetX, y: _this.currentSymbol.wrapper.offsetY }\n                };\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n                clonedObject = cloneObject(_this.currentSymbol);\n                clonedObject['hasTarget'] = _this.currentSymbol['hasTarget'];\n                _this.removeFromAQuad(_this.currentSymbol);\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                _this.removeElements(_this.currentSymbol);\n                if (_this.currentSymbol.shape.isLane ||\n                    _this.currentSymbol.shape.isPhase) {\n                    _this.removeChildInNodes(_this.currentSymbol);\n                }\n                if (arg.cancel) {\n                    removeChildNodes(_this.currentSymbol, _this);\n                }\n                if (_this.currentSymbol.shape.isPhase) {\n                    isPhase = true;\n                    orientation_2 = _this.currentSymbol.shape.orientation;\n                }\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.currentSymbol = null;\n                _this.protectPropertyChange(true);\n                if (!arg.cancel) {\n                    _this.startGroupAction();\n                    if (clonedObject && (clonedObject.shape.isLane || isPhase)) {\n                        if (isPhase) {\n                            clonedObject.shape.isPhase = isPhase;\n                            clonedObject.shape.orientation = orientation_2;\n                        }\n                        _this.eventHandler.addSwimLaneObject(clonedObject);\n                    }\n                    if (clonedObject.shape.type === 'Bpmn' && clonedObject.shape.annotation\n                        && clonedObject['hasTarget']) {\n                        var nodeId = clonedObject.shape.annotation.nodeId;\n                        clonedObject.shape.annotation.id = clonedObject.id;\n                        _this.addTextAnnotation(clonedObject.shape.annotation, _this.nameTable[nodeId]);\n                        clonedObject.nodeId = '';\n                    }\n                    if (!clonedObject.shape.isLane && !isPhase) {\n                        if (clonedObject.children) {\n                            _this.addChildNodes(clonedObject);\n                        }\n                        if (arg.target && (arg.target instanceof Node) && !isConnector && checkParentAsContainer(_this, arg.target)\n                            && canAllowDrop(arg.target)) {\n                            addChildToContainer(_this, arg.target, clonedObject);\n                        }\n                        else {\n                            value = _this.add(clonedObject, true);\n                        }\n                        if ((clonedObject || value) && canSingleSelect(_this)) {\n                            _this.select([_this.nameTable[clonedObject[id]]]);\n                        }\n                    }\n                }\n                _this.protectPropertyChange(false);\n                newObj = _this.nameTable[clonedObject[id]];\n                if (clonedObject['hasTarget']) {\n                    clonedObject.nodeId = clonedObject['hasTarget'];\n                    _this.remove(clonedObject);\n                }\n                if (_this.bpmnModule && newObj instanceof Node && clonedObject.processId) {\n                    newObj.processId = clonedObject.processId;\n                    _this.bpmnModule.dropBPMNchild(_this.nameTable[newObj.processId], newObj, _this);\n                }\n                _this.endGroupAction();\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                delete _this.droppable[source];\n                var selectedSymbols = 'selectedSymbols';\n                remove(_this.droppable[selectedSymbols]);\n            }\n            else {\n                var arg = {\n                    source: args.droppedElement,\n                    element: undefined,\n                    target: _this.eventHandler['hoverNode'] || _this.eventHandler['lastObjectUnderMouse'] || _this, cancel: false,\n                    position: undefined\n                };\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n            }\n        };\n        this.droppable.out = function (args) {\n            if (_this.currentSymbol && !_this.eventHandler.focus) {\n                _this.unSelect(_this.currentSymbol);\n                _this.removeFromAQuad(_this.currentSymbol);\n                if (_this.mode !== 'SVG' && _this.currentSymbol.shape.type === 'Native') {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.triggerEvent(DiagramEvent.dragLeave, { element: _this.currentSymbol, diagram: _this });\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                else {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.currentSymbol = null;\n                var selectedSymbols = 'selectedSymbols';\n                _this.droppable[selectedSymbols].style.opacity = '1';\n                var source = 'sourceElement';\n                delete _this.droppable[source];\n                _this.diagramRenderer.rendererActions =\n                    _this.removeConstraints(_this.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                if (_this.previousSelectedObject) {\n                    _this.select(_this.previousSelectedObject, _this.previousSelectedObject.length > 1 ? true : false);\n                }\n                _this.previousSelectedObject = null;\n            }\n        };\n    };\n    Diagram.prototype.removeChildInNodes = function (node) {\n        if (node) {\n            if (node.children) {\n                for (var i = 0; i < node.children.length; i++) {\n                    this.removeChildInNodes(this.nameTable[node.children[i]]);\n                }\n            }\n            var index = this.nodes.indexOf(node);\n            if (index !== -1) {\n                this.nodes.splice(index, 1);\n            }\n        }\n    };\n    Diagram.prototype.findChild = function (node, childTable) {\n        var group;\n        var newNode;\n        for (var i = 0; i < node.children.length; i++) {\n            group = childTable[node.children[i]];\n            if (group) {\n                if (group.children) {\n                    this.findChild(group, childTable);\n                }\n                group.id = group.id + randomId();\n                childTable[group.id] = group;\n                node.children[i] = group.id;\n                newNode = new Node(this, 'nodes', group, true);\n                this.initObject(newNode, undefined, undefined, true);\n                //this.add(group, true);\n            }\n        }\n    };\n    Diagram.prototype.getChildren = function (node, entryTable, childTable) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (childTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    entryTable = this.getChildren(temp, entryTable, childTable);\n                }\n                entryTable[temp.id] = cloneObject(temp);\n            }\n        }\n        return entryTable;\n    };\n    Diagram.prototype.addChildNodes = function (node) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (this.nameTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    this.addChildNodes(temp);\n                }\n                this.add(temp, true);\n            }\n        }\n    };\n    Diagram.prototype.moveNode = function (node) {\n        var currentLayer = this.commandHandler.getObjectLayer(node.id);\n        var index = currentLayer.zIndex;\n        var length = currentLayer.objects.length;\n        var targetLayer;\n        for (var i = 0; i < this.layers.length; i++) {\n            if (index === this.layers[i].zIndex) {\n                targetLayer = this.layers[i + 1];\n            }\n        }\n        if (length > 1) {\n            this.commandHandler.moveSvgNode(node.id, currentLayer.objects[length - 2]);\n            this.commandHandler.moveSvgNode(currentLayer.objects[length - 2], node.id);\n        }\n        else {\n            if (targetLayer) {\n                var targetObject = this.commandHandler.getLayer(this.layerZIndexTable[targetLayer.zIndex]).objects[0];\n                if (targetObject) {\n                    this.commandHandler.moveSvgNode(node.id, targetObject);\n                }\n                else {\n                    this.moveObjectsUp(node, currentLayer);\n                }\n            }\n            else {\n                this.moveObjectsUp(node, currentLayer);\n            }\n        }\n    };\n    Diagram.prototype.moveObjectsUp = function (node, currentLayer) {\n        var targetLayer;\n        for (var i = this.layers.length - 1; i >= 0; i--) {\n            targetLayer = this.layers[i];\n            if (currentLayer.id !== targetLayer.id) {\n                var targetObject = this.commandHandler.getLayer(this.layerZIndexTable[targetLayer.zIndex]).objects[targetLayer.objects.length - 1];\n                if (targetObject) {\n                    this.commandHandler.moveSvgNode(node.id, targetObject);\n                    this.commandHandler.moveSvgNode(targetObject, node.id);\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * Inserts newly added element into the database\n     */\n    Diagram.prototype.insertData = function (node) {\n        return this.crudOperation(node, 'create', this.getNewUpdateNodes('New'));\n    };\n    /**\n     * updates the user defined element properties into the existing database\n     */\n    Diagram.prototype.updateData = function (node) {\n        return this.crudOperation(node, 'update', this.getNewUpdateNodes('Update'));\n    };\n    /**\n     * Removes the user deleted element from the existing database\n     */\n    Diagram.prototype.removeData = function (node) {\n        return this.crudOperation(node, 'destroy', this.getDeletedNodes());\n    };\n    Diagram.prototype.crudOperation = function (node, crud, getNodesCollection) {\n        if (node) {\n            var data = this.parameterMap(node, node instanceof Connector ? false : true);\n            if (data) {\n                var url = node instanceof Connector ? this.dataSourceSettings.connectionDataSource.crudAction[crud] : this.dataSourceSettings.crudAction[crud];\n                this.raiseAjaxPost(JSON.stringify(data), url);\n            }\n            return data;\n        }\n        else {\n            var newObjects = getNodesCollection;\n            this.processCrudCollection(newObjects, this.dataSourceSettings.crudAction[crud], this.dataSourceSettings.connectionDataSource.crudAction[crud]);\n            return newObjects;\n        }\n    };\n    Diagram.prototype.processCrudCollection = function (newObjects, nodeCrudAction, connectorCrudAction) {\n        if (newObjects.nodes) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.nodes.length; i++) {\n                data.push(this.parameterMap(newObjects.nodes[i], true));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), nodeCrudAction);\n        }\n        if (newObjects.connectors) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.connectors.length; i++) {\n                data.push(this.parameterMap(newObjects.connectors[i], false));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), connectorCrudAction);\n        }\n    };\n    Diagram.prototype.parameterMap = function (object, isNode) {\n        var mappingObj = {};\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        if (fields.id)\n            mappingObj[fields.id] = object.id;\n        if (fields.sourcePointX && fields.sourcePointY) {\n            mappingObj[fields.sourcePointX] = object.sourcePoint.x;\n            mappingObj[fields.sourcePointY] = object.sourcePoint.y;\n        }\n        if (fields.targetPointX && fields.targetPointY) {\n            mappingObj[fields.targetPointX] = object.targetPoint.x;\n            mappingObj[fields.targetPointY] = object.targetPoint.y;\n        }\n        if (fields.sourceID)\n            mappingObj[fields.sourceID] = object.sourceID;\n        if (fields.targetID)\n            mappingObj[fields.targetID] = object.targetID;\n        if (fields.crudAction && fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++)\n                mappingObj[fields.crudAction.customFields[i]] = object[fields.crudAction.customFields[i]];\n        }\n        return mappingObj;\n    };\n    Diagram.prototype.getNewUpdateNodes = function (status) {\n        var nodes = [];\n        var connectors = [];\n        for (var name_1 in this.nameTable) {\n            var node = this.nameTable[name_1];\n            if (node.status == status) {\n                if (node && node instanceof Connector) {\n                    node.status = 'None';\n                    connectors.push(node);\n                }\n                else {\n                    node.status = 'None';\n                    nodes.push(node);\n                }\n            }\n        }\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.getDeletedNodes = function () {\n        var nodes = [];\n        var connectors = [];\n        var i;\n        for (i = 0; i < this.crudDeleteNodes.length; i++) {\n            var node = this.crudDeleteNodes[i];\n            if (node && node.segments)\n                connectors.push(node);\n            else if (node) {\n                nodes.push(node);\n            }\n        }\n        this.crudDeleteNodes = [];\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.raiseAjaxPost = function (value, url) {\n        var callback = new Ajax(url, 'POST', true, 'application/json');\n        var data = JSON.stringify(JSON.parse(value));\n        callback.send(data).then();\n        callback.onSuccess = function (data) {\n        };\n    };\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"width\", void 0);\n    __decorate([\n        Property('SVG')\n    ], Diagram.prototype, \"mode\", void 0);\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ContextMenuSettings)\n    ], Diagram.prototype, \"contextMenuSettings\", void 0);\n    __decorate([\n        Property(DiagramConstraints.Default)\n    ], Diagram.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(DiagramTools.Default)\n    ], Diagram.prototype, \"tool\", void 0);\n    __decorate([\n        Property('Top')\n    ], Diagram.prototype, \"bridgeDirection\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Diagram.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Complex({}, SnapSettings)\n    ], Diagram.prototype, \"snapSettings\", void 0);\n    __decorate([\n        Complex({}, RulerSettings)\n    ], Diagram.prototype, \"rulerSettings\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Diagram.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, SerializationSettings)\n    ], Diagram.prototype, \"serializationSettings\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Diagram.prototype, \"nodes\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"drawingObject\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Diagram.prototype, \"connectors\", void 0);\n    __decorate([\n        Property([])\n    ], Diagram.prototype, \"basicElements\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Diagram.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, DataSource)\n    ], Diagram.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"historyManager\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"setNodeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getDescription\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomProperty\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomTool\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomCursor\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"updateSelection\", void 0);\n    __decorate([\n        Complex({}, Selector)\n    ], Diagram.prototype, \"selectedItems\", void 0);\n    __decorate([\n        Complex({}, ScrollSettings)\n    ], Diagram.prototype, \"scrollSettings\", void 0);\n    __decorate([\n        Complex({}, Layout)\n    ], Diagram.prototype, \"layout\", void 0);\n    __decorate([\n        Complex({}, CommandManager)\n    ], Diagram.prototype, \"commandManager\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dataLoaded\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"textEdit\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"scrollChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"selectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sizeChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"connectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sourcePointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"targetPointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"propertyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"positionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"rotateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"collectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"segmentCollectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"expandStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuBeforeItemRender\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Collection([], Layer)\n    ], Diagram.prototype, \"layers\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"drop\", void 0);\n    return Diagram;\n}(Component));\nexport { Diagram };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { Size } from './primitives/size';\nimport { SnapConstraints } from './enum/enum';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from './utility/dom-util';\nimport { Rect } from './primitives/rect';\nimport { createSvgElement, getHTMLLayer } from './utility/dom-util';\nimport { getDiagramLayerSvg } from './utility/dom-util';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { DiagramNativeElement } from './core/elements/native-element';\n/**\n * Print and Export Settings\n */\nvar PrintAndExport = /** @class */ (function () {\n    function PrintAndExport(diagram) {\n        this.diagram = diagram;\n    }\n    /**\n     * To Export the diagram\n     * @private\n     */\n    PrintAndExport.prototype.exportDiagram = function (options) {\n        var fileType;\n        var customBounds;\n        var content;\n        var content1 = '';\n        var data = 'data';\n        var mode;\n        var buffers = [];\n        var margin = options.margin || {};\n        var region = options && options.region ? options.region : 'Content';\n        mode = options && options.mode ? options.mode : 'Download';\n        var bounds = this.getDiagramBounds(region, options);\n        if (options.bounds) {\n            customBounds = true;\n            bounds.x = options.bounds.x ? options.bounds.x : bounds.x;\n            bounds.y = options.bounds.y ? options.bounds.y : bounds.y;\n            bounds.width = options.bounds.width || bounds.width;\n            bounds.height = options.bounds.height || bounds.height;\n        }\n        margin = {\n            top: margin.top !== undefined ? margin.top : 25,\n            bottom: margin.bottom !== undefined ? margin.bottom : 25,\n            right: margin.right !== undefined ? margin.right : 25,\n            left: margin.left !== undefined ? margin.left : 25\n        };\n        var nodes = this.diagram.nodes;\n        if (region !== 'PageSettings') {\n            bounds.x -= margin.left;\n            bounds.y -= margin.top;\n            bounds.width += margin.left + margin.right;\n            bounds.height += margin.top + margin.bottom;\n        }\n        var fileName = options.fileName || 'diagram';\n        if (options.format !== 'SVG') {\n            data = this.setCanvas(options, bounds, margin, mode, customBounds, region, fileName);\n            if (data !== null) {\n                return data;\n            }\n        }\n        else {\n            fileType = options.format;\n            options.bounds = bounds;\n            options.margin = margin;\n            var svg = content = this.diagramAsSvg(options, margin);\n            if (mode === 'Data') {\n                return content;\n            }\n            var buffer = new XMLSerializer().serializeToString(svg);\n            buffers.push(buffer);\n        }\n        if (mode === 'Download' && data !== null) {\n            var browserInfo = void 0;\n            // Ensure this for Safari\n            // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n            //     let info: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n            //     alert('Downloading option is not supported in ' + info + ', Please use the returned data');\n            //     return content;\n            // } else {\n            for (var b = 0; b < buffers.length; b++) {\n                var blob = new Blob([buffers[b]], { type: 'application/octet-stream' });\n                if (Browser.info.name === 'msie') {\n                    window.navigator.msSaveOrOpenBlob(blob, fileName + '.' + fileType);\n                }\n                else {\n                    var pom = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                    var url = URL.createObjectURL(blob);\n                    pom.href = url;\n                    var e = document.createEvent('MouseEvents');\n                    e.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                    pom.dispatchEvent(e);\n                }\n            }\n        }\n        return null;\n    };\n    PrintAndExport.prototype.setCanvas = function (options, bounds, margin, mode, customBounds, region, fileName) {\n        var content;\n        options.bounds = bounds;\n        options.region = region;\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        this.setScaleValueforCanvas(options, bounds);\n        var canvas = this.diagramAsCanvas({\n            bounds: bounds, margin: margin, region: region, scaleX: options[scaleX],\n            scaleY: options[scaleY], scaleOffsetX: options[scaleOffsetX], scaleOffsetY: options[scaleOffsetY]\n        }, customBounds);\n        var image = content = canvas.toDataURL();\n        if (mode === 'Data') {\n            return content;\n        }\n        this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        return null;\n    };\n    PrintAndExport.prototype.canvasMultiplePage = function (options, canvas, margin, image, fileName) {\n        var _this = this;\n        var images = [];\n        var fileType = options.format || 'JPG';\n        if (options.multiplePage) {\n            options.pageHeight = options.pageHeight ? options.pageHeight : this.diagram.pageSettings.height;\n            options.pageWidth = options.pageWidth ? options.pageWidth : this.diagram.pageSettings.width;\n            options.pageHeight = options.pageHeight ? options.pageHeight : canvas.width;\n            options.pageWidth = options.pageWidth ? options.pageWidth : canvas.height;\n            margin = options.margin || {};\n            if (options.pageOrientation) {\n                if ((options.pageOrientation === 'Landscape' && options.pageHeight > options.pageWidth) ||\n                    options.pageOrientation === 'Portrait' && options.pageWidth > options.pageHeight) {\n                    var temp = options.pageWidth;\n                    options.pageWidth = options.pageHeight;\n                    options.pageHeight = temp;\n                }\n            }\n            options.margin = {\n                top: !isNaN(margin.top) ? margin.top : 0,\n                bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n                left: !isNaN(margin.left) ? margin.left : 0,\n                right: !isNaN(margin.right) ? margin.right : 0\n            };\n            var attr = {\n                'id': this.diagram.element.id + '_printImage',\n                'src': image,\n            };\n            var img_1 = createHtmlElement('img', attr);\n            img_1.onload = function () {\n                images = _this.getMultipleImage(img_1, options, true);\n                _this.exportImage(images, fileName, fileType, image);\n            };\n        }\n        else {\n            images = [image];\n            this.exportImage(images, fileName, fileType, image);\n        }\n    };\n    PrintAndExport.prototype.exportImage = function (images, fileName, fileType, image) {\n        var buffers = [];\n        var length = (!(images instanceof HTMLElement)) ? images.length : 0;\n        for (var g = 0; g < length; g++) {\n            image = images[g];\n            image = image.replace(/^data:[a-z]*;,/, '');\n            var image1 = image.split(',');\n            var byteString = atob(image1[1]);\n            var buffer = new ArrayBuffer(byteString.length);\n            var intArray = new Uint8Array(buffer);\n            for (var i = 0; i < byteString.length; i++) {\n                intArray[i] = byteString.charCodeAt(i);\n            }\n            buffers.push(buffer);\n        }\n        var _loop_1 = function (j) {\n            var b = new Blob([buffers[j]], { type: 'application/octet-stream' });\n            if (Browser.info.name === 'msie') {\n                window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType);\n            }\n            else {\n                var htmlElement_1 = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                var urlLink = URL.createObjectURL(b);\n                htmlElement_1.href = urlLink;\n                var mouseEvent_1 = document.createEvent('MouseEvents');\n                mouseEvent_1.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                setTimeout(function () {\n                    htmlElement_1.dispatchEvent(mouseEvent_1);\n                }, ((j + 1) * 5));\n            }\n        };\n        // Ensure this for safari\n        // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n        //     let browserInfo: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n        //     alert('Downloading option is not supported in ' + browserInfo + ', Please use the returned data');\n        //     return content;\n        // } else {\n        for (var j = 0; j < buffers.length; j++) {\n            _loop_1(j);\n        }\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getObjectsBound = function (options) {\n        var nodes = this.diagram.nodes;\n        var nodebounds;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node.visible) {\n                if (((options.format !== 'SVG' && !(node instanceof DiagramNativeElement) && !(node instanceof DiagramHtmlElement))\n                    || (options.format === 'SVG' && !(node instanceof DiagramHtmlElement)))) {\n                    if (!nodebounds) {\n                        nodebounds = node.wrapper.outerBounds;\n                    }\n                    else {\n                        nodebounds = nodebounds.uniteRect(node.wrapper.outerBounds);\n                    }\n                }\n            }\n        }\n        var connectors = this.diagram.connectors;\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            if (connector.visible) {\n                if (!nodebounds) {\n                    nodebounds = connector.wrapper.outerBounds;\n                }\n                else {\n                    nodebounds = nodebounds.uniteRect(connector.wrapper.outerBounds);\n                }\n            }\n        }\n        return nodebounds || new Rect(0, 0, 0, 0);\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getDiagramBounds = function (mode, options) {\n        var rect = this.getObjectsBound(options);\n        var left = rect.left;\n        var top = rect.top;\n        var right = rect.right - rect.left;\n        var bottom = rect.bottom - rect.top;\n        if (mode !== 'Content') {\n            if (this.diagram.pageSettings && this.diagram.pageSettings.multiplePage) {\n                left = rect.left;\n                top = rect.top;\n                if (this.diagram.pageSettings.width) {\n                    left = Math.floor(left / this.diagram.pageSettings.width) * this.diagram.pageSettings.width;\n                    right = Math.ceil(rect.right / this.diagram.pageSettings.width) * this.diagram.pageSettings.width - left;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = Math.floor(top / this.diagram.pageSettings.height) * this.diagram.pageSettings.height;\n                    bottom = Math.ceil(rect.bottom / this.diagram.pageSettings.height) * this.diagram.pageSettings.height - top;\n                }\n                if ((rect.width === 0) && this.diagram.pageSettings.width !== null) {\n                    right = this.diagram.pageSettings.width;\n                }\n                if ((rect.height === 0) && this.diagram.pageSettings.height !== null) {\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n            else {\n                if (this.diagram.pageSettings.width) {\n                    left = 0;\n                    right = this.diagram.pageSettings.width;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = 0;\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n        }\n        var svgBounds = new Rect();\n        svgBounds.x = left;\n        svgBounds.y = top;\n        svgBounds.width = right;\n        svgBounds.height = bottom;\n        return svgBounds;\n    };\n    PrintAndExport.prototype.setScaleValueforCanvas = function (options, bounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        options[scaleX] = 1;\n        options[scaleY] = 1;\n        options[scaleOffsetX] = 0;\n        options[scaleOffsetY] = 0;\n        options.pageHeight = options.pageHeight || this.diagram.pageSettings.height;\n        options.pageWidth = options.pageWidth || this.diagram.pageSettings.width;\n        var pageOrientation = options.pageOrientation || this.diagram.pageSettings.orientation;\n        if (!pageOrientation) {\n            pageOrientation = 'Portrait';\n        }\n        if (pageOrientation === 'Portrait') {\n            if (options.pageWidth > options.pageHeight) {\n                var temp = options.pageHeight;\n                options.pageHeight = options.pageWidth;\n                options.pageWidth = temp;\n            }\n        }\n        else {\n            if (options.pageHeight > options.pageWidth) {\n                var temp = options.pageWidth;\n                options.pageWidth = options.pageHeight;\n                options.pageHeight = temp;\n            }\n        }\n        if (options.pageWidth && options.pageHeight && !options.multiplePage) {\n            options.stretch = 'Meet';\n        }\n        var height = options.pageHeight || bounds.height;\n        var width = options.pageWidth || bounds.width;\n        if (options.stretch === 'Stretch' || options.stretch === 'Meet' || options.stretch === 'Slice') {\n            options[scaleX] = width / bounds.width;\n            options[scaleY] = height / bounds.height;\n            if (options.stretch === 'Meet') {\n                options[scaleX] = options[scaleY] = Math.min(options[scaleX], options[scaleY]);\n                options[scaleOffsetY] = (options.pageHeight - bounds.height * options[scaleX]) / 2;\n                options[scaleOffsetX] = (options.pageWidth - bounds.width * options[scaleX]) / 2;\n            }\n            else if (options.stretch === 'Slice') {\n                options[scaleX] = options[scaleY] = Math.max(options[scaleX], options[scaleY]);\n            }\n            bounds.width = width;\n            bounds.height = height;\n        }\n        bounds.x *= options[scaleX];\n        bounds.y *= options[scaleY];\n    };\n    PrintAndExport.prototype.diagramAsSvg = function (options, margin) {\n        var svg = this.diagram.createSvg(this.diagram.element.id + '_diagram_svg', options.bounds.width, options.bounds.height);\n        document.body.appendChild(svg);\n        var g = createSvgElement('g', { 'id': this.diagram.element.id + '_pageBackground' });\n        var region = options && options.region ? options.region : 'Content';\n        var bounds = this.getDiagramBounds(region, options);\n        var left = bounds.x;\n        var top = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        svg.appendChild(g);\n        var attr = {\n            'x': String(left),\n            'y': String(top), 'width': String(width), 'height': String(height)\n        };\n        setAttributeSvg(g, attr);\n        this.setTransform(g, options.bounds, margin);\n        var gradient = document.getElementById(this.diagram.element.id + 'gradient_pattern');\n        if (gradient) {\n            svg.appendChild(gradient);\n        }\n        attr = {\n            'x': 0,\n            'y': 0, 'width': String(width + margin.left + margin.right), 'height': String(height + margin.top + margin.bottom)\n        };\n        var backimage = document.getElementById(this.diagram.element.id + '_backgroundImageLayer').cloneNode(true);\n        setAttributeSvg(backimage, attr);\n        svg.appendChild(backimage);\n        this.setTransform(backimage, bounds, margin);\n        var backRect = document.getElementById(this.diagram.element.id + '_backgroundLayerrect').cloneNode(true);\n        setAttributeSvg(backRect, attr);\n        svg.appendChild(backRect);\n        this.setTransform(backRect, bounds, margin);\n        if (this.diagram.mode === 'SVG') {\n            var element = void 0;\n            var i = void 0;\n            var diagramLayerSVG = getDiagramLayerSvg(this.diagram.element.id);\n            svg.appendChild(diagramLayerSVG.getElementById(this.diagram.diagramLayer.id).cloneNode(true));\n            for (i = 0; i < svg.childNodes.length; i++) {\n                element = svg.childNodes[i];\n                if (element.id === this.diagram.element.id + '_diagramLayer') {\n                    this.setTransform(element, bounds, margin);\n                }\n            }\n        }\n        else {\n            g = createSvgElement('g', { 'id': this.diagram.element.id + '_diagramLayer' });\n            svg.appendChild(g);\n            this.setTransform(g, options.bounds, margin);\n            //renderLabels\n            var renderer = new DiagramRenderer('', null, true);\n            var htmlLayer = getHTMLLayer(this.diagram.element.id);\n            this.diagram.renderDiagramElements(svg, renderer, htmlLayer, false);\n        }\n        document.body.removeChild(svg);\n        return svg;\n    };\n    PrintAndExport.prototype.setTransform = function (element, bounds, margin) {\n        element.setAttribute('transform', 'translate(' + (-bounds.x + margin.left) + ', ' +\n            (-bounds.y + margin.top) + ')');\n    };\n    PrintAndExport.prototype.diagramAsCanvas = function (options, customBounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        var element;\n        var elements = [];\n        var region = options.bounds;\n        var margin = options.margin;\n        var mode = options && options.region ? options.region : 'Content';\n        var pageBounds = this.getDiagramBounds(mode, options);\n        var bgColor = this.diagram.pageSettings.background.color;\n        var canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', options.bounds.width, options.bounds.height);\n        //canvas.setAttribute('style', 'position:absolute;top:135px;left:160px;');\n        var context = canvas.getContext('2d');\n        context.translate(-region.x, -region.y);\n        context.save();\n        context.fillStyle = this.diagram.pageSettings.background.color;\n        region = mode === 'Content' ? pageBounds : region;\n        context.fillRect(region.x, region.y, region.width, region.height);\n        var bgImg = this.diagram.pageSettings.background;\n        if (bgImg && bgImg.source) {\n            pageBounds = this.getDiagramBounds(mode, options);\n            var image = new Image();\n            image.src = bgImg.source;\n            var proportionX = pageBounds.width / image.width;\n            var proportionY = pageBounds.height / image.height;\n            var x = pageBounds.x;\n            var y = pageBounds.y;\n            var width = pageBounds.width;\n            var height = pageBounds.height;\n            var exportable = this.isImageExportable(bgImg);\n            if (bgImg.scale !== 'None' && bgImg.align !== 'None') {\n                var proportion = bgImg.scale === 'Meet' ? Math.min(proportionX, proportionY) : Math.max(proportionX, proportionY);\n                width = proportion * image.width;\n                height = proportion * image.height;\n                if (bgImg.align.indexOf('xmid') > -1) {\n                    x += (pageBounds.width - width) / 2;\n                }\n                else if (bgImg.align.indexOf('xmax') > -1) {\n                    x = x + pageBounds.width - width;\n                }\n                if (bgImg.align.indexOf('ymid') > -1) {\n                    y += (pageBounds.height - height) / 2;\n                }\n                else if (bgImg.align.indexOf('ymax') > -1) {\n                    y = y + pageBounds.height - height;\n                }\n                if (this.diagram.pageSettings.background.color === 'none' || this.diagram.pageSettings.background.color === 'transparent') {\n                    context.fillStyle = 'white';\n                    context.fillRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n                }\n                if (exportable) {\n                    context.drawImage(image, x, y, proportion * image.width, proportion * image.height);\n                }\n            }\n            else if (exportable) {\n                context.drawImage(image, x, y, pageBounds.width, pageBounds.height);\n            }\n        }\n        else {\n            context.fillStyle = bgColor === 'transparent' ? 'white' : bgColor;\n            context.fillRect((pageBounds.x * options[scaleX]) - margin.left, (pageBounds.y * options[scaleY]) - margin.top, (pageBounds.width * options[scaleX]) + margin.left + margin.right, (options[scaleY] * pageBounds.height) + margin.top + margin.bottom);\n        }\n        var brColor = this.diagram.pageSettings.background.color;\n        var brWidth = this.diagram.pageSettings.width;\n        if (brWidth) {\n            context.strokeStyle = brColor === 'none' ? 'transparent' : brColor;\n            context.lineWidth = brWidth;\n            context.strokeRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n        }\n        context.restore();\n        var htmlLayer = getHTMLLayer(this.diagram.element.id);\n        var renderer = new DiagramRenderer('', null, false);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], true);\n        this.diagram.renderDiagramElements(canvas, renderer, htmlLayer, false, true);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], false);\n        return canvas;\n    };\n    PrintAndExport.prototype.updateWrapper = function (canvas, value, scaleOffsetX, scaleOffsetY, isExport) {\n        if (canvas && canvas.length > 0) {\n            for (var j = 0; j < canvas.length; j++) {\n                if (canvas[j].children) {\n                    this.updateWrapper(canvas[j].children, value, scaleOffsetX, scaleOffsetY, isExport);\n                }\n                canvas[j].exportScaleValue.x = value;\n                canvas[j].exportScaleValue.y = value;\n                canvas[j].exportScaleOffset.x = scaleOffsetX;\n                canvas[j].exportScaleOffset.y = scaleOffsetY;\n                canvas[j].isExport = isExport;\n            }\n        }\n    };\n    PrintAndExport.prototype.updateObjectValue = function (value, scaleOffsetX, scaleOffsetY, isExport) {\n        var wrapper;\n        for (var i = 0; i < this.diagram.nodes.length; i++) {\n            wrapper = this.diagram.nodes[i].wrapper;\n            this.updateWrapper(wrapper.children, value, scaleOffsetX, scaleOffsetY, isExport);\n            wrapper.exportScaleValue.x = value;\n            wrapper.exportScaleValue.y = value;\n            wrapper.exportScaleOffset.x = scaleOffsetX;\n            wrapper.exportScaleOffset.y = scaleOffsetY;\n            wrapper.isExport = isExport;\n        }\n        for (var j = 0; j < this.diagram.connectors.length; j++) {\n            wrapper = this.diagram.connectors[j].wrapper;\n            for (var k = 0; k < wrapper.children.length; k++) {\n                wrapper.children[k].isExport = isExport;\n                if (isExport) {\n                    wrapper.children[k].exportScaleValue.x = value;\n                    wrapper.children[k].exportScaleValue.y = value;\n                    wrapper.children[k].exportScaleOffset.x = scaleOffsetX;\n                    wrapper.children[k].exportScaleOffset.y = scaleOffsetY;\n                }\n            }\n        }\n    };\n    PrintAndExport.prototype.isImageExportable = function (backgroundImage) {\n        var state = true;\n        var content;\n        var canvas;\n        if (backgroundImage.source) {\n            try {\n                canvas = CanvasRenderer.createCanvas(this.diagram.element.id + 'temp_canvas', 100, 100);\n                var ctx = canvas.getContext('2d');\n                ctx.save();\n                var image = new Image();\n                image.src = backgroundImage.source;\n                ctx.drawImage(image, 0, 0, 100, 100);\n                ctx.restore();\n                content = canvas.toDataURL();\n            }\n            catch (e) {\n                state = false;\n            }\n        }\n        return state;\n    };\n    PrintAndExport.prototype.getPrintCanvasStyle = function (img, options) {\n        var width = 0;\n        var height = 0;\n        var size = new Size();\n        width = img.width;\n        height = img.height;\n        if (options.pageHeight || options.pageWidth) {\n            height = options.pageHeight ? options.pageHeight : height;\n            width = options.pageWidth ? options.pageWidth : width;\n        }\n        if (options.pageOrientation) {\n            if ((options.pageOrientation === 'Landscape' && height > width) || options.pageOrientation === 'Portrait' && width > height) {\n                var temp = width;\n                width = height;\n                height = temp;\n            }\n        }\n        size.height = height;\n        size.width = width;\n        return size;\n    };\n    PrintAndExport.prototype.getMultipleImage = function (img, options, isExport) {\n        var imageArray = [];\n        var div = createHtmlElement('div', {});\n        var pageSize = this.getPrintCanvasStyle(img, options);\n        var pageWidth;\n        var pageHeight;\n        var margin = options.margin;\n        var mLeft = margin.left;\n        var mTop = margin.top;\n        var mRight = margin.right;\n        var mBottom = margin.bottom;\n        var x = 0;\n        var y = 0;\n        pageWidth = pageSize.width + x;\n        pageHeight = pageSize.height + y;\n        var drawnX = 0;\n        var drawnY = 0;\n        if (options && options.multiplePage && !(options.region === 'Content')) {\n            div.style.height = 'auto';\n            div.style.width = 'auto';\n            var imgHeight = img.height;\n            var imgWidth = img.width;\n            //if (img) {\n            var i = 0;\n            var j = 0;\n            var url = void 0;\n            var clipWidth = 0;\n            var clipHeight = 0;\n            var ctx = void 0;\n            var canvas = void 0;\n            do {\n                do {\n                    clipWidth = pageSize.width;\n                    clipHeight = pageSize.height;\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        clipWidth = (imgWidth - drawnX);\n                    }\n                    if ((drawnY + pageSize.height) >= imgHeight) {\n                        clipHeight = (imgHeight - drawnY);\n                    }\n                    canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_multiplePrint', pageSize.width, pageSize.height);\n                    ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, x + drawnX + mLeft, y + drawnY + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop, 0 + mLeft, 0 + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop);\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        drawnX -= (drawnX - imgWidth);\n                    }\n                    url = canvas.toDataURL();\n                    ctx.restore();\n                    drawnX += pageWidth;\n                    if (isExport) {\n                        imageArray.push(url);\n                    }\n                    else {\n                        this.printImage(div, url, i + '' + j, pageWidth + 'px;', pageHeight + 'px;');\n                    }\n                    i++;\n                } while (drawnX < imgWidth);\n                j++;\n                i = x = drawnX = 0;\n                if ((drawnY + pageSize.height) >= imgHeight) {\n                    drawnY -= (drawnY - imgHeight);\n                }\n                drawnY += pageHeight;\n            } while (drawnY < imgHeight);\n            //}\n        }\n        else {\n            var x_1 = 0;\n            var y_1 = 0;\n            var pageSize_1 = this.getPrintCanvasStyle(img, options);\n            var pageWidth_1;\n            var pageHeight_1;\n            pageWidth_1 = pageSize_1.width;\n            pageHeight_1 = pageSize_1.height;\n            var ctx = void 0;\n            var canvas = void 0;\n            var url = void 0;\n            canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', pageWidth_1, pageHeight_1);\n            ctx = canvas.getContext('2d');\n            ctx.drawImage(img, x_1 + mLeft, y_1 + mTop, img.width - (mRight + mLeft), img.height - (mTop + mBottom), 0 + mLeft, 0 + mTop, pageWidth_1 - (mRight + mLeft), pageHeight_1 - (mTop + mBottom));\n            url = canvas.toDataURL();\n            ctx.restore();\n            if (isExport) {\n                imageArray.push(url);\n            }\n            else {\n                this.printImage(div, url, 0);\n            }\n        }\n        if (isExport) {\n            return imageArray;\n        }\n        else {\n            return div;\n        }\n    };\n    PrintAndExport.prototype.printImage = function (div, url, i, pageWidth, pageHeight) {\n        var attr = { 'class': 'e-diagram-print-page', 'style': 'width:' + pageWidth + 'height:' + pageHeight };\n        var img = createHtmlElement('img', attr);\n        var innerDiv = createHtmlElement('div', attr);\n        attr = { 'id': this.diagram.element.id + '_multiplePrint_img' + i, 'style': 'float:left', 'src': url };\n        setAttributeHtml(img, attr);\n        innerDiv.appendChild(img);\n        div.appendChild(innerDiv);\n    };\n    /**\n     * To print the image\n     * @private\n     */\n    PrintAndExport.prototype.print = function (options) {\n        options.mode = 'Data';\n        var url = this.exportDiagram(options);\n        this.printImages(url, options);\n    };\n    PrintAndExport.prototype.printImages = function (url, options) {\n        var _this = this;\n        var attr = {\n            'id': this.diagram.element.id + '_printImage',\n            'src': url,\n        };\n        options.margin = { top: 0, bottom: 0, right: 0, left: 0 };\n        var img = createHtmlElement('img', attr);\n        img.onload = function () {\n            var div = _this.getMultipleImage(img, options);\n            // specify window parameters\n            var printWind = window.open('');\n            if (printWind != null) {\n                if ((div instanceof HTMLElement)) {\n                    printWind.document.write('<html><head><style> body{margin:0px;}  @media print { .e-diagram-print-page' +\n                        '{page-break-after: left; }.e-diagram-print-page:last-child {page-break-after: avoid;}}' +\n                        '</style><title></title></head>');\n                    printWind.document.write('<BODY onload=\"setTimeout(function(){window.print();}, 100)\">');\n                    printWind.document.write('<center>' + div.innerHTML + '</center>');\n                    printWind.document.close();\n                }\n            }\n        };\n    };\n    /** @private */\n    PrintAndExport.prototype.getDiagramContent = function (styleSheets) {\n        var container = document.getElementById(this.diagram.element.id + 'content');\n        var scrollerX = container.scrollLeft;\n        var scrollerY = container.scrollTop;\n        var oldZoom = this.diagram.scrollSettings.currentZoom;\n        var oldHorizontalOffset = this.diagram.scroller.horizontalOffset;\n        var oldVerticalOffset = this.diagram.scroller.verticalOffset;\n        var oldWidth = Number(String(this.diagram.width).split('px')[0]);\n        var oldHeight = Number(String(this.diagram.height).split('px')[0]);\n        var bounds = this.getDiagramBounds('', {});\n        this.diagram.scroller.zoom((1 / oldZoom));\n        var scrollX = 0;\n        var scrollY = 0;\n        scrollX = bounds.x;\n        scrollY = bounds.y;\n        this.diagram.scroller.transform = {\n            tx: -scrollX,\n            ty: -scrollY,\n            scale: this.diagram.scroller.currentZoom\n        };\n        this.diagram.scroller.horizontalOffset = -scrollX;\n        this.diagram.scroller.verticalOffset = -scrollY;\n        this.diagram.scroller.setSize();\n        this.diagram.setSize(bounds.width, bounds.height);\n        var snapConstraints = this.diagram.snapSettings.constraints;\n        this.diagram.snapSettings.constraints = (this.diagram.snapSettings.constraints & ~SnapConstraints.ShowLines);\n        this.diagram.dataBind();\n        this.diagram.clearSelection();\n        styleSheets = styleSheets || document.styleSheets;\n        var styleSheetRef = '';\n        for (var i = 0; i < styleSheets.length; i++) {\n            if (styleSheets[i].href || typeof styleSheets[i] === 'string') {\n                styleSheetRef += '<link href=\\'' + (styleSheets[i].href || styleSheets[i]) + '\\' rel=\\'stylesheet\\' />';\n            }\n        }\n        var htmlData = document.getElementById(this.diagram.element.id + 'content').innerHTML;\n        var marginStyle = 'margin-left:' + 0 + 'px;margin-top:' + 0 + 'px;margin-right:'\n            + 0 + 'px;margin-bottom:' + 0 + 'px;';\n        htmlData = styleSheetRef + '<body style=\"margin: 0px; padding: 0px\"><div style=\\'' +\n            marginStyle + '\\'>' + htmlData + '</div></body>';\n        htmlData = htmlData.replace(/ transform: t/g, ' -webkit-transform: t');\n        this.diagram.setSize(oldWidth, oldHeight);\n        this.diagram.scroller.zoom(oldZoom / this.diagram.scrollSettings.currentZoom);\n        this.diagram.snapSettings.constraints = snapConstraints;\n        this.diagram.dataBind();\n        if (scrollerX || scrollerY) {\n            this.diagram.setOffset(scrollerX, scrollerY);\n        }\n        else {\n            this.diagram.scroller.transform = {\n                tx: (oldHorizontalOffset) / this.diagram.scroller.currentZoom,\n                ty: (oldVerticalOffset) / this.diagram.scroller.currentZoom,\n                scale: this.diagram.scroller.currentZoom\n            };\n            this.diagram.scroller.horizontalOffset = oldHorizontalOffset;\n            this.diagram.scroller.verticalOffset = oldVerticalOffset;\n        }\n        this.diagram.renderSelector(false);\n        return htmlData;\n    };\n    /** @private */\n    PrintAndExport.prototype.exportImages = function (image, options) {\n        var _this = this;\n        var region = options && options.region ? options.region : 'Content';\n        var margin = options.margin || {};\n        margin = {\n            top: !isNaN(margin.top) ? margin.top : 0,\n            bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n            left: !isNaN(margin.left) ? margin.left : 0,\n            right: !isNaN(margin.right) ? margin.right : 0\n        };\n        var bounds = this.getDiagramBounds(region, {});\n        if (options.bounds) {\n            bounds.x = (!isNaN(options.bounds.x) ? options.bounds.x : bounds.x);\n            bounds.y = (!isNaN(options.bounds.y) ? options.bounds.y : bounds.y);\n            bounds.width = (options.bounds.width || bounds.width);\n            bounds.height = (options.bounds.height || bounds.height);\n        }\n        var img = document.createElement('img');\n        var attr = {\n            'src': image\n        };\n        setAttributeHtml(img, attr);\n        var context = this;\n        img.onload = function () {\n            var canvas = CanvasRenderer.createCanvas(context.diagram.element.id + 'innerImage', bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            var ctx = canvas.getContext('2d');\n            ctx.fillRect(0, 0, bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            ctx.drawImage(img, bounds.x, bounds.y, bounds.width, bounds.height, margin.left, margin.top, bounds.width, bounds.height);\n            image = canvas.toDataURL();\n            if (options.printOptions) {\n                context.printImages(image, options);\n                return;\n            }\n            ctx.restore();\n            var fileName = options.fileName || 'diagram';\n            _this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        };\n    };\n    /**\n     * To destroy the Print and Export module\n     * @return {void}\n     * @private\n     */\n    PrintAndExport.prototype.destroy = function () {\n        /**\n         * Destroys the Print and Export module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    PrintAndExport.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'PrintandExport';\n    };\n    return PrintAndExport;\n}());\nexport { PrintAndExport };\n","import { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { randomId, getFunction } from '../utility/base-util';\n/**\n * data source defines the basic unit of diagram\n */\nvar DataBinding = /** @class */ (function () {\n    /**\n     * Constructor for the data binding module.\n     * @private\n     */\n    function DataBinding() {\n        /**   @private  */\n        this.dataTable = {};\n        //constructs the data binding module\n    }\n    /**\n     * To destroy the data binding module\n     * @return {void}\n     * @private\n     */\n    DataBinding.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    DataBinding.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'DataBinding';\n    };\n    /**\n     * Initialize nodes and connectors when we have a data as JSON\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initData = function (data, diagram) {\n        var dataSource;\n        var dataProp = 'data';\n        var jsonProp = 'json';\n        var dataManager = data.dataManager || data.dataSource || {};\n        dataSource = dataManager[dataProp] || dataManager[jsonProp] ||\n            (dataManager.dataSource ? dataManager.dataSource.json : undefined);\n        if (dataSource && dataSource.length === 0 && dataManager.dataSource.data) {\n            dataSource = dataManager.dataSource.data;\n        }\n        if (dataSource && dataSource.length) {\n            this.applyDataSource(data, dataSource, diagram);\n        }\n    };\n    /**\n     * Initialize nodes and connector when we have a data as remote url\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initSource = function (data, diagram) {\n        var _this = this;\n        var dataSource = data;\n        var result;\n        var mapper = data;\n        if (dataSource.dataManager instanceof DataManager || dataSource.dataSource instanceof DataManager) {\n            var tempObj = mapper.dataManager || mapper.dataSource;\n            var query = tempObj.defaultQuery || new Query();\n            var dataManager = data.dataManager || data.dataSource;\n            dataManager.executeQuery(query).then(function (e) {\n                var prop = 'result';\n                result = e[prop];\n                if (!diagram.isDestroyed) {\n                    _this.applyDataSource(data, result, diagram);\n                    diagram.refreshDiagram();\n                    diagram.trigger('dataLoaded', { diagram: diagram });\n                }\n            });\n        }\n    };\n    DataBinding.prototype.applyDataSource = function (mapper, data, diagram) {\n        this.dataTable = {};\n        var obj;\n        var firstNode;\n        var rootNodes = [];\n        var firstLevel = [];\n        var item;\n        var nextLevel;\n        if (data !== undefined) {\n            for (var r = 0; r < data.length; r++) {\n                obj = data[r];\n                if (obj[mapper.parentId] === undefined || obj[mapper.parentId] === null ||\n                    typeof obj[mapper.parentId] !== 'object') {\n                    if (rootNodes[obj[mapper.parentId]] !== undefined) {\n                        rootNodes[obj[mapper.parentId]].items.push(obj);\n                    }\n                    else {\n                        rootNodes[obj[mapper.parentId]] = { items: [obj] };\n                    }\n                }\n                else {\n                    rootNodes = this.updateMultipleRootNodes(obj, rootNodes, mapper, data);\n                }\n                if (mapper.root === obj[mapper.id]) {\n                    firstNode = { items: [obj] };\n                }\n            }\n            if (firstNode) {\n                firstLevel.push(firstNode);\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(rootNodes); _i < _a.length; _i++) {\n                    var n = _a[_i];\n                    if (!n || n === 'undefined' || n === '\\'\\'' || n === 'null') {\n                        firstLevel.push(rootNodes[n]);\n                    }\n                }\n            }\n            for (var i = 0; i < firstLevel.length; i++) {\n                for (var j = 0; j < firstLevel[i].items.length; j++) {\n                    item = firstLevel[i].items[j];\n                    var node = this.applyNodeTemplate(mapper, item, diagram);\n                    diagram.nodes.push(node);\n                    this.dataTable[item[mapper.id]] = node;\n                    nextLevel = rootNodes[node.data[mapper.id]];\n                    if (nextLevel !== undefined) {\n                        this.renderChildNodes(mapper, nextLevel, node.id, rootNodes, diagram);\n                    }\n                }\n            }\n        }\n        this.dataTable = null;\n    };\n    /**\n     * updateMultipleRootNodes method is used  to update the multiple Root Nodes\n     * @param object\n     * @param rootnodes\n     * @param mapper\n     * @param data\n     */\n    DataBinding.prototype.updateMultipleRootNodes = function (obj, rootNodes, mapper, data) {\n        var parents = obj[mapper.parentId];\n        var parent;\n        for (var i = 0; i < parents.length; i++) {\n            parent = parents[i];\n            if (rootNodes[parent]) {\n                rootNodes[parent].items.push(obj);\n            }\n            else {\n                rootNodes[parent] = { items: [obj] };\n            }\n        }\n        return rootNodes;\n    };\n    /**\n     * Get the node values\n     * @param mapper\n     * @param item\n     * @param diagram\n     */\n    DataBinding.prototype.applyNodeTemplate = function (mapper, item, diagram) {\n        var root = item;\n        var id = randomId();\n        var nodeModel = { id: id, data: item };\n        var doBinding = getFunction(mapper.doBinding);\n        if (doBinding) {\n            doBinding(nodeModel, item, diagram);\n        }\n        var obj = new Node(diagram, 'nodes', nodeModel, true);\n        if (!this.collectionContains(obj, diagram, mapper.id, mapper.parentId)) {\n            return obj;\n        }\n        else {\n            return this.dataTable[item[mapper.id]];\n        }\n    };\n    DataBinding.prototype.renderChildNodes = function (mapper, parent, value, rtNodes, diagram) {\n        var child;\n        var nextLevel;\n        var node;\n        for (var j = 0; j < parent.items.length; j++) {\n            child = parent.items[j];\n            node = this.applyNodeTemplate(mapper, child, diagram);\n            var canBreak = false;\n            if (!this.collectionContains(node, diagram, mapper.id, mapper.parentId)) {\n                this.dataTable[child[mapper.id]] = node;\n                diagram.nodes.push(node);\n            }\n            else {\n                canBreak = true;\n            }\n            if (!this.containsConnector(diagram, value, node.id)) {\n                diagram.connectors.push(this.applyConnectorTemplate(value, node.id, diagram));\n            }\n            if (!canBreak) {\n                nextLevel = rtNodes[node.data[mapper.id]];\n                if (nextLevel !== undefined) {\n                    this.renderChildNodes(mapper, nextLevel, node.id, rtNodes, diagram);\n                }\n            }\n        }\n    };\n    DataBinding.prototype.containsConnector = function (diagram, sourceNode, targetNode) {\n        if (sourceNode !== '' && targetNode !== '') {\n            for (var i = 0; i < diagram.connectors.length; i++) {\n                var connector = diagram.connectors[i];\n                if (connector !== undefined && (connector.sourceID === sourceNode && connector.targetID === targetNode)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     *  collectionContains method is used to  check wthear the node is already present in collection or not\n     * @param node\n     * @param diagram\n     * @param id\n     * @param parentId\n     */\n    DataBinding.prototype.collectionContains = function (node, diagram, id, parentId) {\n        var obj = this.dataTable[node.data[id]];\n        if (obj !== undefined && obj.data[id] === node.data[id] && obj.data[parentId] === node.data[parentId]) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Get the Connector values\n     * @param sourceNode\n     * @param targetNode\n     * @param diagram\n     */\n    DataBinding.prototype.applyConnectorTemplate = function (sNode, tNode, diagram) {\n        var connModel = {\n            id: randomId(), sourceID: sNode, targetID: tNode\n        };\n        var obj = new Connector(diagram, 'connectors', connModel, true);\n        return obj;\n    };\n    return DataBinding;\n}());\nexport { DataBinding };\n","import { remove } from '@syncfusion/ej2-base';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport { contextMenuClick, contextMenuOpen, contextMenuBeforeItemRender } from '../enum/enum';\nimport { createHtmlElement } from '../../diagram/utility/dom-util';\n/**\n * @private\n */\nexport var menuClass = {\n    content: '.e-diagramcontent',\n    copy: 'e-copy',\n    paste: 'e-paste',\n    undo: 'e-undo',\n    redo: 'e-redo',\n    cut: 'e-cut',\n    selectAll: 'e-selectall',\n    grouping: 'e-grouping',\n    group: 'e-group',\n    unGroup: 'e-ungroup',\n    bringToFront: 'e-bringfront',\n    sendToBack: 'e-sendback',\n    moveForward: 'e-bringforward',\n    sendBackward: 'e-sendbackward',\n    order: 'e-order'\n};\n/**\n * 'ContextMenu module used to handle context menu actions.'\n * @private\n */\nvar DiagramContextMenu = /** @class */ (function () {\n    function DiagramContextMenu(parent, service) {\n        this.defaultItems = {};\n        /**\n         * @private\n         */\n        this.disableItems = [];\n        /**\n         * @private\n         */\n        this.hiddenItems = [];\n        this.localeText = this.setLocaleKey();\n        this.parent = parent;\n        this.serviceLocator = service;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on('initial-load', this.render, this);\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('initial-load', this.render);\n    };\n    DiagramContextMenu.prototype.render = function () {\n        this.l10n = this.serviceLocator.getService('localization');\n        this.element = createHtmlElement('ul', { id: this.parent.element.id + '_contextMenu' });\n        this.parent.element.appendChild(this.element);\n        var target = '#' + this.parent.element.id;\n        this.contextMenu = new Menu({\n            items: this.getMenuItems(),\n            enableRtl: this.parent.enableRtl,\n            enablePersistence: this.parent.enablePersistence,\n            locale: this.parent.locale,\n            target: target,\n            select: this.contextMenuItemClick.bind(this),\n            beforeOpen: this.contextMenuBeforeOpen.bind(this),\n            onOpen: this.contextMenuOpen.bind(this),\n            beforeItemRender: this.BeforeItemRender.bind(this),\n            onClose: this.contextMenuOnClose.bind(this),\n            cssClass: 'e-diagram-menu'\n        });\n        this.contextMenu.appendTo(this.element);\n    };\n    DiagramContextMenu.prototype.getMenuItems = function () {\n        var menuItems = [];\n        var orderItems = [];\n        var groupItems = [];\n        if (!this.parent.contextMenuSettings.showCustomMenuOnly) {\n            for (var _i = 0, _a = this.getDefaultItems(); _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.toLocaleLowerCase().indexOf('group') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'grouping') {\n                        groupItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else if (item.toLocaleLowerCase().indexOf('order') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'order') {\n                        orderItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else {\n                    menuItems.push(this.buildDefaultItems(item));\n                }\n            }\n            if (groupItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('grouping');\n                orderGroup.items = groupItems;\n                menuItems.push(orderGroup);\n            }\n            if (orderItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('order');\n                orderGroup.items = orderItems;\n                menuItems.push(orderGroup);\n            }\n        }\n        if (this.parent.contextMenuSettings.items) {\n            for (var _b = 0, _c = this.parent.contextMenuSettings.items; _b < _c.length; _b++) {\n                var customItem = _c[_b];\n                menuItems.push(customItem);\n            }\n        }\n        return menuItems;\n    };\n    DiagramContextMenu.prototype.contextMenuOpen = function () {\n        this.isOpen = true;\n    };\n    DiagramContextMenu.prototype.BeforeItemRender = function (args) {\n        this.parent.trigger(contextMenuBeforeItemRender, args);\n    };\n    DiagramContextMenu.prototype.contextMenuItemClick = function (args) {\n        document.getElementById(this.parent.element.id + 'content').focus();\n        this.parent.trigger(contextMenuClick, args);\n        var item = this.getKeyFromId(args.item.id);\n        if (!args.cancel) {\n            switch (item) {\n                case 'cut':\n                    this.parent.cut();\n                    break;\n                case 'copy':\n                    this.parent.copy();\n                    break;\n                case 'undo':\n                    this.parent.undo();\n                    break;\n                case 'redo':\n                    this.parent.redo();\n                    break;\n                case 'paste':\n                    this.parent.paste();\n                    break;\n                case 'selectAll':\n                    this.parent.selectAll();\n                    break;\n                case 'group':\n                    this.parent.group();\n                    break;\n                case 'unGroup':\n                    this.parent.unGroup();\n                    break;\n                case 'bringToFrontOrder':\n                    this.parent.bringToFront();\n                    break;\n                case 'moveForwardOrder':\n                    this.parent.moveForward();\n                    break;\n                case 'sendToBackOrder':\n                    this.parent.sendToBack();\n                    break;\n                case 'sendBackwardOrder':\n                    this.parent.sendBackward();\n                    break;\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuOnClose = function (args) {\n        var parent = 'parentObj';\n        if (args.items.length > 0 && args.items[0][parent] instanceof Menu) {\n            this.updateItemStatus();\n        }\n    };\n    DiagramContextMenu.prototype.getLocaleText = function (item) {\n        return this.l10n.getConstant(this.localeText[item]);\n    };\n    DiagramContextMenu.prototype.updateItemStatus = function () {\n        this.contextMenu.showItems(this.hiddenItems, true);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        this.hiddenItems = [];\n        this.disableItems = [];\n        this.isOpen = false;\n    };\n    DiagramContextMenu.prototype.ensureItems = function (item, event) {\n        var key = this.getKeyFromId(item.id);\n        var dItem = this.defaultItems[key];\n        if (this.getDefaultItems().indexOf(key) !== -1) {\n            if (item.target && event &&\n                !this.ensureTarget(item)) {\n                this.hiddenItems.push(item.id);\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuBeforeOpen = function (args) {\n        var diagramArgs = args;\n        diagramArgs.hiddenItems = [];\n        for (var _i = 0, _a = args.items; _i < _a.length; _i++) {\n            var item = _a[_i];\n            this.ensureItems(item, args.event);\n            if (item.items.length) {\n                for (var _b = 0, _c = item.items; _b < _c.length; _b++) {\n                    var newItem = _c[_b];\n                    this.ensureItems(newItem, args.event);\n                }\n            }\n        }\n        this.eventArgs = args.event;\n        this.parent.trigger(contextMenuOpen, diagramArgs);\n        var hidden = true;\n        this.hiddenItems = this.hiddenItems.concat(diagramArgs.hiddenItems);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        var contextItems = this;\n        args.items.forEach(function (item) {\n            if (contextItems.hiddenItems.indexOf(item.id) > -1) {\n                contextItems.contextMenu.hideItems([item.id], true);\n            }\n        });\n        contextItems.contextMenu.items.forEach(function (item) {\n            if (contextItems.hiddenItems.indexOf(item.id) === -1) {\n                hidden = false;\n            }\n        });\n        if (hidden) {\n            diagramArgs.cancel = hidden;\n            this.hiddenItems = [];\n        }\n    };\n    DiagramContextMenu.prototype.ensureTarget = function (item) {\n        var selectedLength = this.parent.selectedItems.nodes.length +\n            this.parent.selectedItems.connectors.length;\n        var itemText = this.getKeyFromId(item.id);\n        var target = false;\n        switch (itemText) {\n            case 'undo':\n                target = this.parent.historyManager && this.parent.historyManager.canUndo ? true : false;\n                break;\n            case 'redo':\n                target = this.parent.historyManager && this.parent.historyManager.canRedo ? true : false;\n                break;\n            case 'paste':\n                target = this.parent.commandHandler.clipboardData.clipObject ? true : false;\n                break;\n            case 'selectAll':\n                target = this.parent.nodes.length + this.parent.connectors.length ? true : false;\n                break;\n            case 'grouping':\n                target = ((selectedLength > 1) || (this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'group':\n                target = selectedLength > 1;\n                break;\n            case 'unGroup':\n                target = ((this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'cut':\n            case 'copy':\n            case 'order':\n            case 'bringToFrontOrder':\n            case 'moveForwardOrder':\n            case 'sendToBackOrder':\n            case 'sendBackwardOrder':\n                target = selectedLength ? true : false;\n                break;\n        }\n        return target;\n    };\n    /**\n     * To destroy the Context menu.\n     * @method destroy\n     * @return {void}\n     * @private\n     */\n    DiagramContextMenu.prototype.destroy = function () {\n        this.contextMenu.destroy();\n        remove(this.element);\n        this.removeEventListener();\n    };\n    DiagramContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    DiagramContextMenu.prototype.generateID = function (item) {\n        return this.parent.element.id + '_contextMenu_' + item;\n    };\n    DiagramContextMenu.prototype.getKeyFromId = function (id) {\n        return id.replace(this.parent.element.id + '_contextMenu_', '');\n    };\n    DiagramContextMenu.prototype.buildDefaultItems = function (item) {\n        var menuItem;\n        switch (item) {\n            case 'copy':\n                menuItem = { target: menuClass.content, iconCss: menuClass.copy };\n                break;\n            case 'cut':\n                menuItem = { target: menuClass.content, iconCss: menuClass.cut };\n                break;\n            case 'paste':\n                menuItem = { target: menuClass.content, iconCss: menuClass.paste };\n                break;\n            case 'undo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.undo };\n                break;\n            case 'redo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.redo };\n                break;\n            case 'grouping':\n                menuItem = { target: menuClass.content };\n                break;\n            case 'group':\n                menuItem = { target: menuClass.content, iconCss: menuClass.group };\n                break;\n            case 'unGroup':\n                menuItem = { target: menuClass.content, iconCss: menuClass.unGroup };\n                break;\n            case 'order':\n                menuItem = { target: menuClass.content, iconCss: menuClass.order };\n                break;\n            case 'bringToFrontOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.bringToFront };\n                break;\n            case 'moveForwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.moveForward };\n                break;\n            case 'sendToBackOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendToBack };\n                break;\n            case 'sendBackwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendBackward };\n                break;\n            case 'selectAll':\n                menuItem = { target: menuClass.content };\n                break;\n        }\n        this.defaultItems[item] = {\n            text: this.getLocaleText(item), id: this.generateID(item),\n            target: menuItem.target, iconCss: menuItem.iconCss ? 'e-icons ' + menuItem.iconCss : ''\n        };\n        return this.defaultItems[item];\n    };\n    DiagramContextMenu.prototype.getDefaultItems = function () {\n        return [\n            'copy',\n            'cut', 'paste', 'undo', 'redo', 'selectAll', 'grouping', 'group', 'unGroup', 'order',\n            'bringToFrontOrder', 'moveForwardOrder', 'sendToBackOrder', 'sendBackwardOrder'\n        ];\n    };\n    DiagramContextMenu.prototype.setLocaleKey = function () {\n        return {\n            'copy': 'Copy',\n            'cut': 'Cut',\n            'paste': 'Paste',\n            'undo': 'Undo',\n            'redo': 'Redo',\n            'selectAll': 'SelectAll',\n            'grouping': 'Grouping',\n            'group': 'Group',\n            'unGroup': 'UnGroup',\n            'order': 'Order',\n            'bringToFrontOrder': 'BringToFront',\n            'moveForwardOrder': 'MoveForward',\n            'sendToBackOrder': 'SendToBack',\n            'sendBackwardOrder': 'SendBackward'\n        };\n    };\n    return DiagramContextMenu;\n}());\nexport { DiagramContextMenu };\n","import { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect2 } from '../utility/diagram-util';\nimport { canBridge } from '../utility/constraints-util';\n/**\n * ConnectorBridging defines the bridging behavior\n */\n/** @private */\nvar ConnectorBridging = /** @class */ (function () {\n    /**\n     * Constructor for the bridging module\n     * @private\n     */\n    function ConnectorBridging() {\n        //constructs the bridging module\n    }\n    /** @private */\n    ConnectorBridging.prototype.updateBridging = function (conn, diagram) {\n        var lastBridge = [];\n        var bounds;\n        conn.bridges = [];\n        if (canBridge(conn, diagram)) {\n            // if (this.canBridge(conn, diagram)) {\n            var points1 = this.getPoints(conn);\n            bounds = Rect.toBounds(points1);\n            var bridgeSpacing = conn.bridgeSpace;\n            var bgedir = diagram.bridgeDirection;\n            var count = -1;\n            var quads = diagram.connectors;\n            for (var q = 0; q < quads.length; q++) {\n                var connector1 = quads[q];\n                if (conn && connector1 && conn.id !== connector1.id) {\n                    var points2 = this.getPoints(connector1);\n                    var bounds1 = Rect.toBounds(points2);\n                    if (this.intersectsRect(bounds, bounds1)) {\n                        var intersectPts = this.intersect(points1, points2, false, bgedir, true);\n                        if (intersectPts.length > 0) {\n                            for (var i = 0; i < intersectPts.length; i++) {\n                                var fullLength = 0;\n                                var length_1 = 0;\n                                var segmentIndex = 0;\n                                var pointIndex = 0;\n                                var obj = this.getLengthAtFractionPoint(conn, intersectPts[i]);\n                                if (obj.pointIndex !== -1) {\n                                    length_1 = obj.lengthFractionIndex;\n                                    fullLength = obj.fullLength;\n                                    segmentIndex = obj.segmentIndex;\n                                    pointIndex = obj.pointIndex;\n                                    var stBridge = this.getPointAtLength((length_1 - (bridgeSpacing / 2)), points1);\n                                    var enBridge = this.getPointAtLength((length_1 + (bridgeSpacing / 2)), points1);\n                                    var fractLength = (length_1 - (bridgeSpacing / 2)) / fullLength;\n                                    fractLength = (length_1 + (bridgeSpacing / 2)) / fullLength;\n                                    if (this.isEmptyPoint(enBridge)) {\n                                        enBridge = stBridge;\n                                    }\n                                    var start = void 0;\n                                    var end = void 0;\n                                    start = conn.sourcePoint;\n                                    if (conn.type === 'Straight') {\n                                        end = conn.targetPoint;\n                                    }\n                                    else {\n                                        end = conn.intermediatePoints[pointIndex];\n                                    }\n                                    var angle = this.angleCalculation(start, end);\n                                    if (lastBridge.length) {\n                                        var fixedPoint = void 0;\n                                        fixedPoint = conn.sourcePoint;\n                                        var fix = Math.abs(this.lengthCalculation(fixedPoint, enBridge));\n                                        var var1 = 0;\n                                        var insertAt = -1;\n                                        count = -1;\n                                        for (var k = 0; k < lastBridge[segmentIndex].bridges.length; k++) {\n                                            count++;\n                                            var arcSeg = lastBridge[segmentIndex].bridges[k];\n                                            var1 = Math.abs(this.lengthCalculation(fixedPoint, arcSeg.endPoint));\n                                            if (fix < var1) {\n                                                insertAt = count;\n                                                break;\n                                            }\n                                        }\n                                        if (insertAt >= 0) {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.splice(insertAt, 0, paths);\n                                            lastBridge[segmentIndex].bridges.join();\n                                            lastBridge[segmentIndex].bridgeStartPoint.splice(insertAt, 0, stBridge);\n                                            lastBridge[segmentIndex].bridgeStartPoint.join();\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                        else {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.push(paths);\n                                            lastBridge[segmentIndex].bridgeStartPoint.push(stBridge);\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                    else {\n                                        if (!isNaN(stBridge.x) && !isNaN(stBridge.y) && !this.isEmptyPoint(enBridge)) {\n                                            var arcs = void 0;\n                                            var bges = [];\n                                            var bgept = [];\n                                            arcs = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            var bgseg = {\n                                                bridges: bges, bridgeStartPoint: bgept, segmentIndex: segmentIndex\n                                            };\n                                            arcs.target = connector1.id;\n                                            var stPoints = [];\n                                            var edPoints = [];\n                                            stPoints.push(stBridge);\n                                            edPoints.push(enBridge);\n                                            lastBridge[segmentIndex] = bgseg;\n                                            lastBridge[segmentIndex].bridges.push(arcs);\n                                            lastBridge[segmentIndex].bridgeStartPoint = stPoints;\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (lastBridge.length !== 0) {\n                this.firstBridge(lastBridge, conn, bridgeSpacing);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.firstBridge = function (bridgeList, connector, bridgeSpacing) {\n        for (var i = 0; i < bridgeList.length; i++) {\n            var bridge = bridgeList[i];\n            for (var k = 1; k < bridge.bridges.length; k++) {\n                if (Point.findLength(bridge.bridges[k].endPoint, bridge.bridges[k - 1].endPoint) < bridgeSpacing) {\n                    bridge.bridges[k - 1].endPoint = bridge.bridges[k].endPoint;\n                    var subBridge = bridge.bridges[k - 1];\n                    var arc = this.createBridgeSegment(subBridge.startPoint, subBridge.endPoint, subBridge.angle, bridgeSpacing, subBridge.sweep);\n                    bridge.bridges[k - 1].path = arc;\n                    bridge.bridges.splice(k, 1);\n                    bridge.bridgeStartPoint.splice(k, 1);\n                    k--;\n                }\n            }\n            var pre = connector.sourcePoint;\n            for (var j = 0; j < bridge.bridges.length; j++) {\n                var subBridge = bridge.bridges[j];\n                var preventChecking = true;\n                pre = subBridge.endPoint;\n                connector.bridges.push(subBridge);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.createSegment = function (st, end, angle, direction, index, conn, diagram) {\n        var arc;\n        var sweep;\n        var path = {\n            angle: 0, endPoint: { x: 0, y: 0 }, target: '', path: '',\n            segmentPointIndex: -1, startPoint: { x: 0, y: 0 }, sweep: 1, rendered: false\n        };\n        sweep = this.sweepDirection(angle, direction, conn, diagram);\n        arc = this.createBridgeSegment(st, end, angle, conn.bridgeSpace, sweep);\n        path.path = arc;\n        path.startPoint = st;\n        path.endPoint = end;\n        path.angle = angle;\n        path.segmentPointIndex = index;\n        path.sweep = sweep;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.createBridgeSegment = function (startPt, endPt, angle, bridgeSpace, sweep) {\n        var path = 'A ' + bridgeSpace / 2 + ' ' + bridgeSpace / 2 + ' ' + angle + ' , 1 ' + sweep + ' ' + endPt.x + ',' + endPt.y;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.sweepDirection = function (angle, bridgeDirection, connector, diagram) {\n        var angle1 = Math.abs(angle);\n        var sweep;\n        switch (bridgeDirection) {\n            case 'Top':\n            case 'Bottom':\n                sweep = 1;\n                if (angle1 >= 0 && angle1 <= 90) {\n                    sweep = 0;\n                }\n                break;\n            case 'Left':\n            case 'Right':\n                sweep = 1;\n                if (angle < 0 && angle >= -180) {\n                    sweep = 0;\n                }\n                break;\n        }\n        if (bridgeDirection === 'Right' || bridgeDirection === 'Bottom') {\n            if (sweep === 0) {\n                sweep = 1;\n            }\n            else {\n                sweep = 0;\n            }\n        }\n        return sweep;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPointAtLength = function (length, pts) {\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        for (var i = 0; i < pts.length; i++) {\n            var pt = pts[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = this.lengthCalculation(pre, pt);\n                if (run + l > length) {\n                    var r = length - run;\n                    var deg = Point.findAngle(pre, pt);\n                    var x = r * Math.cos(deg * Math.PI / 180);\n                    var y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPoints = function (connector) {\n        var points = [];\n        if (connector.intermediatePoints && (connector.type === 'Straight' || connector.type === 'Orthogonal')) {\n            for (var j = 0; j < connector.intermediatePoints.length; j++) {\n                points.push(connector.intermediatePoints[j]);\n            }\n        }\n        return points;\n    };\n    ConnectorBridging.prototype.intersectsRect = function (rect1, rect2) {\n        return ((((rect2.x < (rect1.x + rect1.width)) && (rect1.x < (rect2.x + rect2.width)))\n            && (rect2.y < (rect1.y + rect1.height))) && (rect1.y < (rect2.y + rect2.height)));\n    };\n    /** @private */\n    ConnectorBridging.prototype.intersect = function (points1, points2, self, bridgeDirection, zOrder) {\n        if (self && points2.length >= 2) {\n            points2.splice(0, 1);\n            points2.splice(0, 1);\n        }\n        var points = [];\n        for (var i = 0; i < points1.length - 1; i++) {\n            var pt = this.inter1(points1[i], points1[i + 1], points2, zOrder, bridgeDirection);\n            if (pt.length > 0) {\n                for (var k = 0; k < pt.length; k++) {\n                    points.push(pt[k]);\n                }\n            }\n            if (self && points2.length >= 1) {\n                points2.splice(0, 1);\n            }\n        }\n        return points;\n    };\n    /** @private */\n    ConnectorBridging.prototype.inter1 = function (startPt, endPt, pts, zOrder, bridgeDirection) {\n        var points1 = [];\n        for (var i = 0; i < pts.length - 1; i++) {\n            var point = intersect2(startPt, endPt, pts[i], pts[i + 1]);\n            if (!this.isEmptyPoint(point)) {\n                var angle = this.angleCalculation(startPt, endPt);\n                var angle1 = this.angleCalculation(pts[i], pts[i + 1]);\n                angle = this.checkForHorizontalLine(angle);\n                angle1 = this.checkForHorizontalLine(angle1);\n                switch (bridgeDirection) {\n                    case 'Left':\n                    case 'Right':\n                        if (angle > angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                    case 'Top':\n                    case 'Bottom':\n                        if (angle < angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                }\n                if (angle === angle1 && zOrder) {\n                    points1.push(point);\n                }\n            }\n        }\n        return points1;\n    };\n    ConnectorBridging.prototype.checkForHorizontalLine = function (angle) {\n        var temp = 0;\n        var roundedAngle = Math.abs(angle);\n        if (roundedAngle > 90) {\n            temp = 180 - roundedAngle;\n        }\n        else {\n            temp = roundedAngle;\n        }\n        return temp;\n    };\n    ConnectorBridging.prototype.isEmptyPoint = function (point) {\n        return point.x === 0 && point.y === 0;\n    };\n    ConnectorBridging.prototype.getLengthAtFractionPoint = function (connector, pointAt) {\n        var lengthFraction;\n        var confirm = 100;\n        var pointIndex = -1;\n        var fullLength = 0;\n        var segmentIndex = -1;\n        var count = 0;\n        var lengthAtFractionPt = 0;\n        var pt1 = connector.sourcePoint;\n        var previouspt2 = pt1;\n        var points = [];\n        for (var i = 0; i < connector.intermediatePoints.length; i++) {\n            var point2 = connector.intermediatePoints[i];\n            points.push(point2);\n        }\n        for (var j = 0; j < points.length; j++) {\n            var pt2 = points[j];\n            var suspect = this.getSlope(pt2, pt1, pointAt, connector);\n            if (suspect < confirm) {\n                confirm = suspect;\n                lengthAtFractionPt = fullLength + this.lengthCalculation(pointAt, previouspt2);\n                segmentIndex = count;\n                pointIndex = j;\n            }\n            fullLength += Point.findLength(pt2, pt1);\n            pt1 = pt2;\n            previouspt2 = pt2;\n        }\n        count++;\n        lengthFraction = {\n            lengthFractionIndex: lengthAtFractionPt, fullLength: fullLength,\n            segmentIndex: segmentIndex, pointIndex: pointIndex\n        };\n        return lengthFraction;\n    };\n    ConnectorBridging.prototype.getSlope = function (startPt, endPt, point, connector) {\n        var three = 3.0;\n        var delX = Math.abs(startPt.x - endPt.x);\n        var delY = Math.abs(startPt.y - endPt.y);\n        var lhs = ((point.y - startPt.y) / (endPt.y - startPt.y));\n        var rhs = ((point.x - startPt.x) / (endPt.x - startPt.x));\n        if (!isFinite(lhs) || !isFinite(rhs) || isNaN(lhs) || isNaN(rhs)) {\n            if (startPt.x === endPt.x) {\n                if (startPt.y === endPt.y) {\n                    return 10000;\n                }\n                else if (((startPt.y > point.y) && (point.y > endPt.y)) || ((startPt.y < point.y) && (point.y < endPt.y))) {\n                    return Math.abs(startPt.x - point.x);\n                }\n            }\n            else if (startPt.y === endPt.y) {\n                if (((startPt.x > point.x) && (point.x > endPt.x)) || ((startPt.x < point.x) && (point.x < endPt.x))) {\n                    return Math.abs(startPt.y - point.y);\n                }\n            }\n        }\n        else {\n            if ((startPt.x >= point.x && point.x >= endPt.x) || (startPt.x <= point.x && point.x <= endPt.x) || delX < three) {\n                if ((startPt.y >= point.y && point.y >= endPt.y) || (startPt.y <= point.y && point.y <= endPt.y) || delY < three) {\n                    return Math.abs(lhs - rhs);\n                }\n            }\n        }\n        return 10000;\n    };\n    /** @private */\n    ConnectorBridging.prototype.angleCalculation = function (startPt, endPt) {\n        var xDiff = startPt.x - endPt.x;\n        var yDiff = startPt.y - endPt.y;\n        return Math.atan2(yDiff, xDiff) * (180 / Math.PI);\n    };\n    ConnectorBridging.prototype.lengthCalculation = function (startPt, endPt) {\n        //removed a try catch from here\n        var len = Math.sqrt(((startPt.x - endPt.x) * (startPt.x - endPt.x)) + ((startPt.y - endPt.y) * (startPt.y - endPt.y)));\n        return len;\n    };\n    /**\n     * To destroy the bridging module\n     * @return {void}\n     * @private\n     */\n    ConnectorBridging.prototype.destroy = function () {\n        /**\n         * Destroys the bridging module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorBridging.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bridging';\n    };\n    return ConnectorBridging;\n}());\nexport { ConnectorBridging };\n","import { Rect } from '../primitives/rect';\nimport { PathElement } from '../core/elements/path-element';\nimport { SnapConstraints } from '../enum/enum';\nimport { Connector } from './connector';\nimport { Selector } from '../interaction/selector';\nimport { getBounds } from './../utility/base-util';\nimport { randomId } from './../utility/base-util';\nimport { isSelected } from '../interaction/actions';\nimport { TextElement } from '../core/elements/text-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\n/**\n * Snapping\n */\nvar Snapping = /** @class */ (function () {\n    function Snapping(diagram) {\n        this.line = [];\n        this.diagram = diagram;\n    }\n    /** @private */\n    Snapping.prototype.canSnap = function () {\n        return (this.diagram.snapSettings.constraints\n            & (SnapConstraints.SnapToObject | SnapConstraints.SnapToLines)) !== 0;\n    };\n    /**\n     * Snap to object\n     * @private\n     */\n    Snapping.prototype.snapPoint = function (diagram, selectedObject, towardsLeft, towardsTop, delta, startPoint, endPoint) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        var offset = { x: 0, y: 0 };\n        var bounds = getBounds(selectedObject.wrapper);\n        var horizontallysnapped = { snapped: false, offset: 0 };\n        var verticallysnapped = { snapped: false, offset: 0 };\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            var snapLine = void 0;\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n            this.snapObject(diagram, selectedObject, snapLine, horizontallysnapped, verticallysnapped, delta, startPoint === endPoint);\n        }\n        //original position\n        var left = bounds.x + delta.x;\n        var top = bounds.y + delta.y;\n        var right = bounds.x + bounds.width + delta.x;\n        var bottom = bounds.y + bounds.height + delta.y;\n        var scaledIntervals = snapSettings.verticalGridlines.scaledIntervals;\n        //snapped positions\n        var roundedRight = this.round(right, scaledIntervals, zoomFactor);\n        var roundedLeft = this.round(left, scaledIntervals, zoomFactor);\n        scaledIntervals = snapSettings.horizontalGridlines.scaledIntervals;\n        var roundedTop = this.round(top, scaledIntervals, zoomFactor);\n        var roundedBottom = this.round(bottom, scaledIntervals, zoomFactor);\n        //currentposition\n        var currentright = bounds.x + bounds.width;\n        var currentbottom = bounds.y + bounds.height;\n        if (!horizontallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                if (Math.abs(delta.x) >= 1) {\n                    if (towardsLeft) {\n                        if (Math.abs(roundedRight - currentright) > Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                        else {\n                            offset.x += roundedRight - currentright;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedRight - currentright) < Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedRight - currentright;\n                        }\n                        else {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        else {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n                offset.x = horizontallysnapped.offset;\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        if (!verticallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                if (Math.abs(delta.y) >= 1) {\n                    if (towardsTop) {\n                        if (Math.abs(roundedBottom - currentbottom) > Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                        else {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedBottom - currentbottom) < Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                        else {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.y = endPoint.y - startPoint.y;\n            }\n        }\n        else {\n            offset.y = verticallysnapped.offset;\n        }\n        return offset;\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.round = function (value, snapIntervals, scale) {\n        if (scale > 1) {\n            scale = Math.pow(2, Math.floor(Math.log(scale) / Math.log(2)));\n        }\n        else {\n            scale = Math.pow(2, Math.ceil(Math.log(scale) / Math.log(2)));\n        }\n        var cutoff = 0;\n        var i = 0;\n        for (i = 0; i < snapIntervals.length; i++) {\n            cutoff += snapIntervals[i];\n        }\n        cutoff /= scale;\n        var quotient = Math.floor(Math.abs(value) / cutoff);\n        var bal = value % cutoff;\n        var prev = quotient * cutoff;\n        if (prev !== value) {\n            if (value >= 0) {\n                for (i = 0; i < snapIntervals.length; i++) {\n                    if (bal <= snapIntervals[i] / scale) {\n                        return prev + (bal < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev += snapIntervals[i] / scale;\n                        bal -= snapIntervals[i] / scale;\n                    }\n                }\n            }\n            else {\n                prev = prev * -1;\n                for (i = snapIntervals.length - 1; i >= 0; i--) {\n                    if (Math.abs(bal) <= snapIntervals[i] / scale) {\n                        return prev - (Math.abs(bal) < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev -= snapIntervals[i] / scale;\n                        bal += snapIntervals[i] / scale;\n                    }\n                }\n            }\n        }\n        return value;\n    };\n    /**\n     * Snap to Object\n     */\n    Snapping.prototype.snapObject = function (diagram, selectedObject, g, horizontalSnap, verticalSnap, delta, ended) {\n        var lengthX = null;\n        var lengthY;\n        var hTarget;\n        var vTarget;\n        var scroller = this.diagram.scroller;\n        var snapSettings = this.diagram.snapSettings;\n        var objectsAtLeft = [];\n        var objectsAtRight = [];\n        var objectsAtTop = [];\n        var objectsAtBottom = [];\n        var bounds = getBounds(selectedObject.wrapper);\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hIntersectRect = new Rect(hoffset / scale, (bounds.y - snapObjDistance - 5), viewPort.width / scale, (bounds.height + 2 * snapObjDistance + 10));\n        var vIntersectRect = new Rect((bounds.x - snapObjDistance - 5), voffset / scale, (bounds.width + 2 * snapObjDistance + 10), viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vIntersectRect, viewPort);\n        var i;\n        var target;\n        var targetBounds;\n        var nameTable = diagram.nameTable;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.height + targetBounds.y < delta.y + bounds.y) {\n                        objectsAtTop.push({\n                            obj: target, distance: Math.abs(bounds.y + delta.y - targetBounds.y - targetBounds.height)\n                        });\n                    }\n                    else if (targetBounds.y > bounds.y + delta.y + bounds.height) {\n                        objectsAtBottom.push({ obj: target, distance: Math.abs(bounds.y + delta.y + bounds.height - targetBounds.y) });\n                    }\n                    if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y - delta.y)) {\n                        if (Math.abs(targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2 + delta.x)) <=\n                            snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'centerX');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hIntersectRect, viewPort);\n        for (var j = 0; j < nodes.length; j++) {\n            target = nodes[j];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.x + targetBounds.width < bounds.x + delta.x) {\n                        objectsAtLeft[objectsAtLeft.length] = {\n                            obj: target, distance: Math.abs((bounds.x + delta.x) - targetBounds.x - targetBounds.width)\n                        };\n                    }\n                    if (targetBounds.x > bounds.x + delta.x + bounds.width) {\n                        objectsAtRight[objectsAtRight.length] = {\n                            obj: target, distance: Math.abs(bounds.x + delta.x + bounds.width - targetBounds.x)\n                        };\n                    }\n                    if (lengthY == null || lengthY > Math.abs(targetBounds.x - bounds.x - delta.x)) {\n                        if (Math.abs(targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2 + delta.y))\n                            <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'centerY');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'top');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - (bounds.y + bounds.height + delta.y)) <=\n                            snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - (bounds.y + bounds.height + delta.y)) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        this.createGuidelines(diagram, hTarget, vTarget, g, horizontalSnap, verticalSnap, ended);\n        if (!horizontalSnap.snapped) {\n            this.createHSpacingLines(diagram, g, selectedObject, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n        if (!verticalSnap.snapped) {\n            this.createVSpacingLines(diagram, g, selectedObject, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.snapConnectorEnd = function (point) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        if (snapSettings.constraints & SnapConstraints.SnapToLines) {\n            point.x = this.round(point.x, snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n            point.y = this.round(point.y, snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n        }\n        return point;\n    };\n    Snapping.prototype.canBeTarget = function (diagram, node) {\n        node = this.diagram.nameTable[node.id];\n        return !(isSelected(this.diagram, node, false));\n    };\n    Snapping.prototype.snapSize = function (diagram, horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, selectedObject, ended) {\n        var lengthX;\n        var lengthY;\n        var snapSettings = this.diagram.snapSettings;\n        var scroller = this.diagram.scroller;\n        var hTarget;\n        var vTarget;\n        var bounds = getBounds(selectedObject.wrapper);\n        var nameTable = diagram.nameTable;\n        var sameWidth = [];\n        var sameHeight = [];\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hintersectedrect = new Rect(hoffset / scale, (bounds.y - 5) / scale, viewPort.width / scale, (bounds.height + 10) / scale);\n        var vintersectedrect = new Rect((bounds.x - 5) / scale, voffset / scale, (bounds.width + 10) / scale, viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodesInView = [];\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vintersectedrect, viewPort, nodesInView);\n        var i;\n        var target;\n        var targetBounds;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canConsider(nameTable, selectedObject, target) && !(this.diagram.nameTable[target.id] instanceof Connector)) {\n                targetBounds = target.bounds;\n                if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y)) {\n                    if (horizontalSnap.left) {\n                        if (Math.abs(bounds.x + deltaX - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                    else if (horizontalSnap.right) {\n                        if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hintersectedrect, viewPort);\n        for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n            var target_1 = nodes[i_1];\n            if (this.canConsider(nameTable, selectedObject, target_1) && !(this.diagram.nameTable[target_1.id] instanceof Connector)) {\n                var targetBounds_1 = target_1.bounds;\n                if (lengthY == null || lengthY > Math.abs(targetBounds_1.x - bounds.x)) {\n                    if (verticalSnap.top) {\n                        if (Math.abs(bounds.y + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'top');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                    else if (verticalSnap.bottom) {\n                        if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        for (i = 0; i < nodesInView.length; i++) {\n            target = nodesInView[i];\n            if (this.canConsider(nameTable, selectedObject, target)) {\n                var targetBounds_2 = target.bounds;\n                var delta = horizontalSnap.left ? -deltaX : deltaX;\n                var difference = Math.abs(bounds.width + delta - targetBounds_2.width);\n                var actualDiff = void 0;\n                if (difference <= snapObjDistance) {\n                    actualDiff = horizontalSnap.left ? -targetBounds_2.width + bounds.width : targetBounds_2.width - bounds.width;\n                    sameWidth[sameWidth.length] = { source: target, difference: difference, offset: actualDiff };\n                }\n                delta = verticalSnap.top ? -deltaY : deltaY;\n                var dify = Math.abs(bounds.height + delta - targetBounds_2.height);\n                if (dify <= snapObjDistance) {\n                    actualDiff = verticalSnap.top ? -targetBounds_2.height + bounds.height : targetBounds_2.height - bounds.height;\n                    sameHeight[sameHeight.length] = { source: target, difference: dify, offset: actualDiff };\n                }\n            }\n        }\n        var g;\n        if (!diagram.getTool) {\n            var g_1 = this.createGuidelines(diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended);\n        }\n        if (!horizontalSnap.snapped && sameWidth.length > 0 && (horizontalSnap.left || horizontalSnap.right)) {\n            this.addSameWidthLines(diagram, snapLine, sameWidth, horizontalSnap, ended, selectedObject);\n        }\n        if (!verticalSnap.snapped && sameHeight.length > 0 && (verticalSnap.top || verticalSnap.bottom)) {\n            this.addSameHeightLines(diagram, snapLine, sameHeight, verticalSnap, ended, selectedObject);\n        }\n    };\n    /**\n     * Snap to object on top\n     * @private\n     */\n    Snapping.prototype.snapTop = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsT) {\n        var dify = deltaY;\n        verticalSnap.top = true;\n        var y;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        //let initialBoundsT: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialBoundsT.y - initialBoundsT.height * shape.pivot.y + deltaY - (shape.offsetY - shape.height * shape.pivot.y);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var top_1 = initialBoundsT.y - initialBoundsT.height * shape.pivot.y;\n                var actualTop = top_1 + deltaY;\n                var roundedTop = this.round(actualTop, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedTop - top_1;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * Snap to object on right\n     * @private\n     */\n    Snapping.prototype.snapRight = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBound) {\n        var difx = deltaX;\n        var x;\n        horizontalSnap.right = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBound: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBound.x + initialBound.width * (1 - shape.pivot.x) + deltaX - (shape.offsetX + shape.width * (1 - shape.pivot.x));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var right = initialBound.x + initialBound.width * (1 - shape.pivot.x);\n                var actualRight = right + deltaX;\n                var roundedRight = this.round(actualRight, this.diagram.snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedRight - right;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on left\n     * @private\n     */\n    Snapping.prototype.snapLeft = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsB) {\n        var difx = deltaX;\n        var x = 0;\n        horizontalSnap.left = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBoundsB: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBoundsB.x - initialBoundsB.width * shape.pivot.x + deltaX - (shape.offsetX - shape.width * shape.pivot.x);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var left = initialBoundsB.x - initialBoundsB.width * shape.pivot.x;\n                var actualLeft = left + deltaX;\n                var roundedLeft = this.round(actualLeft, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedLeft - left;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on bottom\n     * @private\n     */\n    Snapping.prototype.snapBottom = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialRect) {\n        var dify = deltaY;\n        verticalSnap.bottom = true;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        var y = 0;\n        //let initialRect: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialRect.y + initialRect.height * (1 - shape.pivot.y) + deltaY - (shape.offsetY + shape.height * (1 - shape.pivot.y));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        var bounds;\n        bounds = ((shape instanceof TextElement) || (shape instanceof DiagramHtmlElement)) ? getBounds(shape) :\n            getBounds(shape.wrapper);\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var bottom = initialRect.y + initialRect.height * (1 - shape.pivot.y);\n                var actualBottom = bottom + deltaY;\n                var roundedBottom = this.round(actualBottom, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedBottom - bottom;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * To create the same width and same size lines\n     */\n    Snapping.prototype.createGuidelines = function (diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended) {\n        if (hTarget) {\n            horizontalSnap.offset = hTarget.offsetX;\n            horizontalSnap.snapped = true;\n            if (!ended) {\n                if (hTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        if (vTarget) {\n            verticalSnap.offset = vTarget.offsetY;\n            verticalSnap.snapped = true;\n            if (!ended) {\n                if (vTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        return snapLine;\n    };\n    /**\n     * To create the alignment lines\n     */\n    Snapping.prototype.renderAlignmentLines = function (start, end, svg, transform) {\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        var line1 = {\n            stroke: '#07EDE1', strokeWidth: 1, startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, fill: '#07EDE1', dashArray: '', width: 1,\n            x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        var i = 0;\n        this.line.push(line1);\n        for (i = 0; i < this.line.length; i++) {\n            this.diagram.diagramRenderer.drawLine(svg, this.line.pop());\n        }\n    };\n    /**\n     * To create Horizontal spacing lines\n     */\n    Snapping.prototype.createHSpacingLines = function (diagram, g, shape, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var top = 0;\n        this.sortByDistance(objectsAtLeft, 'distance', true);\n        this.sortByDistance(objectsAtRight, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearestleft;\n        var nearestright;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtLeft.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtLeft[0];\n            nearestleft = ((objectsAtLeft[0].obj).bounds);\n            top = nearestleft.y;\n            if (objectsAtLeft.length > 1) {\n                targetBounds = ((objectsAtLeft[1].obj).bounds);\n                equaldistance = nearestleft.x - targetBounds.x - targetBounds.width;\n                if (Math.abs(equaldistance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    top = this.findEquallySpacedNodesAtLeft(objectsAtLeft, equaldistance, top, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtLeft[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtLeft[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        top = bounds.y < top || !top ? bounds.y : top;\n        if (objectsAtRight.length > 0) {\n            var dist = void 0;\n            nearestright = ((objectsAtRight[0].obj).bounds);\n            top = nearestright.y < top ? nearestright.y : top;\n            if (objectsAtRight.length > 1) {\n                targetBounds = ((objectsAtRight[1].obj).bounds);\n                dist = targetBounds.x - nearestright.x - nearestright.width;\n            }\n            if (objectsAtLeft.length > 0) {\n                if (Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) / 2;\n                    (objectsAtRight[0].distance < objectsAtLeft[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                }\n                else if (objectsAtLeft.length === 1) {\n                    nearestleft = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtRight[0];\n            }\n            if (objectsAtRight.length > 1 && nearestright.x + nearestright.width < targetBounds.x) {\n                top = this.findEquallySpacedNodesAtRight(objectsAtRight, dist, top, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addHSpacingLines(diagram, g, equallySpaced, ended, top);\n            var deltaHorizontal = 0;\n            if (ended) {\n                deltaHorizontal = delta.x;\n            }\n            if (nearestleft) {\n                horizontalSnap.offset = equaldistance - Math.abs(bounds.x + deltaHorizontal - nearestleft.x - nearestleft.width)\n                    + deltaHorizontal;\n            }\n            else if (nearestright) {\n                horizontalSnap.offset = Math.abs(bounds.x + bounds.width + deltaHorizontal - nearestright.x)\n                    - equaldistance + deltaHorizontal;\n            }\n            horizontalSnap.snapped = true;\n        }\n    };\n    /**\n     * To create vertical spacing lines\n     */\n    Snapping.prototype.createVSpacingLines = function (diagram, g, shape, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var right = 0;\n        this.sortByDistance(objectsAtTop, 'distance', true);\n        this.sortByDistance(objectsAtBottom, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearesttop;\n        var nearestbottom;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtTop.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtTop[0];\n            nearesttop = ((objectsAtTop[0].obj).bounds);\n            right = nearesttop.x + nearesttop.width;\n            if (objectsAtTop.length > 1) {\n                targetBounds = ((objectsAtTop[1].obj).bounds);\n                equaldistance = nearesttop.y - targetBounds.y - targetBounds.height;\n                if (Math.abs(equaldistance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    right = this.findEquallySpacedNodesAtTop(objectsAtTop, equaldistance, right, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtTop[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtTop[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        right = bounds.x + bounds.width > right || !right ? bounds.x + bounds.width : right;\n        var dist;\n        if (objectsAtBottom.length > 0) {\n            nearestbottom = ((objectsAtBottom[0].obj).bounds);\n            right = nearestbottom.x + nearestbottom.width > right ? nearestbottom.x + nearestbottom.width : right;\n            if (objectsAtBottom.length > 1) {\n                targetBounds = ((objectsAtBottom[1].obj).bounds);\n                dist = targetBounds.y - nearestbottom.y - nearestbottom.height;\n            }\n            if (objectsAtTop.length > 0) {\n                if (Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) / 2;\n                    (objectsAtBottom[0].distance < objectsAtTop[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                }\n                else if (objectsAtTop.length === 1) {\n                    nearesttop = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n            }\n            if (objectsAtBottom.length > 1 && targetBounds.y > nearestbottom.y + nearestbottom.height) {\n                right = this.findEquallySpacedNodesAtBottom(objectsAtBottom, dist, right, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addVSpacingLines(diagram, g, equallySpaced, ended, right);\n            var deltaVertical = 0;\n            if (ended) {\n                deltaVertical = delta.y;\n            }\n            if (nearesttop) {\n                verticalSnap.offset = equaldistance - Math.abs(bounds.y + deltaVertical - nearesttop.y - nearesttop.height) + deltaVertical;\n            }\n            else if (nearestbottom) {\n                verticalSnap.offset = Math.abs(bounds.y + bounds.height + deltaVertical - nearestbottom.y) - equaldistance + deltaVertical;\n            }\n            verticalSnap.snapped = true;\n        }\n    };\n    /**\n     * Add the Horizontal spacing lines\n     */\n    Snapping.prototype.addHSpacingLines = function (diagram, g, equallySpaced, ended, top) {\n        var i;\n        var start;\n        var end;\n        if (!ended) {\n            for (i = 0; i < equallySpaced.length - 1; i++) {\n                var crnt = equallySpaced[i].obj instanceof Selector ?\n                    getBounds((equallySpaced[i].obj).wrapper) : ((equallySpaced[i].obj).bounds);\n                var next = equallySpaced[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpaced[i + 1].obj).wrapper) : ((equallySpaced[i + 1].obj).bounds);\n                start = { x: crnt.x + crnt.width, y: top - 15 };\n                end = { x: next.x, y: top - 15 };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * Add the vertical spacing lines\n     */\n    Snapping.prototype.addVSpacingLines = function (diagram, g, equallySpacedObjects, ended, right) {\n        var start;\n        var end;\n        if (!ended) {\n            for (var i = 0; i < equallySpacedObjects.length - 1; i++) {\n                var crnt = equallySpacedObjects[i].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i].obj).wrapper) : ((equallySpacedObjects[i].obj).bounds);\n                var next = equallySpacedObjects[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i + 1].obj).wrapper) :\n                    ((equallySpacedObjects[i + 1].obj).bounds);\n                start = { x: right + 15, y: crnt.y + crnt.height };\n                end = { x: right + 15, y: next.y };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * To add same width lines\n     */\n    Snapping.prototype.addSameWidthLines = function (diagram, snapLine, sameWidths, horizontalSnap, ended, shape) {\n        this.sortByDistance(sameWidths, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameWidths[0];\n        var startPt;\n        var endPt;\n        var targetBounds = (target.source).bounds;\n        var sameSizes = [];\n        sameSizes.push(sameWidths[0]);\n        var i;\n        var crntbounds;\n        for (i = 1; i < sameWidths.length; i++) {\n            crntbounds = (sameWidths[i].source).bounds;\n            if (crntbounds.width === targetBounds.width) {\n                sameSizes.push(sameWidths[i]);\n            }\n        }\n        if (!ended) {\n            startPt = { x: bounds.x + target.offset, y: bounds.y - 15 };\n            endPt = { x: bounds.x + bounds.width + target.offset, y: bounds.y - 15 };\n            this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                startPt = { x: bounds.x, y: bounds.y - 15 };\n                endPt = { x: bounds.x + bounds.width, y: bounds.y - 15 };\n                this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        horizontalSnap.offset = target.offset;\n        horizontalSnap.snapped = true;\n    };\n    /**\n     * To add same height lines\n     */\n    Snapping.prototype.addSameHeightLines = function (diagram, snapLine, sameHeights, verticalSnap, ended, shape) {\n        this.sortByDistance(sameHeights, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameHeights[0];\n        var targetBounds = (target.source).bounds;\n        var start;\n        var end;\n        var sameSizes = [];\n        sameSizes.push(sameHeights[0]);\n        var i;\n        var crntbounds;\n        for (i = 0; i < sameHeights.length; i++) {\n            crntbounds = (sameHeights[i].source).bounds;\n            if (crntbounds.height === targetBounds.height) {\n                sameSizes.push(sameHeights[i]);\n            }\n        }\n        if (!ended) {\n            start = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset };\n            end = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset + bounds.height };\n            this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                start = { x: bounds.x + bounds.width + 15, y: bounds.y };\n                end = { x: bounds.x + bounds.width + 15, y: bounds.y + bounds.height };\n                this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        verticalSnap.offset = target.offset;\n        verticalSnap.snapped = true;\n    };\n    /**\n     * Render spacing lines\n     */\n    Snapping.prototype.renderSpacingLines = function (start, end, snapLine, svg, transform) {\n        var d;\n        var d1;\n        var line1;\n        var element = new PathElement();\n        var options = {};\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        if (start.x === end.x) {\n            d = 'M' + (start.x - 5) + ' ' + (start.y + 5) + 'L' + start.x + ' ' + start.y +\n                'L' + (start.x + 5) + ' ' + (start.y + 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y + ' L' +\n                (end.x + 5) + ' ' + (end.y - 5) + 'z';\n            line1 = {\n                startPoint: { x: start.x - 8, y: start.y - 1 },\n                endPoint: { x: start.x + 8, y: start.y - 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId()\n            };\n            element.data = d;\n            options.data = element.data;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                startPoint: { x: end.x - 8, y: end.y + 1 },\n                endPoint: { x: end.x + 8, y: end.y + 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: this.getAdornerLayerSvg().id + 'spacing'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        else {\n            d = 'M' + (start.x + 5) + ' ' + (start.y + 5) + ' L' + start.x + ' ' + start.y +\n                ' L' + (start.x + 5) + ' ' + (start.y - 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y +\n                ' L' + (end.x - 5) + ' ' + (end.y + 5) + 'z';\n            element.data = d;\n            options.data = d;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            line1 = {\n                visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: start.x - 1, y: start.y - 8 },\n                endPoint: { x: start.x - 1, y: start.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: end.x + 1, y: end.y - 8 },\n                endPoint: { x: end.x + 1, y: end.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        line1 = {\n            startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, stroke: '#07EDE1', strokeWidth: 1, fill: '#07EDE1',\n            dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        this.line.push(line1);\n        this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n    };\n    /**\n     * To Create Snap object with position, initial bounds, and final bounds\n     * @private\n     */\n    Snapping.prototype.createSnapObject = function (targetBounds, bounds, snap) {\n        var snapObject;\n        switch (snap) {\n            case 'left':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: Math.min(targetBounds.y, bounds.y) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'right':\n                snapObject = {\n                    type: 'sideAlign',\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x - bounds.width,\n                    offsetY: 0,\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                };\n                break;\n            case 'top':\n                snapObject = {\n                    offsetY: targetBounds.y - bounds.y, offsetX: 0, type: 'sideAlign',\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                };\n                break;\n            case 'bottom':\n                snapObject = {\n                    type: 'sideAlign', offsetY: targetBounds.y + targetBounds.height - bounds.y - bounds.height, offsetX: 0,\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                };\n                break;\n            case 'topBottom':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    offsetY: targetBounds.y + targetBounds.height - bounds.y, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'bottomTop':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                    offsetY: targetBounds.y - bounds.y - bounds.height, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'leftRight':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'rightLeft':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x - bounds.width, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'centerX':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width / 2), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width / 2),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2), offsetY: 0, type: 'centerAlign'\n                };\n                break;\n            case 'centerY':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height / 2 },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height / 2\n                    },\n                    offsetY: targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2), offsetX: 0, type: 'centerAlign'\n                };\n                break;\n        }\n        return snapObject;\n    };\n    /**\n     * Calculate the snap angle\n     * @private\n     */\n    Snapping.prototype.snapAngle = function (diagram, angle) {\n        var snapSettings = this.diagram.snapSettings;\n        var snapAngle = snapSettings.snapAngle;\n        var width = angle % (snapAngle || 0);\n        if (width >= (snapAngle / 2)) {\n            return angle + snapAngle - width;\n        }\n        else {\n            return angle - width;\n        }\n    };\n    /**\n     * Check whether the node to be snapped or not.\n     */\n    Snapping.prototype.canConsider = function (nameTable, selectedObject, target) {\n        var consider = false;\n        if (this.diagram.selectedItems.nodes.length && this.diagram.selectedItems.nodes[0].id === target.id) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Find the total number of nodes in diagram using SpatialSearch\n     */\n    Snapping.prototype.findNodes = function (spatialSearch, node, child, viewPort, nodesInView) {\n        var nodes = [];\n        var nd;\n        var bounds;\n        var quads = spatialSearch.findQuads(nodesInView ? viewPort : child);\n        for (var i = 0; i < quads.length; i++) {\n            var quad = quads[i];\n            if (quad.objects.length > 0) {\n                for (var j = 0; j < quad.objects.length; j++) {\n                    nd = quad.objects[j];\n                    if (!(this.diagram.nameTable[nd.id] instanceof Connector) && nd.visible\n                        && !(this.diagram.nameTable[nd.id].shape.type === 'SwimLane') && !(this.diagram.nameTable[nd.id].isLane) &&\n                        !(this.diagram.nameTable[nd.id].isPhase) && !(this.diagram.nameTable[nd.id].isHeader)) {\n                        bounds = getBounds(nd);\n                        if (nodes.indexOf(nd) === -1 && this.intersectsRect(child, bounds)) {\n                            nodes.push(nd);\n                        }\n                        if (nodesInView && nodesInView.indexOf(nd) && this.intersectsRect(viewPort, bounds)) {\n                            nodesInView.push(nd);\n                        }\n                    }\n                }\n            }\n        }\n        return nodes;\n    };\n    Snapping.prototype.intersectsRect = function (child, bounds) {\n        return ((((bounds.x < (child.x + child.width)) && (child.x < (bounds.x + bounds.width)))\n            && (bounds.y < (child.y + child.height))) && (child.y < (bounds.y + bounds.height)));\n    };\n    Snapping.prototype.getAdornerLayerSvg = function () {\n        return this.diagram.diagramRenderer.adornerSvgLayer;\n    };\n    /**\n     * To remove grid lines on mouse move and mouse up\n     * @private\n     */\n    Snapping.prototype.removeGuidelines = function (diagram) {\n        var selectionRect = this.getAdornerLayerSvg().getElementById('_SnappingLines');\n        var line = this.getAdornerLayerSvg().getElementById('pivotLine');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        if (line) {\n            line.parentNode.removeChild(line);\n        }\n    };\n    /**\n     * Sort the objects by its distance\n     */\n    Snapping.prototype.sortByDistance = function (obj, value, ascending) {\n        var i;\n        var j;\n        var temp;\n        if (ascending) {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] > obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n        else {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] < obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To find nodes that are equally placed at left of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtLeft = function (objectsAtLeft, equalDistance, top, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        var i;\n        for (i = 1; i < objectsAtLeft.length; i++) {\n            prevBounds = ((objectsAtLeft[i - 1].obj).bounds);\n            targetBounds = ((objectsAtLeft[i].obj).bounds);\n            dist = prevBounds.x - targetBounds.x - targetBounds.width;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtLeft[i];\n                if (targetBounds.y < top) {\n                    top = targetBounds.y;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return top;\n    };\n    /**\n     * To find nodes that are equally placed at right of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtRight = function (objectsAtRight, equalDistance, top, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtRight[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtRight.length - 1; i++) {\n                target = objectsAtRight[i].obj;\n                targetBounds = ((objectsAtRight[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.x - prevBounds.x - prevBounds.width;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtRight[i + 1];\n                    if (prevBounds.y < top) {\n                        top = prevBounds.y;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return top;\n    };\n    Snapping.prototype.findEquallySpacedNodesAtTop = function (objectsAtTop, equalDistance, right, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        for (var i = 1; i < objectsAtTop.length; i++) {\n            prevBounds = ((objectsAtTop[i - 1].obj).bounds);\n            targetBounds = ((objectsAtTop[i].obj).bounds);\n            dist = prevBounds.y - targetBounds.y - targetBounds.height;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtTop[i];\n                if (targetBounds.x + targetBounds.width > right) {\n                    right = targetBounds.x + targetBounds.width;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return right;\n    };\n    /**\n     * To find nodes that are equally placed at bottom of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtBottom = function (objectsAtBottom, equalDistance, right, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtBottom[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtBottom.length - 1; i++) {\n                target = objectsAtBottom[i].obj;\n                targetBounds = ((objectsAtBottom[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.y - prevBounds.y - prevBounds.height;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[i + 1];\n                    if (prevBounds.x + prevBounds.width > right) {\n                        right = prevBounds.x + prevBounds.width;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return right;\n    };\n    /**\n     * To get Adoner layer to draw snapLine\n     * @private\n     */\n    Snapping.prototype.getLayer = function () {\n        var snapLine;\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n        }\n        return snapLine;\n    };\n    /**\n     * Constructor for the snapping module\n     * @private\n     */\n    // constructor() {\n    //     //constructs the snapping module\n    // }\n    /**\n     * To destroy the snapping module\n     * @return {void}\n     * @private\n     */\n    Snapping.prototype.destroy = function () {\n        /**\n         * Destroys the snapping module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    Snapping.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Snapping';\n    };\n    return Snapping;\n}());\nexport { Snapping };\n","import { Node } from './node';\nimport { DiagramAction } from '../enum/enum';\nimport { removeItem, getObjectType } from '../utility/diagram-util';\nimport { cloneObject, getFunction } from '../utility/base-util';\nimport { findAnnotation, findPort } from '../utility/diagram-util';\nimport { Size, addChildToContainer } from '../index';\nimport { swimLaneMeasureAndArrange, laneInterChanged, findLaneIndex, updateSwimLaneObject, pasteSwimLane } from '../utility/swim-lane-util';\n/**\n * Undo redo function used for revert and restore the changes\n */\nvar UndoRedo = /** @class */ (function () {\n    /**\n     * Constructor for the undo redo module\n     * @private\n     */\n    function UndoRedo() {\n        this.groupUndo = false;\n        this.childTable = [];\n        this.historyCount = 0;\n        this.hasGroup = false;\n        this.groupCount = 0;\n        //constructs the undo redo module\n    }\n    /** @private */\n    UndoRedo.prototype.initHistory = function (diagram) {\n        diagram.historyManager = {\n            canRedo: false, canUndo: false, currentEntry: null,\n            push: diagram.addHistoryEntry.bind(diagram), undo: Function, redo: Function,\n            startGroupAction: diagram.startGroupAction.bind(diagram), endGroupAction: diagram.endGroupAction.bind(diagram),\n            canLog: null, undoStack: [], redoStack: [], stackLimit: diagram.historyManager ? diagram.historyManager.stackLimit : undefined\n        };\n    };\n    /** @private */\n    UndoRedo.prototype.addHistoryEntry = function (entry, diagram) {\n        var entryObject = null;\n        var nextEntry = null;\n        if (diagram.historyManager.canLog) {\n            var hEntry = diagram.historyManager.canLog(entry);\n            if (hEntry.cancel === true) {\n                return;\n            }\n        }\n        if (diagram.historyManager && diagram.historyManager.canUndo && diagram.historyManager.currentEntry) {\n            entryObject = diagram.historyManager.currentEntry;\n            if (entryObject.next) {\n                if (entryObject.previous) {\n                    nextEntry = entryObject.next;\n                    nextEntry.previous = null;\n                    entryObject.next = entry;\n                    entry.previous = entryObject;\n                }\n            }\n            else {\n                entryObject.next = entry;\n                entry.previous = entryObject;\n            }\n        }\n        diagram.historyManager.currentEntry = entry;\n        if (diagram.historyManager.stackLimit) {\n            if (entry.type === 'StartGroup' || entry.type === 'EndGroup') {\n                var value = entry.type === 'EndGroup' ? true : false;\n                this.setEntryLimit(value);\n            }\n            if (!this.hasGroup && this.groupCount === 0) {\n                if (this.historyCount < diagram.historyManager.stackLimit) {\n                    this.historyCount++;\n                }\n                else {\n                    this.applyLimit(diagram.historyManager.currentEntry, diagram.historyManager.stackLimit, diagram);\n                }\n            }\n        }\n        this.getHistoryList(diagram);\n        diagram.historyManager.canUndo = true;\n        diagram.historyManager.canRedo = false;\n    };\n    /** @private */\n    UndoRedo.prototype.applyLimit = function (list, stackLimit, diagram, limitHistory) {\n        if (list && list.previous) {\n            if (list.type === 'StartGroup' || list.type === 'EndGroup') {\n                var value = list.type === 'StartGroup' ? true : false;\n                this.setEntryLimit(value);\n            }\n            if (!this.hasGroup && this.groupCount === 0) {\n                stackLimit--;\n            }\n            if (stackLimit === 0) {\n                if (limitHistory) {\n                    this.limitHistoryStack(list.previous, diagram);\n                }\n                if (diagram.historyManager.stackLimit < this.historyCount) {\n                    this.historyCount = diagram.historyManager.stackLimit;\n                }\n                delete list.previous;\n            }\n            else if (list.previous) {\n                this.applyLimit(list.previous, stackLimit, diagram, limitHistory);\n            }\n        }\n        this.groupCount = 0;\n    };\n    /** @private */\n    UndoRedo.prototype.clearHistory = function (diagram) {\n        var hList = diagram.historyManager;\n        hList.currentEntry = undefined;\n        hList.canUndo = false;\n        hList.canRedo = false;\n        this.historyCount = 0;\n        this.groupCount = 0;\n        diagram.historyManager.undoStack = [];\n        diagram.historyManager.redoStack = [];\n    };\n    UndoRedo.prototype.setEntryLimit = function (value) {\n        value ? this.groupCount-- : this.groupCount++;\n        value ? this.hasGroup = !value : this.hasGroup = value;\n    };\n    UndoRedo.prototype.limitHistoryStack = function (list, diagram) {\n        if (list.type !== 'StartGroup' && list.type !== 'EndGroup') {\n            this.removeFromStack(diagram.historyManager.undoStack, list);\n            this.removeFromStack(diagram.historyManager.redoStack, list);\n        }\n        if (list.previous) {\n            this.limitHistoryStack(list.previous, diagram);\n        }\n    };\n    UndoRedo.prototype.removeFromStack = function (entyList, list) {\n        if (entyList.length) {\n            for (var i = 0; i <= entyList.length; i++) {\n                if (entyList[i].undoObject === list.undoObject && entyList[i].redoObject === list.redoObject) {\n                    entyList.splice(i, 1);\n                    break;\n                }\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.undo = function (diagram) {\n        var entry = this.getUndoEntry(diagram);\n        var endGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'EndGroup') {\n                    endGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.undoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.undoGroupAction(entry, diagram, endGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.undo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.getHistoryList = function (diagram) {\n        var undoStack = [];\n        var redoStack = [];\n        var currEntry = diagram.historyManager.currentEntry;\n        var undoObj;\n        var redoObj;\n        currEntry = diagram.historyManager.currentEntry;\n        if (diagram.historyManager.canUndo || diagram.historyManager.undoStack.length === 0) {\n            this.getHistroyObject(undoStack, currEntry);\n        }\n        else {\n            this.getHistroyObject(redoStack, currEntry);\n        }\n        while (currEntry && currEntry.previous) {\n            undoObj = currEntry.previous;\n            this.getHistroyObject(undoStack, undoObj);\n            currEntry = currEntry.previous;\n        }\n        currEntry = diagram.historyManager.currentEntry;\n        while (currEntry && currEntry.next) {\n            redoObj = currEntry.next;\n            this.getHistroyObject(redoStack, redoObj);\n            currEntry = currEntry.next;\n        }\n        diagram.historyManager.undoStack = undoStack;\n        diagram.historyManager.redoStack = redoStack;\n    };\n    UndoRedo.prototype.getHistroyObject = function (list, obj) {\n        if (obj && obj.type !== 'StartGroup' && obj.type !== 'EndGroup') {\n            list.push({\n                redoObject: obj.redoObject ? obj.redoObject : null,\n                undoObject: obj.undoObject ? obj.undoObject : null,\n                type: obj.type ? obj.type : null,\n                category: obj.category ? obj.category : null\n            });\n        }\n    };\n    UndoRedo.prototype.undoGroupAction = function (entry, diagram, endGroupActionCount) {\n        while (endGroupActionCount !== 0) {\n            this.undoEntry(entry, diagram);\n            entry = this.getUndoEntry(diagram);\n            if (entry.type === 'StartGroup') {\n                endGroupActionCount--;\n            }\n            else if (entry.type === 'EndGroup') {\n                endGroupActionCount++;\n            }\n        }\n        endGroupActionCount = 0;\n    };\n    UndoRedo.prototype.undoEntry = function (entry, diagram) {\n        var obj;\n        var nodeObject;\n        if (entry.type !== 'PropertyChanged' && entry.type !== 'CollectionChanged' && entry.type !== 'LabelCollectionChanged') {\n            obj = (entry.undoObject);\n            nodeObject = (entry.undoObject);\n        }\n        if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n            if (diagram.historyManager.undoStack.length > 0) {\n                var addObject = diagram.historyManager.undoStack.splice(0, 1);\n                diagram.historyManager.redoStack.splice(0, 0, addObject[0]);\n                nodeObject = (entry.undoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        switch (entry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(obj, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(obj, diagram, entry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(obj, diagram, entry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(obj, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(entry, diagram, false);\n                break;\n            case 'CollectionChanged':\n                entry.isUndo = true;\n                this.recordCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'LabelCollectionChanged':\n                entry.isUndo = true;\n                this.recordLabelCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'PortCollectionChanged':\n                entry.isUndo = true;\n                this.recordPortCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'Group':\n                this.unGroup(entry, diagram);\n                break;\n            case 'UnGroup':\n                this.group(entry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(obj, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(entry, diagram, false);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(entry, diagram, false);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(entry, diagram, false);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(entry, diagram, false);\n                break;\n            case 'RowHeightChanged':\n                this.recordGridSizeChanged(entry, diagram, false, true);\n                break;\n            case 'ColumnWidthChanged':\n                this.recordGridSizeChanged(entry, diagram, false, false);\n                break;\n            case 'LanePositionChanged':\n                this.recordLanePositionChanged(entry, diagram, false);\n                break;\n            case 'LaneCollectionChanged':\n            case 'PhaseCollectionChanged':\n                entry.isUndo = true;\n                this.recordLaneOrPhaseCollectionChanged(entry, diagram, false);\n                entry.isUndo = false;\n                break;\n        }\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.protectPropertyChange(false);\n        diagram.historyChangeTrigger(entry);\n        if (nodeObject) {\n            var object = this.checkNodeObject(nodeObject, diagram);\n            if (object) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(object, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.checkNodeObject = function (value, diagram) {\n        var object;\n        if (!value.id) {\n            if ((value.nodes && value.nodes.length > 0) ||\n                (value.connectors && value.connectors.length > 0)) {\n                var undoNode = value.nodes.length > 0 ?\n                    value.nodes : value.connectors;\n                for (var _i = 0, undoNode_1 = undoNode; _i < undoNode_1.length; _i++) {\n                    object = undoNode_1[_i];\n                    object = diagram.nameTable[object.id];\n                }\n            }\n            else {\n                var knownNode = value.nodes ?\n                    value.nodes : value.connectors;\n                if (knownNode) {\n                    for (var _a = 0, _b = Object.keys(knownNode); _a < _b.length; _a++) {\n                        var key = _b[_a];\n                        var index = Number(key);\n                        object = value.nodes ? diagram.nodes[index] : diagram.connectors[index];\n                    }\n                }\n            }\n        }\n        else {\n            object = diagram.nameTable[value.id];\n        }\n        return object;\n    };\n    UndoRedo.prototype.group = function (historyEntry, diagram) {\n        diagram.add(historyEntry.undoObject);\n    };\n    UndoRedo.prototype.unGroup = function (entry, diagram) {\n        var i = 0;\n        entry.redoObject = cloneObject(entry.undoObject);\n        var node = entry.undoObject;\n        diagram.commandHandler.unGroup(node);\n    };\n    UndoRedo.prototype.ignoreProperty = function (key) {\n        if (key === 'zIndex' || key === 'wrapper') {\n            return true;\n        }\n        return false;\n    };\n    UndoRedo.prototype.getProperty = function (collection, property) {\n        for (var _i = 0, _a = Object.keys(property); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (!this.ignoreProperty(key)) {\n                if (property[key] instanceof Object) {\n                    this.getProperty(collection[key], property[key]);\n                }\n                else {\n                    collection[key] = property[key];\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.recordLaneOrPhaseCollectionChanged = function (entry, diagram, isRedo) {\n        var node = entry.redoObject;\n        var obj = entry.undoObject;\n        var changeType;\n        if (entry.isUndo) {\n            if (entry.changeType === 'Insert') {\n                changeType = 'Remove';\n            }\n            else {\n                changeType = 'Insert';\n            }\n        }\n        else {\n            changeType = entry.changeType;\n        }\n        if (changeType === 'Remove') {\n            diagram.remove(node);\n        }\n        else {\n            if (node.isPhase) {\n                var swimlane = diagram.nameTable[node.parentId];\n                diagram.addPhases(swimlane, [obj]);\n            }\n            else {\n                var swimlane = diagram.nameTable[node.parentId];\n                var laneIndex = findLaneIndex(swimlane, node);\n                diagram.addLanes(swimlane, [obj], laneIndex);\n            }\n        }\n        diagram.clearSelection();\n    };\n    UndoRedo.prototype.recordAnnotationChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var oldElement = findAnnotation(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getAnnotationChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findAnnotation(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        currentElement.margin = oldElement.margin;\n        currentElement.width = oldElement.width;\n        currentElement.height = oldElement.height;\n        currentElement.rotateAngle = oldElement.rotateAngle;\n        currentElement.margin = oldElement.margin;\n        if (currentObject instanceof Node) {\n            diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        }\n        else {\n            diagram.connectorPropertyChange(currentObject, {}, undoChanges);\n        }\n    };\n    UndoRedo.prototype.recordChildCollectionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var parentNode = diagram.nameTable[entryObject.parentId];\n        var actualObject = diagram.nameTable[entryObject.id];\n        if (parentNode) {\n            addChildToContainer(diagram, parentNode, actualObject, !isRedo);\n        }\n        else {\n            if (actualObject.parentId) {\n                parentNode = diagram.nameTable[actualObject.parentId];\n                parentNode.children.splice(parentNode.children.indexOf(actualObject.id), 1);\n                parentNode.wrapper.children.splice(parentNode.wrapper.children.indexOf(actualObject.wrapper), 1);\n            }\n            if (entryObject.parentId !== '') {\n                parentNode = diagram.nameTable[entryObject.parentId];\n                parentNode.children.push(entryObject.id);\n                parentNode.wrapper.children.push(actualObject.wrapper);\n            }\n            actualObject.parentId = entryObject.parentId;\n            diagram.removeElements(actualObject);\n            diagram.updateDiagramObject(actualObject);\n        }\n    };\n    UndoRedo.prototype.recordStackPositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_1 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_1) {\n                if (entryObject.target) {\n                    parent_1.wrapper.children.splice(entryObject.targetIndex, 1);\n                    parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, entryObject.source.wrapper);\n                }\n                else {\n                    if (entryObject.sourceIndex !== undefined) {\n                        if (!diagram.nameTable[entryObject.source.id]) {\n                            diagram.add(entryObject.source);\n                        }\n                        parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, diagram.nameTable[entryObject.source.id].wrapper);\n                        diagram.nameTable[entryObject.source.id].parentId = parent_1.id;\n                    }\n                    else {\n                        parent_1.wrapper.children.splice(parent_1.wrapper.children.indexOf(diagram.nameTable[entryObject.source.id].wrapper), 1);\n                        diagram.nameTable[entryObject.source.id].parentId = '';\n                    }\n                }\n                if (isRedo && parent_1.shape.type === 'UmlClassifier') {\n                    diagram.remove(entryObject.source);\n                }\n                parent_1.wrapper.measure(new Size());\n                parent_1.wrapper.arrange(parent_1.wrapper.desiredSize);\n                diagram.updateDiagramObject(parent_1);\n                diagram.updateSelector();\n            }\n        }\n    };\n    UndoRedo.prototype.recordGridSizeChanged = function (entry, diagram, isRedo, isRow) {\n        var obj = (isRedo) ? entry.redoObject : entry.undoObject;\n        var node = (!isRedo) ? entry.redoObject : entry.undoObject;\n        if (obj.parentId) {\n            var swimlane = diagram.nameTable[obj.parentId];\n            var actualObject = diagram.nameTable[obj.id];\n            var x = swimlane.wrapper.bounds.x;\n            var y = swimlane.wrapper.bounds.y;\n            if (swimlane.shape.type === 'SwimLane') {\n                var grid = swimlane.wrapper.children[0];\n                var padding = swimlane.shape.padding;\n                updateSwimLaneObject(diagram, node, swimlane, obj);\n                if (isRow) {\n                    grid.updateRowHeight(obj.rowIndex, obj.wrapper.actualSize.height, true, padding);\n                    swimlane.height = swimlane.wrapper.height = grid.height;\n                }\n                else {\n                    grid.updateColumnWidth(obj.columnIndex, obj.wrapper.actualSize.width, true, padding);\n                    swimlane.width = swimlane.wrapper.width = grid.width;\n                    if (obj.isPhase) {\n                        actualObject.maxWidth = actualObject.wrapper.maxWidth = obj.wrapper.actualSize.width;\n                    }\n                }\n                swimLaneMeasureAndArrange(swimlane);\n                var tx = x - swimlane.wrapper.bounds.x;\n                var ty = y - swimlane.wrapper.bounds.y;\n                diagram.drag(swimlane, tx, ty);\n                diagram.clearSelection();\n                diagram.updateDiagramObject(swimlane);\n            }\n        }\n    };\n    UndoRedo.prototype.recordLanePositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_2 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_2 && parent_2.shape.type === 'SwimLane') {\n                laneInterChanged(diagram, entryObject.target, entryObject.source);\n                diagram.clearSelection();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject.nodes[0] :\n            entry.undoObject.nodes[0]);\n        var oldElement = findPort(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getPortChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findPort(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        if (currentObject.parentId) {\n            diagram.updateConnectorEdges(diagram.nameTable[currentObject.parentId]);\n        }\n    };\n    UndoRedo.prototype.recordPropertyChanged = function (entry, diagram, isRedo) {\n        var redoObject = entry.redoObject;\n        var undoObject = entry.undoObject;\n        this.getProperty(diagram, (isRedo ? redoObject : undoObject));\n        isRedo ? diagram.onPropertyChanged(redoObject, undoObject) : diagram.onPropertyChanged(undoObject, redoObject);\n        diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n    };\n    UndoRedo.prototype.recordSegmentChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.segmentChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.segmentChanged = function (connector, diagram) {\n        var conn = diagram.nameTable[connector.id];\n        conn.segments = connector.segments;\n        diagram.commandHandler.updateEndPoint(conn);\n    };\n    UndoRedo.prototype.recordPositionChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.positionChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        if (obj.processId && !node.processId) {\n            diagram.addProcess(obj, obj.processId);\n        }\n        if (!obj.processId && node.processId) {\n            diagram.removeProcess(obj.id);\n        }\n        if (node.processId) {\n            var tx = obj.margin.left - node.margin.left;\n            var ty = obj.margin.top - node.margin.top;\n            diagram.drag(node, tx, ty);\n        }\n        else {\n            if (node.parentId) {\n                var parent_3 = diagram.nameTable[node.parentId];\n                if (parent_3.isLane) {\n                    obj.wrapper.offsetX = (obj.width / 2) + (parent_3.wrapper.bounds.x + obj.margin.left);\n                    obj.wrapper.offsetY = (obj.height / 2) + (parent_3.wrapper.bounds.y + obj.margin.top);\n                }\n            }\n            var tx = obj.wrapper.offsetX - node.offsetX;\n            var ty = obj.wrapper.offsetY - node.offsetY;\n            diagram.drag(node, tx, ty);\n        }\n        if (diagram.bpmnModule) {\n            diagram.bpmnModule.updateDocks(node, diagram);\n        }\n    };\n    UndoRedo.prototype.recordSizeChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var connector;\n        var node;\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                if (node.children && !node.container) {\n                    var elements = [];\n                    var nodes = diagram.commandHandler.getAllDescendants(node, elements);\n                    for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n                        var tempNode = entry.childTable[nodes[i_1].id];\n                        if ((getObjectType(tempNode) === Node)) {\n                            this.sizeChanged(tempNode, diagram, entry);\n                            this.positionChanged(tempNode, diagram);\n                        }\n                        else {\n                            this.connectionChanged(tempNode, diagram, entry);\n                        }\n                    }\n                }\n                else {\n                    this.sizeChanged(node, diagram);\n                    this.positionChanged(node, diagram);\n                }\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            var connectors = obj.connectors;\n            for (i = 0; i < connectors.length; i++) {\n                connector = connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.sizeChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        var scaleWidth = obj.wrapper.actualSize.width / node.wrapper.actualSize.width;\n        var scaleHeight = obj.wrapper.actualSize.height / node.wrapper.actualSize.height;\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(node);\n        }\n        diagram.scale(node, scaleWidth, scaleHeight, {\n            x: obj.wrapper.offsetX / node.wrapper.offsetX,\n            y: obj.wrapper.offsetY / node.wrapper.offsetY\n        });\n    };\n    UndoRedo.prototype.recordRotationChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var node;\n        var connector;\n        var selectorObj = diagram.selectedItems;\n        selectorObj.rotateAngle = obj.rotateAngle;\n        if (selectorObj && selectorObj.wrapper) {\n            selectorObj.wrapper.rotateAngle = obj.rotateAngle;\n        }\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.rotationChanged(node, diagram);\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.rotationChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        diagram.rotate(node, obj.rotateAngle - node.rotateAngle);\n    };\n    UndoRedo.prototype.recordConnectionChanged = function (obj, diagram) {\n        var connector = obj.connectors[0];\n        this.connectionChanged(connector, diagram);\n    };\n    UndoRedo.prototype.connectionChanged = function (obj, diagram, entry) {\n        var connector = diagram.nameTable[obj.id];\n        var node;\n        if (obj.sourcePortID !== connector.sourcePortID) {\n            connector.sourcePortID = obj.sourcePortID;\n            diagram.connectorPropertyChange(connector, {}, { sourcePortID: obj.sourcePortID });\n        }\n        if (obj.targetPortID !== connector.targetPortID) {\n            connector.targetPortID = obj.targetPortID;\n            diagram.connectorPropertyChange(connector, {}, { targetPortID: obj.targetPortID });\n        }\n        if (obj.sourceID !== connector.sourceID) {\n            if (obj.sourceID === '') {\n                node = diagram.nameTable[connector.sourceID];\n                removeItem(node.outEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.sourceID];\n                node.outEdges.push(obj.id);\n            }\n            connector.sourceID = obj.sourceID;\n            diagram.connectorPropertyChange(connector, {}, { sourceID: obj.sourceID });\n        }\n        if (obj.targetID !== connector.targetID) {\n            if (obj.targetID === '') {\n                node = diagram.nameTable[connector.targetID];\n                removeItem(node.inEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.targetID];\n                node.inEdges.push(obj.id);\n            }\n            connector.targetID = obj.targetID;\n            diagram.connectorPropertyChange(connector, {}, { targetID: obj.targetID });\n        }\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(connector);\n        }\n        var sx = obj.sourcePoint.x - connector.sourcePoint.x;\n        var sy = obj.sourcePoint.y - connector.sourcePoint.y;\n        if (sx !== 0 || sy !== 0) {\n            diagram.dragSourceEnd(connector, sx, sy);\n        }\n        var tx = obj.targetPoint.x - connector.targetPoint.x;\n        var ty = obj.targetPoint.y - connector.targetPoint.y;\n        if (tx !== 0 || ty !== 0) {\n            diagram.dragTargetEnd(connector, tx, ty);\n        }\n        diagram.updateSelector();\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n    };\n    UndoRedo.prototype.recordCollectionChanged = function (entry, diagram) {\n        var obj = entry.undoObject;\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                if (entry.changeType === 'Insert') {\n                    changeType = 'Remove';\n                }\n                else {\n                    changeType = 'Insert';\n                }\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                if (obj.nodeId) {\n                    diagram.remove(diagram.nameTable[obj.nodeId + '_textannotation_' + obj.id]);\n                }\n                else {\n                    diagram.remove(obj);\n                    diagram.clearSelectorLayer();\n                }\n            }\n            else {\n                diagram.clearSelectorLayer();\n                if (obj.parentId) {\n                    var parentNode = diagram.nameTable[obj.parentId];\n                    if (parentNode) {\n                        diagram.addChild(parentNode, obj);\n                    }\n                    else {\n                        diagram.add(obj);\n                    }\n                }\n                else if (obj.nodeId) {\n                    diagram.addTextAnnotation(obj, diagram.nameTable[obj.nodeId]);\n                }\n                else {\n                    if (!diagram.nameTable[obj.id]) {\n                        if (obj && obj.shape && obj.shape.type === 'SwimLane' && entry.isUndo) {\n                            pasteSwimLane(obj, undefined, undefined, undefined, undefined, true);\n                        }\n                        diagram.add(obj);\n                    }\n                }\n                if (obj.processId && diagram.nameTable[obj.processId]) {\n                    diagram.addProcess(obj, obj.processId);\n                }\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordLabelCollectionChanged = function (entry, diagram) {\n        var label = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removeLabels(node, [label]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addLabels(node, [label]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortCollectionChanged = function (entry, diagram) {\n        var port = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removePorts(node, [port]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addPorts(node, [port]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.redo = function (diagram) {\n        var entry = this.getRedoEntry(diagram);\n        var startGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'StartGroup') {\n                    startGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.redoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.redoGroupAction(entry, diagram, startGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.redo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.redoGroupAction = function (entry, diagram, startGroupActionCount) {\n        while (startGroupActionCount !== 0) {\n            this.redoEntry(entry, diagram);\n            entry = this.getRedoEntry(diagram);\n            if (entry.type === 'EndGroup') {\n                startGroupActionCount--;\n            }\n            else if (entry.type === 'StartGroup') {\n                startGroupActionCount++;\n            }\n        }\n        startGroupActionCount = 0;\n    };\n    UndoRedo.prototype.redoEntry = function (historyEntry, diagram) {\n        var redoObject;\n        var redovalue;\n        if (historyEntry.type !== 'PropertyChanged' && historyEntry.type !== 'CollectionChanged') {\n            redoObject = (historyEntry.redoObject);\n            redovalue = (historyEntry.redoObject);\n        }\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        if (historyEntry.type !== 'StartGroup' && historyEntry.type !== 'EndGroup') {\n            if (diagram.historyManager.redoStack.length > 0) {\n                var addObject = diagram.historyManager.redoStack.splice(0, 1);\n                diagram.historyManager.undoStack.splice(0, 0, addObject[0]);\n                redovalue = (historyEntry.redoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        switch (historyEntry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(redoObject, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(redoObject, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(historyEntry, diagram, true);\n                break;\n            case 'CollectionChanged':\n                this.recordCollectionChanged(historyEntry, diagram);\n                break;\n            case 'LabelCollectionChanged':\n                this.recordLabelCollectionChanged(historyEntry, diagram);\n                break;\n            case 'PortCollectionChanged':\n                this.recordPortCollectionChanged(historyEntry, diagram);\n                break;\n            case 'Group':\n                this.group(historyEntry, diagram);\n                break;\n            case 'UnGroup':\n                this.unGroup(historyEntry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(redoObject, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(historyEntry, diagram, true);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(historyEntry, diagram, true);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(historyEntry, diagram, true);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(historyEntry, diagram, true);\n                break;\n            case 'RowHeightChanged':\n                this.recordGridSizeChanged(historyEntry, diagram, true, true);\n                break;\n            case 'ColumnWidthChanged':\n                this.recordGridSizeChanged(historyEntry, diagram, true, false);\n                break;\n            case 'LanePositionChanged':\n                this.recordLanePositionChanged(historyEntry, diagram, true);\n                break;\n            case 'LaneCollectionChanged':\n            case 'PhaseCollectionChanged':\n                this.recordLaneOrPhaseCollectionChanged(historyEntry, diagram, true);\n                break;\n        }\n        diagram.protectPropertyChange(false);\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.historyChangeTrigger(historyEntry);\n        if (redovalue) {\n            var value = this.checkNodeObject(redovalue, diagram);\n            if (value) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(value, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.getUndoEntry = function (diagram) {\n        var undoEntry = null;\n        var currentObject;\n        var hList = diagram.historyManager;\n        if (hList.canUndo) {\n            undoEntry = hList.currentEntry;\n            currentObject = hList.currentEntry.previous;\n            if (currentObject) {\n                hList.currentEntry = currentObject;\n                if (!hList.canRedo) {\n                    hList.canRedo = true;\n                }\n            }\n            else {\n                hList.canRedo = true;\n                hList.canUndo = false;\n            }\n        }\n        return undoEntry;\n    };\n    UndoRedo.prototype.getRedoEntry = function (diagram) {\n        var redoEntry = null;\n        var entryCurrent;\n        var hList = diagram.historyManager;\n        if (hList.canRedo) {\n            if (!hList.currentEntry.previous && !hList.canUndo) {\n                entryCurrent = hList.currentEntry;\n            }\n            else {\n                entryCurrent = hList.currentEntry.next;\n            }\n            if (entryCurrent) {\n                hList.currentEntry = entryCurrent;\n                if (!hList.canUndo) {\n                    hList.canUndo = true;\n                }\n                if (!entryCurrent.next) {\n                    hList.canRedo = false;\n                    hList.canUndo = true;\n                }\n            }\n            redoEntry = hList.currentEntry;\n        }\n        return redoEntry;\n    };\n    /**\n     * To destroy the undo redo module\n     * @return {void}\n     * @private\n     */\n    UndoRedo.prototype.destroy = function () {\n        /**\n         * Destroys the undo redo module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    UndoRedo.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'UndoRedo';\n    };\n    return UndoRedo;\n}());\nexport { UndoRedo };\n","import { Container } from '../core/containers/container';\nimport { DiagramEvent } from '../enum/enum';\nimport { cloneObject as clone } from '../utility/base-util';\n/**\n * Layout Animation function to enable or disable layout animation\n */\nvar LayoutAnimation = /** @class */ (function () {\n    function LayoutAnimation() {\n        this.protectChange = false;\n    }\n    /**\n     * Layout expand function for animation of expand and collapse\n     */\n    LayoutAnimation.prototype.expand = function (animation, objects, node, diagram) {\n        var _this = this;\n        var setIntervalObject = {};\n        var i = 0;\n        var j = 0;\n        setIntervalObject[i] = setInterval(function () {\n            j++;\n            return _this.layoutAnimation(objects, setIntervalObject, j === 6, diagram, node);\n        }, 20);\n        if (node.isExpanded) {\n            var opacity_1 = .2;\n            var protect = 'isProtectedOnChange';\n            this.protectChange = diagram[protect];\n            diagram.protectPropertyChange(false);\n            //let objects: ILayout = diagram.doLayout();\n            var setIntervalObjects_1 = {};\n            var x = 0;\n            if (animation) {\n                this.updateOpacity(node, opacity_1, diagram);\n                var current = this;\n                setIntervalObjects_1[x] = setInterval(function () {\n                    opacity_1 <= 1 ? _this.updateOpacity(node, opacity_1, diagram) : clearInterval(setIntervalObjects_1[0]);\n                    opacity_1 += .2;\n                }, 20);\n            }\n        }\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    LayoutAnimation.prototype.layoutAnimation = function (objValue, layoutTimer, stop, diagram, node) {\n        if (!stop) {\n            for (var k = 0; k < objValue.objects.length; k++) {\n                var node_1 = diagram.nameTable[objValue.objects[k].id];\n                node_1.offsetX += objValue.objects[k].differenceX / 5;\n                node_1.offsetY += objValue.objects[k].differenceY / 5;\n            }\n        }\n        if (stop) {\n            clearInterval(layoutTimer[0]);\n            diagram.protectPropertyChange(true);\n            diagram.triggerEvent(DiagramEvent.animationComplete, undefined);\n            diagram.organizationalChartModule.isAnimation = false;\n            diagram.layout.fixedNode = '';\n            diagram.protectPropertyChange(this.protectChange);\n            var arg = {\n                element: clone(node), state: (node.isExpanded) ? true : false\n            };\n            diagram.triggerEvent(DiagramEvent.expandStateChange, arg);\n        }\n    };\n    /**\n     * update the node opacity for the node and connector once the layout animation starts\n     */\n    LayoutAnimation.prototype.updateOpacity = function (source, value, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            connector.style.opacity = value;\n            for (var j = 0; j < connector.wrapper.children.length; j++) {\n                connector.wrapper.children[j].style.opacity = value;\n                target.style.opacity = value;\n                if (target.wrapper instanceof Container) {\n                    diagram.updateNodeProperty(target.wrapper, undefined, value);\n                }\n            }\n            this.updateOpacity(target, value, diagram);\n        }\n    };\n    /**\n     * To destroy the  LayoutAnimate module\n     * @return {void}\n     * @private\n     */\n    LayoutAnimation.prototype.destroy = function () {\n        /**\n         * Destroys the LayoutAnimate module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LayoutAnimation.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LayoutAnimate';\n    };\n    return LayoutAnimation;\n}());\nexport { LayoutAnimation };\n","import { DiagramAction } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { getFunction } from '../utility/base-util';\nimport { Point } from '../primitives/point';\n/**\n * Hierarchical Tree and Organizational Chart\n */\nvar HierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function HierarchicalTree() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    HierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    HierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'OrganizationalChart';\n    };\n    /**   @private  */\n    HierarchicalTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport, uniqueId, action) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {},\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, viewport, uniqueId, action);\n        return layout;\n    };\n    HierarchicalTree.prototype.doLayout = function (layout, nodes, viewport, uniqueId, action) {\n        var node;\n        var i;\n        var layoutInfo = {};\n        var shape;\n        var rootNodes = [];\n        if (layout.nameTable[layout.root]) {\n            layout.firstLevelNodes.push(layout.nameTable[layout.root]);\n        }\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layoutInfo = layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                layoutInfo.tree.hasSubTree = false;\n                if (!layout.nameTable[layout.root]) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        rootNodes.push(node);\n                        if (node.data && String(node.data[uniqueId]) === layout.root) {\n                            layout.firstLevelNodes.push(node);\n                        }\n                    }\n                }\n            }\n        }\n        if (layout.firstLevelNodes.length === 0) {\n            layout.firstLevelNodes = rootNodes;\n        }\n        //Update relationship(parent and children)\n        for (i = 0; i < layout.firstLevelNodes.length; i++) {\n            node = layout.firstLevelNodes[i];\n            this.updateEdges(layout, node, 1, action);\n        }\n        if (layout.firstLevelNodes.length > 0) {\n            layout.rootNode = layout.firstLevelNodes[0];\n            var x = 0;\n            var y = 0;\n            var minX = void 0;\n            var maxY = void 0;\n            var maxX = void 0;\n            var minY = void 0;\n            var j = void 0;\n            var bounds = void 0;\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                bounds = this.updateTree(layout, x, y, layout.firstLevelNodes[i], 0, layout.firstLevelNodes[i - 1]);\n                var rootInfo = layout.graphNodes[layout.firstLevelNodes[i].id];\n                bounds.y = Math.min(bounds.y, rootInfo.y);\n                bounds.x = Math.min(bounds.x, rootInfo.x);\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    y = bounds.right + layout.horizontalSpacing;\n                }\n                else {\n                    x = bounds.right + layout.horizontalSpacing;\n                }\n                if (i === 0) {\n                    minX = bounds.x;\n                    minY = bounds.y;\n                    maxX = bounds.right;\n                    maxY = bounds.bottom;\n                }\n                else {\n                    minX = Math.min(minX, bounds.x);\n                    minY = Math.min(minY, bounds.y);\n                    maxX = Math.max(maxX, bounds.right);\n                    maxY = Math.max(maxY, bounds.bottom);\n                }\n            }\n            this.updateAnchor(layout, { x: minX, y: minY, right: maxX, bottom: maxY }, viewport);\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateNodes(layout, layout.firstLevelNodes[i], 0);\n            }\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateConnectors(layout, layout.firstLevelNodes[i], 1);\n            }\n        }\n    };\n    HierarchicalTree.prototype.getBounds = function (node) {\n        var x = node.offsetX - node.actualSize.width * node.pivot.x;\n        var y = node.offsetY - node.actualSize.height * node.pivot.y;\n        return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n    };\n    HierarchicalTree.prototype.updateTree = function (layout, x, y, shape, level, prev, dontupdate) {\n        var dimensions;\n        var info = {};\n        var lev;\n        var obj;\n        var hasChild;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        info = layout.graphNodes[shape.id];\n        var firstChild;\n        //Set maximum level of layout\n        layout.maxLevel = Math.max(layout.maxLevel, level);\n        lev = level;\n        hasChild = this.hasChild(layout, shape);\n        if (!hasChild && !info.tree.assistants.length) {\n            //update leaf nodes\n            shape.treeBounds = this.updateLeafNode(layout, shape, prev, dimensions, level, dontupdate);\n            return shape.treeBounds;\n        }\n        else {\n            var treeBounds = void 0;\n            var shapeBounds = void 0;\n            var levelBounds = void 0;\n            var d = void 0;\n            var asstBounds = void 0;\n            var space = void 0;\n            var bottom = void 0;\n            bottom = dimensions.y + dimensions.height + layout.verticalSpacing;\n            if (info.tree.assistants.length) {\n                //Vertically place assistants\n                obj = this.setDepthSpaceForAssitants(layout, shape, bottom, dimensions.height, level, layout.verticalSpacing);\n                lev = obj.level;\n                bottom = obj.bottom;\n            }\n            if (!info.tree.assistants.length && info.tree.orientation !== 'Horizontal') {\n                bottom = dimensions.y + dimensions.height + layout.verticalSpacing / 2;\n            }\n            if (info.tree.children.length) {\n                if (info.tree.orientation === 'Horizontal' && (info.tree.type !== 'Balanced' || info.tree.children.length === 1)) {\n                    treeBounds = this.updateHorizontalTree(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else if (info.tree.type === 'Balanced') {\n                    treeBounds = this.updateHorizontalTreeWithMultipleRows(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else {\n                    treeBounds = this.updateVerticalTree(layout, shape, dimensions.x, bottom, lev, dontupdate);\n                }\n            }\n            if (!(info.y && info.y > dimensions.y)) {\n                info.y = dimensions.y;\n            }\n            if (info.mid) {\n                x = info.mid;\n            }\n            if (info.tree.assistants.length) {\n                //Set breadth space for assistants\n                space = x !== undefined ? x : dimensions.x;\n                asstBounds = this.setBreadthSpaceForAssistants(layout, shape, dimensions, space, bottom, level);\n                if (!hasChild) {\n                    levelBounds = treeBounds = asstBounds;\n                    x = (levelBounds.x + levelBounds.right) / 2 - dimensions.width / 2;\n                    treeBounds = levelBounds;\n                }\n                d = asstBounds ? asstBounds.canMoveBy : undefined;\n            }\n            info.x = x;\n            if (!info.translate) {\n                info.treeWidth = treeBounds.right - treeBounds.x;\n            }\n            {\n                shapeBounds = { x: x, y: dimensions.y, right: x + dimensions.width, bottom: dimensions.y + dimensions.height };\n            }\n            var translateInfo = {\n                layout: layout, shape: shape, shapeBounds: shapeBounds, treeBounds: treeBounds,\n                dim: dimensions, level: level\n            };\n            this.translateSubTree(translateInfo, d, prev !== undefined, dontupdate);\n            if (info.firstChild && typeof info.firstChild !== 'string') {\n                info.firstChild.x += info.subTreeTranslation;\n            }\n            shape.treeBounds = treeBounds;\n            return treeBounds;\n        }\n    };\n    HierarchicalTree.prototype.updateLeafNode = function (layout, shape, prev, dimensions, level, dontupdate) {\n        var bounds;\n        var info = layout.graphNodes[shape.id];\n        info.x = dimensions.x;\n        if (!(info.y && info.y > dimensions.y)) {\n            info.y = dimensions.y;\n            info.maxLevel = Math.max(level, info.maxLevel || 0);\n        }\n        bounds = { x: dimensions.x, y: dimensions.y, right: dimensions.x + dimensions.width, bottom: dimensions.y + dimensions.height };\n        info.maxLevel = Math.max(info.maxLevel || 0, level);\n        var translateInfo = {\n            layout: layout, shape: shape, shapeBounds: bounds, treeBounds: bounds,\n            dim: dimensions, level: level\n        };\n        this.translateSubTree(translateInfo, undefined, prev !== undefined, dontupdate);\n        return { x: info.x, y: info.y, right: info.x + dimensions.width, bottom: info.y + dimensions.height };\n    };\n    HierarchicalTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.subTreeTranslation = 0;\n        if (layout.type === 'OrganizationalChart') {\n            info.tree = { orientation: 'Vertical', type: 'Alternate', offset: 20, enableRouting: true };\n        }\n        else {\n            info.tree = { orientation: 'Horizontal', type: 'Center', enableRouting: true };\n        }\n        info.tree.children = [];\n        info.tree.assistants = [];\n        info.tree.level = 0;\n        info.translate = true;\n        return info;\n    };\n    HierarchicalTree.prototype.translateSubTree = function (translateInfo, asstDif, translate, dontupdate) {\n        var layout = translateInfo.layout;\n        var shape = translateInfo.shape;\n        var shapeBounds = translateInfo.shapeBounds;\n        var treeBounds = translateInfo.treeBounds;\n        var level = translateInfo.level;\n        var dim = translateInfo.dim;\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.firstChild ? info.firstChild.child : info.tree.children[0]];\n        var firstChildInfo = firstChild ? layout.graphNodes[firstChild.id] : null;\n        var hasChild = this.hasChild(layout, shape);\n        var intersect = this.findIntersectingLevels(layout, shapeBounds, level, info.actualLevel);\n        var treeIntersect = this.findIntersectingLevels(layout, treeBounds, level, info.actualLevel);\n        var levelBounds = [];\n        var diff;\n        if (intersect.length && info.translate) {\n            info.intersect = intersect;\n            this.spaceLeftFromPrevSubTree(layout, shape, shapeBounds);\n            info.canMoveBy = info.diff;\n            if (asstDif !== undefined) {\n                info.canMoveBy = Math.min(asstDif, info.canMoveBy);\n            }\n            if (firstChild && firstChildInfo.canMoveBy !== undefined) {\n                if (firstChildInfo.canMoveBy >= info.canMoveBy) {\n                    info.translated = true;\n                }\n                info.canMoveBy = Math.min(info.canMoveBy, firstChildInfo.canMoveBy);\n            }\n            if (translate) {\n                info.x -= info.canMoveBy;\n                info.subTreeTranslation -= info.canMoveBy;\n                if (hasChild) {\n                    this.shiftSubordinates(layout, treeIntersect, info.canMoveBy);\n                    treeBounds.x = Math.min(treeBounds.x, info.x);\n                    treeBounds.right = Math.max(treeBounds.right, info.x + dim.width);\n                    treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n                    treeBounds.x -= info.canMoveBy;\n                    treeBounds.right -= info.canMoveBy;\n                }\n                if (firstChild && firstChildInfo.canMoveBy > info.canMoveBy) {\n                    info.canMoveBy = firstChildInfo.canMoveBy - info.canMoveBy;\n                }\n                else if (firstChild && info.canMoveBy !== undefined) {\n                    info.canMoveBy = 0;\n                }\n            }\n        }\n        else {\n            if (hasChild) {\n                treeBounds.x = Math.min(treeBounds.x, shapeBounds.x);\n                treeBounds.right = Math.max(treeBounds.right, shapeBounds.x + dim.width);\n                treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n            }\n            if (!info.translate) {\n                info.canMoveBy = 0;\n                info.subTreeTranslation = 0;\n            }\n        }\n        if (!dontupdate) {\n            shapeBounds = { x: info.x, y: dim.y, right: info.x + dim.width, bottom: dim.y + dim.height };\n            levelBounds.push({ rBounds: shapeBounds });\n            this.updateRearBounds(layout, shape, levelBounds, level);\n        }\n    };\n    HierarchicalTree.prototype.updateRearBounds = function (layout, shape, levelBounds, level, intersect) {\n        var bnds;\n        var index;\n        var isLastLeaf = true;\n        var i;\n        var info = {};\n        var firstLevel;\n        var lastLevel;\n        var bottom;\n        if (shape) {\n            info = layout.graphNodes[shape.id];\n            intersect = info.intersect;\n            isLastLeaf = !info.tree.children.length && !info.tree.assistants.length;\n        }\n        firstLevel = levelBounds[0].rBounds;\n        lastLevel = levelBounds[levelBounds.length - 1].rBounds;\n        if (intersect && intersect.length) {\n            bnds = layout.levels[intersect[0]].rBounds;\n            bottom = bnds.bottom;\n            if (bnds.y < firstLevel.y) {\n                bnds.bottom = firstLevel.y;\n                levelBounds.splice(0, 0, { rBounds: bnds });\n            }\n            if (bottom > lastLevel.bottom) {\n                levelBounds.push({ rBounds: { x: bnds.x, right: bnds.right, y: firstLevel.bottom, bottom: bottom } });\n            }\n            else {\n                bnds = layout.levels[intersect[intersect.length - 1]].rBounds;\n                if (isLastLeaf && bnds.bottom > lastLevel.bottom) {\n                    bnds.y = lastLevel.bottom;\n                    levelBounds.push({ rBounds: bnds });\n                }\n            }\n            index = intersect[0];\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n            index += levelBounds.length;\n            layout.levels.splice(index, intersect.length);\n        }\n        else {\n            index = this.findLevel(layout, levelBounds[levelBounds.length - 1].rBounds, level);\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.shiftSubordinates = function (layout, intersect, diff) {\n        var i;\n        //Shift the sublevels by the distance diff\n        if (diff !== 0) {\n            for (i = 0; i < intersect.length; i++) {\n                if (layout.levels[intersect[i]].rBounds) {\n                    layout.levels[intersect[i]].rBounds.x -= diff;\n                    layout.levels[intersect[i]].rBounds.right -= diff;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.setDepthSpaceForAssitants = function (layout, shape, bottom, height, lev, vSpace) {\n        var info = layout.graphNodes[shape.id];\n        var asst = {};\n        var asstHeight;\n        var i;\n        var asstElement;\n        var max;\n        max = bottom;\n        //Vertically place the assistants as alternate layout(alternatively at both right and left sides of parent)\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            if (asst) {\n                asst.tree.children = asst.tree.assistants = [];\n                asst.y = bottom;\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstHeight = asstElement.actualSize.height;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstHeight = asstElement.actualSize.width;\n                }\n                max = bottom + asstHeight + vSpace / 2;\n                layout.maxLevel = lev + 1;\n                if (i % 2 === 1 && i !== info.tree.assistants.length - 1) {\n                    bottom = max;\n                    lev++;\n                }\n            }\n        }\n        return { level: layout.maxLevel, bottom: bottom + asstHeight + vSpace };\n    };\n    HierarchicalTree.prototype.setBreadthSpaceForAssistants = function (layout, shape, dim, space, bottom, level) {\n        var asst = {};\n        var asstWidth;\n        var prevBounds;\n        var bounds;\n        var asstElement;\n        var i;\n        var info = layout.graphNodes[shape.id];\n        var max = bottom;\n        var lev = level;\n        var left;\n        var diff;\n        var intersect;\n        var levelBounds = { x: 0, y: 0, right: 0, bottom: 0 };\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            //Arrange assistants at both left and right sides of parent(like alternate layout)\n            //Check - By default, distance to be left between parent and child nodes is assumed as 20.\n            //It can be modified/customized later.\n            if (asst) {\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstWidth = asstElement.actualSize.width;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstWidth = asstElement.actualSize.height;\n                }\n                if (i % 2 === 0) {\n                    left = space + dim.width / 2 - 20 - asstWidth;\n                }\n                else {\n                    left = space + dim.width / 2 + 20;\n                }\n                //Check - What will happen if update leaf node is called? Since assistants don't have children\n                bounds = this.updateTree(layout, left, asst.y, layout.nameTable[info.tree.assistants[i]], lev + 1);\n                if (!this.hasChild(layout, shape)) {\n                    if (i === 0) {\n                        levelBounds = bounds;\n                    }\n                    else {\n                        this.uniteRects(levelBounds, bounds);\n                    }\n                }\n                if (i % 2 === 0 && asst.prevBounds) {\n                    if (diff === undefined) {\n                        diff = asst.canMoveBy;\n                    }\n                    else {\n                        diff = Math.min(diff, asst.canMoveBy);\n                    }\n                }\n                if (i % 2 === 1 || i === info.tree.assistants.length - 1) {\n                    intersect = this.findIntersectingLevels(layout, bounds, lev + 1);\n                    //Update rightmost positions of known layout levels\n                    this.updateRearBounds(layout, null, [{ rBounds: bounds }], lev + 1, intersect);\n                    lev++;\n                }\n            }\n        }\n        if (levelBounds) {\n            levelBounds.canMoveBy = diff;\n        }\n        return levelBounds;\n    };\n    HierarchicalTree.prototype.getDimensions = function (layout, shape, x, y, level) {\n        var width;\n        width = shape.actualSize.width;\n        var height;\n        height = shape.actualSize.height;\n        if (layout.orientation.indexOf('Left') !== -1) {\n            if (!level) {\n                var temp = void 0;\n                temp = x;\n                x = y;\n                y = temp;\n            }\n            height = shape.actualSize.width;\n            width = shape.actualSize.height;\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    HierarchicalTree.prototype.hasChild = function (layout, shape) {\n        //Check whether the node has children            \n        var shape1 = layout.graphNodes[shape.id];\n        return shape1.tree.children && shape1.tree.children.length;\n    };\n    HierarchicalTree.prototype.updateHorizontalTree = function (layout, shape, prev, x, y, level) {\n        //Get dimensions with respect to layout orientations  \n        var dimensions;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = {};\n        info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev;\n        lev = level;\n        var right = 0;\n        right = x;\n        var bottom;\n        bottom = y;\n        var width;\n        var height;\n        var child;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var maxLevel;\n        var translateSibilingsBy;\n        var canMoveBy;\n        var oldActBounds;\n        var i;\n        var childInfo;\n        var prevLayoutLevels;\n        var firstChildInfo;\n        prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        if (this.hasChild(layout, shape)) {\n            var h = void 0;\n            h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            for (i = 0; i < info.tree.children.length; i++) {\n                child = layout.nameTable[info.tree.children[i]];\n                width = child.actualSize.width;\n                height = child.actualSize.height;\n                childWidth = h ? height : width;\n                childHeight = h ? width : height;\n                prevBounds = layout.levels[lev + 1] ? layout.levels[lev + 1].rBounds : null;\n                //Update sub tree\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[info.tree.children[i - 1]]);\n                childInfo = layout.graphNodes[child.id];\n                info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n                actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n                if (i === 0) {\n                    //Compare with previous(right most) subtree\n                    bounds = {\n                        x: Math.min(childInfo.x, childBounds.x), y: Math.min(childInfo.y, childBounds.y),\n                        right: childBounds.right, bottom: childBounds.bottom\n                    };\n                    firstChildInfo = childInfo;\n                }\n                if (!oldActBounds) {\n                    oldActBounds = actBounds;\n                }\n                else {\n                    oldActBounds.x = actBounds.x;\n                    oldActBounds.y = actBounds.y;\n                    if (actBounds.right > oldActBounds.right) {\n                        oldActBounds.right = actBounds.right;\n                    }\n                    oldActBounds.bottom = actBounds.bottom;\n                    //oldActBounds = actBounds;\n                }\n                //Compare with previous subtree if level of the child is greater than the level of previous sub tree\n                //Check - what will happen if level of second child is greater than current child\n                if (i === 0) {\n                    info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n                }\n                if (this.hasChild(layout, child)) {\n                    if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                        if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                            info.firstChild.canMoveBy = canMoveBy;\n                            childInfo.canMoveBy = canMoveBy;\n                            canMoveBy = info.firstChild.canMoveBy;\n                            layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy;\n                        }\n                        var canMoveValue = canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy;\n                        info.firstChild = { x: childInfo.firstChild.x, canMoveBy: canMoveValue, child: child.id };\n                    }\n                    else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                        info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                    }\n                }\n                maxLevel = maxLevel ? Math.max(childInfo.maxLevel, maxLevel) : childInfo.maxLevel;\n                this.uniteRects(bounds, childBounds);\n                if (i !== 0 && !this.hasChild(layout, child) && childInfo.subTreeTranslation < 0) {\n                    right = childBounds.right - childInfo.subTreeTranslation + layout.horizontalSpacing;\n                }\n                else {\n                    right = childBounds.right + layout.horizontalSpacing;\n                }\n            }\n            if (!isNaN(translateSibilingsBy)) {\n                firstChildInfo.canMoveBy = translateSibilingsBy;\n            }\n            info.mid = (firstChildInfo.x + oldActBounds.right) / 2 - dimensions.width / 2;\n            //Set parent based on the chart type\n            if (side === 'Left') {\n                info.mid = actBounds.right - dimensions.width;\n            }\n            else if (side === 'Right') {\n                info.mid = x;\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateHorizontalTreeWithMultipleRows = function (layout, shape, prev, x, y, level) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var firstChildInfo;\n        var maxLevel;\n        var bounds;\n        var rowBounds;\n        var width;\n        var height;\n        var diff;\n        var translateSibilingsBy;\n        var fchild;\n        var maxRowWidth;\n        var j;\n        var i;\n        var k;\n        var max;\n        var leftCenter;\n        var rightCenter;\n        //Get dimensions with respect to layout orientations\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev = level;\n        var right = x;\n        var bottom = y;\n        var prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        var minTranslation = 0;\n        if (this.hasChild(layout, shape)) {\n            var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            var align = void 0;\n            var rows = this.splitChildrenInRows(layout, shape);\n            var unique = info.tree.children.length === 5 && rows[0].length === 3;\n            var leftTree = [];\n            var rightTree = [];\n            if (!unique) {\n                this.splitRows(rows, leftTree, rightTree);\n            }\n            else {\n                rightTree = rows;\n            }\n            var treeInfo = { leftTree: leftTree, rows: rows, rightTree: rightTree, dimensions: dimensions };\n            var rightMost = this.updateLeftTree(layout, treeInfo, shape, x, bottom, lev);\n            bounds = treeInfo.bounds;\n            var rightX = void 0;\n            var center = (rightMost || 0) + (rightMost !== undefined ? (layout.horizontalSpacing / 2) : 0);\n            if (rightMost !== undefined) {\n                info.mid = center - dimensions.width / 2;\n                rightX = rightMost + layout.horizontalSpacing;\n            }\n            bottom = y;\n            var rightBounds = void 0;\n            rightBounds = [];\n            for (i = 0; i < rightTree.length; i++) {\n                if (rows[i].length % 2 === 1 && i === rightTree.length - 1 || unique) {\n                    right = x;\n                }\n                else {\n                    right = rightX || x;\n                }\n                if (i !== 0) {\n                    bottom = rightBounds[i - 1].bottom + layout.verticalSpacing;\n                }\n                for (j = 0; j < rightTree[i].length; j++) {\n                    child = layout.nameTable[rightTree[i][j]];\n                    width = child.actualSize.width;\n                    height = child.actualSize.height;\n                    childWidth = h ? height : width;\n                    childHeight = h ? width : height;\n                    //Update sub tree\n                    childInfo = layout.graphNodes[child.id];\n                    childInfo.actualLevel = lev + 1 + i;\n                    if (j === 0 && leftTree[i] && leftTree[i].length) {\n                        childInfo.translate = false;\n                    }\n                    if (unique && i === 1) {\n                        if (j === 0 && leftCenter + childWidth + layout.horizontalSpacing <= rightCenter) {\n                            align = true;\n                            right = leftCenter - childWidth / 2;\n                        }\n                        if (align && j === 1) {\n                            right = rightCenter - childWidth / 2;\n                        }\n                    }\n                    childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[rightTree[i][j - 1]]);\n                    if (unique && j <= 2 && i === 0) {\n                        if (j === 1) {\n                            leftCenter = childBounds.x - layout.horizontalSpacing / 2;\n                            rightCenter = childBounds.x + childWidth + layout.horizontalSpacing / 2;\n                        }\n                    }\n                    if (j === 0) {\n                        rightBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                    }\n                    else {\n                        this.uniteRects(rightBounds[i], childBounds);\n                    }\n                    if (!bounds) {\n                        bounds = {\n                            x: rightBounds[i].x, y: rightBounds[i].y, right: rightBounds[i].right,\n                            bottom: rightBounds[i].bottom\n                        };\n                    }\n                    this.uniteRects(bounds, rightBounds[i]);\n                    right = childBounds.right + layout.horizontalSpacing;\n                    if (!info.firstChild || ((i === rightTree.length - 1 && rows[i].length % 2 === 1) || unique)\n                        && j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                        minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                        info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                    }\n                    treeInfo.leftCenter = leftCenter;\n                    treeInfo.rightCenter = rightCenter;\n                    treeInfo.align = align;\n                    treeInfo.level = lev;\n                    treeInfo.rightBounds = rightBounds;\n                    this.alignRowsToCenter(layout, i, shape, treeInfo, rightX);\n                }\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateLeftTree = function (layout, treeInfo, shape, x, bottom, lev) {\n        var leftTree = treeInfo.leftTree;\n        var info = layout.graphNodes[shape.id];\n        var right;\n        var leftBounds = [];\n        var minTranslation;\n        var rightMost;\n        var childBounds;\n        var bounds;\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        //Arrange left side\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            right = x;\n            if (leftBounds[i - 1]) {\n                bottom = leftBounds[i - 1].bottom + layout.verticalSpacing;\n            }\n            for (var j = 0; j < leftTree[i].length; j++) {\n                var child = layout.nameTable[leftTree[i][j]];\n                var childWidth = h ? child.actualSize.height : child.actualSize.width;\n                var childHeight = h ? child.actualSize.width : child.actualSize.height;\n                //Update sub tree\n                var childInfo = layout.graphNodes[child.id];\n                childInfo.actualLevel = lev + 1 + i;\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[leftTree[i][j - 1]]);\n                if (j === 0) {\n                    leftBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                }\n                else {\n                    this.uniteRects(leftBounds[i], childBounds);\n                }\n                if (i === 0 && j === 0) {\n                    minTranslation = childInfo.canMoveBy;\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                else if (j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                    minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                right = childBounds.right + layout.horizontalSpacing;\n            }\n            if (i === 0) {\n                rightMost = leftBounds[i].right;\n            }\n            else {\n                rightMost = Math.max(rightMost, leftBounds[i].right);\n            }\n        }\n        //Translate to same positions\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            if (rightMost !== leftBounds[i].right) {\n                var diff = rightMost - leftBounds[i].right;\n                for (var j = 0; j < leftTree[i].length; j++) {\n                    var element = layout.nameTable[leftTree[i][j]];\n                    var elementInfo = layout.graphNodes[leftTree[i][j]];\n                    elementInfo.x += diff;\n                }\n                //leftBounds[i].x += diff;\n                //leftBounds[i].right += diff;\n            }\n            if (i === 0) {\n                bounds = { x: leftBounds[0].x, y: leftBounds[0].y, right: leftBounds[0].right, bottom: leftBounds[0].bottom };\n            }\n            else {\n                this.uniteRects(bounds, leftBounds[i]);\n            }\n        }\n        treeInfo.bounds = bounds;\n        return rightMost;\n    };\n    HierarchicalTree.prototype.alignRowsToCenter = function (layout, i, shape, treeInfo, rightX) {\n        var max;\n        var centered;\n        var diff;\n        var info = layout.graphNodes[shape.id];\n        var rows = treeInfo.rows;\n        var rightTree = treeInfo.rightTree;\n        var leftCenter = treeInfo.leftCenter;\n        var rightCenter = treeInfo.rightCenter;\n        var align = treeInfo.align;\n        var rightBounds = treeInfo.rightBounds;\n        var dimensions = treeInfo.dimensions;\n        var lev = treeInfo.level;\n        var unique = info.tree.children.length === 5 && rows[0].length === 3;\n        if (unique && i === 1) {\n            max = (rightBounds[0].right - rightBounds[0].x) >= (rightBounds[1].right - rightBounds[1].x) ? 0 : 1;\n        }\n        if (i === rows.length - 1) {\n            if (rows[i].length % 2 === 1 || unique && i === 1) {\n                centered = rightTree[i][Math.floor(rightTree[i].length / 2)];\n                var centerObjct = void 0;\n                centerObjct = layout.nameTable[centered];\n                var childDimension = void 0;\n                var centeredX = layout.graphNodes[centered].x;\n                var centeredY = layout.graphNodes[centered].y;\n                childDimension = this.getDimensions(layout, centerObjct, centeredX, centeredY, lev + 1);\n                diff = undefined;\n                if (!align && unique) {\n                    if (max === 1) {\n                        i = 0;\n                    }\n                    diff = (rightBounds[max].x + rightBounds[max].right) / 2 - (rightBounds[i].x + rightBounds[i].right) / 2;\n                    if (i === 0) {\n                        info.mid += diff;\n                    }\n                }\n                else if (!unique && rightX !== undefined) {\n                    diff = rightX - layout.horizontalSpacing / 2 - (centeredX + childDimension.width / 2);\n                }\n                if (diff !== undefined) {\n                    this.updateRearBoundsOfTree(layout, rightTree[i], diff, dimensions);\n                }\n                if (unique) {\n                    info.mid = (rightCenter + leftCenter) / 2 + (i === 0 ? diff : 0) - dimensions.width / 2;\n                }\n                if (info.mid === undefined && layout.graphNodes[centered]) {\n                    info.mid = centeredX;\n                }\n                align = false;\n                i++;\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateRearBoundsOfTree = function (layout, rightTree, diff, dimensions) {\n        for (var j = 0; j < rightTree.length; j++) {\n            var childInfo = layout.graphNodes[rightTree[j]];\n            var child = layout.nameTable[rightTree[j]];\n            childInfo.x += diff;\n            childInfo.canMoveBy += diff;\n            if (j === rightTree.length - 1) {\n                //removed child dimensions call calculation, since that is not used\n                var childBnds = {\n                    x: childInfo.x, y: childInfo.y, right: childInfo.x +\n                        dimensions.width, bottom: childInfo.y + dimensions.height\n                };\n                var intersect = this.findIntersectingLevels(layout, childBnds, childInfo.actualLevel);\n                this.updateRearBounds(layout, null, [{ rBounds: childBnds }], childInfo.actualLevel, intersect);\n            }\n        }\n    };\n    HierarchicalTree.prototype.splitRows = function (rows, leftTree, rightTree) {\n        for (var i = 0; i < rows.length; i++) {\n            leftTree[i] = [];\n            rightTree[i] = [];\n            var half = void 0;\n            half = rows[i].length;\n            if (rows[i].length % 2 !== 1) {\n                half = Math.ceil(rows[i].length / 2);\n                for (var k = 0; k < half; k++) {\n                    leftTree[i].push(rows[i][k]);\n                }\n            }\n            for (var j = leftTree[i].length; j < rows[i].length; j++) {\n                rightTree[i].push(rows[i][j]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateVerticalTree = function (layout, shape, x, y, level, dontUpdate) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var oddBounds;\n        var evenBounds;\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.tree.children[0]];\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        var factor = info.tree.type === 'Left' ? -1 : 0;\n        var right = x;\n        var bottom = y;\n        var lev;\n        lev = level;\n        var i;\n        var intersect;\n        var type;\n        var levels = [];\n        var oddLevels = [];\n        var canMoveBy;\n        var diff;\n        for (i = 0; i < info.tree.children.length; i++) {\n            if (info.tree.type === 'Alternate') {\n                //arrange at both left and right\n                type = (i % 2 === 0 && info.tree.children.length > 2) ? 'Left' : 'Right';\n                factor = (i % 2 === 0 && info.tree.children.length > 2) ? -1 : 0;\n            }\n            right = x + this.findOffset(layout, shape, info, type);\n            child = layout.nameTable[info.tree.children[i]];\n            childWidth = h ? child.actualSize.height : child.actualSize.width;\n            childHeight = h ? child.actualSize.width : child.actualSize.height;\n            //Update sub tree\n            childBounds = this.updateTree(layout, right + factor * childWidth, bottom, child, level + 1, undefined, true);\n            childInfo = layout.graphNodes[child.id];\n            actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n            if (i === 0) {\n                this.uniteRects(childBounds, actBounds);\n                bounds = childBounds;\n            }\n            else {\n                this.uniteRects(bounds, childBounds);\n            }\n            //Check and adjust the space left from previous subtree/sibling\n            if (childInfo.prevBounds && !(info.tree.type === 'Alternate' && i % 2 === 1 && info.tree.children.length > 2)) {\n                canMoveBy = canMoveBy !== undefined ? Math.min(childInfo.canMoveBy, canMoveBy) : childInfo.canMoveBy;\n            }\n            //Max level of the subtree node\n            info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n            if (!(info.tree.type === 'Alternate' && info.tree.children.length > 2 && i % 2 === 0)) {\n                if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                    //alternate - arrange children with even index(0,2,4,6,..) at the next level\n                    bottom = Math.max(childBounds.bottom, prevBounds.bottom) + layout.verticalSpacing / 2;\n                }\n                else {\n                    // left/right - arrange next child at the nect level(bottom)\n                    bottom = childBounds.bottom + layout.verticalSpacing / 2;\n                }\n                level = info.maxLevel;\n                levels.push({ rBounds: actBounds });\n                if (!evenBounds) {\n                    evenBounds = {\n                        x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth,\n                        bottom: childInfo.y + childHeight\n                    };\n                }\n                else {\n                    this.uniteRects(evenBounds, actBounds);\n                }\n                if (childInfo.levelBounds) {\n                    levels = levels.concat(childInfo.levelBounds);\n                }\n            }\n            else {\n                if (i !== 0) {\n                    bottom = prevBounds.bottom + layout.verticalSpacing / 2;\n                }\n                oddLevels.push({ rBounds: actBounds });\n                if (childInfo.levelBounds) {\n                    oddLevels = oddLevels.concat(childInfo.levelBounds);\n                }\n            }\n            if (i === 0) {\n                info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n            }\n            if (this.hasChild(layout, child)) {\n                if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                    if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                        var canMoveBy_1 = info.firstChild.canMoveBy;\n                        childInfo.canMoveBy = canMoveBy_1;\n                        layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy_1;\n                        info.firstChild.canMoveBy = canMoveBy_1;\n                    }\n                    info.firstChild = {\n                        x: childInfo.firstChild.x, canMoveBy: canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy,\n                        child: child.id\n                    };\n                }\n                else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                    info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                }\n            }\n            prevBounds = actBounds;\n        }\n        //To set level bounds(right most position of levels)\n        if (!dontUpdate) {\n            if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                oddBounds = {\n                    x: oddLevels[0].rBounds.x, y: oddLevels[0].rBounds.y,\n                    right: oddLevels[oddLevels.length - 1].rBounds.right, bottom: oddLevels[oddLevels.length - 1].rBounds.bottom\n                };\n                intersect = this.findIntersectingLevels(layout, oddBounds, lev + 1);\n                this.updateRearBounds(layout, null, oddLevels, lev + 1, intersect);\n            }\n            intersect = this.findIntersectingLevels(layout, evenBounds || bounds, lev + 1);\n            this.updateRearBounds(layout, null, evenBounds ? levels : [{ rBounds: bounds }], lev + 1, intersect);\n        }\n        else {\n            info.levelBounds = levels;\n        }\n        if (!isNaN(canMoveBy)) {\n            layout.graphNodes[firstChild.id].canMoveBy = canMoveBy;\n        }\n        info.childBounds = bounds;\n        info.mid = x;\n        return bounds;\n    };\n    HierarchicalTree.prototype.splitChildrenInRows = function (layout, shape) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var column;\n        column = 4;\n        var rows = [];\n        var childNodes;\n        childNodes = info.tree.children.length;\n        var children = this.extend(info.tree.children);\n        if (info.tree.rows) {\n            var count = void 0;\n            count = info.tree.children.length;\n            var columns = void 0;\n            columns = Math.ceil(count / info.tree.rows);\n            if (columns % 2 === 0) {\n                column = columns;\n            }\n            else {\n                column = columns + 1;\n            }\n        }\n        else if (info.tree.children.length === 3 || info.tree.children.length === 4) {\n            column = 2;\n        }\n        else if (info.tree.children.length === 5) {\n            column = 3;\n        }\n        while (childNodes > 0) {\n            rows[rows.length] = children.splice(0, column);\n            childNodes -= column;\n            if (childNodes < column) {\n                column = childNodes;\n            }\n        }\n        return rows;\n    };\n    HierarchicalTree.prototype.extend = function (temp) {\n        var i;\n        var dummy = [];\n        for (i = 0; i < temp.length; i++) {\n            dummy[i] = temp[i];\n        }\n        return dummy;\n    };\n    HierarchicalTree.prototype.findOffset = function (layout, shape, info, type) {\n        var offset = 0;\n        var space = (layout.orientation.indexOf('Left') !== -1) ? shape.actualSize.height :\n            shape.actualSize.width;\n        var treeType = type ? type : info.tree.type;\n        offset = info.tree.offset || 20;\n        if (info.tree.type === 'Alternate') {\n            if (offset >= layout.horizontalSpacing) {\n                offset = layout.horizontalSpacing / 2;\n            }\n        }\n        switch (treeType) {\n            case 'Left':\n                offset = space / 2 - offset;\n                break;\n            case 'Right':\n                offset = offset + space / 2;\n                break;\n        }\n        return offset;\n    };\n    HierarchicalTree.prototype.uniteRects = function (rect1, rect2) {\n        //Unite two rects\n        rect1.x = Math.min(rect1.x, rect2.x);\n        rect1.right = Math.max(rect1.right, rect2.right);\n        rect1.bottom = Math.max(rect1.bottom, rect2.bottom);\n    };\n    HierarchicalTree.prototype.spaceLeftFromPrevSubTree = function (layout, shape, bounds) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var dif;\n        var prevBounds;\n        var intersect;\n        var k;\n        var space;\n        space = layout.horizontalSpacing;\n        //Find the minimum distance to move towards previous sub tree\n        for (k = 0; k < info.intersect.length; k++) {\n            prevBounds = layout.levels[info.intersect[k]].rBounds;\n            dif = bounds.x - (prevBounds.right + space);\n            if (info.diff === undefined || dif < info.diff) {\n                info.diff = dif;\n                info.prevBounds = layout.levels[info.intersect[k]].rBounds;\n            }\n        }\n    };\n    HierarchicalTree.prototype.findIntersectingLevels = function (layout, bounds, level, actualLevel) {\n        //intersecting with exact Level\n        var bnds;\n        bnds = { x: bounds.x, y: bounds.y, right: bounds.right, bottom: bounds.bottom };\n        bnds.y -= layout.verticalSpacing / 2;\n        bnds.bottom += layout.verticalSpacing / 2;\n        var intersectingLevels;\n        intersectingLevels = [];\n        var rBounds;\n        var l;\n        l = actualLevel !== undefined ? actualLevel : level;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        //Performance - We can consider only the intersecting levels\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y)\n                || (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y &&\n                    bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                var index = 0;\n                intersectingLevels.splice(index, 0, l);\n            }\n            else if (rBounds && rBounds.bottom < bnds.y) {\n                break;\n            }\n            l--;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l >= 0);\n        l = (actualLevel !== undefined ? actualLevel : level) + 1;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y) ||\n                (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y && bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                intersectingLevels.push(l);\n            }\n            else if (rBounds && rBounds.y > bnds.bottom) {\n                break;\n            }\n            l++;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l <= layout.levels.length);\n        return intersectingLevels;\n    };\n    HierarchicalTree.prototype.findLevel = function (layout, bounds, level) {\n        var bnds;\n        bnds = bounds;\n        var l;\n        l = 0;\n        var rBounds;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        while (l < layout.levels.length) {\n            if (rBounds && bnds.bottom < rBounds.y) {\n                return l;\n            }\n            else {\n                l++;\n            }\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        }\n        return l;\n    };\n    HierarchicalTree.prototype.getParentNode = function (layout, node) {\n        //Return the first parent node\n        return layout.nameTable[layout.nameTable[node.inEdges[0]].sourceID];\n    };\n    HierarchicalTree.prototype.updateEdges = function (layout, node, depth, action) {\n        var layoutInfo;\n        layoutInfo = layout.graphNodes[node.id];\n        var j;\n        if (node.outEdges && node.outEdges.length && (node.isExpanded || (action === DiagramAction.Render))) {\n            for (j = 0; j < node.outEdges.length; j++) {\n                var edge = void 0;\n                edge = layout.nameTable[layout.nameTable[node.outEdges[j]].targetID];\n                if (!edge.excludeFromLayout) {\n                    if (layoutInfo.tree.children.indexOf(edge.id) === -1) {\n                        layoutInfo.tree.children.push(edge.id);\n                    }\n                    if (edge.outEdges && edge.outEdges.length && edge.isExpanded) {\n                        layoutInfo.tree.hasSubTree = true;\n                    }\n                    this.updateEdges(layout, edge, depth + 1, action);\n                }\n            }\n        }\n        //set level info\n        layoutInfo.tree.level = depth;\n        //By default, orientation is horizontal for nested trees\n        if (layoutInfo.tree.hasSubTree) {\n            layoutInfo.tree.orientation = 'Horizontal';\n            layoutInfo.tree.type = 'Center';\n        }\n        //Customizing assistants and children collection\n        //Performance-Instead of reading the method everytime, we can set once and can reuse that\n        if (layout.getLayoutInfo && layout.type === 'OrganizationalChart') {\n            layout.getLayoutInfo(node, layoutInfo.tree);\n            if (layoutInfo.tree.type === 'Balanced' && layoutInfo.tree.hasSubTree) {\n                layoutInfo.tree.type = 'Center';\n                layoutInfo.tree.orientation = 'Horizontal';\n            }\n        }\n        if (layout.level && layoutInfo.tree.type !== 'Alternate' && depth >= layout.level) {\n            layoutInfo.tree.hasSubTree = false;\n        }\n    };\n    HierarchicalTree.prototype.updateAnchor = function (layout, bounds, viewPort) {\n        var node;\n        var fixedNode;\n        var width = 0;\n        var height = 0;\n        var mod = 0;\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        var layoutBounds;\n        layoutBounds = layout.bounds ? layout.bounds : viewPortBounds;\n        var orientation = layout.orientation;\n        //Anchor based on fixed nodes\n        if (layout.fixedNode) {\n            fixedNode = layout.nameTable[layout.fixedNode];\n            width = fixedNode.actualSize.width;\n            height = fixedNode.actualSize.height;\n            layout.anchorX = fixedNode.offsetX;\n            layout.anchorY = fixedNode.offsetY;\n            var pivot = fixedNode.pivot;\n            layout.anchorX += layout.orientation === 'RightToLeft' ? width * pivot.x : -width * pivot.x;\n            layout.anchorY += layout.orientation === 'BottomToTop' ? height * pivot.y : -height * pivot.y;\n            node = fixedNode;\n            mod = 0;\n            while (node.inEdges.length) {\n                node = this.getParentNode(layout, node);\n                mod += layout.graphNodes[node.id].subTreeTranslation || 0;\n            }\n            if (layout.orientation.indexOf('Left') !== -1) {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].y;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].x + mod;\n            }\n            else {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].x + mod;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].y;\n            }\n        }\n        else {\n            if (orientation === 'TopToBottom' || orientation === 'BottomToTop') {\n                switch (layout.horizontalAlignment) {\n                    case 'Left':\n                        layout.anchorX = (layoutBounds.x - bounds.x) + layout.margin.left;\n                        break;\n                    case 'Right':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width - layout.margin.right - bounds.right;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Auto':\n                    case 'Top':\n                        var top_1;\n                        top_1 = layoutBounds.y + layout.margin.top;\n                        layout.anchorY = orientation === 'TopToBottom' ? top_1 : bounds.bottom + top_1;\n                        break;\n                    case 'Bottom':\n                        var bottom = void 0;\n                        bottom = layoutBounds.y + layoutBounds.height - layout.margin.bottom;\n                        layout.anchorY = orientation === 'TopToBottom' ? bottom - bounds.bottom : bottom;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.y + layoutBounds.height / 2;\n                        layout.anchorY = layout.orientation === 'TopToBottom' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n            }\n            else {\n                switch (layout.horizontalAlignment) {\n                    case 'Auto':\n                    case 'Left':\n                        var left = void 0;\n                        left = layoutBounds.x + layout.margin.left;\n                        layout.anchorX = orientation === 'LeftToRight' ? left : bounds.bottom + left;\n                        break;\n                    case 'Right':\n                        var right = void 0;\n                        right = layoutBounds.x + layoutBounds.width - layout.margin.right;\n                        layout.anchorX = orientation === 'LeftToRight' ? right - bounds.bottom : right;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.width / 2 + layoutBounds.x;\n                        layout.anchorX = layout.orientation === 'LeftToRight' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Top':\n                        layout.anchorY = layoutBounds.y + layout.margin.top - bounds.x;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height / 2 - (bounds.right + bounds.x) / 2;\n                        break;\n                    case 'Bottom':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height - layout.margin.bottom - bounds.right;\n                        break;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateConnectors = function (layout, node, level) {\n        var i;\n        var info;\n        var nodeWidth;\n        var nodeHeight;\n        var targetWidth;\n        var targetHeight;\n        var length;\n        var offsetLen;\n        var points;\n        var segments;\n        var target;\n        var conn;\n        var relative;\n        var center;\n        var layoutProp;\n        //Route out edges\n        info = layout.graphNodes[node.id];\n        var direction;\n        if (node.outEdges.length) {\n            for (i = 0; i < node.outEdges.length; i++) {\n                conn = layout.nameTable[node.outEdges[i]];\n                conn.points = [];\n                target = layout.nameTable[conn.targetID];\n                if (conn.visible) {\n                    conn.visited = true;\n                    if (layout.getConnectorSegments) {\n                        segments = layout.getConnectorSegments(conn);\n                    }\n                    else {\n                        if (info && info.tree.children.indexOf(conn.targetID) !== -1) {\n                            conn.segments = [];\n                            if (layout.type === 'OrganizationalChart' && conn.type === 'Orthogonal') {\n                                this.updateSegments(layout, conn, node, target, i);\n                            }\n                        }\n                    }\n                    if (target && (target.isExpanded || this.hasChild(layout, target))) {\n                        this.updateConnectors(layout, target, level + 1);\n                    }\n                }\n            }\n        }\n        if (info && info.tree.assistants.length) {\n            //In-Edge routing of assistant nodes\n            for (i = 0; i < info.tree.assistants.length; i++) {\n                target = layout.nameTable[info.tree.assistants[i]];\n                conn = layout.nameTable[target.inEdges[0]];\n                this.get3Points(layout, node, target, conn);\n                if (target.isExpanded || this.hasChild(layout, target)) {\n                    this.updateConnectors(layout, target, level + 1);\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegments = function (layout, conn, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        //Connector routing - Horizontal layout orientation\n        if (info.tree.assistants.length) {\n            //Route in-edge of child node, if the parent has assistant\n            this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n        }\n        else {\n            //Route in-edge of child node\n            if (info.tree.orientation === 'Horizontal' && info.tree.type === 'Balanced') {\n                this.updateSegmentsForBalancedTree(layout, conn, node, target, i);\n            }\n            else {\n                if (info.tree.orientation === 'Horizontal') {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n                }\n                else {\n                    if (info.tree.offset < 5) {\n                        this.get5Points(layout, node, target, conn);\n                    }\n                    else {\n                        this.get3Points(layout, node, target, conn);\n                    }\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegmentsForBalancedTree = function (layout, connector, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        var center;\n        var relative;\n        if (info.tree.children.length === 5 && i > 2) {\n            relative = info.tree.children[1];\n            if (isNaN(layout.graphNodes[relative].treeWidth)) {\n                layout.graphNodes[relative].treeWidth = layout.nameTable[relative].actualSize.width;\n            }\n            var factor = i !== 3 ? 1 : -1;\n            if (layout.orientation.indexOf('Left') !== -1) {\n                center = layout.nameTable[relative].offsetY - layout.graphNodes[relative].treeWidth / 2 -\n                    (layout.verticalSpacing * factor / 2);\n            }\n            else {\n                center = layout.nameTable[relative].offsetX +\n                    layout.graphNodes[relative].treeWidth / 2 + (layout.horizontalSpacing * factor) / 2;\n            }\n            this.getSegmentsForMultipleRows(layout, node, target, connector);\n        }\n        else {\n            if (info.tree.children.length > 5) {\n                if (i < 4) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else if (info.tree.children.length === 4) {\n                if (i < 2) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else {\n                this.getSegmentsForMultipleRows(layout, node, target, connector);\n            }\n        }\n    };\n    HierarchicalTree.prototype.get3Points = function (layout, node, target, connector) {\n        var points = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        if (layout.orientation.indexOf('Top') !== -1) {\n            var startingPoint = layout.orientation.indexOf('Top') === 0 ? nodeBounds.bottomCenter :\n                nodeBounds.topCenter;\n            var endPoint = node.offsetX > target.offsetX ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: nodeBounds.bottomCenter.x, y: endPoint.y }, endPoint);\n        }\n        else {\n            var startingPoint = layout.orientation.indexOf('Left') === 0 ? nodeBounds.middleRight :\n                nodeBounds.middleLeft;\n            var endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            points.push(startingPoint, { x: targetBounds.bottomCenter.x, y: nodeBounds.middleRight.y }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.get5Points = function (layout, node, target, connector) {\n        var points = [];\n        var layoutprop;\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        var info = layout.graphNodes[node.id];\n        var startingPoint;\n        var endPoint;\n        var horizontalSpacing;\n        var verticalSpacing;\n        if (layout.orientation.indexOf('Top') !== -1) {\n            startingPoint = (node.offsetY < target.offsetY) ? nodeBounds.bottomCenter : nodeBounds.topCenter;\n            verticalSpacing = layout.verticalSpacing / 4 * ((node.offsetY < target.offsetY) ? 1 : -1);\n            horizontalSpacing = layout.horizontalSpacing / 2 * ((node.offsetX > target.offsetX) ? 1 : -1);\n            endPoint = (node.offsetX > target.offsetX) ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: startingPoint.x, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: endPoint.y }, endPoint);\n        }\n        else {\n            startingPoint = (node.offsetX > target.offsetX) ? nodeBounds.middleLeft : nodeBounds.middleRight;\n            endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            horizontalSpacing = layout.horizontalSpacing / 4 * ((node.offsetX < target.offsetX) ? 1 : -1);\n            verticalSpacing = layout.verticalSpacing / 2 * ((node.offsetY > target.offsetY) ? 1 : -1);\n            points.push(startingPoint, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y }, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x, y: startingPoint.y + verticalSpacing }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.getSegmentsFromPoints = function (points, connector) {\n        var segments = [];\n        var segment;\n        for (var i = 0; i < points.length - 2; i++) {\n            segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n            segment.direction = Point.direction(points[i], points[i + 1]);\n            segment.length = Point.distancePoints(points[i], points[i + 1]);\n            segments.push(segment);\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.getSegmentsForMultipleRows = function (layout, node, target, connector) {\n        var points = [];\n        var segments = [];\n        var point;\n        var segment;\n        var targetBounds = this.getBounds(target);\n        var nodeBounds = this.getBounds(node);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.topCenter.y - layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: nodeBounds.middleRight.y, };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point, point3);\n                    segment.length = Point.distancePoints(point, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point_1 = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point_1, point_1);\n                    segment.length = Point.distancePoints(point_1, point_1);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.updateSegmentsForHorizontalOrientation = function (layout, node, target, connector) {\n        var points = [];\n        var point2;\n        var segment;\n        var segments = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point2 = { x: nodeBounds.bottomCenter.x, y: (targetBounds.topCenter.y - layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point2);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point2 = { x: nodeBounds.topCenter.x, y: (targetBounds.bottomCenter.y + layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point2);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point2 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point3);\n                    segment.length = Point.distancePoints(point2, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point2 = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point);\n                    segment.length = Point.distancePoints(point2, point);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n        return points;\n    };\n    HierarchicalTree.prototype.updateNodes = function (layout, node, mod, update, dx, dy) {\n        var i;\n        var child;\n        var width;\n        var height;\n        var offsetX;\n        var offsetY;\n        if (node && !node.excludeFromLayout) {\n            width = node.actualSize.width;\n            height = node.actualSize.height;\n            offsetX = layout.anchorX;\n            offsetY = layout.anchorY;\n            /*Performance - instead of checking conditions for every node, we can make the layout related\n            conditions once and we can reuse them*/\n            if (layout.orientation === 'LeftToRight') {\n                offsetX += layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'RightToLeft') {\n                offsetX -= layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'TopToBottom') {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY += layout.graphNodes[node.id].y + height / 2;\n            }\n            else {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY -= layout.graphNodes[node.id].y + height / 2;\n            }\n            if (layout.graphNodes) {\n                dx = dx ? dx : 0;\n                dy = dy ? dy : 0;\n                offsetX += dx;\n                offsetY += dy;\n                if (!this.isAnimation) {\n                    node.offsetX = offsetX;\n                    node.offsetY = offsetY;\n                }\n            }\n            var objects = { id: node.id, differenceX: offsetX - node.offsetX, differenceY: offsetY - node.offsetY };\n            layout.objects.push(objects);\n            var list = void 0;\n            list = [];\n            if (this.hasChild(layout, node)) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.children.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.children[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), update, dx, dy);\n                    list.push(child);\n                }\n            }\n            if (layout.graphNodes[node.id].tree.assistants.length) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.assistants.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.assistants[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), null, dx, dy);\n                }\n            }\n        }\n    };\n    return HierarchicalTree;\n}());\nexport { HierarchicalTree };\n","import { Rect } from '../primitives/rect';\nimport { getFunction } from '../utility/base-util';\nimport { HierarchicalTree } from './hierarchical-tree';\n/**\n * Layout for mind-map tree\n */\nvar MindMap = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function MindMap() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    MindMap.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    MindMap.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'MindMapChart';\n    };\n    /**   @private  */\n    MindMap.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewPort, uniqueId, root) {\n        var isRoot;\n        isRoot = this.checkRoot(nodes, layoutProp, uniqueId, root, nameTable);\n        if (isRoot) {\n            layoutProp.fixedNode = isRoot;\n        }\n        else {\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var node = nodes_1[_i];\n                if (!node.excludeFromLayout) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        layoutProp.fixedNode = node.id;\n                        break;\n                    }\n                }\n            }\n        }\n        var rootNode = nameTable[layoutProp.fixedNode];\n        var fistLevelNodes = this.findFirstLevelNodes(rootNode, layoutProp, nameTable);\n        var leftNodes = [];\n        var rightNodes = [];\n        var getMindmapBranch = getFunction(layoutProp.getBranch);\n        getMindmapBranch = getMindmapBranch || getFunction(this.getBranch);\n        for (var _a = 0, fistLevelNodes_1 = fistLevelNodes; _a < fistLevelNodes_1.length; _a++) {\n            var node = fistLevelNodes_1[_a];\n            var align = getMindmapBranch(node, fistLevelNodes);\n            (align === 'Left') ? leftNodes.push(node) : rightNodes.push(node);\n        }\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        nameTable[layoutProp.fixedNode].offsetX = viewPortBounds.x + viewPortBounds.width / 2;\n        nameTable[layoutProp.fixedNode].offsetY = viewPortBounds.y + viewPortBounds.height / 2;\n        if (leftNodes.length) {\n            this.updateMindMapBranch(nodes, rightNodes, nameTable, layoutProp, viewPort, uniqueId, 'Left');\n        }\n        if (rightNodes.length) {\n            this.updateMindMapBranch(nodes, leftNodes, nameTable, layoutProp, viewPort, uniqueId, 'Right');\n        }\n    };\n    MindMap.prototype.checkRoot = function (nodes, layoutProp, uniqueId, root, nameTable) {\n        for (var _i = 0, nodes_2 = nodes; _i < nodes_2.length; _i++) {\n            var node = nodes_2[_i];\n            if (!node.excludeFromLayout) {\n                if (node.data && (node.data[uniqueId].toString() === root || node.data[uniqueId].toString()\n                    === layoutProp.root)) {\n                    return node.id;\n                }\n                else if (!node.data && node.id === layoutProp.root) {\n                    return node.id;\n                }\n            }\n        }\n        return '';\n    };\n    MindMap.prototype.updateMindMapBranch = function (nodes, excludeNodes, nameTable, layoutProp, viewPort, uniqueId, side) {\n        var layout;\n        layout = {\n            type: 'HierarchicalTree',\n            horizontalSpacing: layoutProp.verticalSpacing, verticalSpacing: layoutProp.horizontalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            root: layoutProp.fixedNode\n        };\n        layout.orientation = (side === 'Left') ? 'LeftToRight' : 'RightToLeft';\n        this.excludeFromLayout(excludeNodes, nameTable, true);\n        var mapLayout = new HierarchicalTree();\n        mapLayout.updateLayout(nodes, nameTable, layout, viewPort, uniqueId);\n        this.excludeFromLayout(excludeNodes, nameTable, false);\n    };\n    MindMap.prototype.getBranch = function (obj, firstLevelNodes) {\n        var side;\n        var i = firstLevelNodes.indexOf(obj);\n        if (i % 2 === 0) {\n            side = 'Left';\n        }\n        else {\n            side = 'Right';\n        }\n        return side;\n    };\n    MindMap.prototype.excludeFromLayout = function (newCollection, nameTable, exclude) {\n        for (var _i = 0, newCollection_1 = newCollection; _i < newCollection_1.length; _i++) {\n            var newcol = newCollection_1[_i];\n            var node = nameTable[newcol.id];\n            node.excludeFromLayout = exclude;\n        }\n    };\n    MindMap.prototype.findFirstLevelNodes = function (node, layout, nameTable) {\n        var parentNode;\n        var fistLevelNodes = [];\n        if (node && node.outEdges.length) {\n            for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n                var outEdge = _a[_i];\n                fistLevelNodes.push(nameTable[nameTable[outEdge].targetID]);\n            }\n        }\n        return fistLevelNodes;\n    };\n    return MindMap;\n}());\nexport { MindMap };\n","/**\n * Radial Tree\n */\nvar RadialTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function RadialTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    RadialTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    RadialTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'RadialTree';\n    };\n    /**   @private  */\n    RadialTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {}, layoutNodes: [],\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, nameTable, viewport);\n    };\n    RadialTree.prototype.doLayout = function (layout, nodes, nameTable, viewport) {\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                if (!node.inEdges || !node.inEdges.length) {\n                    layout.firstLevelNodes.push(node);\n                }\n            }\n        }\n        if (layout.root && nameTable[layout.root]) {\n            layout.centerNode = nameTable[layout.root];\n        }\n        else if (layout.firstLevelNodes.length) {\n            layout.centerNode = layout.firstLevelNodes[0];\n            layout.root = layout.centerNode.id;\n        }\n        if (layout.centerNode) {\n            this.updateEdges(layout, layout.centerNode, 0, nameTable);\n            this.depthFirstAllignment(layout, layout.centerNode, 0, 0);\n            this.populateLevels(layout);\n            this.transformToCircleLayout(layout);\n            this.updateAnchor(layout, viewport);\n            this.updateNodes(layout, layout.centerNode, nameTable);\n        }\n    };\n    RadialTree.prototype.updateEdges = function (layout, node, depth, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        layout.layoutNodes.push(nodeInfo);\n        nodeInfo.level = depth;\n        nodeInfo.visited = true;\n        layout.maxLevel = Math.max(layout.maxLevel, depth);\n        for (var j = 0; j < node.outEdges.length; j++) {\n            var edge = nameTable[nameTable[node.outEdges[j]].targetID];\n            if (!edge.excludeFromLayout && !edge.visited) {\n                nodeInfo.children.push(edge);\n                this.updateEdges(layout, edge, depth + 1, nameTable);\n            }\n        }\n    };\n    RadialTree.prototype.depthFirstAllignment = function (layout, node, x, y) {\n        var newValue;\n        var nodeInfo = layout.graphNodes[node.id];\n        if (nodeInfo.children.length) {\n            y += 300;\n            for (var i = 0; i < nodeInfo.children.length; i++) {\n                newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                x = newValue.x;\n                y = newValue.y;\n            }\n            nodeInfo.children = nodeInfo.children.sort(function (obj1, obj2) {\n                return layout.graphNodes[obj1.id].x - layout.graphNodes[obj2.id].x;\n            });\n            var min = layout.graphNodes[nodeInfo.children[0].id].min;\n            var max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].max;\n            nodeInfo.x = min + (max - min) / 2;\n            x = max + layout.horizontalSpacing;\n            nodeInfo.segmentOffset = max + layout.horizontalSpacing;\n            nodeInfo.x -= nodeInfo.width / 2;\n            nodeInfo.y -= nodeInfo.height / 2;\n            nodeInfo.min = min;\n            nodeInfo.max = max;\n            if (nodeInfo.x < min && nodeInfo.visited) {\n                nodeInfo.x = min;\n                x = nodeInfo.x + nodeInfo.width / 2 - (max - min) / 2;\n                nodeInfo.visited = false;\n                for (var i = 0; i < nodeInfo.children.length; i++) {\n                    newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                }\n                nodeInfo.visited = true;\n                x = nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n            }\n            max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].segmentOffset;\n            x = x < max ? max : x;\n            y -= 300;\n            nodeInfo.y = y;\n        }\n        else {\n            nodeInfo.x = x;\n            nodeInfo.y = y;\n            nodeInfo.min = x;\n            nodeInfo.max = x + nodeInfo.width;\n            x += nodeInfo.width + layout.horizontalSpacing;\n        }\n        return { x: x, y: y };\n    };\n    RadialTree.prototype.populateLevels = function (layout) {\n        var stages = [];\n        var min = Math.min.apply(Math, layout.layoutNodes.map(function (nodeInfo) { return nodeInfo.x; }));\n        var max = Math.max.apply(Math, layout.layoutNodes.map(function (nodeInfo) {\n            return nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n        }));\n        var full = max - min;\n        layout.levels = [];\n        var _loop_1 = function (i) {\n            stages = layout.layoutNodes.filter(function (nodeInfo) {\n                if (nodeInfo.level === i) {\n                    return nodeInfo;\n                }\n                else {\n                    return null;\n                }\n            });\n            var newlevel = {};\n            stages = stages.sort(function (nodeInfo1, nodeInfo2) { return nodeInfo1.x - nodeInfo2.x; });\n            newlevel.min = stages[0].x;\n            newlevel.max = stages[stages.length - 1].x + stages[stages.length - 1].width + layout.horizontalSpacing;\n            newlevel.actualCircumference = 0;\n            newlevel.height = 0;\n            for (var k = 0; k < stages.length; k++) {\n                if (stages[k].height > newlevel.height) {\n                    newlevel.height = stages[k].height;\n                }\n                newlevel.actualCircumference += Math.max(stages[k].width, stages[k].height);\n                if (k !== stages.length - 1) {\n                    newlevel.actualCircumference += layout.horizontalSpacing;\n                }\n            }\n            newlevel.circumference = newlevel.max - newlevel.min;\n            if (newlevel.actualCircumference < newlevel.circumference) {\n                newlevel.circumference = (newlevel.circumference + newlevel.actualCircumference) / 2;\n            }\n            newlevel.radius = newlevel.circumference / (2 * Math.PI) + newlevel.height;\n            newlevel.nodes = [];\n            if (i > 1) {\n                if (layout.levels[i - 1].radius + layout.levels[i - 1].height >= newlevel.radius) {\n                    newlevel.radius = layout.levels[i - 1].radius + layout.levels[i - 1].height;\n                }\n            }\n            for (var j = 0; j < stages.length; j++) {\n                stages[j].ratio = Math.abs(stages[j].x + stages[j].width / 2 - min) / full;\n                newlevel.nodes.push(stages[j]);\n            }\n            layout.levels.push(newlevel);\n        };\n        for (var i = 0; i <= layout.maxLevel; i++) {\n            _loop_1(i);\n        }\n    };\n    RadialTree.prototype.transformToCircleLayout = function (layout) {\n        var root = layout.graphNodes[layout.centerNode.id];\n        root.x = 0;\n        root.y = 0;\n        for (var i = 1; i < layout.levels.length; i++) {\n            for (var j = 0; j < layout.levels[i].nodes.length; j++) {\n                var nodeInfo = layout.levels[i].nodes[j];\n                nodeInfo.x = Math.cos(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                nodeInfo.y = Math.sin(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                layout.anchorX = Math.min(layout.anchorX, nodeInfo.x);\n                layout.anchorY = Math.min(layout.anchorY, nodeInfo.y);\n            }\n        }\n    };\n    RadialTree.prototype.updateAnchor = function (layout, viewPort) {\n        layout.anchorX = layout.centerNode.offsetX || viewPort.x / 2;\n        layout.anchorY = layout.centerNode.offsetY || viewPort.y / 2;\n    };\n    RadialTree.prototype.updateNodes = function (layout, node, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        var offsetX = nodeInfo.x + layout.anchorX;\n        var offsetY = nodeInfo.y + layout.anchorY;\n        node.offsetX += offsetX;\n        node.offsetY += offsetY;\n        for (var i = 0; i < nodeInfo.children.length; i++) {\n            var childInfo = nodeInfo.children[i];\n            this.updateNodes(layout, nameTable[childInfo.id], nameTable);\n        }\n    };\n    RadialTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.name = item.id;\n        info.x = 0;\n        info.y = 0;\n        info.min = 0;\n        info.max = 0;\n        info.width = item.actualSize.width;\n        info.height = item.actualSize.height;\n        info.children = [];\n        info.level = 0;\n        info.ratio = 0;\n        info.visited = false;\n        return info;\n    };\n    return RadialTree;\n}());\nexport { RadialTree };\n","/**\n * Connects diagram objects with layout algorithm\n */\nvar ComplexHierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the hierarchical tree layout module\n     * @private\n     */\n    function ComplexHierarchicalTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the hierarchical tree module\n     * @return {void}\n     * @private\n     */\n    ComplexHierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ComplexHierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'ComplexHierarchicalTree';\n    };\n    /**   @private  */\n    ComplexHierarchicalTree.prototype.doLayout = function (nodes, nameTable, layout, viewPort) {\n        new HierarchicalLayoutUtil().doLayout(nodes, nameTable, layout, viewPort);\n    };\n    ComplexHierarchicalTree.prototype.getLayoutNodesCollection = function (nodes) {\n        var nodesCollection = [];\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (node.inEdges.length + node.outEdges.length > 0) {\n                nodesCollection.push(node);\n            }\n        }\n        return nodesCollection;\n    };\n    return ComplexHierarchicalTree;\n}());\nexport { ComplexHierarchicalTree };\n/**\n * Utility that arranges the nodes in hierarchical structure\n */\nvar HierarchicalLayoutUtil = /** @class */ (function () {\n    function HierarchicalLayoutUtil() {\n        this.nameTable = {};\n        this.crossReduction = new CrossReduction();\n    }\n    /**\n     * Defines a vertex that is equivalent to a node object\n     */\n    HierarchicalLayoutUtil.prototype.createVertex = function (node, value, x, y, width, height) {\n        var geometry = { x: x, y: y, width: width, height: height };\n        var vertex = {\n            value: value, geometry: geometry, name: value, vertex: true,\n            inEdges: node.inEdges.slice(), outEdges: node.outEdges.slice()\n        };\n        return vertex;\n    };\n    /**\n     * Initializes the edges collection of the vertices\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdges = function (node) {\n        var edges = [];\n        if (node) {\n            for (var i = 0; node.inEdges.length > 0 && i < node.inEdges.length; i++) {\n                edges.push(this.nameTable[node.inEdges[i]]);\n            }\n            for (var i = 0; node.outEdges.length > 0 && i < node.outEdges.length; i++) {\n                edges.push(this.nameTable[node.outEdges[i]]);\n            }\n        }\n        return edges;\n    };\n    /**\n     * Finds the root nodes of the layout\n     */\n    HierarchicalLayoutUtil.prototype.findRoots = function (vertices) {\n        var roots = [];\n        var best = null;\n        var maxDiff = -100000;\n        for (var _i = 0, _a = Object.keys(vertices); _i < _a.length; _i++) {\n            var i = _a[_i];\n            var cell = vertices[i];\n            var conns = this.getEdges(cell);\n            var outEdges = 0;\n            var inEdges = 0;\n            for (var k = 0; k < conns.length; k++) {\n                var src = this.getVisibleTerminal(conns[k], true);\n                if (src.name === cell.name) {\n                    outEdges++;\n                }\n                else {\n                    inEdges++;\n                }\n            }\n            if (inEdges === 0 && outEdges > 0) {\n                roots.push(cell);\n            }\n            var diff = outEdges - inEdges;\n            if (diff > maxDiff) {\n                maxDiff = diff;\n                best = cell;\n            }\n        }\n        if (roots.length === 0 && best != null) {\n            roots.push(best);\n        }\n        return roots;\n    };\n    /**\n     * Returns the source/target vertex of the given connector\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getVisibleTerminal = function (edge, source) {\n        var terminalCache = this.nameTable[edge.targetID];\n        if (source) {\n            terminalCache = this.nameTable[edge.sourceID];\n        }\n        for (var i = 0; i < this.vertices.length; i++) {\n            if (this.vertices[i].name === terminalCache.id) {\n                return this.vertices[i];\n            }\n        }\n        return null;\n    };\n    /**\n     * Traverses each sub tree, ensures there is no cycle in traversing\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.traverse = function (vertex, directed, edge, currentComp, hierarchyVertices, filledVertices) {\n        if (vertex != null) {\n            var vertexID = vertex.name;\n            if ((filledVertices == null ? true : filledVertices[vertexID] != null)) {\n                if (currentComp[vertexID] == null) {\n                    currentComp[vertexID] = vertex;\n                }\n                if (filledVertices != null) {\n                    delete filledVertices[vertexID];\n                }\n                var edges = this.getEdges(vertex);\n                var edgeIsSource = [];\n                for (var i = 0; i < edges.length; i++) {\n                    edgeIsSource[i] = this.getVisibleTerminal(edges[i], true) === vertex;\n                }\n                for (var i = 0; i < edges.length; i++) {\n                    if (!directed || edgeIsSource[i]) {\n                        var next = this.getVisibleTerminal(edges[i], !edgeIsSource[i]);\n                        var netCount = 1;\n                        for (var j = 0; j < edges.length; j++) {\n                            if (j === i) {\n                                continue;\n                            }\n                            else {\n                                var isSource2 = edgeIsSource[j];\n                                var otherTerm = this.getVisibleTerminal(edges[j], !isSource2);\n                                if (otherTerm === next) {\n                                    if (isSource2) {\n                                        netCount++;\n                                    }\n                                    else {\n                                        netCount--;\n                                    }\n                                }\n                            }\n                        }\n                        if (netCount >= 0) {\n                            currentComp = this.traverse(next, directed, edges[i], currentComp, hierarchyVertices, filledVertices);\n                        }\n                    }\n                }\n            }\n            else {\n                if (currentComp[vertexID] == null) {\n                    // We've seen this vertex before, but not in the current component This component and the one it's in need to be merged\n                    for (var i = 0; i < hierarchyVertices.length; i++) {\n                        var comp = hierarchyVertices[i];\n                        if (comp[vertexID] != null) {\n                            for (var _i = 0, _a = Object.keys(comp); _i < _a.length; _i++) {\n                                var key = _a[_i];\n                                currentComp[key] = comp[key];\n                            }\n                            // Remove the current component from the hierarchy set\n                            hierarchyVertices.splice(i, 1);\n                            return currentComp;\n                        }\n                    }\n                }\n            }\n        }\n        return currentComp;\n    };\n    /**\n     * Returns the bounds of the given vertices\n     */\n    HierarchicalLayoutUtil.prototype.getModelBounds = function (nodes) {\n        nodes = nodes.slice();\n        var rect = null;\n        var rect1 = null;\n        for (var i = 0; i < nodes.length; i++) {\n            rect = nodes[i].geometry;\n            if (rect1) {\n                var right = Math.max(rect1.x + rect1.width, rect.x + rect.width);\n                var bottom = Math.max(rect1.y + rect1.height, rect.y + rect.height);\n                rect1.x = Math.min(rect1.x, rect.x);\n                rect1.y = Math.min(rect1.y, rect.y);\n                rect1.width = right - rect1.x;\n                rect1.height = bottom - rect1.y;\n            }\n            else {\n                rect1 = { x: rect.x, y: rect.y, width: rect.width, height: rect.height };\n            }\n        }\n        return rect1;\n    };\n    /**\n     * Initializes the layouting process\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.doLayout = function (nodes, nameTable, layoutProp, viewPort) {\n        this.nameTable = nameTable;\n        var layout = {\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            orientation: layoutProp.orientation, marginX: layoutProp.margin.left, marginY: layoutProp.margin.top\n        };\n        if (layout.orientation === 'BottomToTop') {\n            layout.marginY = -layoutProp.margin.top;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            layout.marginX = -layoutProp.margin.left;\n        }\n        this.vertices = [];\n        var filledVertexSet = {};\n        for (var i = 0; i < nodes.length; i++) {\n            var node = this.createVertex(nodes[i], nodes[i].id, 0, 0, nodes[i].actualSize.width, nodes[i].actualSize.height);\n            this.vertices.push(node);\n            filledVertexSet[node.name] = node;\n        }\n        var hierarchyVertices = [];\n        var candidateRoots;\n        candidateRoots = this.findRoots(filledVertexSet);\n        for (var i = 0; i < candidateRoots.length; i++) {\n            var vertexSet = {};\n            hierarchyVertices.push(vertexSet);\n            this.traverse(candidateRoots[i], true, null, vertexSet, hierarchyVertices, filledVertexSet);\n        }\n        var limit = { marginX: 0, marginY: 0 };\n        for (var i = 0; i < hierarchyVertices.length; i++) {\n            var vertexSet = hierarchyVertices[i];\n            var tmp = [];\n            for (var _i = 0, _a = Object.keys(vertexSet); _i < _a.length; _i++) {\n                var key = _a[_i];\n                tmp.push(vertexSet[key]);\n            }\n            var model = new MultiParentModel(this, tmp, candidateRoots, layout);\n            this.cycleStage(model);\n            this.layeringStage(model);\n            this.crossingStage(model);\n            limit = this.placementStage(model, limit.marginX, limit.marginY);\n        }\n        var modelBounds = this.getModelBounds(this.vertices);\n        var trnsX = (viewPort.x - modelBounds.width) / 2;\n        for (var i = 0; i < this.vertices.length; i++) {\n            var clnode = this.vertices[i];\n            if (clnode) { //Check what is node.source/node.target -  && !clnode.source && !clnode.target) {\n                var dnode = this.nameTable[clnode.name];\n                dnode.offsetX = 0;\n                dnode.offsetY = 0;\n                //initialize layout\n                var dx = (clnode.geometry.x - (dnode.offsetX - (dnode.actualSize.width / 2))) + layout.marginX;\n                var dy = (clnode.geometry.y - (dnode.offsetY - (dnode.actualSize.height / 2))) + layout.marginY;\n                var x = dx;\n                var y = dy;\n                if (layout.orientation === 'BottomToTop') {\n                    y = modelBounds.height - dy;\n                }\n                else if (layout.orientation === 'RightToLeft') {\n                    x = modelBounds.width - dx;\n                }\n                x += trnsX;\n                dnode.offsetX += x - dnode.offsetX;\n                dnode.offsetY += y - dnode.offsetY;\n            }\n        }\n    };\n    /**\n     * Handles positioning the nodes\n     */\n    HierarchicalLayoutUtil.prototype.placementStage = function (model, marginX, marginY) {\n        var placementStage = this.coordinateAssignment(marginX, marginY, parent, model);\n        placementStage.model = model;\n        placementStage.widestRankValue = null;\n        this.placementStageExecute(placementStage);\n        return {\n            marginX: placementStage.marginX + model.layout.horizontalSpacing,\n            marginY: placementStage.marginY + model.layout.verticalSpacing\n        };\n    };\n    /**\n     * Initializes the layout properties for positioning\n     */\n    HierarchicalLayoutUtil.prototype.coordinateAssignment = function (marginX, marginY, parent, model) {\n        var plalementChange = {};\n        if (model.layout.orientation === 'TopToBottom' || model.layout.orientation === 'BottomToTop') {\n            plalementChange.horizontalSpacing = model.layout.horizontalSpacing;\n            plalementChange.verticalSpacing = model.layout.verticalSpacing;\n        }\n        else {\n            plalementChange.horizontalSpacing = model.layout.verticalSpacing;\n            plalementChange.verticalSpacing = model.layout.horizontalSpacing;\n        }\n        plalementChange.orientation = 'north';\n        //Removed the conditions here. So check here in case of any issue\n        plalementChange.marginX = plalementChange.marginX = marginX;\n        plalementChange.marginY = plalementChange.marginY = marginY;\n        return plalementChange;\n    };\n    /**\n     * Calculate the largest size of the node either height or width depends upon the layoutorientation\n     */\n    HierarchicalLayoutUtil.prototype.calculateWidestRank = function (plalementChange, graph, model) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var offset = -plalementChange.verticalSpacing;\n        var lastRankMaxCellSize = 0.0;\n        plalementChange.rankSizes = [];\n        plalementChange.rankOffset = [];\n        for (var rankValue = model.maxRank; rankValue >= 0; rankValue--) {\n            var maxCellSize = 0.0;\n            var rank = model.ranks[rankValue];\n            var localOffset = isHorizontal ? plalementChange.marginY : plalementChange.marginX;\n            for (var i = 0; i < rank.length; i++) {\n                var node = rank[i];\n                if (this.crossReduction.isVertex(node)) {\n                    var vertex = node;\n                    if (vertex.cell && (vertex.cell.inEdges || vertex.cell.outEdges)) {\n                        var obj = this.nameTable[vertex.cell.name];\n                        vertex.width = obj.actualSize.width;\n                        vertex.height = obj.actualSize.height;\n                        maxCellSize = Math.max(maxCellSize, (isHorizontal ? vertex.width : vertex.height));\n                    }\n                }\n                else {\n                    if (node) {\n                        var edge = node;\n                        var numEdges = 1;\n                        if (edge.edges != null) {\n                            numEdges = edge.edges.length;\n                        }\n                        node.width = (numEdges - 1) * 10;\n                    }\n                }\n                if (isHorizontal) {\n                    if (!node.height) {\n                        node.height = 0;\n                    }\n                }\n                // Set the initial x-value as being the best result so far\n                localOffset += (isHorizontal ? node.height : node.width) / 2.0;\n                this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n                this.setTempVariable(node, rankValue, localOffset);\n                localOffset += ((isHorizontal ? node.height : node.width) / 2.0) + plalementChange.horizontalSpacing;\n                if (localOffset > plalementChange.widestRankValue) {\n                    plalementChange.widestRankValue = localOffset;\n                    plalementChange.widestRank = rankValue;\n                }\n                plalementChange.rankSizes[rankValue] = localOffset;\n            }\n            plalementChange.rankOffset[rankValue] = offset;\n            var distanceToNextRank = maxCellSize / 2.0 + lastRankMaxCellSize / 2.0 + plalementChange.verticalSpacing;\n            lastRankMaxCellSize = maxCellSize;\n            if (plalementChange.orientation === 'north' || plalementChange.orientation === 'west') {\n                offset += distanceToNextRank;\n            }\n            else {\n                offset -= distanceToNextRank;\n            }\n            for (var i = 0; i < rank.length; i++) {\n                var cell = rank[i];\n                this.setXY(cell, rankValue, offset, isHorizontal ? false : true);\n            }\n        }\n    };\n    /**\n     * Sets the temp position of the node on the layer\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setTempVariable = function (node, layer, value) {\n        if (this.crossReduction.isVertex(node)) {\n            node.temp[0] = value;\n        }\n        else {\n            node.temp[layer - node.minRank - 1] = value;\n        }\n    };\n    /**\n     * Sets the position of the vertex\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setXY = function (node, layer, value, isY) {\n        if (node && node.cell) {\n            if (node.cell.inEdges || node.cell.outEdges) {\n                if (isY) {\n                    node.y[0] = value;\n                }\n                else {\n                    node.x[0] = value;\n                }\n            }\n            else {\n                if (isY) {\n                    node.y[layer - node.minRank - 1] = value;\n                }\n                else {\n                    node.x[layer - node.minRank - 1] = value;\n                }\n            }\n        }\n    };\n    /**\n     * Sets geometry position of the layout node on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.rankCoordinates = function (stage, rankValue, graph, model) {\n        var isHorizontal = false;\n        if (stage.model.layout.orientation === 'LeftToRight' || stage.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var rank = model.ranks[rankValue];\n        var maxOffset = 0.0;\n        var localOffset = (isHorizontal ? stage.marginY : stage.marginX) + (stage.widestRankValue - stage.rankSizes[rankValue]) / 2;\n        for (var i = 0; i < rank.length; i++) {\n            var node = rank[i];\n            if (this.crossReduction.isVertex(node)) {\n                var obj = this.nameTable[node.cell.name];\n                node.width = obj.actualSize.width;\n                node.height = obj.actualSize.height;\n                maxOffset = Math.max(maxOffset, node.height);\n            }\n            else {\n                var edge = node;\n                var numEdges = 1;\n                if (edge.edges != null) {\n                    numEdges = edge.edges.length;\n                }\n                if (isHorizontal) {\n                    node.height = (numEdges - 1) * 10;\n                }\n                else {\n                    node.width = (numEdges - 1) * 10;\n                }\n            }\n            var size = (isHorizontal ? node.height : node.width) / 2.0;\n            localOffset += size;\n            this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n            this.setTempVariable(node, rankValue, localOffset);\n            localOffset += (size + stage.horizontalSpacing);\n        }\n    };\n    /**\n     * sets the layout in an initial positioning.it will arange all the ranks as much as possible\n     */\n    HierarchicalLayoutUtil.prototype.initialCoords = function (plalementChange, facade, model) {\n        this.calculateWidestRank(plalementChange, facade, model);\n        // Reverse sweep direction each time from widest rank \n        for (var i = plalementChange.widestRank; i >= 0; i--) {\n            if (i < model.maxRank) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n        for (var i = plalementChange.widestRank + 1; i <= model.maxRank; i++) {\n            if (i > 0) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n    };\n    /**\n     * Checks whether the given node is an ancestor\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.isAncestor = function (node, otherNode) {\n        // Firstly, the hash code of this node needs to be shorter than the other node\n        if (otherNode != null && node.hashCode != null && otherNode.hashCode != null\n            && node.hashCode.length < otherNode.hashCode.length) {\n            if (node.hashCode === otherNode.hashCode) {\n                return true;\n            }\n            if (node.hashCode == null || node.hashCode == null) {\n                return false;\n            }\n            for (var i = 0; i < node.hashCode.length; i++) {\n                if (node.hashCode[i] !== otherNode.hashCode[i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * initializes the sorter object\n     */\n    HierarchicalLayoutUtil.prototype.weightedCellSorter = function (cell, weightedValue) {\n        var weightedCellSorter = {};\n        weightedCellSorter.cell = cell ? cell : null;\n        weightedCellSorter.weightedValue = weightedValue ? weightedValue : 0;\n        weightedCellSorter.visited = false;\n        weightedCellSorter.rankIndex = null;\n        return weightedCellSorter;\n    };\n    /**\n     * Performs one node positioning in both directions\n     */\n    HierarchicalLayoutUtil.prototype.minNode = function (plalementChange, model) {\n        var nodeList = [];\n        var map = { map: {} };\n        var rank = [];\n        for (var i = 0; i <= model.maxRank; i++) {\n            rank[i] = model.ranks[i];\n            for (var j = 0; j < rank[i].length; j++) {\n                var node = rank[i][j];\n                var nodeWrapper = this.weightedCellSorter(node, i);\n                nodeWrapper.rankIndex = j;\n                nodeWrapper.visited = true;\n                nodeList.push(nodeWrapper);\n                model.setDictionaryForSorter(map, node, nodeWrapper, true);\n            }\n        }\n        var maxTries = nodeList.length * 10;\n        var count = 0;\n        var tolerance = 1;\n        while (nodeList.length > 0 && count <= maxTries) {\n            var cellWrapper = nodeList.shift();\n            var cell = cellWrapper.cell;\n            var rankValue = cellWrapper.weightedValue;\n            var rankIndex = cellWrapper.rankIndex;\n            var nextLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue);\n            var previousLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue, true);\n            var nextConnectedCount = nextLayerConnectedCells.length;\n            var prevConnectedCount = previousLayerConnectedCells.length;\n            var medianNextLevel = this.medianXValue(plalementChange, nextLayerConnectedCells, rankValue + 1);\n            var medianPreviousLevel = this.medianXValue(plalementChange, previousLayerConnectedCells, rankValue - 1);\n            var numConnectedNeighbours = nextConnectedCount + prevConnectedCount;\n            var currentPosition = this.crossReduction.getTempVariable(cell, rankValue);\n            var cellMedian = currentPosition;\n            if (numConnectedNeighbours > 0) {\n                cellMedian = (medianNextLevel * nextConnectedCount + medianPreviousLevel * prevConnectedCount) / numConnectedNeighbours;\n            }\n            var positionChanged = false;\n            var tempValue = undefined;\n            if (cellMedian < currentPosition - tolerance) {\n                if (rankIndex === 0) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var leftCell = rank[rankValue][rankIndex - 1];\n                    var leftLimit = this.crossReduction.getTempVariable(leftCell, rankValue);\n                    leftLimit = leftLimit + leftCell.width / 2 + plalementChange.intraCellSpacing + cell.width / 2;\n                    if (leftLimit < cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (leftLimit < this.crossReduction.getTempVariable(cell, rankValue) - tolerance) {\n                        tempValue = leftLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            else if (cellMedian > currentPosition + tolerance) {\n                var rankSize = rank[rankValue].length;\n                if (rankIndex === rankSize - 1) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var rightCell = rank[rankValue][rankIndex + 1];\n                    var rightLimit = this.crossReduction.getTempVariable(rightCell, rankValue);\n                    rightLimit = rightLimit - rightCell.width / 2 - plalementChange.intraCellSpacing - cell.width / 2;\n                    if (rightLimit > cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (rightLimit > this.crossReduction.getTempVariable(cell, rankValue) + tolerance) {\n                        tempValue = rightLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            if (positionChanged) {\n                this.setTempVariable(cell, rankValue, tempValue);\n                // Add connected nodes to map and list\n                this.updateNodeList(nodeList, map, nextLayerConnectedCells, model);\n                this.updateNodeList(nodeList, map, previousLayerConnectedCells, model);\n            }\n            if (this.crossReduction.isVertex(cellWrapper.cell)) {\n                cellWrapper.visited = false;\n            }\n            count++;\n        }\n    };\n    /**\n     * Updates the ndoes collection\n     */\n    HierarchicalLayoutUtil.prototype.updateNodeList = function (nodeList, map, collection, model) {\n        for (var i = 0; i < collection.length; i++) {\n            var connectedCell = collection[i];\n            var connectedCellWrapper = model.getDictionaryForSorter(map, connectedCell);\n            if (connectedCellWrapper != null) {\n                if (connectedCellWrapper.visited === false) {\n                    connectedCellWrapper.visited = true;\n                    nodeList.push(connectedCellWrapper);\n                }\n            }\n        }\n    };\n    /**\n     * Calculates the node position of the connected cell on the specified rank\n     */\n    HierarchicalLayoutUtil.prototype.medianXValue = function (plalementChange, connectedCells, rankValue) {\n        if (connectedCells.length === 0) {\n            return 0;\n        }\n        var medianValues = [];\n        for (var i = 0; i < connectedCells.length; i++) {\n            medianValues[i] = this.crossReduction.getTempVariable(connectedCells[i], rankValue);\n        }\n        medianValues.sort(function (a, b) {\n            return a - b;\n        });\n        if (connectedCells.length % 2 === 1) {\n            return medianValues[Math.floor(connectedCells.length / 2)];\n        }\n        else {\n            var medianPoint = connectedCells.length / 2;\n            var leftMedian = medianValues[medianPoint - 1];\n            var rightMedian = medianValues[medianPoint];\n            return ((leftMedian + rightMedian) / 2);\n        }\n    };\n    /**\n     * Updates the geometry of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.placementStageExecute = function (plalementChange) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        plalementChange.jettyPositions = {};\n        var model = plalementChange.model;\n        isHorizontal ? plalementChange.currentYDelta = 0.0 : plalementChange.currentXDelta = 0.0;\n        this.initialCoords(plalementChange, { model: model }, model);\n        this.minNode(plalementChange, model);\n        var bestOffsetDelta = 100000000.0;\n        if (!plalementChange.maxIterations) {\n            plalementChange.maxIterations = 8;\n        }\n        for (var i = 0; i < plalementChange.maxIterations; i++) {\n            // if the total offset is less for the current positioning, \n            //there are less heavily angled edges and so the current positioning is used\n            if ((isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta) < bestOffsetDelta) {\n                for (var j = 0; j < model.ranks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setXY(cell, j, this.crossReduction.getTempVariable(cell, j), isHorizontal ? true : false);\n                    }\n                }\n                bestOffsetDelta = isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta;\n            }\n            isHorizontal ? plalementChange.currentYDelta = 0 : plalementChange.currentXDelta = 0;\n        }\n        this.setCellLocations(plalementChange, model);\n    };\n    /**\n     * sets the cell position in the after the layout operation\n     */\n    HierarchicalLayoutUtil.prototype.setCellLocations = function (plalementChange, model) {\n        var vertices = this.getValues(model.vertexMapper);\n        for (var i = 0; i < vertices.length; i++) {\n            this.setVertexLocation(plalementChange, vertices[i]);\n        }\n    };\n    /**\n     * used to specify the geometrical position of the layout model cell\n     */\n    HierarchicalLayoutUtil.prototype.garphModelsetVertexLocation = function (plalementChange, cell, x, y) {\n        var model = plalementChange.model;\n        var geometry = cell.geometry;\n        var result = null;\n        if (geometry != null) {\n            result = { x: x, y: y, width: geometry.width, height: geometry.height };\n            if (geometry.x !== x || geometry.y !== y) {\n                cell.geometry = result;\n            }\n        }\n        return result;\n    };\n    /**\n     * set the position of the specified node\n     */\n    HierarchicalLayoutUtil.prototype.setVertexLocation = function (plalementChange, cell) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var realCell = cell.cell;\n        var positionX = cell.x[0] - cell.width / 2;\n        var positionY = cell.y[0] - cell.height / 2;\n        this.garphModelsetVertexLocation(plalementChange, realCell, positionX, positionY);\n        if (isHorizontal) {\n            if (!plalementChange.marginY) {\n                plalementChange.marginY = 0;\n            }\n            plalementChange.marginY = Math.max(plalementChange.marginY, positionY + cell.height);\n        }\n        else {\n            if (!plalementChange.marginX) {\n                plalementChange.marginX = 0;\n            }\n            plalementChange.marginX = Math.max(plalementChange.marginX, positionX + cell.width);\n        }\n    };\n    /**\n     * get the specific value from the key value pair\n     */\n    HierarchicalLayoutUtil.prototype.getValues = function (mapper) {\n        var list = [];\n        if (mapper.map) {\n            for (var _i = 0, _a = Object.keys(mapper.map); _i < _a.length; _i++) {\n                var key = _a[_i];\n                list.push(mapper.map[key]);\n            }\n        }\n        return list;\n    };\n    /**\n     * Checks and reduces the crosses in between line segments\n     */\n    HierarchicalLayoutUtil.prototype.crossingStage = function (model) {\n        this.crossReduction.execute(model);\n    };\n    /**\n     * Initializes the ranks of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.layeringStage = function (model) {\n        this.initialRank(model);\n        this.fixRanks(model);\n    };\n    /**\n     * determine the initial rank for the each vertex on the relevent direction\n     */\n    HierarchicalLayoutUtil.prototype.initialRank = function (model) {\n        var startNodes = model.startNodes;\n        var internalNodes = model.getDictionaryValues(model.vertexMapper);\n        var startNodesCopy = startNodes.slice();\n        while (startNodes.length > 0) {\n            var internalNode = startNodes[0];\n            var layerDeterminingEdges = internalNode.connectsAsTarget;\n            var edgesToBeMarked = internalNode.connectsAsSource;\n            var allEdgesScanned = true;\n            var minimumLayer = 100000000;\n            for (var i = 0; i < layerDeterminingEdges.length; i++) {\n                var internalEdge = layerDeterminingEdges[i];\n                if (internalEdge.temp[0] === 5270620) {\n                    // This edge has been scanned, get the layer of the node on the other end\n                    var otherNode = internalEdge.source;\n                    minimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n                }\n                else {\n                    allEdgesScanned = false;\n                    break;\n                }\n            }\n            // If all edge have been scanned, assign the layer, mark all edges in the other direction and remove from the nodes list\n            if (allEdgesScanned) {\n                internalNode.temp[0] = minimumLayer;\n                if (!model.maxRank) {\n                    model.maxRank = 100000000;\n                }\n                model.maxRank = Math.min(model.maxRank, minimumLayer);\n                if (edgesToBeMarked != null) {\n                    for (var i = 0; i < edgesToBeMarked.length; i++) {\n                        var internalEdge = edgesToBeMarked[i];\n                        internalEdge.temp[0] = 5270620;\n                        // Add node on other end of edge to LinkedList of nodes to be analysed\n                        var otherNode = internalEdge.target;\n                        // Only add node if it hasn't been assigned a layer\n                        if (otherNode.temp[0] === -1) {\n                            startNodes.push(otherNode);\n                            // Mark this other node as neither being unassigned nor assigned \n                            //so it isn't added to this list again, but it's layer isn't used in any calculation.\n                            otherNode.temp[0] = -2;\n                        }\n                    }\n                }\n                startNodes.shift();\n            }\n            else {\n                // Not all the edges have been scanned, get to the back of the class and put the dunces cap on\n                var removedCell = startNodes.shift();\n                startNodes.push(internalNode);\n                if (removedCell === internalNode && startNodes.length === 1) {\n                    // This is an error condition, we can't get out of this loop. \n                    //It could happen for more than one node but that's a lot harder to detect. Log the error\n                    break;\n                }\n            }\n        }\n        for (var i = 0; i < internalNodes.length; i++) {\n            internalNodes[i].temp[0] -= model.maxRank;\n        }\n        for (var i = 0; i < startNodesCopy.length; i++) {\n            var internalNode = startNodesCopy[i];\n            var currentMaxLayer = 0;\n            var layerDeterminingEdges = internalNode.connectsAsSource;\n            for (var j = 0; j < layerDeterminingEdges.length; j++) {\n                var internalEdge = layerDeterminingEdges[j];\n                var otherNode = internalEdge.target;\n                internalNode.temp[0] = Math.max(currentMaxLayer, otherNode.temp[0] + 1);\n                currentMaxLayer = internalNode.temp[0];\n            }\n        }\n        model.maxRank = 100000000 - model.maxRank;\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     */\n    HierarchicalLayoutUtil.prototype.fixRanks = function (model) {\n        model.fixRanks();\n    };\n    /**\n     * used to determine any cyclic stage have been created on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.cycleStage = function (model) {\n        var seenNodes = {};\n        model.startNodes = [];\n        var unseenNodesArray = model.getDictionaryValues(model.vertexMapper);\n        var unseenNodes = [];\n        for (var i = 0; i < unseenNodesArray.length; i++) {\n            unseenNodesArray[i].temp[0] = -1;\n            unseenNodes[unseenNodesArray[i].id] = unseenNodesArray[i];\n        }\n        var rootsArray = null;\n        if (model.roots != null) {\n            var modelRoots = model.roots;\n            rootsArray = [];\n            for (var i = 0; i < modelRoots.length; i++) {\n                rootsArray[i] = model.getDictionary(model.vertexMapper, modelRoots[i]);\n                if (rootsArray[i] != null) {\n                    model.startNodes.push(rootsArray[i]);\n                }\n            }\n        }\n        model.visit('removeParentConnection', rootsArray, true, null, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n        var seenNodesCopy = model.clone(seenNodes, null, true);\n        model.visit('removeNodeConnection', unseenNodes, true, seenNodesCopy, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n    };\n    /**\n     * removes the edge from the given collection\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.remove = function (obj, array) {\n        var index = array.indexOf(obj);\n        if (index !== -1) {\n            array.splice(index, 1);\n        }\n        return obj;\n    };\n    /**\n     * Inverts the source and target of an edge\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.invert = function (connectingEdge, layer) {\n        var temp = connectingEdge.source;\n        connectingEdge.source = connectingEdge.target;\n        connectingEdge.target = temp;\n        connectingEdge.isReversed = !connectingEdge.isReversed;\n    };\n    /**\n     * used to get the edges between the given source and target\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdgesBetween = function (source, target, directed) {\n        directed = (directed != null) ? directed : false;\n        var edges = this.getEdges(source);\n        var result = [];\n        for (var i = 0; i < edges.length; i++) {\n            var src = this.getVisibleTerminal(edges[i], true);\n            var trg = this.getVisibleTerminal(edges[i], false);\n            if ((src === source && trg === target) || (!directed && src === target && trg === source)) {\n                result.push(edges[i]);\n            }\n        }\n        return result;\n    };\n    return HierarchicalLayoutUtil;\n}());\n/**\n * Handles position the objects in a hierarchical tree structure\n */\nvar MultiParentModel = /** @class */ (function () {\n    function MultiParentModel(layout, vertices, roots, dlayout) {\n        this.multiObjectIdentityCounter = 0;\n        //used to count the no of times the parent have been used\n        this.dfsCount = 0;\n        this.hierarchicalUtil = new HierarchicalLayoutUtil();\n        this.roots = roots;\n        this.vertexMapper = { map: {} };\n        var internalVertices = [];\n        this.layout = dlayout;\n        this.maxRank = 100000000;\n        this.hierarchicalLayout = layout;\n        this.createInternalCells(layout, vertices, internalVertices);\n        for (var i = 0; i < vertices.length; i++) {\n            var edges = internalVertices[i].connectsAsSource;\n            for (var j = 0; j < edges.length; j++) {\n                var internalEdge = edges[j];\n                var realEdges = internalEdge.edges;\n                if (realEdges != null && realEdges.length > 0) {\n                    var realEdge = realEdges[0];\n                    var targetCell = layout.getVisibleTerminal(realEdge, false);\n                    var internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    if (internalVertices[i] === internalTargetCell) {\n                        targetCell = layout.getVisibleTerminal(realEdge, true);\n                        internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    }\n                    if (internalTargetCell != null && internalVertices[i] !== internalTargetCell) {\n                        internalEdge.target = internalTargetCell;\n                        if (internalTargetCell.connectsAsTarget.length === 0) {\n                            internalTargetCell.connectsAsTarget = [];\n                        }\n                        if (internalTargetCell.connectsAsTarget.indexOf(internalEdge) < 0) {\n                            internalTargetCell.connectsAsTarget.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 1;\n        }\n    }\n    /**\n     * used to create the duplicate of the edges on the layout model\n     */\n    MultiParentModel.prototype.createInternalCells = function (layout, vertices, internalVertices) {\n        for (var i = 0; i < vertices.length; i++) {\n            internalVertices[i] = {\n                x: [], y: [], temp: [], cell: vertices[i],\n                id: vertices[i].name, connectsAsTarget: [], connectsAsSource: []\n            };\n            this.setDictionary(this.vertexMapper, vertices[i], internalVertices[i]);\n            var conns = layout.getEdges(vertices[i]);\n            internalVertices[i].connectsAsSource = [];\n            for (var j = 0; j < conns.length; j++) {\n                var cell = layout.getVisibleTerminal(conns[j], false);\n                if (cell !== vertices[i]) {\n                    var undirectedEdges = layout.getEdgesBetween(vertices[i], cell, false);\n                    var directedEdges = layout.getEdgesBetween(vertices[i], cell, true);\n                    if (undirectedEdges != null && undirectedEdges.length > 0 && directedEdges.length * 2 >= undirectedEdges.length) {\n                        var internalEdge = { x: [], y: [], temp: [], edges: undirectedEdges, ids: [] };\n                        for (var m = 0; m < undirectedEdges.length; m++) {\n                            internalEdge.ids.push(undirectedEdges[m].id);\n                        }\n                        internalEdge.source = internalVertices[i];\n                        if (!internalVertices[i].connectsAsSource) {\n                            internalVertices[i].connectsAsSource = [];\n                        }\n                        if (internalVertices[i].connectsAsSource.indexOf(internalEdge) < 0) {\n                            internalVertices[i].connectsAsSource.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 0;\n        }\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     * @private\n     */\n    MultiParentModel.prototype.fixRanks = function () {\n        var rankList = [];\n        this.ranks = [];\n        for (var i = 0; i < this.maxRank + 1; i++) {\n            rankList[i] = [];\n            this.ranks[i] = rankList[i];\n        }\n        var rootsArray = null;\n        if (this.roots != null) {\n            var oldRootsArray = this.roots;\n            rootsArray = [];\n            for (var i = 0; i < oldRootsArray.length; i++) {\n                var cell = oldRootsArray[i];\n                var internalNode = this.getDictionary(this.vertexMapper, cell);\n                rootsArray[i] = internalNode;\n            }\n        }\n        this.visit('updateMinMaxRank', rootsArray, false, null, { seenNodes: null, unseenNodes: null, rankList: rankList });\n    };\n    /**\n     * Updates the min/max rank of the layer\n     */\n    MultiParentModel.prototype.updateMinMaxRank = function (layer, seen, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var parent = data.parent;\n        var node = data.root;\n        var edge = data.edge;\n        var rankList = data.rankList;\n        if (!node.maxRank && node.maxRank !== 0) {\n            node.maxRank = -1;\n        }\n        if (!node.minRank && node.minRank !== 0) {\n            node.minRank = -1;\n        }\n        if (seen === 0 && node.maxRank < 0 && node.minRank < 0) {\n            rankList[node.temp[0]].push(node);\n            node.maxRank = node.temp[0];\n            node.minRank = node.temp[0];\n            node.temp[0] = rankList[node.maxRank].length - 1;\n        }\n        if (parent != null && edge != null) {\n            var parentToCellRankDifference = parent.maxRank - node.maxRank;\n            if (parentToCellRankDifference > 1) {\n                edge.maxRank = parent.maxRank;\n                edge.minRank = node.maxRank;\n                edge.temp = [];\n                edge.x = [];\n                edge.y = [];\n                for (var i = edge.minRank + 1; i < edge.maxRank; i++) {\n                    rankList[i].push(edge);\n                    this.hierarchicalUtil.setTempVariable(edge, i, rankList[i].length - 1);\n                }\n            }\n        }\n    };\n    /**\n     * used to store the value of th given key on the object\n     */\n    MultiParentModel.prototype.setDictionary = function (dic, key, value) {\n        var id = key.name;\n        if (!id) {\n            //  id = this._getDictionary(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to store the value of th given key on the object\n     * @private\n     */\n    MultiParentModel.prototype.setDictionaryForSorter = function (dic, key, value, flag) {\n        var id = key.id;\n        if (!id) {\n            //id = this._getDictionaryForSorter(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionary = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.name;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryForSorter = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.id;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get all the values of the dictionary object\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryValues = function (dic) {\n        var result = [];\n        for (var _i = 0, _a = Object.keys(dic.map); _i < _a.length; _i++) {\n            var key = _a[_i];\n            result.push(dic.map[key]);\n        }\n        return result;\n    };\n    /**\n     * used to visit all the entries on the given dictionary with given function\n     * @private\n     */\n    MultiParentModel.prototype.visit = function (visitor, dfsRoots, trackAncestors, seenNodes, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        // Run depth first search through on all roots\n        if (dfsRoots != null) {\n            for (var i = 0; i < dfsRoots.length; i++) {\n                var internalNode = dfsRoots[i];\n                if (internalNode != null) {\n                    if (seenNodes == null) {\n                        seenNodes = new Object();\n                    }\n                    data.parent = null;\n                    data.root = internalNode;\n                    data.edge = null;\n                    if (trackAncestors) {\n                        // Set up hash code for root\n                        internalNode.hashCode = [];\n                        internalNode.hashCode[0] = this.dfsCount;\n                        internalNode.hashCode[1] = i;\n                        this.extendedDfs(visitor, seenNodes, i, 0, data);\n                    }\n                    else {\n                        this.depthFirstSearch(visitor, seenNodes, 0, data);\n                    }\n                }\n            }\n            this.dfsCount++;\n        }\n    };\n    /**\n     * used to perform the depth fisrt search on the layout model\n     */\n    MultiParentModel.prototype.depthFirstSearch = function (visitor, seen, layer, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                // Copy the connects as source list so that visitors can change the original for edge direction inversions\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    // Root check is O(|roots|)\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.depthFirstSearch(visitor, seen, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * Updates the rank of the connection\n     */\n    MultiParentModel.prototype.updateConnectionRank = function (visitor, layer, seen, traversedList) {\n        var parent = traversedList.parent;\n        var root = traversedList.root;\n        var edge = traversedList.edge;\n        if (visitor === 'removeParentConnection' || visitor === 'removeNodeConnection') {\n            var remove = visitor === 'removeNodeConnection' ? true : false;\n            this.removeConnectionEdge(parent, root, edge, layer, traversedList, remove);\n        }\n        if (visitor === 'updateMinMaxRank') {\n            this.updateMinMaxRank(layer, seen, traversedList);\n        }\n    };\n    /**\n     * Removes the edge from the collection\n     */\n    MultiParentModel.prototype.removeConnectionEdge = function (parent, node, edge, layer, data, remove) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        if (this.hierarchicalUtil.isAncestor(node, parent)) {\n            this.hierarchicalUtil.invert(edge, 0);\n            this.hierarchicalUtil.remove(edge, parent.connectsAsSource);\n            if (remove) {\n                node.connectsAsSource.push(edge);\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n            }\n            else {\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n                node.connectsAsSource.push(edge);\n            }\n        }\n        seenNodes[node.id] = node;\n        delete unseenNodes[node.id];\n    };\n    /**\n     * the dfs extends the default version by keeping track of cells ancestors, but it should be only used when necessary\n     */\n    MultiParentModel.prototype.extendedDfs = function (visitor, seen, cHash, layer, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            if (parent != null) {\n                if (root.hashCode == null ||\n                    root.hashCode[0] !== parent.hashCode[0]) {\n                    var hashCodeLength = parent.hashCode.length + 1;\n                    root.hashCode = parent.hashCode.slice();\n                    root.hashCode[hashCodeLength - 1] = cHash;\n                }\n            }\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.extendedDfs(visitor, seen, i, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * used to clone the specified object ignoring all fieldnames in the given array of transient fields\n     * @private\n     */\n    MultiParentModel.prototype.clone = function (obj, transients, shallow) {\n        shallow = (shallow != null) ? shallow : false;\n        if (obj != null && typeof (obj.constructor) === 'function') {\n            var clonedObj = obj.constructor();\n            for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n                var i = _a[_i];\n                if (i !== 'layoutObjectId' && (transients == null || transients.indexOf(i) < 0)) {\n                    if (!shallow && typeof (obj[i]) === 'object') {\n                        //not used\n                        //  _clone[i] = $.extend(true, {}, obj[i]);\n                    }\n                    else {\n                        clonedObj[i] = obj[i];\n                    }\n                }\n            }\n            return clonedObj;\n        }\n        return null;\n    };\n    return MultiParentModel;\n}());\n/**\n * Defines how to reduce the crosses in between the line segments\n */\nvar CrossReduction = /** @class */ (function () {\n    function CrossReduction() {\n    }\n    /**\n     * used to calculate the number of edges crossing the layout model\n     * @param model\n     */\n    CrossReduction.prototype.calculateCrossings = function (model) {\n        var numRanks = model.ranks.length;\n        var totalCrossings = 0;\n        for (var i = 1; i < numRanks; i++) {\n            totalCrossings += this.calculateRankCrossing(i, model);\n        }\n        return totalCrossings;\n    };\n    /**\n     * used to get the temp value specified for the node or connector\n     * @private\n     */\n    CrossReduction.prototype.getTempVariable = function (node, layer) {\n        if (node) {\n            if (this.isVertex(node)) {\n                return node.temp[0];\n            }\n            else {\n                return node.temp[layer - node.minRank - 1];\n            }\n        }\n        return 0;\n    };\n    /**\n     * used to specify the number of conenctors crossing between the specified rank and its below rank\n     */\n    CrossReduction.prototype.calculateRankCrossing = function (i, model) {\n        var totalCrossings = 0;\n        var rank = model.ranks[i];\n        var previousRank = model.ranks[i - 1];\n        var tmpIndices = [];\n        // Iterate over the top rank and fill in the connection information\n        for (var j = 0; j < rank.length; j++) {\n            var node = rank[j];\n            var rankPosition = this.getTempVariable(node, i);\n            var connectedCells = this.getConnectedCellsOnLayer(node, i, true);\n            ///#### \n            var nodeIndices = [];\n            for (var k = 0; k < connectedCells.length; k++) {\n                var connectedNode = connectedCells[k];\n                var otherCellRankPosition = this.getTempVariable(connectedNode, i - 1);\n                nodeIndices.push(otherCellRankPosition);\n            }\n            nodeIndices.sort(function (x, y) { return x - y; });\n            tmpIndices[rankPosition] = nodeIndices;\n        }\n        var indices = [];\n        for (var j = 0; j < tmpIndices.length; j++) {\n            indices = indices.concat(tmpIndices[j]);\n        }\n        var firstIndex = 1;\n        while (firstIndex < previousRank.length) {\n            firstIndex <<= 1;\n        }\n        var treeSize = 2 * firstIndex - 1;\n        firstIndex -= 1;\n        var tree = [];\n        for (var j = 0; j < treeSize; ++j) {\n            tree[j] = 0;\n        }\n        for (var j = 0; j < indices.length; j++) {\n            var index = indices[j];\n            var treeIndex = index + firstIndex;\n            ++tree[treeIndex];\n            while (treeIndex > 0) {\n                if (treeIndex % 2) {\n                    totalCrossings += tree[treeIndex + 1];\n                }\n                treeIndex = (treeIndex - 1) >> 1;\n                ++tree[treeIndex];\n            }\n        }\n        return totalCrossings;\n    };\n    /**\n     * Calculates and reduces the crosses between line segments\n     * @private\n     */\n    CrossReduction.prototype.execute = function (model) {\n        // Stores initial ordering \n        this.nestedBestRanks = [];\n        for (var i = 0; i < model.ranks.length; i++) {\n            this.nestedBestRanks[i] = model.ranks[i].slice();\n        }\n        var iterationsWithoutImprovement = 0;\n        var currentBestCrossings = this.calculateCrossings(model);\n        for (var i = 0; i < 24 && iterationsWithoutImprovement < 2; i++) {\n            this.weightedMedian(i, model);\n            var candidateCrossings = this.calculateCrossings(model);\n            if (candidateCrossings < currentBestCrossings) {\n                currentBestCrossings = candidateCrossings;\n                iterationsWithoutImprovement = 0;\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        var obj = this.nestedBestRanks[j][cell.temp[0]];\n                        var check = true;\n                        if (cell.edges && obj && !obj.edges) {\n                            check = false;\n                        }\n                        if (obj && check) {\n                            this.nestedBestRanks[j][cell.temp[0]] = cell;\n                        }\n                    }\n                }\n            }\n            else {\n                // Increase count of iterations\n                iterationsWithoutImprovement++;\n                // Restore the best values to the cells\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setTempVariable(cell, j, k);\n                    }\n                }\n            }\n            if (currentBestCrossings === 0) {\n                break;\n            }\n        }\n        // Store the best rankings but in the model\n        var ranks = [];\n        var rankList = [];\n        for (var i = 0; i < model.maxRank + 1; i++) {\n            rankList[i] = [];\n            ranks[i] = rankList[i];\n        }\n        for (var i = 0; i < this.nestedBestRanks.length; i++) {\n            for (var j = 0; j < this.nestedBestRanks[i].length; j++) {\n                rankList[i].push(this.nestedBestRanks[i][j]);\n            }\n        }\n        model.ranks = ranks;\n    };\n    /**\n     * check whether the object is vertext or edge on the layout model.\n     * @private\n     */\n    CrossReduction.prototype.isVertex = function (node) {\n        if (node && node.cell && (node.cell.inEdges || node.cell.outEdges)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * used to move up or move down the node position on the adjacent ranks\n     */\n    CrossReduction.prototype.weightedMedian = function (iteration, model) {\n        // Reverse sweep direction each time through this method\n        var downwardSweep = (iteration % 2 === 0);\n        if (downwardSweep) {\n            for (var j = model.maxRank - 1; j >= 0; j--) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n        else {\n            for (var j = 1; j < model.maxRank; j++) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n    };\n    /**\n     * used to get the node next(up) connected to the specified node or connector\n     * @private\n     */\n    CrossReduction.prototype.getConnectedCellsOnLayer = function (cell, layer, isPrevious) {\n        if (isPrevious === void 0) { isPrevious = false; }\n        var connectedlayer = 'nextLayerConnectedCells';\n        var connectedAs = 'connectsAsTarget';\n        if (isPrevious) {\n            connectedlayer = 'previousLayerConnectedCells';\n            connectedAs = 'connectsAsSource';\n        }\n        if (cell) {\n            if (this.isVertex(cell)) {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    cell[connectedlayer][0] = [];\n                    for (var i = 0; i < cell[connectedAs].length; i++) {\n                        var edge = cell[connectedAs][i];\n                        if (edge.maxRank === undefined) {\n                            edge.maxRank = -1;\n                        }\n                        if (edge.maxRank === -1 || (isPrevious ? (edge.minRank === layer - 1) : (edge.maxRank === layer + 1))) {\n                            // Either edge is not in any rank or no dummy nodes in edge, add node of other side of edge\n                            cell[connectedlayer][0].push(isPrevious ? edge.target : edge.source);\n                        }\n                        else {\n                            // Edge spans at least two layers, add edge\n                            cell[connectedlayer][0].push(edge);\n                        }\n                    }\n                }\n                return cell[connectedlayer][0];\n            }\n            else {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    for (var i = 0; i < cell.temp.length; i++) {\n                        cell[connectedlayer][i] = [];\n                        if (i === (isPrevious ? 0 : (cell.temp.length - 1))) {\n                            cell[connectedlayer][i].push(isPrevious ? cell.target : cell.source);\n                        }\n                        else {\n                            cell[connectedlayer][i].push(cell);\n                        }\n                    }\n                }\n                return cell[connectedlayer][layer - cell.minRank - 1];\n            }\n        }\n        return null;\n    };\n    /**\n     * calculates the rank elements on the specified rank\n     * @private\n     */\n    CrossReduction.prototype.medianValue = function (connectedCells, rankValue) {\n        var medianValues = [];\n        var arrayCount = 0;\n        for (var i = 0; i < connectedCells.length; i++) {\n            var cell = connectedCells[i];\n            medianValues[arrayCount++] = this.getTempVariable(cell, rankValue);\n        }\n        // sorts numerical order sort\n        medianValues.sort(function (a, b) { return a - b; });\n        if (arrayCount % 2 === 1) {\n            // For odd numbers of adjacent vertices return the median\n            return medianValues[Math.floor(arrayCount / 2)];\n        }\n        else if (arrayCount === 2) {\n            return ((medianValues[0] + medianValues[1]) / 2.0);\n        }\n        else {\n            var medianPoint = arrayCount / 2;\n            var leftMedian = medianValues[medianPoint - 1] - medianValues[0];\n            var rightMedian = medianValues[arrayCount - 1]\n                - medianValues[medianPoint];\n            return (medianValues[medianPoint - 1] * rightMedian + medianValues[medianPoint] * leftMedian) / (leftMedian + rightMedian);\n        }\n    };\n    /**\n     * get the temp value of the specified layer\n     * @private\n     */\n    CrossReduction.prototype.setTempVariable = function (cell, layer, value) {\n        if (cell) {\n            cell.temp[0] = value;\n        }\n    };\n    /**\n     * used to minimize the node position on this rank and one of its adjacent ranks\n     */\n    CrossReduction.prototype.medianRank = function (rankValue, downwardSweep) {\n        var numCellsForRank = this.nestedBestRanks[rankValue].length;\n        var medianValues = [];\n        var reservedPositions = [];\n        for (var i = 0; i < numCellsForRank; i++) {\n            var cell = this.nestedBestRanks[rankValue][i];\n            var sorterEntry = { medianValue: 0 };\n            sorterEntry.cell = cell;\n            // Flip whether or not equal medians are flipped on up and down sweeps \n            //TODO re-implement some kind of nudge medianValues[i].nudge = !downwardSweep;\n            var nextLevelConnectedCells = void 0;\n            if (downwardSweep) {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue);\n            }\n            else {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue, true);\n            }\n            var nextRankValue = void 0;\n            downwardSweep ? nextRankValue = rankValue + 1 : nextRankValue = rankValue - 1;\n            if (nextLevelConnectedCells != null && nextLevelConnectedCells.length !== 0) {\n                sorterEntry.medianValue = this.medianValue(nextLevelConnectedCells, nextRankValue);\n                medianValues.push(sorterEntry);\n            }\n            else {\n                // Nodes with no adjacent vertices are flagged in the reserved array to \n                //indicate they should be left in their current position.\n                reservedPositions[this.getTempVariable(cell, rankValue)] = true;\n            }\n        }\n        medianValues.sort(this.compare);\n        // Set the new position of each node within the rank using its temp variable\n        for (var i = 0; i < numCellsForRank; i++) {\n            if (reservedPositions[i] == null && medianValues.length > 0) {\n                var cell = medianValues.shift().cell;\n                this.setTempVariable(cell, rankValue, i);\n            }\n        }\n    };\n    /**\n     * compares two values, it sends the values to the compare function,\n     * and sorts the values according to the returned (negative, zero, positive) value\n     */\n    CrossReduction.prototype.compare = function (a, b) {\n        if (a != null && b != null) {\n            if (b.medianValue > a.medianValue) {\n                return -1;\n            }\n            else if (b.medianValue < a.medianValue) {\n                return 1;\n            }\n        }\n        return 0;\n    };\n    return CrossReduction;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, CollectionFactory, ChildProperty, Event } from '@syncfusion/ej2-base';\nimport { Browser, EventHandler, Draggable, Collection } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { Accordion } from '@syncfusion/ej2-navigations';\nimport { Node, Connector, Shape, Size, Transform } from '../diagram/index';\nimport { DiagramRenderer, StackPanel, Margin } from '../diagram/index';\nimport { TextElement, Canvas, BpmnShape } from '../diagram/index';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\nimport { parentsUntil, createSvgElement, createHtmlElement, createMeasureElements } from '../diagram/utility/dom-util';\nimport { removeElementsByClass } from '../diagram/utility/dom-util';\nimport { scaleElement, arrangeChild, groupHasType, setUMLActivityDefaults } from '../diagram/utility/diagram-util';\nimport { getFunction, randomId } from '../diagram/utility/base-util';\nimport { getOuterBounds } from '../diagram/utility/connector';\nimport { Point } from '../diagram/primitives/point';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nvar getObjectType = function (obj) {\n    var conn = obj;\n    if (conn.sourcePoint || conn.targetPoint || conn.sourceID || conn.targetID\n        || conn.sourcePortID || conn.targetPortID || conn.sourceDecorator || conn.targetDecorator) {\n        return Connector;\n    }\n    if (obj.shape && (obj.shape instanceof Shape || obj.shape.type)) {\n        return Node;\n    }\n    return Node;\n};\n/**\n * A palette allows to display a group of related symbols and it textually annotates the group with its header.\n */\nvar Palette = /** @class */ (function (_super) {\n    __extends(Palette, _super);\n    function Palette() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Palette.prototype, \"height\", void 0);\n    __decorate([\n        Property(true)\n    ], Palette.prototype, \"expanded\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"iconCss\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"title\", void 0);\n    __decorate([\n        CollectionFactory(getObjectType)\n    ], Palette.prototype, \"symbols\", void 0);\n    return Palette;\n}(ChildProperty));\nexport { Palette };\n/**\n * customize the preview size and position of the individual palette items.\n */\nvar SymbolPreview = /** @class */ (function (_super) {\n    __extends(SymbolPreview, _super);\n    function SymbolPreview() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], SymbolPreview.prototype, \"offset\", void 0);\n    return SymbolPreview;\n}(ChildProperty));\nexport { SymbolPreview };\n/**\n * Represents the Symbol Palette Component.\n * ```html\n * <div id=\"symbolpalette\"></div>\n * <script>\n *  var palette = new SymbolPalatte({ allowDrag:true });\n *  palette.appendTo(\"#symbolpalette\");\n * </script>\n * ```\n */\n/**\n * The symbol palette control allows to predefine the frequently used nodes and connectors\n * and to drag and drop those nodes/connectors to drawing area\n */\nvar SymbolPalette = /** @class */ (function (_super) {\n    __extends(SymbolPalette, _super);\n    //region - protected methods \n    /**\n     * Constructor for creating the component\n     * @hidden\n     */\n    function SymbolPalette(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.symbolTable = {};\n        /**   @private  */\n        _this.childTable = {};\n        _this.info = 'info';\n        _this.laneTable = {};\n        _this.isExpand = false;\n        _this.isCollapsed = false;\n        /**\n         * helper method for draggable\n         * @return {void}\n         * @private\n         */\n        _this.helper = function (e) {\n            var clonedElement;\n            var id = e.sender.target.id.split('_container')[0];\n            var symbol = _this.symbolTable[id];\n            if (symbol && _this.selectedSymbol) {\n                _this.selectedSymbols = _this.selectedSymbol.id === symbol.id ? symbol : _this.selectedSymbol;\n                var position = _this.getMousePosition(e.sender);\n                clonedElement = _this.getSymbolPreview(_this.selectedSymbols, e.sender, _this.element);\n                clonedElement.setAttribute('paletteId', _this.element.id);\n            }\n            return clonedElement;\n        };\n        var child;\n        var node;\n        for (var i = 0; _this && _this.palettes && i < _this.palettes.length; i++) {\n            for (var j = 0; j < _this.palettes[i].symbols.length; j++) {\n                child = _this.palettes[i].symbols[j];\n                node = options.palettes[i].symbols[j];\n                if (child && child.shape.type === 'UmlActivity') {\n                    setUMLActivityDefaults(node, child);\n                }\n            }\n        }\n        return _this;\n    }\n    /**\n     * Refreshes the panel when the symbol palette properties are updated\n     * @param newProp Defines the new values of the changed properties\n     * @param oldProp Defines the old values of the changed properties\n     */\n    SymbolPalette.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var refresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                    this.element.style.width = this.width.toString();\n                    break;\n                case 'height':\n                    this.element.style.height = this.height.toString();\n                    break;\n                case 'symbolPreview':\n                    break;\n                case 'symbolWidth':\n                case 'symbolHeight':\n                case 'getSymbolInfo':\n                    refresh = true;\n                    break;\n                case 'enableSearch':\n                    if (newProp.enableSearch) {\n                        this.createTextbox();\n                    }\n                    else {\n                        var divElement = document.getElementById(this.element.id + '_search');\n                        if (divElement) {\n                            divElement.parentNode.removeChild(divElement);\n                        }\n                    }\n                    break;\n                case 'palettes':\n                    for (var _b = 0, _c = Object.keys(newProp.palettes); _b < _c.length; _b++) {\n                        var i = _c[_b];\n                        var index = Number(i);\n                        if (!this.accordionElement.items[index]) {\n                            this.accordionElement.items[index] = {\n                                header: newProp.palettes[index].title || '',\n                                expanded: newProp.palettes[index].expanded,\n                                iconCss: newProp.palettes[index].iconCss || ''\n                            };\n                        }\n                        if (newProp.palettes[index].iconCss !== undefined) {\n                            this.accordionElement.items[index].iconCss = newProp.palettes[index].iconCss || '';\n                            refresh = true;\n                        }\n                        if (newProp.palettes[index].expanded !== undefined) {\n                            if (!this.palettes[index].isInteraction) {\n                                this.accordionElement.items[index].expanded = newProp.palettes[index].expanded;\n                                refresh = true;\n                            }\n                            else {\n                                this.palettes[index].isInteraction = false;\n                            }\n                            this.isExpand = true;\n                            this.accordionElement.items[index].expanded = newProp.palettes[index].expanded;\n                            if (index === 0) {\n                                this.isCollapsed = true;\n                            }\n                            else {\n                                this.isCollapsed = false;\n                            }\n                        }\n                    }\n                    break;\n                case 'enableAnimation':\n                    if (!this.enableAnimation) {\n                        this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n                    }\n                    else {\n                        this.accordionElement.animation = { expand: { duration: 400 }, collapse: { duration: 400 } };\n                    }\n                    break;\n                case 'expandMode':\n                    this.accordionElement.expandMode = this.expandMode;\n                    refresh = true;\n                    break;\n                case 'allowDrag':\n                    this.allowDrag = newProp.allowDrag;\n                    if (!this.allowDrag) {\n                        this.draggable.helper = function () {\n                            return null;\n                        };\n                    }\n                    else {\n                        this.draggable.helper = this.helper;\n                    }\n                    break;\n            }\n        }\n        if (refresh) {\n            this.refreshPalettes();\n        }\n        if (this.isExpand && !refresh && this.isCollapsed) {\n            this.refresh();\n            for (var p = 0; p < this.palettes.length; p++) {\n                var paletteElement = this.palettes[p].id;\n                if (window[paletteElement]) {\n                    if (window[paletteElement].length > 1) {\n                        window[paletteElement][1].parentNode.removeChild(window[paletteElement][1]);\n                        window[paletteElement][1] = null;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    SymbolPalette.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    SymbolPalette.prototype.preRender = function () {\n        var _this = this;\n        this.element.style.overflow = 'auto';\n        this.element.style.height = this.height.toString();\n        this.element.style.width = this.width.toString();\n        if (this.enableSearch) {\n            this.createTextbox();\n        }\n        //create accordion element\n        var accordionDiv = createHtmlElement('div', { id: this.element.id + '_container' });\n        this.accordionElement = new Accordion({\n            expandMode: this.expandMode\n        });\n        if (!this.enableAnimation) {\n            this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n        }\n        this.accordionElement.expanded = function (args) {\n            var index = _this.accordionElement.items.indexOf(args.item);\n            _this.palettes[index].expanded = args.isExpanded;\n            _this.palettes[index].isInteraction = true;\n        };\n        this.element.appendChild(accordionDiv);\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        createMeasureElements();\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders nodes and connectors in the symbol palette\n     */\n    SymbolPalette.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.svgRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), true);\n        this.updatePalettes();\n        this.accordionElement.appendTo('#' + this.element.id + '_container');\n    };\n    /**\n     * To get Module name\n     *  @private\n     */\n    SymbolPalette.prototype.getModuleName = function () {\n        return 'SymbolPalette';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    SymbolPalette.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        return modules;\n    };\n    /**\n     * To destroy the symbol palette\n     * @return {void}\n     */\n    SymbolPalette.prototype.destroy = function () {\n        if (this.allowDrag) {\n            this.draggable.destroy();\n            this.unWireEvents();\n            this.notify('destroy', {});\n            _super.prototype.destroy.call(this);\n            var content = document.getElementById(this.element.id + '_container');\n            if (content) {\n                this.element.removeChild(content);\n                var measureElemnt = 'measureElement';\n                if (window[measureElemnt]) {\n                    window[measureElemnt].usageCount -= 1;\n                    if (window[measureElemnt].usageCount === 0) {\n                        window[measureElemnt].parentNode.removeChild(window[measureElemnt]);\n                        window[measureElemnt] = null;\n                    }\n                }\n            }\n            content = document.getElementById(this.element.id + '_search');\n            if (content) {\n                content.parentNode.removeChild(content);\n            }\n            this.element.classList.remove('e-symbolpalette');\n        }\n    };\n    //end region - protected methods\n    //region - private methods to render symbols\n    /**\n     * Method to initialize the items in the symbols\n     */\n    SymbolPalette.prototype.initSymbols = function (symbolGroup) {\n        var group = [];\n        var laneHeight = 0;\n        var laneWidth = 0;\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (symbol.shape.type === 'SwimLane') {\n                var swimLaneObj = symbol;\n                var swimLaneShape = symbol.shape;\n                var isHorizontal = (swimLaneShape.orientation === 'Horizontal') ? true : false;\n                if (swimLaneShape.isLane) {\n                    laneHeight = isHorizontal ? this.symbolHeight - this.symbolHeight / 2 : this.symbolHeight - this.symbolHeight / 4;\n                    laneWidth = isHorizontal ? this.symbolWidth - this.symbolWidth / 4 : this.symbolWidth - this.symbolWidth / 2;\n                    this.laneTable[symbol.id] = { height: laneHeight, width: laneWidth };\n                    var header = swimLaneShape.lanes[0].header;\n                    var laneStyle = swimLaneShape.lanes[0].style;\n                    var headerStyle = header.style;\n                    var headerObj = {\n                        id: 'header' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? header.width : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : header.height,\n                        style: headerStyle,\n                        annotations: [{ content: header.annotation.content }]\n                    };\n                    headerObj.offsetX = headerObj.width / 2;\n                    headerObj.offsetY = headerObj.height / 2;\n                    this.addPaletteItem(symbolGroup.id, headerObj);\n                    var laneObj = {\n                        id: 'lane' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? (swimLaneObj.width - header.width) : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : (swimLaneObj.height - header.height),\n                        style: laneStyle\n                    };\n                    laneObj.offsetX = isHorizontal ? (headerObj.width + (laneObj.width / 2)) : laneObj.width / 2;\n                    laneObj.offsetY = isHorizontal ? laneObj.height / 2 : (headerObj.height + (laneObj.height / 2));\n                    this.addPaletteItem(symbolGroup.id, laneObj);\n                    swimLaneObj.children = [headerObj.id, laneObj.id];\n                }\n                else if (swimLaneShape.isPhase) {\n                    laneHeight = swimLaneObj.height ? swimLaneObj.height : this.symbolHeight;\n                    laneWidth = swimLaneObj.width ? swimLaneObj.width : this.symbolWidth;\n                    symbol.shape.type = 'Path';\n                    if (isHorizontal) {\n                        symbol.shape.data = 'M0,0 L' + laneWidth + ',' + '0';\n                    }\n                    else {\n                        symbol.shape.data = 'M0,0 L0,' + laneWidth;\n                    }\n                }\n            }\n            if (symbol instanceof Node) {\n                var getNodeDefaults = getFunction(this.getNodeDefaults);\n                if (getNodeDefaults) {\n                    getNodeDefaults(symbol, this);\n                }\n            }\n            else if (symbol instanceof Connector) {\n                var getConnectorDefaults = getFunction(this.getConnectorDefaults);\n                if (getConnectorDefaults) {\n                    getConnectorDefaults(symbol, this);\n                }\n            }\n            this.symbolTable[symbol.id] = symbol;\n            if (symbol instanceof Node && symbol.children) {\n                group.push(symbol);\n            }\n        }\n        for (var i = 0; i < group.length; i++) {\n            var node = void 0;\n            for (var j = 0; j < group[i].children.length; j++) {\n                node = (this.symbolTable[group[i].children[j]]);\n                if (node) {\n                    this.childTable[node.id] = node;\n                    node.parentId = group[i].id;\n                }\n            }\n        }\n        for (var _b = 0, _c = symbolGroup.symbols; _b < _c.length; _b++) {\n            var symbol = _c[_b];\n            if (!(symbol instanceof Node && symbol.children)) {\n                this.prepareSymbol(symbol);\n            }\n        }\n        for (var _d = 0, group_1 = group; _d < group_1.length; _d++) {\n            var symbol = group_1[_d];\n            this.prepareSymbol(symbol);\n        }\n    };\n    /**\n     * Method to create the palette\n     */\n    SymbolPalette.prototype.renderPalette = function (symbolGroup) {\n        var style = 'display:none;overflow:auto;';\n        if (symbolGroup.height) {\n            style += 'height:' + symbolGroup.height + 'px';\n        }\n        var paletteDiv = createHtmlElement('div', { 'id': symbolGroup.id, style: style, class: 'e-remove-palette' });\n        this.element.appendChild(paletteDiv);\n        var item = {\n            header: symbolGroup.title, expanded: symbolGroup.expanded,\n            content: '#' + symbolGroup.id, iconCss: symbolGroup.iconCss\n        };\n        this.accordionElement.items.push(item);\n        this.renderSymbols(symbolGroup, paletteDiv);\n    };\n    /**\n     * Used to add the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.addPaletteItem = function (paletteName, paletteSymbol) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                // tslint:disable-next-line:no-any \n                var param = [undefined, symbolPaletteGroup, 'symbols', {}, true];\n                // tslint:disable-next-line:no-any \n                var obj = new (Function.prototype.bind.apply(getObjectType(paletteSymbol), param));\n                for (var i_1 = 0; i_1 < Object.keys(paletteSymbol).length; i_1++) {\n                    obj[Object.keys(paletteSymbol)[i_1]] = paletteSymbol[Object.keys(paletteSymbol)[i_1]];\n                }\n                symbolPaletteGroup.symbols.push(obj);\n                if (!obj.children) {\n                    this.prepareSymbol(obj);\n                }\n                this.symbolTable[obj.id] = obj;\n                var paletteDiv = document.getElementById(symbolPaletteGroup.id);\n                if (paletteDiv) {\n                    paletteDiv.appendChild(this.getSymbolContainer(obj, paletteDiv));\n                }\n                break;\n            }\n        }\n    };\n    /**\n     * Used to remove the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.removePaletteItem = function (paletteName, symbolId) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                for (var _i = 0, _a = symbolPaletteGroup.symbols; _i < _a.length; _i++) {\n                    var symbol = _a[_i];\n                    if (symbol.id.indexOf(symbolId) !== -1) {\n                        var index = symbolPaletteGroup.symbols.indexOf(symbol);\n                        symbolPaletteGroup.symbols.splice(index, 1);\n                        if (symbol.children) {\n                            var parentNode = symbol.children;\n                            for (var i_2 = 0; i_2 < parentNode.length; i_2++) {\n                                delete this.symbolTable[(parentNode[i_2])];\n                            }\n                        }\n                        delete this.symbolTable[symbol.id];\n                        var element = document.getElementById(symbol.id + '_container');\n                        element.parentNode.removeChild(element);\n                        refresh = true;\n                        break;\n                    }\n                }\n            }\n            if (refresh) {\n                break;\n            }\n        }\n    };\n    /**\n     * Method to create the symbols in canvas\n     */\n    SymbolPalette.prototype.prepareSymbol = function (symbol) {\n        var width;\n        var sw;\n        var height;\n        var sh;\n        var stackPanel = new StackPanel();\n        var obj = symbol;\n        var content;\n        var symbolContainer = new Canvas();\n        var container = (symbol instanceof Node) ? symbol.initContainer() : null;\n        if (container && !container.children) {\n            container.children = [];\n        }\n        //preparing objects\n        var getSymbolTemplate = getFunction(this.getSymbolTemplate);\n        if (getSymbolTemplate) {\n            content = getSymbolTemplate(symbol);\n        }\n        if (!content) {\n            if (obj.children) {\n                content = this.getContainer(obj, container);\n            }\n            else {\n                content = symbol.init(this);\n                if (symbol instanceof Node && symbol.parentId) {\n                    container.children.push(content);\n                }\n            }\n        }\n        if (!symbol.parentId) {\n            var symbolInfo = { width: this.symbolWidth, height: this.symbolHeight };\n            var getSymbolInfo = getFunction(this.getSymbolInfo);\n            if (getSymbolInfo) {\n                symbolInfo = getSymbolInfo(symbol);\n            }\n            symbolInfo = symbolInfo || {};\n            if (symbol.shape && symbol.shape.isPhase) {\n                symbolInfo.width = symbolInfo.width || this.symbolWidth;\n                symbolInfo.height = symbolInfo.height || this.symbolHeight;\n            }\n            //defining custom templates\n            content.relativeMode = 'Object';\n            content.horizontalAlignment = content.verticalAlignment = 'Center';\n            symbolContainer.style.strokeColor = symbolContainer.style.fill = 'none';\n            symbolContainer.children = [content];\n            content.measure(new Size());\n            content.arrange(content.desiredSize);\n            width = symbolInfo.width = symbolInfo.width ||\n                (obj.width !== undefined ? content.actualSize.width : undefined) || this.symbolWidth;\n            height = symbolInfo.height = symbolInfo.height ||\n                (obj.height !== undefined ? content.actualSize.height : undefined) || this.symbolHeight;\n            if (width !== undefined && height !== undefined) {\n                var actualWidth = width;\n                var actualHeight = height;\n                var isLane = symbol.shape.isLane ? true : false;\n                var isPhase = symbol.shape.isPhase ? true : false;\n                if (this.symbolWidth !== undefined) {\n                    actualWidth = this.symbolWidth - this.symbolMargin.left - this.symbolMargin.right;\n                }\n                else {\n                    width += obj.style.strokeWidth;\n                }\n                if (this.symbolHeight !== undefined) {\n                    actualHeight = this.symbolHeight - this.symbolMargin.top - this.symbolMargin.bottom;\n                }\n                else {\n                    height += obj.style.strokeWidth;\n                }\n                if (symbolInfo.description && symbolInfo.description.text !== '') {\n                    actualHeight -= 20; // default height of the text have been reduced from the container.\n                }\n                sw = actualWidth / ((!isPhase && content.width) || width);\n                sh = actualHeight / ((!isPhase && content.height) || height);\n                if (symbolInfo.fit) {\n                    sw = actualWidth / symbolInfo.width;\n                    sh = actualHeight / symbolInfo.height;\n                }\n                width = actualWidth;\n                height = actualHeight;\n                sw = sh = Math.min(sw, sh);\n                symbolContainer.width = width;\n                symbolContainer.height = height;\n                content.width = symbolInfo.width;\n                content.height = symbolInfo.height;\n                this.scaleSymbol(symbol, symbolContainer, sw, sh, width, height);\n            }\n            else {\n                var outerBounds = void 0;\n                if (symbol instanceof Connector) {\n                    outerBounds = getOuterBounds(symbol);\n                }\n                content.width = symbol.width || (outerBounds) ? outerBounds.width : content.actualSize.width;\n                content.height = symbol.height || (outerBounds) ? outerBounds.height : content.actualSize.height;\n            }\n            symbol.wrapper = stackPanel;\n            stackPanel.children = [symbolContainer];\n            content.pivot = stackPanel.pivot = { x: 0, y: 0 };\n            stackPanel.id = content.id + '_symbol';\n            stackPanel.style.fill = stackPanel.style.strokeColor = 'transparent';\n            stackPanel.offsetX = symbol.style.strokeWidth / 2;\n            stackPanel.offsetY = symbol.style.strokeWidth / 2;\n            //symbol description-textElement\n            this.getSymbolDescription(symbolInfo, width, stackPanel);\n            stackPanel.measure(new Size());\n            stackPanel.arrange(stackPanel.desiredSize);\n            symbolInfo.width = symbolInfo.width || content.actualSize.width;\n            symbolInfo.height = symbolInfo.height || content.actualSize.height;\n            symbol[this.info] = symbolInfo;\n        }\n        if (symbol.parentId) {\n            container.measure(new Size(obj.width, obj.height));\n            container.arrange(container.desiredSize);\n        }\n    };\n    SymbolPalette.prototype.getContainer = function (obj, container) {\n        container.measureChildren = false;\n        var bounds;\n        var child = obj.children;\n        container.children = [];\n        for (var i = 0; i < child.length; i++) {\n            if (this.symbolTable[child[i]]) {\n                container.children.push(this.symbolTable[child[i]].wrapper);\n            }\n        }\n        container.measure(new Size(obj.width, obj.height));\n        container.arrange(container.desiredSize);\n        if (container.bounds.x !== 0 || container.bounds.y !== 0) {\n            bounds = container.bounds;\n            arrangeChild(obj, bounds.x, bounds.y, this.symbolTable, false, this);\n            container = this.getContainer(obj, container);\n        }\n        return container;\n    };\n    /**\n     * Method to get the symbol text description\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolDescription = function (symbolInfo, width, parent) {\n        if (symbolInfo && symbolInfo.description && symbolInfo.description.text) {\n            var textElement = new TextElement();\n            //symbol description-textElement\n            symbolInfo.description.overflow = symbolInfo.description.overflow || 'Ellipsis';\n            symbolInfo.description.wrap = symbolInfo.description.wrap || 'WrapWithOverflow';\n            textElement.content = symbolInfo.description.text;\n            textElement.width = width;\n            textElement.height = 20;\n            textElement.style.strokeColor = 'transparent';\n            textElement.style.fill = 'transparent';\n            textElement.style.strokeWidth = 0;\n            textElement.style.textWrapping = symbolInfo.description.wrap;\n            textElement.style.textOverflow = symbolInfo.description.overflow;\n            textElement.margin = { left: 0, right: 0, top: 0, bottom: 5 };\n            parent.children.push(textElement);\n        }\n    };\n    /**\n     * Method to renders the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.renderSymbols = function (symbolGroup, parentDiv) {\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (!symbol.parentId) {\n                this.getSymbolContainer(symbol, parentDiv);\n            }\n        }\n    };\n    /**\n     * Method to clone the symbol for previewing the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolPreview = function (symbol, evt, parentDiv) {\n        var canvas;\n        var sw;\n        var sh;\n        var symbolPreviewWidth = symbol.wrapper.children[0].desiredSize.width + symbol.style.strokeWidth;\n        var symbolPreviewHeight = symbol.wrapper.children[0].desiredSize.height + symbol.style.strokeWidth;\n        var content = symbol.wrapper.children[0].children[0];\n        if (this.symbolPreview.width !== undefined || this.symbolPreview.height !== undefined) {\n            symbolPreviewWidth = (this.symbolPreview.width || symbolPreviewWidth) - symbol.style.strokeWidth;\n            symbolPreviewHeight = (this.symbolPreview.height || symbolPreviewHeight) - symbol.style.strokeWidth;\n            sw = symbolPreviewWidth / content.actualSize.width;\n            sh = symbolPreviewHeight / content.actualSize.height;\n            sw = sh = Math.min(sw, sh);\n            var symbolWidth = content.actualSize.width * sw;\n            var symbolHeight = content.actualSize.height * sh;\n            symbol.wrapper.children[0].width = symbolPreviewWidth;\n            symbol.wrapper.children[0].height = symbolPreviewHeight;\n            this.measureAndArrangeSymbol(content, symbol instanceof Node);\n            this.scaleSymbol(symbol, symbol.wrapper.children[0], sw, sh, symbolWidth, symbolHeight, true);\n            symbolPreviewWidth = symbolWidth;\n            symbolPreviewHeight = symbolHeight;\n        }\n        var prevPosition = { x: content.offsetX, y: content.offsetY };\n        content.offsetX = content.offsetY = symbol.style.strokeWidth / 2;\n        content.pivot = { x: 0, y: 0 };\n        this.measureAndArrangeSymbol(content, symbol instanceof Node);\n        var previewContainer = createHtmlElement('div', { 'draggable': 'true', 'class': 'e-dragclone', 'style': 'pointer-events:none' });\n        var div;\n        document.body.appendChild(previewContainer);\n        var style = 'margin:5px;';\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id + '_preview',\n                width: Math.ceil(symbolPreviewWidth) + 1,\n                height: Math.ceil(symbolPreviewHeight) + 1\n            });\n            var gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            previewContainer.appendChild(canvas);\n            this.svgRenderer.renderElement(content, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, previewContainer, symbolPreviewHeight, symbolPreviewWidth, true);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, previewContainer, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, true);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id + '_preview', (Math.ceil(symbolPreviewWidth) + symbol.style.strokeWidth + 1) * 2, (Math.ceil(symbolPreviewHeight) + symbol.style.strokeWidth + 1) * 2);\n                previewContainer.appendChild(canvas);\n                style += 'transform:scale(0.5);';\n                canvas.setAttribute('transform-origin', '0 0');\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(content, canvas, undefined);\n            }\n        }\n        ((div && (symbol.shape.type === 'HTML' || symbol.children\n            && symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n        content.offsetX = prevPosition.x;\n        content.offsetY = prevPosition.y;\n        return previewContainer;\n    };\n    SymbolPalette.prototype.measureAndArrangeSymbol = function (content, isNode) {\n        if (content.children && !isNode) {\n            content.children[0].transform = Transform.Self;\n        }\n        content.measure(new Size());\n        content.arrange(content.desiredSize);\n        if (content.children) {\n            content.children[0].transform = Transform.Parent;\n        }\n    };\n    SymbolPalette.prototype.updateSymbolSize = function (symbol, width, height) {\n        var element = symbol.wrapper.children[0].children[0];\n        var strokeWidth = symbol.style.strokeWidth;\n        element.width = (width || element.width) - (strokeWidth + 1);\n        element.height = (height || element.height) - (strokeWidth + 1);\n        symbol.wrapper.measure(new Size());\n        symbol.wrapper.arrange(symbol.wrapper.desiredSize);\n    };\n    /**\n     * Method to create canvas and render the symbol\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolContainer = function (symbol, parentDiv, preview) {\n        var symbolInfo = this.symbolTable[symbol.id][this.info];\n        var size = this.getSymbolSize(symbol, symbolInfo);\n        var width = size.width + 1;\n        var height = size.height + 1;\n        var container = createHtmlElement('div', {\n            id: symbol.id + '_container',\n            style: 'width:' + width + 'px;height:' + height + 'px;float:left;overflow:hidden',\n            title: symbolInfo.tooltip ? symbolInfo.tooltip : symbol.id\n        });\n        parentDiv.appendChild(container);\n        var canvas;\n        var gElement;\n        var div;\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id,\n                width: Math.ceil(symbol.wrapper.actualSize.width) + 1,\n                height: Math.ceil(symbol.wrapper.actualSize.height) + 1\n            });\n            gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            container.appendChild(canvas);\n            this.updateSymbolSize(symbol);\n            this.svgRenderer.renderElement(symbol.wrapper, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n                container.appendChild(canvas);\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(symbol.wrapper, gElement || canvas, undefined, undefined, undefined, undefined, true);\n            }\n        }\n        if (!preview) {\n            var actualWidth = symbol.wrapper.actualSize.width + symbol.style.strokeWidth;\n            var actualHeight = symbol.wrapper.actualSize.height + symbol.style.strokeWidth;\n            var style = 'pointer-events:none;transform-origin:0 0;overflow:hidden;';\n            if (symbol.shape.isPhase) {\n                if (symbol.shape.orientation === 'Horizontal') {\n                    style += 'margin-left:' +\n                        Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                        + 'px;margin-top:' + size.height / 2\n                        + 'px;';\n                }\n                else {\n                    style += 'margin-left:' +\n                        size.width / 2\n                        + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                        + 'px;';\n                }\n            }\n            else {\n                style += 'margin-left:' +\n                    Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                    + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                    + 'px;';\n            }\n            if (canvas instanceof HTMLCanvasElement) {\n                style += 'transform:scale(.5,.5);';\n            }\n            ((div && (symbol.shape.type === 'HTML' || symbol.children &&\n                symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n            container.classList.add('e-symbol-draggable');\n            return container;\n        }\n        return canvas;\n    };\n    SymbolPalette.prototype.getGroupParent = function (item, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', { 'id': item.id + (isPreview ? '_html_div_preview' : '_html_div') });\n        var htmlLayer = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas((isPreview ? (item.id + '_preview') : item.id), Math.ceil(width) + 1, Math.ceil(height) + 1);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(item.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getHtmlSymbol = function (symbol, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_html_div_preview' : '_html_div')\n        });\n        var htmlLayer = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n        container.appendChild(canvas);\n        canvas.getContext('2d').setTransform(2, 0, 0, 2, 0, 0);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(symbol.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getSymbolSize = function (symbol, symbolInfo) {\n        var width = symbol.wrapper.actualSize.width;\n        var height = symbol.wrapper.actualSize.height;\n        if (!this.symbolWidth && !this.symbolHeight) {\n            width += this.symbolMargin.left + this.symbolMargin.right + symbol.style.strokeWidth;\n            height += this.symbolMargin.top + this.symbolMargin.bottom + symbol.style.strokeWidth;\n        }\n        else {\n            width = this.symbolWidth;\n            height = Math.max(this.symbolHeight, height);\n        }\n        return new Size(width, height);\n    };\n    //end region - rendering symbols\n    //region event handlers\n    SymbolPalette.prototype.getMousePosition = function (e) {\n        var offsetY;\n        var offsetX;\n        var touchArg;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            var pageY = touchArg.changedTouches[0].clientY;\n            var pageX = touchArg.changedTouches[0].clientX;\n            offsetY = pageY - this.element.offsetTop;\n            offsetX = pageX - this.element.offsetLeft;\n        }\n        else {\n            offsetY = e.clientY - this.element.offsetTop;\n            offsetX = e.clientX - this.element.offsetLeft;\n        }\n        return { x: offsetX, y: offsetY };\n    };\n    SymbolPalette.prototype.mouseMove = function (e, touches) {\n        if (this.highlightedSymbol && (!this.selectedSymbol\n            || this.selectedSymbol.id + '_container' !== this.highlightedSymbol.id)) {\n            this.highlightedSymbol.classList.remove('e-symbol-hover');\n            this.highlightedSymbol.style.backgroundColor = '';\n            this.highlightedSymbol = null;\n        }\n        var id = e.target.id.split('_container')[0];\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-hover');\n            this.highlightedSymbol = container;\n        }\n        e.preventDefault();\n    };\n    SymbolPalette.prototype.mouseUp = function (evt) {\n        if (evt && evt.target) {\n            if (evt.srcElement.id === 'iconSearch') {\n                var element = document.getElementById('iconSearch');\n                if (element.classList.contains('e-clear-searchtext')) {\n                    element.className = 'e-input-group-icon e-search e-icons';\n                    document.getElementById('textEnter').value = '';\n                    this.searchPalette('');\n                }\n            }\n            else {\n                var id = evt.target.id.split('_container')[0];\n                if (id && this.selectedSymbol) {\n                    var args = { oldValue: this.selectedSymbol.id, newValue: id };\n                    var event_1 = 'paletteSelectionChange';\n                    this.trigger(event_1, args);\n                    evt.preventDefault();\n                }\n            }\n        }\n    };\n    SymbolPalette.prototype.keyUp = function (evt) {\n        var _this = this;\n        if (this.enableSearch) {\n            var palette_1 = this;\n            var element = document.getElementById('iconSearch');\n            element.className = 'e-input-group-icon e-clear-searchtext e-icons';\n            if (evt && (evt.key === 'Enter' || evt.keyCode === 13)) {\n                if (evt.target instanceof HTMLInputElement) {\n                    this.searchPalette(evt.target.value);\n                }\n            }\n            else {\n                if (this.timer) {\n                    clearTimeout(this.timer);\n                }\n                this.timer = setTimeout(function () {\n                    if (evt.target instanceof HTMLInputElement) {\n                        palette_1.searchPalette(evt.target.value);\n                        _this.timer = null;\n                    }\n                }, 500);\n            }\n        }\n    };\n    SymbolPalette.prototype.mouseDown = function (evt) {\n        var id = evt.target.id.split('_container')[0];\n        if (this.selectedSymbol) {\n            var oldSymbol = document.getElementById(this.selectedSymbol.id + '_container');\n            if (id !== this.selectedSymbol.id && oldSymbol) {\n                oldSymbol.classList.remove('e-symbol-selected');\n            }\n            var container = document.getElementById(this.selectedSymbol.id + '_container');\n            if (container) {\n                container.style.backgroundColor = '';\n            }\n            this.selectedSymbol = null;\n        }\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-selected');\n            this.selectedSymbol = this.symbolTable[id];\n            evt.preventDefault();\n        }\n    };\n    SymbolPalette.prototype.keyDown = function (evt) {\n        var palette = this;\n        var helperElement = 'helperElement';\n        var intDestroy = 'intDestroy';\n        if (evt && (evt.key === 'Escape')) {\n            var element = palette.draggable[helperElement];\n            if (element && element.parentNode) {\n                element.parentNode.removeChild(element);\n                palette.draggable[intDestroy]();\n            }\n        }\n    };\n    //end region - event handlers\n    // region - draggable\n    SymbolPalette.prototype.initDraggable = function () {\n        if (this.allowDrag) {\n            var drag = void 0;\n            this.draggable = new Draggable(this.element, {\n                dragTarget: '.e-symbol-draggable',\n                helper: this.helper,\n                dragStart: this.dragStart,\n                preventDefault: false,\n                dragStop: this.dragStop,\n                drag: function (args) {\n                    var target = 'target';\n                    var parent = parentsUntil(args[target], 'e-droppable');\n                    if (parent && parent.classList.contains('e-diagram')) {\n                        var e2eInstance = 'ej2_instances';\n                        parent[e2eInstance][0].droppable.over(args);\n                    }\n                },\n                cursorAt: { left: this.symbolPreview.offset.x, top: this.symbolPreview.offset.y }\n            });\n        }\n    };\n    SymbolPalette.prototype.dragStart = function (e) {\n        var element = this.helper[0];\n        if (element) {\n            element.setAttribute('paletteId', this.element.id);\n        }\n    };\n    SymbolPalette.prototype.dragStop = function (e) {\n        if (!parentsUntil(e.target, 'e-diagram')) {\n            remove(e.helper);\n        }\n    };\n    //end region - draggable \n    //region - helper methods\n    SymbolPalette.prototype.scaleSymbol = function (symbol, symbolContainer, sw, sh, width, height, preview) {\n        if (symbol instanceof Connector) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer.children[0];\n            var point = symbol.scale(sw, sh, width, height, symbolContainer.children[0]);\n            var difX = width / 2 - symbolContainer.children[0].children[0].offsetX + point.x / 2;\n            var difY = height / 2 - symbolContainer.children[0].children[0].offsetY + point.y / 2;\n            for (var _i = 0, _a = symbolContainer.children[0].children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.offsetX += difX;\n                child.offsetY += difY;\n                child.staticSize = false;\n            }\n            symbol.wrapper = wrapper;\n        }\n        else if (symbol.shape instanceof BpmnShape && this.bpmnModule) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer;\n            symbolContainer.children[0].width = width;\n            symbolContainer.children[0].height = height;\n            this.bpmnModule.updateBPMN({ width: width, height: height }, symbol, symbol, null);\n            symbol.wrapper = wrapper;\n        }\n        else {\n            if (symbol.children) {\n                var parentNode = symbol.children;\n                var w = 0;\n                var h = 0;\n                if (!preview) {\n                    var node = void 0;\n                    var container = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        container = symbolContainer.children[0].children[i];\n                        if (container) {\n                            if (container.children[0].children) {\n                                this.measureChild(container);\n                            }\n                            node = this.symbolTable[container.id];\n                            container.width = node.width;\n                            container.height = node.height;\n                            container.measure(new Size());\n                            container.arrange(container.children[0].desiredSize);\n                        }\n                    }\n                }\n                w = width / symbolContainer.children[0].desiredSize.width;\n                h = height / symbolContainer.children[0].desiredSize.height;\n                symbolContainer.children[0].measure(new Size());\n                symbolContainer.children[0].arrange(symbolContainer.children[0].desiredSize);\n                if (!preview) {\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, w, h, symbol);\n                            }\n                            this.scaleGroup(children, w, h, symbol);\n                        }\n                    }\n                }\n                if (preview) {\n                    var node = void 0;\n                    var scaleWidth = void 0;\n                    var scaleHeight = void 0;\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        node = this.symbolTable[parentNode[i]];\n                        scaleWidth = width / symbol.wrapper.children[0].desiredSize.width;\n                        scaleHeight = height / symbol.wrapper.children[0].desiredSize.height;\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, scaleWidth, scaleHeight, symbol, true);\n                            }\n                            this.scaleGroup(children, scaleWidth, scaleHeight, symbol, true);\n                        }\n                    }\n                    symbol.wrapper.children[0].measure(new Size());\n                    symbol.wrapper.children[0].arrange(symbol.wrapper.children[0].desiredSize);\n                }\n            }\n            else {\n                scaleElement(symbolContainer.children[0], sw, sh, symbolContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleChildren = function (container, w, h, symbol, preview) {\n        var child;\n        for (var i = 0; i < container.children.length; i++) {\n            child = container.children[i];\n            if (!child.children[0].children) {\n                this.scaleGroup(child, w, h, symbol, preview);\n            }\n            else {\n                this.scaleChildren(child, w, h, symbol, preview);\n            }\n        }\n    };\n    SymbolPalette.prototype.measureChild = function (container) {\n        var childContainer;\n        var node;\n        for (var i = 0; i < container.children.length; i++) {\n            childContainer = container.children[i];\n            if (!childContainer.children[0].children) {\n                node = this.symbolTable[childContainer.id];\n                childContainer.width = node.width;\n                childContainer.height = node.height;\n                childContainer.measure(new Size());\n                childContainer.arrange(childContainer.children[0].desiredSize);\n            }\n            else {\n                this.measureChild(childContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleGroup = function (child, w, h, symbol, preview) {\n        child.width = child.width * w;\n        child.height = (child.height * h);\n        child.offsetX = preview ? (child.offsetX * w) - symbol.style.strokeWidth : (child.offsetX * w) + symbol.style.strokeWidth / 2;\n        child.offsetY = preview ? (child.offsetY * h) - symbol.style.strokeWidth : (child.offsetY * h) + symbol.style.strokeWidth / 2;\n        child.measure(new Size());\n        child.arrange(child.children[0].desiredSize);\n    };\n    SymbolPalette.prototype.refreshPalettes = function () {\n        this.accordionElement.items = [];\n        removeElementsByClass('e-remove-palette');\n        this.updatePalettes();\n        this.accordionElement.dataBind();\n    };\n    SymbolPalette.prototype.updatePalettes = function () {\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symGroup = this.palettes[i];\n            this.initSymbols(symGroup);\n            this.renderPalette(symGroup);\n        }\n    };\n    SymbolPalette.prototype.createTextbox = function () {\n        var searchDiv = createHtmlElement('div', { id: this.element.id + '_search' });\n        searchDiv.setAttribute('style', 'backgroundColor:white;height:30px');\n        searchDiv.className = 'e-input-group';\n        this.element.appendChild(searchDiv);\n        var textBox = createHtmlElement('input', {});\n        textBox.placeholder = 'Search Shapes';\n        textBox.id = 'textEnter';\n        textBox.setAttribute('style', 'width:100%;height:auto');\n        textBox.className = 'e-input';\n        searchDiv.appendChild(textBox);\n        var span = createHtmlElement('span', { id: 'iconSearch', className: 'e-input-group-icon e-search e-icons' });\n        searchDiv.appendChild(span);\n    };\n    SymbolPalette.prototype.searchPalette = function (value) {\n        var symbolGroup = [];\n        var element = document.getElementById('SearchPalette');\n        var paletteDiv;\n        //remove the existing child in palette\n        if (element) {\n            for (var k = element.children.length - 1; k >= 0; k--) {\n                element.removeChild(element.children[k]);\n            }\n        }\n        //add the searched item in array collection\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            for (var j = 0; j < symbolPaletteGroup.symbols.length; j++) {\n                var item = symbolPaletteGroup.symbols[j];\n                if (value !== '' && item.id.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n                    symbolGroup.push(item);\n                }\n            }\n        }\n        var filterSymbols = getFunction(this.filterSymbols);\n        if (filterSymbols) {\n            symbolGroup = filterSymbols(symbolGroup) || [];\n        }\n        //create a palette collection\n        if (!element) {\n            paletteDiv = this.createSearchPalette(paletteDiv);\n            element = paletteDiv;\n        }\n        //add the symbols into search palette\n        if (symbolGroup.length > 0) {\n            for (var _i = 0, symbolGroup_1 = symbolGroup; _i < symbolGroup_1.length; _i++) {\n                var symbol = symbolGroup_1[_i];\n                this.getSymbolContainer(symbol, element);\n            }\n        }\n        else if (value !== '') {\n            var emptyDiv = createHtmlElement('div', { 'id': 'EmptyDiv', 'style': 'text-align:center;font-style:italic' });\n            emptyDiv.innerHTML = 'No Items To Display';\n            element.appendChild(emptyDiv);\n        }\n        else {\n            var element_1 = document.getElementById('iconSearch');\n            element_1.className = 'e-input-group-icon e-search e-icons';\n            this.accordionElement.removeItem(0);\n            var searchPalette = document.getElementById('SearchPalette');\n            if (searchPalette) {\n                searchPalette.remove();\n            }\n        }\n    };\n    SymbolPalette.prototype.createSearchPalette = function (paletteDiv) {\n        paletteDiv = createHtmlElement('div', { 'id': 'SearchPalette', 'style': 'display:none;overflow:auto;' });\n        this.element.appendChild(paletteDiv);\n        var paletteCollection = {\n            header: 'Search Results', expanded: true,\n            content: '#SearchPalette',\n        };\n        this.accordionElement.addItem(paletteCollection, 0);\n        return paletteDiv;\n    };\n    /**\n     * Method to bind events for the symbol palette\n     */\n    SymbolPalette.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.add(this.element, startEvent, this.mouseDown, this);\n        EventHandler.add(this.element, moveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, stopEvent, this.mouseUp, this);\n        EventHandler.add(this.element, keyEvent, this.keyUp, this);\n        EventHandler.add(document, keyDownEvent, this.keyDown, this);\n        // initialize the draggable component\n        this.initDraggable();\n    };\n    /**\n     * Method to unbind events for the symbol palette\n     */\n    SymbolPalette.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.remove(this.element, startEvent, this.mouseDown);\n        EventHandler.remove(this.element, moveEvent, this.mouseMove);\n        EventHandler.remove(this.element, stopEvent, this.mouseUp);\n        EventHandler.remove(this.element, keyEvent, this.keyUp);\n        EventHandler.remove(document, keyDownEvent, this.keyDown);\n    };\n    __decorate([\n        Property('S')\n    ], SymbolPalette.prototype, \"accessKey\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"height\", void 0);\n    __decorate([\n        Collection([], Palette)\n    ], SymbolPalette.prototype, \"palettes\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"filterSymbols\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolTemplate\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolWidth\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolHeight\", void 0);\n    __decorate([\n        Complex({ left: 10, right: 10, top: 10, bottom: 10 }, Margin)\n    ], SymbolPalette.prototype, \"symbolMargin\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"allowDrag\", void 0);\n    __decorate([\n        Complex({}, SymbolPreview)\n    ], SymbolPalette.prototype, \"symbolPreview\", void 0);\n    __decorate([\n        Property(false)\n    ], SymbolPalette.prototype, \"enableSearch\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('Multiple')\n    ], SymbolPalette.prototype, \"expandMode\", void 0);\n    __decorate([\n        Event()\n    ], SymbolPalette.prototype, \"paletteSelectionChange\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getConnectorDefaults\", void 0);\n    return SymbolPalette;\n}(Component));\nexport { SymbolPalette };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DiagramRenderer } from '../diagram/rendering/renderer';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nimport { Component, Property, Browser, EventHandler, Event } from '@syncfusion/ej2-base';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from '../diagram/utility/dom-util';\nimport { createSvgElement, getNativeLayer, hasClass } from '../diagram/utility/dom-util';\nimport { Rect } from '../diagram/primitives/rect';\nimport { Size } from '../diagram/primitives/size';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\n/**\n * Overview control allows you to see a preview or an overall view of the entire content of a Diagram.\n * This helps you to look at the overall picture of a large Diagram\n * To navigate, pan, or zoom, on a particular position of the page.\n * ```html\n * <div id='diagram'/>\n * <div id=\"overview\"></div>\n * ```\n * ```typescript\n * let overview: Overview;\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * let options: OverviewModel = {};\n * options.sourceID = 'diagram';\n * options.width = '250px';\n * options.height = '500px';\n * overview = new Overview(options);\n * overview.appendTo('#overview');\n * ```\n */\nvar Overview = /** @class */ (function (_super) {\n    __extends(Overview, _super);\n    function Overview(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.mode = 'Canvas';\n        /** @private */\n        _this.id = 'overview';\n        _this.actionName = '';\n        _this.startPoint = null;\n        _this.currentPoint = null;\n        _this.prevPoint = null;\n        _this.scale = null;\n        _this.inAction = false;\n        _this.viewPortRatio = 1;\n        _this.horizontalOffset = 0;\n        _this.verticalOffset = 0;\n        _this.model = {};\n        _this.event = true;\n        _this.model = { width: _this.width, height: _this.height };\n        return _this;\n    }\n    /**\n     * Updates the overview control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    Overview.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var objectArray = [];\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'sourceID':\n                    this.setParent(newProp.sourceID);\n                    break;\n                case 'width':\n                case 'height':\n                    this.renderCanvas();\n                    this.setParent(this.sourceID);\n                    break;\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Overview.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Overview.prototype.preRender = function () {\n        this.element.style.background = 'transparent';\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    Overview.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.renderCanvas();\n        this.setParent(this.sourceID);\n    };\n    Overview.prototype.getSizeValue = function (real) {\n        var text;\n        if (real.toString().indexOf('px') > 0 || real.toString().indexOf('%') > 0) {\n            text = real.toString();\n        }\n        else {\n            text = real.toString() + 'px';\n        }\n        return text;\n    };\n    Overview.prototype.renderCanvas = function (options) {\n        var canvas = document.getElementById(this.element.id + '_canvas');\n        if (!canvas) {\n            canvas = createHtmlElement('div', {});\n            this.element.appendChild(canvas);\n        }\n        var attribute = {\n            'id': this.element.id + '_canvas', 'class': 'drawing',\n            'style': 'position:relative; height:' + this.getSizeValue(this.model.height) + '; width:' +\n                this.getSizeValue(this.model.width) +\n                ';style:-ms-touch-action: none;touch-action: none;'\n        };\n        setAttributeHtml(canvas, attribute);\n        this.element.setAttribute('tabindex', String(0));\n        this.element.style.overflow = 'hidden';\n        this.element.style.height = String(this.model.height);\n        this.element.style.width = String(this.model.width);\n        this.canvas = canvas;\n    };\n    Overview.prototype.setParent = function (id) {\n        var element = document.getElementById(id);\n        var instance = 'ej2_instances';\n        if (this.parent) {\n            var oldparent = this.parent;\n            this.parent = null;\n            oldparent.setOverview(null, this.element.id);\n            this.removeDocument(this);\n        }\n        this.parent = this.getDiagram(element, instance);\n        if (this.parent) {\n            this.parent.setOverview(this);\n        }\n    };\n    Overview.prototype.getDiagram = function (element, instance) {\n        var diagram;\n        var n = element[instance].length;\n        for (var i = 0; i < n; i++) {\n            if (hasClass(element[instance][i].element, 'e-diagram')) {\n                diagram = element[instance][i];\n                break;\n            }\n        }\n        return diagram;\n    };\n    Overview.prototype.unWireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var move = Browser.touchMoveEvent;\n        var evnt;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stop = Browser.touchEndEvent;\n        EventHandler.remove(this.element, start, this.mouseDown);\n        EventHandler.remove(this.element, move, this.mouseMove);\n        EventHandler.remove(this.element, stop, this.mouseUp);\n        EventHandler.remove(this.element, cancel, this.documentMouseUp);\n        EventHandler.remove(window, 'resize', this.windowResize);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.remove(container, 'scroll', this.scrolled);\n        }\n    };\n    Overview.prototype.wireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.element, start, this.mouseDown, this);\n        EventHandler.add(this.element, move, this.mouseMove, this);\n        EventHandler.add(this.element, stop, this.mouseUp, this);\n        EventHandler.add(this.element, cancel, this.documentMouseUp, this);\n        EventHandler.add(window, 'resize', this.windowResize, this);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.add(container, 'scroll', this.scrolled, this);\n        }\n    };\n    /**\n     * @private\n     */\n    /**\n     * @private\n     */\n    Overview.prototype.renderDocument = function (view) {\n        view.canvas = this.canvas;\n        var g = document.getElementById(this.canvas.id + '_svg');\n        if (g) {\n            g.parentNode.removeChild(g);\n        }\n        var attr = {\n            id: this.canvas.id + '_svg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'class': 'overview_svg'\n        };\n        var svg = createSvgElement('svg', attr);\n        this.svg = svg;\n        view.svg = svg;\n        view.canvas.appendChild(svg);\n        var ovw = document.getElementById(this.element.id);\n        var element = ovw;\n        var eWidth = element.clientWidth;\n        var eHeight = element.clientHeight;\n        var bRect = element.getBoundingClientRect();\n        // Check for the window resize\n        var screenX = (window.screenX < 0) ? window.screenX * -1 : window.screenX;\n        var screenY = (window.screenY < 0) ? window.screenY * -1 : window.screenY;\n        if (eWidth === 0) {\n            eWidth = Math.floor(((window.innerWidth - screenX) - Math.floor(bRect.left)));\n        }\n        if (eHeight === 0) {\n            eHeight = Math.floor(((window.innerHeight - screenY) - Math.floor(bRect.top)));\n        }\n        svg.setAttribute('width', String(eWidth));\n        svg.setAttribute('height', String(eHeight));\n        this.model.width = eWidth;\n        this.model.height = eHeight;\n        var attributes;\n        if (!view.diagramLayerDiv) {\n            view.diagramLayerDiv = createHtmlElement('div', {});\n            var container = document.getElementById(this.element.id);\n            view.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagramLayer', this.model.width, this.model.height);\n            view.diagramLayer.setAttribute('style', 'position:absolute; left:0px;  top:0px ');\n            view.diagramLayerDiv.appendChild(view.diagramLayer);\n            view.canvas.appendChild(view.diagramLayerDiv);\n        }\n        attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + this.model.width + 'px; height:' + this.model.height + 'px;position:absolute;top:0px;left:0px'\n        };\n        setAttributeHtml(view.diagramLayerDiv, attributes);\n        this.renderHtmlLayer(view.canvas);\n        this.renderNativeLayer(view.canvas, view);\n        this.addOverviewRectPanel(view);\n    };\n    /** @private */\n    Overview.prototype.removeDocument = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_svg');\n        this.canvas.removeChild(svg);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        this.canvas.removeChild(htmlLayer);\n        var diagramLayer = document.getElementById(this.element.id + '_diagramLayer_div');\n        this.canvas.removeChild(diagramLayer);\n        view.diagramLayerDiv = null;\n        view.diagramLayer = null;\n    };\n    Overview.prototype.renderHtmlLayer = function (canvas) {\n        var htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer', 'class': 'e-html-layer',\n            'style': 'pointer-events:none;position:absolute;top:0px;left:0px;'\n        });\n        var options = {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;'\n        };\n        var htmlDiv = createHtmlElement('div', options);\n        htmlLayer.appendChild(htmlDiv);\n        canvas.appendChild(htmlLayer);\n        return htmlLayer;\n    };\n    Overview.prototype.renderNativeLayer = function (canvas, view) {\n        var nativeLayerSvg = this.parent.createSvg(this.element.id + '_nativeLayer_svg', this.model.width, this.model.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        view.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer' });\n    };\n    Overview.prototype.addOverviewRectPanel = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_overviewsvg');\n        if (svg) {\n            svg.parentNode.removeChild(svg);\n        }\n        var attr = ({\n            id: this.canvas.id + '_overviewsvg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'style': 'position:absolute;left:0px;top:0px; aria-label:Specifies overview',\n            width: this.model.width,\n            height: this.model.height\n        });\n        svg = createSvgElement('svg', attr);\n        view.canvas.appendChild(svg);\n        var ovw = createSvgElement('g', { 'id': this.element.id + '_overviewlayer', 'style': 'pointer-events:none' });\n        svg.appendChild(ovw);\n        var rect = createSvgElement('rect', {\n            'fill': 'transparent', 'width': '100%', 'height': '100%', 'class': 'overviewbackrect',\n            'id': this.canvas.id + 'overviewbackrect'\n        });\n        rect.setAttribute('style', ' pointer-events: none; ');\n        ovw.appendChild(rect);\n        var svgDocument = (ovw);\n        var g = createSvgElement('g', { 'id': this.canvas.id + 'overviewhandle', 'style': 'pointer-events:all' });\n        ovw.appendChild(g);\n        var innerrect = createSvgElement('rect', { 'id': this.canvas.id + 'overviewrect', 'fill': 'transparent' });\n        g.appendChild(innerrect);\n        this.renderOverviewCorner('left', g);\n        this.renderOverviewCorner('right', g);\n        this.renderOverviewCorner('top', g);\n        this.renderOverviewCorner('bottom', g);\n        this.renderOverviewCorner('topleft', g);\n        this.renderOverviewCorner('topright', g);\n        this.renderOverviewCorner('bottomleft', g);\n        this.renderOverviewCorner('bottomright', g);\n    };\n    Overview.prototype.renderOverviewCorner = function (name, parent) {\n        var svg = this.svg;\n        var shape;\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            shape = 'rect';\n        }\n        else {\n            shape = 'circle';\n        }\n        var innerrect = createSvgElement(shape, { 'id': this.canvas.id + 'visible' + name });\n        parent.appendChild(innerrect);\n        var transrect = createSvgElement(shape, {\n            'id': this.canvas.id + name, 'class': 'overviewresizer', 'fill': 'transparent'\n        });\n        parent.appendChild(transrect);\n    };\n    Overview.prototype.updateOverviewRectangle = function () {\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var size = new Size();\n        size.width = 0;\n        size.height = 0;\n        var x = 0;\n        var y = 0;\n        var w;\n        var h;\n        switch (this.resizeDirection) {\n            case 'left':\n                size.width -= difx;\n                size.height -= difx / this.viewPortRatio;\n                x = difx;\n                y = difx / this.viewPortRatio;\n                y /= 2;\n                break;\n            case 'right':\n                size.width += difx;\n                size.height += difx / this.viewPortRatio;\n                y = difx / this.viewPortRatio;\n                y /= -2;\n                break;\n            case 'top':\n                size.height -= dify;\n                size.width -= dify * this.viewPortRatio;\n                y = dify;\n                x = dify * this.viewPortRatio;\n                x /= 2;\n                break;\n            case 'bottom':\n                size.height += dify;\n                size.width += dify * this.viewPortRatio;\n                x = dify * this.viewPortRatio;\n                x /= -2;\n                break;\n            case 'topleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width -= difx;\n                size.height -= dify;\n                x = difx;\n                y = dify;\n                break;\n            case 'topright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -(difx / this.viewPortRatio);\n                }\n                y = dify;\n                size.width += difx;\n                size.height -= dify;\n                break;\n            case 'bottomleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -difx / this.viewPortRatio;\n                }\n                x = difx;\n                size.width -= difx;\n                size.height += dify;\n                break;\n            case 'bottomright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width += difx;\n                size.height += dify;\n                break;\n        }\n        this.updateHelper(x, y, size, w, h);\n    };\n    Overview.prototype.updateHelper = function (difx, dify, size, width, height) {\n        var x;\n        var y;\n        var bounds;\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var rect = svg.getElementById('helper');\n        if (size) {\n            bounds = rect.getBBox();\n            x = bounds.x + difx;\n            y = bounds.y + dify;\n            width = bounds.width + size.width;\n            height = bounds.height + size.height;\n        }\n        else {\n            var difx_1;\n            if (this.currentPoint.x > this.startPoint.x) {\n                difx_1 = this.currentPoint.x - this.prevPoint.x;\n            }\n            else {\n                difx_1 = this.prevPoint.x - this.currentPoint.x;\n            }\n            var dify_1;\n            if (this.currentPoint.y > this.startPoint.y) {\n                dify_1 = this.currentPoint.y - this.prevPoint.y;\n            }\n            else {\n                dify_1 = this.prevPoint.y - this.currentPoint.y;\n            }\n            var w = void 0;\n            var h = void 0;\n            if (Math.abs(dify_1) > Math.abs(difx_1)) {\n                difx_1 = this.viewPortRatio * dify_1;\n                h = true;\n                w = false;\n            }\n            else {\n                dify_1 = difx_1 / this.viewPortRatio;\n                w = true;\n                h = false;\n            }\n            bounds = rect.getBBox();\n            x = ((this.startPoint.x > this.currentPoint.x) ?\n                bounds.x - difx_1 : bounds.x);\n            y = ((this.startPoint.y > this.currentPoint.y) ? bounds.y - dify_1 : bounds.y);\n            width = bounds.width + difx_1;\n            height = bounds.height + dify_1;\n        }\n        setAttributeSvg(this.helper, {\n            'id': this.helper.id, 'x': x, 'y': y,\n            'width': Math.max(0, width), 'height': Math.max(0, height)\n        });\n    };\n    Overview.prototype.updateOverviewrect = function (x, y, width, height) {\n        var rect = document.getElementById(this.canvas.id + 'overviewrect');\n        var attr = { x: x, y: y, width: Math.max(1, width), height: Math.max(1, height) };\n        setAttributeHtml(rect, attr);\n        this.updateOverviewCorner('top', x + 8, y - 2, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('bottom', x + 8, y + height, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('left', x - 2, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('right', x + width, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('topleft', x, y, 5, 5);\n        this.updateOverviewCorner('topright', x + width, y, 5, 5);\n        this.updateOverviewCorner('bottomleft', x, y + height, 5, 5);\n        this.updateOverviewCorner('bottomright', x + width, y + height, 5, 5);\n    };\n    Overview.prototype.updateOverviewCorner = function (name, x, y, width, height) {\n        var attr;\n        var transattr;\n        var rectname = 'visible' + name;\n        var rect = document.getElementById(this.canvas.id + rectname);\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            attr = { x: x, y: y, width: width, height: height, fill: '#ED1C24' };\n            transattr = { x: x - 2, y: y - 2, width: width === 2 ? 4 : width, height: height === 2 ? 4 : height };\n        }\n        else {\n            attr = { cx: x, cy: y, 'r': 4, fill: '#ED1C24' };\n            transattr = { cx: x, cy: y, 'r': 6, fill: 'transparent' };\n        }\n        setAttributeHtml(rect, attr);\n        var transrect = document.getElementById(this.canvas.id + name);\n        setAttributeHtml(transrect, transattr);\n    };\n    Overview.prototype.translateOverviewRectangle = function () {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var viewPort;\n        var zoom = Math.min(this.parent.scroller.viewPortWidth / offwidth, this.parent.scroller.viewPortHeight / offheight);\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var panel = svg.getElementById(this.canvas.id\n            + 'overviewrect');\n        var bounds = panel.getBBox();\n        var x = bounds.x + difx;\n        var y = bounds.y + dify;\n        var width = bounds.width;\n        var height = bounds.height;\n        this.updateOverviewrect(x, y, width, height);\n        this.updateParentView(this.parent.scroller.currentZoom, x, y, width, height, null);\n    };\n    Overview.prototype.renderOverviewRect = function (x, y, width, height) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var viewPort;\n        var viewwidth = (width / offwidth) * this.contentWidth;\n        var viewheight = (height / offheight) * this.contentHeight;\n        var zoom = Math.max(this.parent.scroller.viewPortWidth / viewwidth, this.parent.scroller.viewPortHeight / viewheight);\n        if (zoom >= 0.25 && zoom <= 30) {\n            var point = { x: 0, y: 0 };\n            this.updateParentView(zoom, x, y, width, height, point);\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            if (this.helper) {\n                var panel = this.element.getElementsByTagName('rect')[10];\n                var svgRect = panel.getBBox();\n                bounds.x = svgRect.x;\n                bounds.y = svgRect.y;\n            }\n            this.updateOverviewrect(bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.scrollOverviewRect = function (hoffset, voffset, currentZoom, scaled) {\n        if (!(this.actionName) || scaled) {\n            var offwidth = Number(this.model.width);\n            var offheight = Number(this.model.height);\n            var scale = Math.min(this.contentWidth / offwidth, this.contentHeight / offheight);\n            var bounds = new Rect();\n            var x = bounds.x = (hoffset / currentZoom) / scale;\n            var y = bounds.y = (voffset / currentZoom) / scale;\n            var viewPort = void 0;\n            var width = bounds.width = (this.parent.scroller.viewPortWidth / currentZoom) / scale;\n            var height = bounds.height = (this.parent.scroller.viewPortHeight / currentZoom) / scale;\n            var ratio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n            if (scaled) {\n                var rect = new Rect();\n                rect.x = x;\n                rect.y = y;\n                rect.width = width;\n                rect.height = height;\n                return rect;\n            }\n            this.updateOverviewrect(-x, -y, width, height);\n        }\n        return null;\n    };\n    Overview.prototype.updateParentView = function (zoom, x, y, width, height, focusPoint) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scalex = this.contentWidth / offwidth;\n        var scaley = this.contentHeight / offheight;\n        var hoffset = x * scalex * zoom;\n        var voffset = y * scaley * zoom;\n        var delx;\n        var dely;\n        var bounds = this.parent.scroller.getPageBounds();\n        if (zoom !== 1 || this.actionName === 'pan') {\n            delx = -hoffset - this.parent.scroller.horizontalOffset;\n            dely = -voffset - this.parent.scroller.verticalOffset;\n        }\n        if (this.actionName === 'scale' || this.actionName === 'draw') {\n            this.parent.scroller.zoom(zoom / this.parent.scroller.currentZoom, delx, dely, focusPoint);\n        }\n        else {\n            this.parent.pan(delx, dely, focusPoint);\n        }\n    };\n    /** @private */\n    Overview.prototype.updateView = function (view) {\n        var width;\n        var height;\n        var bounds = this.parent.scroller.getPageBounds();\n        width = bounds.width;\n        height = bounds.height;\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scale;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        this.contentWidth = w = Math.max(w, (offwidth / offheight) * h);\n        this.contentHeight = h = Math.max(h, (offheight / offwidth) * w);\n        scale = Math.min(offwidth / w, offheight / h);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        htmlLayer.style.webkitTransform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        var ovw = document.getElementById(this.element.id + '_overviewlayer');\n        ovw.setAttribute('transform', 'translate(' + (-bounds.x * scale) + ',' + (-bounds.y * scale) + ')');\n        this.horizontalOffset = bounds.x * scale;\n        this.verticalOffset = bounds.y * scale;\n        var canvas = document.getElementById(this.element.id + '_diagramLayer');\n        var nativeLayer = getNativeLayer(this.element.id);\n        var context = canvas.getContext('2d');\n        var widthratio = (Number(this.model.width) / this.contentWidth);\n        var heightratio = (Number(this.model.height) / this.contentHeight);\n        widthratio = Math.min(widthratio, heightratio);\n        nativeLayer.setAttribute('transform', 'translate('\n            + (0) + ',' + (0) + '),scale('\n            + widthratio + ')');\n        context.setTransform(widthratio, 0, 0, widthratio, 0, 0);\n        context.fillStyle = 'red';\n        this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom);\n    };\n    // region - Event Handlers\n    Overview.prototype.scrolled = function (evt) {\n        if (this.event) {\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            this.updateOverviewrect(-bounds.x, -bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.updateCursor = function (evt) {\n        if (hasClass(evt.target, ('overviewresizer'))) {\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.canvas.style.cursor = 'w-resize';\n                    break;\n                case this.canvas.id + 'right':\n                    this.canvas.style.cursor = 'e-resize';\n                    break;\n                case this.canvas.id + 'top':\n                    this.canvas.style.cursor = 'n-resize';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.canvas.style.cursor = 's-resize';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.canvas.style.cursor = 'nw-resize';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.canvas.style.cursor = 'ne-resize';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.canvas.style.cursor = 'sw-resize';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.canvas.style.cursor = 'se-resize';\n                    break;\n            }\n        }\n        else {\n            this.canvas.style.cursor = 'default';\n        }\n    };\n    Overview.prototype.mouseMove = function (evt) {\n        this.event = false;\n        this.updateCursor(evt);\n        this.currentPoint = this.mousePosition(evt);\n        if (this.actionName) {\n            switch (this.actionName) {\n                case 'draw':\n                    if (!this.inAction && (this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    if (this.inAction) {\n                        this.updateHelper();\n                    }\n                    break;\n                case 'scale':\n                    if (!this.inAction) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    this.updateOverviewRectangle();\n                    break;\n                case 'pan':\n                    if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y === this.currentPoint.y) || this.inAction) {\n                        this.inAction = true;\n                        this.translateOverviewRectangle();\n                    }\n                    break;\n            }\n        }\n        this.prevPoint = this.currentPoint;\n    };\n    Overview.prototype.documentMouseUp = function (evt) {\n        this.inAction = false;\n        this.actionName = '';\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            var element = document.getElementById(_this.element.id);\n            var bRect = element.getBoundingClientRect();\n            _this.model.width = bRect.width;\n            _this.model.height = bRect.height;\n            _this.renderCanvas();\n            _this.setParent(_this.sourceID);\n        }, 10);\n        return false;\n    };\n    /** @private */\n    Overview.prototype.mouseDown = function (evt) {\n        if (evt.target.id === this.canvas.id + '_overviewsvg') {\n            this.actionName = 'draw';\n        }\n        if (evt.target.id === this.canvas.id + 'overviewrect') {\n            this.actionName = 'pan';\n        }\n        if (hasClass(evt.target, 'overviewresizer')) {\n            this.actionName = 'scale';\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.resizeDirection = 'left';\n                    break;\n                case this.canvas.id + 'right':\n                    this.resizeDirection = 'right';\n                    break;\n                case this.canvas.id + 'top':\n                    this.resizeDirection = 'top';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.resizeDirection = 'bottom';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.resizeDirection = 'topleft';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.resizeDirection = 'topright';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.resizeDirection = 'bottomleft';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.resizeDirection = 'bottomright';\n                    break;\n            }\n        }\n        this.startPoint = this.prevPoint = this.mousePosition(evt);\n        this.viewPortRatio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n        var overViewHandle = document.getElementById(this.canvas.id + 'overviewhandle');\n        overViewHandle.style.pointerEvents = 'none';\n    };\n    Overview.prototype.mouseUp = function (evt) {\n        this.currentPoint = this.mousePosition(evt);\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        if (this.actionName) {\n            if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                if (this.actionName === 'pan') {\n                    var i = 0;\n                }\n                else {\n                    if (this.helper) {\n                        var bounds = (this.element.getElementsByTagName('rect')[10]).getBBox();\n                        this.resizeDirection = this.resizeDirection || '';\n                        var x = bounds.x;\n                        var y = bounds.y;\n                        var width = bounds.width;\n                        var height = bounds.height;\n                        var adjust = this.resizeDirection === 'topleft' || this.resizeDirection === 'topright' ||\n                            this.resizeDirection === 'bottomleft' || this.resizeDirection === 'bottomright';\n                        this.renderOverviewRect(x, y, width, height);\n                    }\n                }\n            }\n            else {\n                if (evt.target.id === this.canvas.id + '_overviewsvg' || evt.target.id === 'helper') {\n                    var svg = this.element.getElementsByTagName('svg')[2];\n                    var g = svg.getElementById(this.canvas.id\n                        + 'overviewrect');\n                    var bounds = g.getBBox();\n                    var width = bounds.width;\n                    var height = bounds.height;\n                    this.inAction = true;\n                    this.actionName = 'pan';\n                    this.renderOverviewRect(this.currentPoint.x - width / 2, this.currentPoint.y - height / 2, width, height);\n                    this.inAction = false;\n                }\n            }\n        }\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.actionName = '';\n        this.startPoint = null;\n        this.currentPoint = null;\n        this.prevPoint = null;\n        this.helper = null;\n        this.viewPortRatio = 1;\n        this.resizeDirection = '';\n        this.inAction = false;\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.initHelper = function () {\n        var g = this.element.getElementsByTagName('svg')[2];\n        var scale = this.parent.scroller.currentZoom;\n        var x = this.startPoint.x;\n        var y = this.startPoint.y;\n        var width = 1;\n        var height = 1;\n        if (this.actionName === 'scale') {\n            var rect = g.\n                getElementById(this.canvas.id + 'overviewrect');\n            var bounds = rect.getBBox();\n            x = bounds.x;\n            y = bounds.y;\n            width = bounds.width;\n            height = bounds.height;\n        }\n        var selectionRect = createSvgElement('rect', {\n            'id': 'helper', x: x, y: y, width: width, height: height,\n            'fill': 'transparent', 'stroke': 'gray', 'stroke-dasharray': '2 2', 'shape-rendering': 'crispEdges'\n        });\n        var overviewLayer = g.getElementById(this.element.id + '_overviewlayer');\n        overviewLayer.appendChild(selectionRect);\n        this.helper = selectionRect;\n    };\n    Overview.prototype.mousePosition = function (evt) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (evt.type.indexOf('touch') !== -1) {\n            touchArg = evt;\n            var pageX = touchArg.changedTouches[0].clientX;\n            var pageY = touchArg.changedTouches[0].clientY;\n            offsetX = pageX - this.element.offsetLeft;\n            offsetY = pageY - this.element.offsetTop;\n        }\n        else {\n            offsetX = evt.clientX;\n            offsetY = evt.clientY;\n        }\n        var boundingRect = this.element.getBoundingClientRect();\n        offsetX = offsetX - boundingRect.left;\n        offsetY = offsetY - boundingRect.top;\n        return { x: offsetX + this.horizontalOffset, y: offsetY + this.verticalOffset };\n    };\n    // end region - Event handlers\n    /**\n     * To destroy the Overview\n     * @return {void}\n     * @private\n     */\n    Overview.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-overview');\n            var content = document.getElementById(this.element.id + '_canvas');\n            if (content) {\n                this.element.removeChild(content);\n            }\n        }\n        this.parent.views.splice(this.parent.views.indexOf(this.element.id), 1);\n        this.diagramLayerDiv = null;\n        this.canvas = null;\n        this.parent = null;\n    };\n    /**\n     * Get module name.\n     */\n    Overview.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Overview';\n    };\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], Overview.prototype, \"sourceID\", void 0);\n    __decorate([\n        Event()\n    ], Overview.prototype, \"created\", void 0);\n    return Overview;\n}(Component));\nexport { Overview };\n"],"names":["processPathData","data","j","collection","arrayCollection","parsePathData","length","i","ob","char","toLowerCase","push","command","x","y","x1","y1","x2","y2","r1","r2","angle","largeArc","sweep","tokenizer","current","commands","match","lastIndex","isExponential","exec","substring","Number","getRectanglePath","cornerRadius","height","width","point2","next","path","points","corners","corner","getPolygonPath","seg","pathSegmentCollection","x0","y0","segments","prev","ctrl","cpt2","newSeg","transformPath","arr","sX","sY","s","bX","bY","iX","iY","undefined","scalePathData","toFixed","updatedSegment","getPathString","segment","obj","isScale","val","scaleFactor","oldOffset","newOffset","splitArrayCollection","test","getNewString","getString","string","cmd","ang","l","identityMatrix","Matrix","MatrixTypes","Identity","transformPointByMatrix","matrix","point","pt","type","Translation","offsetX","offsetY","Scaling","m11","m22","num","m21","num2","m12","multiplyPoint","Math","round","transformPointsByMatrix","transformedPoints","_i","points_1","rotateMatrix","centerX","centerY","multiplyMatrix","result","sin","cos","Unknown","setMatrix","createRotationRadians","scaleMatrix","scaleX","scaleY","createScaling","translateMatrix","matrix1","matrix2","type2","assignMatrix","mat","getBasicShape","shape","basicShapes","toString","getPortShape","portShapes","getDecoratorShape","decorator","pathData","decoratorShapes","getIconShape","icon","getFlowShape","flowShapes","findConnectorPoints","element","layoutOrientation","intermeditatePoints","sourcePoint","sourceWrapper","center","srcPoint","sourcePortWrapper","srcPort","srcNode","getPortDirection","cornersPointsBeforeRotation","bounds","sourceID","targetWrapper","sPoint","tPoint","getIntersection","getSourcePoint","tarPoint","sourceCorners","targetCorners","sourceNode","targetNode","sourcePort","targetPort","targetPortWrapper","source","srcCorner","direction","srcDir","margin","left","right","bottom","top","target","tarCorner","tarDir","port","tarPortPt","getDirection","abs","id","equals","containsPoint","topCenter","ele","sPt","tPt","refPoint","sourceEle","targetEle","tarPort","srcCor","tarCor","srcBounds","swapBounds","tarBounds","isInterSect","connector","sourceSegment","createSegmentsCollection","sourcePadding","targetSegment","targetPadding","srcSegment","tarSegmet","intersect3","enabled","checkSourceAndTargetIntersect","addPaddingToConnector","findPoint","getOppositeDirection","first","checkLastSegmentasTerminal","Point","isEmptyPoint","vector1","distance","value","max","transform","vector2","intermeditatePointsForStraight","removeSegment","checkConsectiveSegmentAsSame","updateSegmentPoints","checkSourcePointInTarget","nodeOrPortToNode","pointToPort","checkPreviousSegment","splice","checkPortdirection","returnIntermeditatePoints","findIntermeditatePoints","OrthogonalSegment","extra","swap","getSwapping","swapPoints","pts","diffY","min","NoOfSegments","One","Three","Five","getRightToLeftSegmentCount","sourceObj","targetObj","diffX","middleRight","getRightToRightSegmentCount","Two","Four","getRightToTopSegmentCount","bottomCenter","getRightToBottomSegmentCount","getBottomToTopSegmentCount","difX","getBottomToBottomSegmentCount","bottomLeft","middleLeft","getBottomToLeftSegmentCount","getLeftToLeftSegmentCount","getLeftToTopSegmentCount","bottomRight","getTopToTopSegmentCount","segLength","src","tar","adjustSegmentLength","orthoConnection2Segment","orthoConnection3Segment","prevDir","orthoConnection4Segment","segmentValue","sLeft","sRight","sBottom","sTop","tLeft","tRight","tBottom","tTop","addLineSegment","orthoConnection5Segment","addOrthoSegments","findOrthoSegments","defaultOrthoConnection","node","fixedPoint","nodeMargin","nodeConnectingPoint","nodeDirection","source_1","target_1","findDirection","segmentPoint","connectToOneEnd","seg_1","lastSegment","pointToNode","pointToPoint","findPointToPointOrtho","terminateConnection","targetPoint","setLineEndPoint","segPoint","portdirection","length_1","findSourceDirection","addPoints","update","portDir","findSegmentDirection","endPoint","isTarget","reverse","pointsFromNodeToPoint","tPoints","actualSegment","actualLastPoint","distancePoints","padding","paddingPort","rect","Rect","actualSize","segmentPoints","topLeft","topRight","thisSegment","getIntersectionPoints","getPoints","createLineSegment","object","outerBounds","rectBounds","rotateAngle","parentTransform","dir","BezierSegment","StraightSegment","length_3","lastPoint","nodeCorners","top_1","shortes","MAX_VALUE","findAngle","e","r","re","findLength","es","asin","PI","cor","isTar","child","wrapper","sPt1","rotatePoint","tPt1","angle_2","angle_3","PathElement","split","minimal","intersection","intersectSegment","isNaN","intersect","dist","segment1","segment2","a1","a2","b1","b2","c1","c2","r3","r4","denom","offset","x3","y3","x4","y4","sameSign","a","b","point1","allow","temp","diffx","diffy","interPt","getLeftLength","getRightLength","preDir","getTopLength","getBottomLength","getOrtho3Seg","orientation","point3","gap","closeEdge","boundsValue","one","two","three","four","fourty5","one35","two25","three15","getOuterBounds","children","sourceDecorator","uniteRect","targetDecorator","initTooltip","diagram","tooltipOption","Tooltip","updateTooltipContent","tooltip","beforeCollision","beforeOpen","cssClass","opensOn","appendTo","close","args","this","content","style","display","collidedPosition","position","updateTooltip","tooltipObject","showTipPointer","animation","effect","excludeBounds","part","isEmptyVector","getBezierPoints","getBezierBounds","startPoint","controlPoint1","controlPoint2","minx","miny","maxx","maxy","t","bezierPoints","renderRuler","isHorizontal","div","document","getElementById","rulerSize","getRulerSize","rulerGeometry","getRulerGeometry","createHtmlElement","insertBefore","firstChild","diagramRuler","rulerSettings","horizontalRuler","verticalRuler","ruler","Ruler","segmentWidth","hRuler","vRuler","rulerObj","updateRuler","hOffset","scroller","horizontalOffset","vOffset","verticalOffset","showRulers","updateRulerDimension","removeRulerElements","removeElement","thickness","Size","viewPortHeight","viewPortWidth","clientWidth","clientHeight","updateRulerDiv","updateRulerSpace","scale","currentZoom","arrangeTick","getFunction","dataBind","marginLeft","hRulerOffset","marginTop","vRulerOffset","canSelect","ShapeAnnotation","PathAnnotation","constraints","AnnotationConstraints","Select","Connector","ConnectorConstraints","NodeConstraints","canMove","Drag","Selector","canEnablePointerEvents","PointerEvents","canDragSourceEnd","DragSourceEnd","canDragTargetEnd","DragTargetEnd","canDragSegmentThumb","DragSegmentThumb","canRotate","Rotate","canShadow","Shadow","canInConnect","Node","InConnect","canPortInConnect","PortConstraints","None","canOutConnect","OutConnect","canPortOutConnect","canResize","returnValue","Resize","ResizeSouthEast","ResizeEast","ResizeNorthEast","ResizeSouth","ResizeNorth","ResizeSouthWest","ResizeWest","ResizeNorthWest","canAllowDrop","AllowDrop","canVitualize","DiagramConstraints","Virtualization","canSingleSelect","model","tool","DiagramTools","SingleSelect","canZoomPan","ZoomPan","canContinuousDraw","ContinuousDraw","canDrawOnce","DrawOnce","defaultTool","MultipleSelect","canUserInteract","UserInteraction","canZoomTextEdit","ZoomTextEdit","canPageEditable","ApiUpdate","canApiInteract","diagramActions","DiagramAction","ToolAction","canDraw","Draw","canDrag","canDrawThumbs","rendererActions","RendererAction","DrawSelectorBorder","avoidDrawSelector","PreventRenderSelector","getUMLActivityShape","umlActivityShapes","updateCanvasBounds","isBoundsUpdate","container","groupAction","checkParentAsContainer","protectPropertyChange","nameTable","parentId","parentWrapper","parent_1","updateLaneBoundsAfterAddChild","parent_2","shape_1","rowIndex","columns","updateColumnWidth","columnIndex","phaseSize","updatePhaseMaxWidth","updateHeaderMaxWidth","drag","updateRowHeight","select","updateConnectorsProperties","removeChildInContainer","undoObj","cloneObject","clearSelection","removeChildrenInLane","entry","category","undoObject","redoObject","addHistoryEntry","commandHandler","isContainer","endGroupAction","findBounds","isHeader","rows","cells","createHelper","newObj","_a","Object","keys","prop","getObjectType","initObject","updateDiagramObject","renderContainerHelper","nodes","selectedObject","helperObject","selectedItems","connectors","actualObject","minWidth","minHeight","maxWidth","maxHeight","strokeDashArray","fill","strokeColor","strokeWidth","isChild","parentNode","checkChildNodeInContainer","nodePropertyChange","isLane","measure","arrange","desiredSize","prevParentNode","swimlane","canvasId","slice","prevParentId","lanes","lane","deleteChild","addChildToContainer","parent","isUndo","currentSymbol","getObject","indexOf","removeElements","addChild","currentParentId","UndoRedo","swimLane","isUpdateRow","isGroupAction","containerBounds","containerOuterBounds","nodeBounds","grid","size","startGroupAction","swimLaneMeasureAndArrange","checkPhaseOffset","checkLaneSize","columnDefinitions","rowDefinitions","canvas","laneHeader","Canvas","childNode","considerSwimLanePadding","renderStackHighlighter","isVertical","isUml","isSwimlane","adornerSvg","getAdornerLayerSvg","diagramRenderer","moveChildInStack","action","sourceParent","targetIndex","sourceIndex","undoElement","initSwimLane","row","index","header","hasHeader","createRow","totalHeight","phases","phaseHeight","phaseOffset","initGridRow","cols","k","totalWidth","createColumn","initGridColumns","setDefinitions","annotations","annotation","addObjectToGrid","addObject","headerDefine","randomId","phaseDefine","laneCollection","isPhase","HideThumbs","DiagramElement","isCalculateDesiredSize","TextElement","canConsiderBounds","isLaneOrientation","refreshTextElement","indexValue","phaseIndex","rowValue","colValue","phaseObject","laneIndex","laneNode","gridCell","childWrapper","phaseCount","Default","ReadOnly","RowDefinition","ColumnDefinition","getConnectors","isRowUpdate","edges","conn","i_1","inEdges","outEdges","concat","GridPanel","isMeasure","ChangeLaneIndex","startRowIndex","subChild","cell","arrangeChildNodesInSwimLane","rowvalue","columnValue","col","addChildToLane","k_1","findStartLaneIndex","updateChildOuterBounds","checkLaneChildrenOffset","phaseRow","phase","gridRowIndex","connectorPropertyChange","targetID","laneInterChanged","sourceLaneIndex","targetLaneIndex","updateRowIndex","columnSpan","updateColumnIndex","updateSwimLaneObject","helperWidth","helperHeight","objWidth","objHeight","findLaneIndex","laneObj","headerNode","addLane","count","redoObj","orientation_1","Lane","rowDef","addRow","colDef","addColumn","changeType","addChildNodeToNewLane","addPhase","newPhase","phaseNode","previousPhase","nextPhase","laneHeaderSize","phasesCollection","orientation_2","nextCol","addPhase_1","nextRow","addPhase_2","historyManager","currentEntry","isLastPhase","prevPhase","prevOffset","addPhase_3","addPhase_4","addLastPhase","phaseObj","Phase","fristRow","i_2","nextCell","prevCell","addSwimlanePhases","addHorizontalPhase","nextPhaseNode","prevRow","addVerticalPhase","desiredCellWidth","desiredCellHeight","changeCell","zIndex","arrangeChildInGrid","swimLaneSelection","pasteSwimLane","clipboardData","cloneLane","childX","childY","ranId","nodeX","nodeY","childTable","pasteIndex","add","i_3","mode","refreshDiagramLayer","gridSelection","selectorModel","isSymbolDrag","targetnode","swimLaneId","removeLaneChildNode","swimLaneNode","currentObj","isChildNode","preventHistory","lanenode","removeDependentConnector","remove","getGridChildren","deleteNode","removeFromAQuad","removeObjectsFromLayer","removeChildren","removePhase","findPhaseIndex","phaseLength","actualChild","prevCanvas","prevChild_1","prevNode","object_1","removeColumn","removeHorizontalPhase","prevChild","removeRow","removeVerticalPhase","completeRegion","region","selectedObjects","containsRect","findNodeByName","name","findObjectType","drawingObject","setSwimLaneDefaults","setUMLActivityDefaults","flow","findNearestPoint","reference","start","end","shortestPoint","angleBWStAndEnd","angleBWStAndRef","vaAngle","isDiagramChild","htmlLayer","parentElement","hasClass","groupHasType","isPointOverConnector","intermediatePoints","bezierPoint1","bezierPoint2","pointsForBezier","toBounds","Inflate","hitPadding","intersectinPt","intersectDetails","intersectPt","rect_1","lineUtil1","lineUtil2","l1","l2","d","na","nb","ua","ub","intersect2","start1","end1","start2","end2","line3","getLineSegment","line","getTooltipOffset","mousePosition","inheritTooltip","InheritTooltip","objectTooltip","isMouseBased","getBoundingClientRect","offsetPoint","tooltipOffset","relativeMode","bound","sort","objects","option","getBounds","getAnnotationPosition","getloop","getOffsetOfConnector","alignednumber","getAlignedPosition","offsetLength","prevLength","kCount","lengths","cnst","state","alignment","alignLabelOnSegments","vAlign","hAlign","getBezierDirection","removeChildNodes","getChild","serialize","removeNodes","getSwimLaneChildren","clonedObject","getCustomProperty","serializationSettings","preventDefaults","removeUnnecessaryNodes","JSON","stringify","defaultObject","isNodeShape","constructor","Diagram","Path","Native","Html","Image","Text","BasicShape","FlowShape","BpmnShape","UmlActivityShape","UmlClassifierShape","SwimLane","Header","PointPort","BpmnGateway","BpmnDataObject","BpmnEvent","BpmnSubEvent","BpmnActivity","BpmnAnnotation","MethodArguments","UmlClassAttribute","UmlClassMethod","UmlClass","UmlInterface","UmlEnumerationMember","UmlEnumeration","ChildContainer","Stop","UserHandle","Command","getConstructor","properties","properties_1","property","Array","every","isSameArray","preventArrayDefaults","deserialize","clear","map","dataSourceSettings","doBinding","nodeTemp","setNodeTemplate","getDescription","commandManager","execute","canExecute","arrangeTickHorizontal","arrangeTickVertical","getLayoutInfo","layout","getBranch","nodeDefaults","getNodeDefaults","connectorDefaults","getConnectorDefaults","dataObj","parse","upgrade","contextMenuSettings","bridgeDirection","pageSettings","addInfo","scrollSettings","layers","_b","_c","backgroundColor","basicElements","snapSettings","isLoading","component","views","refresh","classList","version","nodes_1","ports","updateStyle","changedObject","textElement","canApplyStyle","StrokeStyle","textOverflow","opacity","bold","color","textWrapping","fontFamily","fontSize","italic","textAlign","whiteSpace","textDecoration","changedGradient","targetGradient","key","cx","cy","fx","fy","stops","updateGradient","gradient","updateHyperlink","actualAnnotation","hyperlink","link","labelStyle","updateShapeContent","horizontalAlignment","verticalAlignment","visible","elementId","updateShape","oldObject","pathContent","imageContent","ImageElement","imageAlign","align","imageScale","flowShapeElement","nativeContent","DiagramNativeElement","htmlContent","DiagramHtmlElement","updateContent","newValues","nativeElement","getDiagramElement","removeChild","appendChild","getContent","htmlElement","flowshapedata","updateUmlActivityNode","basicShapeData","canMeasurePath","umlActivityShapeData","getUMLFinalNode","finalNodeShape","innerFinalNode","outerFinalNode","getUMLActivityShapes","umlActivityShape","removeGradient","svgId","removeItem","array","item","updateConnector","anglePoint","srcDecorator","tarDecorator","updateSegmentElement","firstSegment","clipDecorators","updateDecoratorElement","updateShapeElement","getUserHandlePosition","selectorItem","handle","pivot","side","connectorOffset","getPointloop","canResizeCorner","selectorConstraints","thumbsConstraints","SelectorConstraints","ThumbsConstraints","canShowCorner","checkPortRestriction","portVisibility","visibility","findAnnotation","annotationId","findPort","portId","getInOutConnectPorts","isInConnect","findObjectIndex","getObjectFromCollection","scaleElement","sw","sh","refObject","Container","newPosition","arrangeChild","drop","initContainer","init","insertObject","low","high","mid","floor","getElement","diagramElement","diagramId","instance","symbolPalette","palettes","symbols","getPaletteSymbols","nodeId","getAnnotation","enterObject","enterTable","getPoint","w","h","cornerPoint","trans","getULMClassifierShapes","classifier","textWrap","classShape","enumerationShape","interfaceShape","member","members","addSeparator","memberText","getStyle","isSeparator","attributes","attributeText","text","attribute","scope","getClassNodes","methods","argumentText","methodText","method","parameters","getClassMembers","borderColor","stack","lineObject","newStyle","getChildNode","Browser","info","childNodes","nodeType","measurePath","measureElement","window","setAttribute","getBBox","svgBounds","wrapSvgText","textValue","laneWidth","txtValue","bounds1","breakWord","bBoxText","dy","replace","ceil","words","newText","existingWidth","existingText","wrap","eachLine","wordWrapping","measureHtmlText","fontWeight","fontStyle","textContent","whiteSpaceToString","wordBreak","wordBreakToString","body","offsetWidth","offsetHeight","measureText","wrapBounds","options","stroke","pivotX","pivotY","dashArray","shadow","description","doWrap","textAlignToString","getTextOptions","txtWidth","wrapSvgTextAlign","updatePath","bBox","newPathString","getDiagramLayerSvg","elementcoll","getElementsByClassName","contentId","querySelector","getDomIndex","viewId","layer","postId","getNativeLayer","getHTMLLayer","diagramLayerSvg","getDiagramLayer","childElement","getSelectorElement","getAdornerLayer","getNativeLayerSvg","getGridLayerSvg","getBackgroundLayerSvg","getBackgroundLayer","elementType","createElement","setAttributeHtml","createSvgElement","createElementNS","setAttributeSvg","parentsUntil","elem","selector","isID","className","animVal","addTouchPointer","touchList","touches","pageX","clientX","pageY","clientY","pointerId","isHtml","sentNode","compile","compiledString","cloneNode","svg","createMeasureElements","usageCount","divElement","imageElement","createTextNode","tSpan","setAttributeNS","setChildPosition","chars","crypto","Uint16Array","msCrypto","getRandomValues","random","additionalProp","newObject","sourceObject","customProperties","propAdditional","internalProp","getInternalProperties","hasOwnProperty","cloneArray","HTMLElement","innerHtml","propName","sourceArray","clonedArray","extendObject","childObject","extendeArray","extendArray","extendedObject","childArray","reset","middleElement","overFlow","middle","substr","rotateSize","minX","minY","maxX","maxY","getOffset","getValue","findToolToActivate","touchStart","touchMove","hasSelection","userHandles","obj_1","contains","paddedBounds","selectorBnds","hasSingleConnection","conn_1","sourcePaddingValue","targetPaddingValue","connectorEditingToolModule","allowDrag","checkForConnectorSegment","ten","rotateThumb","labelSelection","labelRotate","forty","checkResizeHandleForContainer","checkForResizeHandles","checkResizeHandles","findPortToolToActivate","isSelected","PortVisibility","Hover","Visible","sourcePortID","currentDrawingObject","firstLevel","getCursor","cursor","cursors","getBpmnShapePathData","bpmnShapes","getBpmnTriggerShapePathData","bpmnTriggerShapes","getBpmnGatewayShapePathData","bpmnGatewayShapes","getBpmnTaskShapePathData","bpmnTaskShapes","getBpmnLoopShapePathData","bpmnLoopShapes","getGraphBounds","collectionContains","coll","prototype","isEmpty","clone","__extends","extendStatics","setPrototypeOf","__proto__","p","__","create","__decorate","decorators","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","_super","apply","sqrt","pow","atan2","pt1","pt2","getLengthFromListOfPoints","adjustPoint","isStart","getClassName","Property","ChildProperty","get","enumerable","configurable","rect1","rect2","NaN","unitePoint","intersects","empty","MIN_VALUE","getGradientType","LinearGradient","RadialGradient","Thickness","Margin","Gradient","Collection","ShapeStyle","ComplexFactory","TextStyle","SnapConstraints","ElementAction","Transform","RenderMode","KeyModifiers","Keys","RealAction","DiagramEvent","contextMenuClick","contextMenuOpen","contextMenuBeforeItemRender","isDirt","isExport","exportScaleValue","exportScaleOffset","flip","Self","Parent","preventContainer","isSvgRender","staticSize","isRectElement","flipOffset","elementActions","unitMode","float","floatingBounds","setOffsetWithRespectToBounds","getAbsolutePosition","set","availableSize","validateDesiredSize","updateBounds","_this","desiredBounds","measureChildren","prevRotateAngle","hasChildren","childBounds","desired","force","GetChildrenBounds","offsetPt","newPoint","stretchChildren","ElementIsGroup","applyPadding","findChildOffsetFromCenter","childSize","call","canMeasure","textNodes","textWrapBounds","leftMargin","topMargin","isStack","alignChildBasedOnParent","alignChildBasedOnaPoint","parentSize","Rectangle","Ellipse","Hexagon","Parallelogram","Triangle","Plus","Star","Pentagon","Heptagon","Octagon","Trapezoid","Decagon","RightTriangle","Cylinder","Diamond","absolutePath","absoluteBounds","pointTimer","setTimeout","sample","sampleLength","pathNode","pathLength","getTotalLength","getPointAtLength","findSegmentPoints","translatedPts","translatePoints","imageSource","stretch","contentSize","measureImage","template","nativeSVG","measureNativeContent","templatePosition","getAvailableSize","measureNativeSvg","Port","Complex","Connect","defaultValue","isArray","Hyperlink","Annotation","parentObj","InheritReadOnly","X","Circle","Square","OpenArrow","Fletch","OpenFetch","IndentedArrow","OutdentedArrow","DoubleArrow","Arrow","Process","Decision","Document","PreDefinedProcess","Terminator","PaperTap","DirectData","SequentialData","Sort","MultiDocument","Collate","SummingJunction","Or","InternalStorage","Extract","ManualOperation","Merge","OffPageReference","SequentialAccessStorage","Annotation2","Data","Card","Delay","Preparation","Display","ManualInput","LoopLimit","StoredData","IconShape","DiagramTooltip","NodeBase","getConnectorType","BpmnFlow","ActivityFlow","RelationShip","ConnectorShape","getSegmentType","Decorator","Vector","ConnectorSegment","MultiplicityLabel","ClassifierMultiplicity","bridges","status","bpmnElement","getSegmentElement","getConnectorPoints","getBpmnSequenceFlow","getBpmnAssociationFlow","getBpmnMessageFlow","updateShapePosition","getUMLObjectFlow","getUMLExceptionFlow","getConnectorRelation","anglePoints","getDecoratorElement","wrapperContent","getAnnotationElement","relationship","associationType","lower","upper","text1","sourceText","targetText","multiplicity","lowerBounds","upperBounds","optional","pathseq","updatePathElement","midPt","xDist","yDist","fractionOfTotal","midPt2","midPt1","segmentMessage","findDistance","findPath","sourcePt","targetPt","textele","updateAnnotation","canRefresh","pivotPoint","segmentAngle","horizor","verzor","displacement","newPoints","clipDecorator","isSource","len","segmentPath","getSegmentPath","connectorSegment","segmentElement","flipConnector","adjacentPoint","decEle","bridgePath","pointIndex","n","bridge","rendered","segmentPointIndex","getPath","getPt","st","m","j_1","j_2","targetPortID","j_3","tx","ty","connWidth","connHeight","CollectionFactory","preRender","unWireEvents","wireEvents","render","updateRulerGeometry","getModuleName","destroy","notify","getPersistData","addOnPersist","onPropertyChanged","newProp","oldProp","renderRulerSpace","getRulerSVG","Infinity","unitLength","unitOffset","updateSegments","run","rulerSegment","getNewSegment","updateSegment","segWidth","updateSegmentWidth","startValue","label","defStartValue","updateTickLabel","translate","lastChild","isRightOrBottom","tickAlignment","attr","createNewTicks","createTickLabel","tick","tickInterval","g","class","interval","createTick","getLinePoint","linePoint","tickLength","stroke-width","multiples","log","createMarkerLine","rulerSvg","drawRulerMarker","currentPoint","diff","rulerSvgElements","getElementsByTagName","markerColor","move","rulerSpace","Component","getWrapper","All","Action","MergeNode","InitialNode","ForkNode","JoinNode","TimeEvent","AcceptingEvent","SendSignal","ReceiveSignal","StructuredNode","Note","KeyGesture","CommandManager","ContextMenuSettings","cellStyle","desiredRowHeight","rowDefns","colDefns","rowId","columnId","rowSpan","GridCellItem","addObjectToCell","updateProperties","rowDefn","GridRow","defaultCell","columns_1","addCellInRow","colDefn","GridCell","calculateSize","calculateHeight","calculateWidth","isConsiderChild","setTextRefresh","calculateCellHeightBasedOnChildren","calculateCellHeight","colId","calculateCellWidthBasedOnChildren","calculateCellWidth","colIndex","calculateCellSizeBasedOnChildren","maxSize","maxBounds","column","currentIndex","newIndex","tempRow","tempSize","tempCol","_d","_e","cellIndex","_f","_g","isChange","cellX","cellWidth","cellHeight","z","removeCell","updatePortEdges","portContent","alignElement","updateConnectorEdges","pathseqData","pathElement","beginningpoint","transferpt","startpoint","endpoint","StackPanel","updateSize","updateHorizontalStack","updateVerticalStack","measureStackPanel","arrangeHorizontalStack","arrangeVerticalStack","arrangeStackPanel","applyChildMargin","updatePosition","rotatedSize","parenBounds","getShapeType","Shape","BpmnTask","BpmnTransactionSubProcess","event","trigger","BpmnSubProcess","isCanvasUpdate","processId","umlIndex","nodeDefault","textStyle","basicshape","basicshapedata","flowshape","bpmnModule","initBPMNContent","subProcess","activity","processes","children_1","collapsed","updateElementVisibility","borderWidth","initPorts","accessibilityContent","initPortWrapper","ElementIsPort","contentAccessibility","getIconOffet","initIcons","isExpanded","expandIcon","collapseIcon","iconContainer","initIconSymbol","initAnnotations","virtualize","initAnnotationWrapper","pathdata","annotationcontent","initIconContainer","iconContent","iconContentBounds","CanvasRenderer","getContext","setCanvasSize","renderGradient","ctx","grd","linear","createLinearGradient","radial","createRadialGradient","stop_1","addColorStop","fillStyle","renderShadow","save","beginPath","strokeStyle","globalAlpha","transX","transY","rotateContext","renderPath","fillRect","closePath","restore","createCanvas","canvasObj","setStyle","lineWidth","parseDashArray","setLineDash","rotate","setFontStyle","font","dashes","separator","splittedDashes_1","drawRectangle","drawPath","segs","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","curr","rx","ry","xAxisRotation","cp","currp","cpp","centp","u","v","ad","ra","sx","sy","arc","drawText","parentSvg","ariaLabel","scaleValue","labelAlign","fillText","startPointX","startPointY","endPointX","endPointY","loadImage","image","drawImage","fromPalette","ctx_1","pivotX_1","pivotY_1","imageObj","onload","alignOptions","srcWidth","srcHeight","destinationW","destinationH","resultWidth","resultHeight","xalign","yalign","getSliceOffset","sWidth","sHeight","dWidth","dHeight","canvas1","srcRatio","destRatio","getMeetOffset","arg","res","dest","acos","labelX","labelY","pointx","pointy","SvgRenderer","shadowElement","tX","tY","svgContainer","onlyRect","isSelector","aria-label","setSvgStyle","updateSelectionRegion","gElement","createGElement","drawLine","drawCircle","enableSelector","circle","classval","radius","setSvgFontStyle","textNode","tspanElement","innerHtmlTextElement","innerHTML","svgLabelAlign","setText","text-decoration","imgAlign","aspectRatio","charAt","preserveAspectRatio","drawHTMLContent","drawNativeContent","clipPath","setNativTransform","drawClipPath","contentWidth","contentHeight","group","clipWidth","clipHeight","defs","offset_1","stopElement","lineargradient","radialgradient","wrapBound","pos","pointX","pointY","DiagramRenderer","svgRender","isSvgMode","renderer","svgRenderer","setCursor","setLayers","iconSvgLayer","adornerSvgLayer","nativeSvgLayer","diagramSvgLayer","getParentSvg","targetElement","getParentElement","defaultParent","svgElement","layerGElement","groupElement","getGroupElement","nativeSvg","renderElement","createParent","renderContainer","renderImageElement","renderPathElement","renderTextElement","renderNativeElement","renderHTMLElement","renderRect","drawSelectionRectangle","adornerLayer","renderHighlighter","renderResizeHandle","canMask","enableNode","nodeConstraints","renderPivotLine","renderRotateThumb","renderBorder","nodeWidth","nodeHeight","renderCircularHandle","renderEndPointHandle","connectedSource","connectedTarget","isSegmentEditing","ConnectorSource","ConnectorTarget","renderOrthogonalThumbs","segment_1","bezierPoint","renderBezierLine","renderOrthogonalThumb","getBaseAttributes","connected","isBorderTickness","renderUserHandler","pathSize","newData","pathColor","handleContent","element_1","sourceWidth","sourceHeight","pathBounds","renderSvgGridlines","gridSvg","pattern","ShowHorizontalLines","ShowVerticalLines","hWidth","hHeight","hSegmentwidth","vSegmentwidth","isRulerGrid","dynamicGrid","horizontalGridlines","scaledIntervals","verticalGridlines","lineIntervals","scaleSnapInterval","patternUnits","horizontalSvgGridlines","verticalSvgGridlines","hLine","space","intervals","lineColor","lineDashArray","updateLineIntervals","vLine","updateGrid","svgGrid","newInterval","snapIntervals","gridlines","templateWidth","templateHeight","nativeLayer","imageWidth","imageHeight","widthRatio","heightRatio","ratio","svgParent","hasNativeParent","svgNativeParent","svgParent_1","parentG","renderFlipElement","posX","posY","drawRect","renderSvgBackGroundImage","background","bgimageLayer","getBackgroundImageLayer","transformLayers","svgMode","getGridLayer","updateNode","diagramElementsLayer","insertIndex","Background","PageSettings","ScrollSettings","ServiceLocator","services","register","getService","Gridlines","SnapSettings","DiagramRuler","RulerSettings","CrudAction","ConnectionDataSource","DataSource","Layout","PortDraw","ConnectorSourceEnd","ConnectorTargetEnd","BezierSourceThumb","BezierTargetThumb","OrthoThumb","SegmentEnd","Pan","PortDrag","LabelSelect","LabelDrag","LabelRotate","LabelResizeWest","LabelResizeEast","LabelResizeSouth","LabelResizeNorth","LabelResizeNorthEast","LabelResizeNorthWest","LabelResizeSouthEast","LabelResizeSouthWest","ToolBase","protectChange","inAction","isProtectChange","currentElement","blocked","isTooltipVisible","checkProperty","undoParentElement","startAction","mouseDown","startPosition","currentPosition","prevPosition","checkPropertyValue","startTransaction","mouseMove","mouseUp","endTransaction","endAction","closeTooltip","mouseWheel","mouseLeave","initialBounds","horizontalsnap","snapped","verticalsnap","difx","dify","snapEnabled","snappingModule","canSnap","snapLine","getLayer","deltaWidth","deltaHeight","snapLeft","snapRight","snapTop","snapBottom","getPivot","SelectTool","clearSelectedItems","doRubberBandSelection","arrayNodes","getSelectedObject","ctrlKey","clickCount","unSelect","selectObjects","labelSelect","ConnectTool","ConnectorDrawingTool","segmentpoint1","segmentpoint2","selectedSegment","updateSelector","removeSnap","changeAnnotationDrag","oldValues","targetPortName","targetNodeNode","findTarget","oldValue","newValue","cancel","sourcePointChange","targetPointChange","triggerEvent","removeTerminalSegment","inPort","outPort","snapConnectorEnd","targetPortId","targetNodeId","dragConnectorEnds","canDisconnect","disConnect","connect","checkConnect","canEnableDefaultTooltip","getTooltipContent","showTooltip","MoveTool","objType","currentTarget","objectType","getSubProcess","initialOffset","isPreventHistory","historyAdded","targetPosition","allowDrop","positionChange","entry_1","snapPoint","removeHighlighter","isDroppable","isParentAsContainer","isEndGroup","dropChildToContainer","dropAnnotation","objectId","isSame","dragOverElement","oldValues_1","snappedPoint","removeChildFromBPmn","arg_1","dragSelectedObjects","mouseOver","removeStackHighlighter","drawHighlighter","portDrag","RotateTool","getAllDescendants","cloneChild","rotateChange","oldValue_1","arg_2","snapAngle","rotateSelectedItems","ResizeTool","checkSelection","deltaValues","scaleObjects","sizeChange","entry_2","changes","getChanges","change","AspectRatio","scaleSelectedItems","NodeDrawingTool","checkBoundaryConstraints","drawObject","updateNodeDimension","addObjectToDiagram","TextDrawingTool","drawingNode","addText","ZoomPanTool","zoom","zooming","moveTouches","startTouch0","startTouches","startTouch1","moveTouch0","moveTouch1","getDistance","focusPoint","updateTouch","difY","scroll","touch1","touch2","startTouch","moveTouch","ExpandTool","initExpand","LabelTool","open","focus","PolygonDrawingTool","dblClickArgs","PolyLineDrawingTool","updateConnectorPoints","LabelDragTool","labelDrag","redoValue","entryValue","LabelResizeTool","resizeObject","labelResize","LabelRotateTool","redoEntry","entryObject","ConnectorEditing","segmentIndex","dragOrthogonalSegment","dragControlPoint","shiftKey","addOrRemoveSegment","updateLastSegment","removePrevSegment","removeNextSegment","updateEndPoint","removeSegments","segmentCollectionChange","last","updateSeg","previous","findIndex","newseg","intersectingSegs","addSegments","insertFirstSegment","addTerminalSegment","updateAdjacentSegments","segmentDirection","segValues","insertseg","nextseg","isNextUpdate","updatePreviousSegment","nextSegment","updateNextSegment","pop","sec","lastseg","updatePortSegment","isSourceNode","updateFirstSegment","changeSegmentDirection","insertfirst","removeCurrentPrev","nextNext","line1Start","line1End","line2Start","line2End","firstSegPoint","lastSegPoint","DiagramEventHandler","currentAction","isBlocked","isMouseDown","doingAutoScroll","objectFinder","eventArgs","ObjectFinder","diagramCanvas","TextEdit","getMousePosition","touchArg","changedTouches","boundingRect","scrollLeft","scrollTop","windowResize","evt","resizeTo","clearTimeout","updateViewPortSize","setViewPortSize","getSizeValue","setSize","canHideResizers","updateCursor","list","isForeignObject","isTextBox","foreignobject","isMetaKey","navigator","platform","metaKey","renderUmlHighLighter","findObjectsUnderMouse","findObjectUnderMouse","isDeleteKey","isMouseOnScrollBar","scrollHeight","scrollWidth","updateVirtualization","removeObjectInterval","setInterval","removeVirtualObjects","deleteVirtualObject","isScrolling","preventDefault","checkEditBoxAsTarget","updatePortVisibility","hoverElement","button","buttons","getMouseEventArgs","textEditing","endEdit","sourceElement","findElementUnderMouse","findActionToBeDone","getTool","initialEventArgs","touchStartList","mouseMoveExtend","canAutoScroll","checkAutoScroll","isNode","hoverNode","checkAction","drawRulerMarkers","touchMoveList","content_1","openOn","elementLeave","elementEnter","mouseEvents","Interactions","autoScrollPosition","startAutoScroll","clearInterval","timeOutValue","diagram_1","doAutoScroll","previousSelectedObject","removeConstraints","detail","which","isMultipleSelect","PreventClearSelection","canPreventClearSelection","history_1","updateContainerProperties","addUmlNode","updateContainerBounds","hasStack","renderSelector","click","addSwimLaneObject","selectedNode","swimlaneNode","canInsert","actualShape","clearSelectorLayer","addPhases","addLanes","swimLaneobj","marker","markers","removeRulerMarkers","up","wheelDelta","isTriggerEvent","activeLabel","startTextEdit","keyDown","keyCode","keycode","gesture","keyModifiers","altKey","altKeyPressed","shiftKeyPressed","ctrlKeyPressed","keyDownEventArgs","KeyboardEvent","parameter","droppable","draggable","addConstraints","movingPosition","autoScrollBorder","delay","autoScroll","targets","lastObjectUnderMouse","mouseEnter","elementOver","isPrivateTooltip","canEnableToolTip","keyModifier","Alt","Control","Shift","scrolled","updateScrollOffset","doubleClick","getObjectLayer","lock","itemClick","actualTarget","inputChange","fontsize","textWrapper","textBounds","transforms","editTextBox","editTextBoxDiv","isAddTextNode","focusOut","textAnnotationConnectors","findTargetObjectUnderMouse","resetTool","findElementUnderSelectedItem","findTargetUnderMouse","isAfterMouseUp","boundsUpdate","isChangeProperties","hasGroup","history","updateContainerPropertiesExtend","updateLaneChildNode","innerNode","actions","layerTarger","layerObjTable","objArray_1","spatialSearch","findObjects","pointInBounds","actualTarget_1","portElement","eventArg","eventHandler","findTargetElement","selected","Layer","objectZIndex","zIndexTable","CommandHandler","connectorsTable","processTable","parentTable","layoutAnimateModule","backup","pointerEvents","toolName","duration","openDelay","closeDelay","setTooltipTemplate","ToolTip","connectionChange","dragOverArg","dragOver","oldChanges","newChanges","connectorEnd","nodeEndId","portEndId","connectionEventChange","argsTarget","connection","transaction","success","failure","portEnd","clonedNode","annotationNode","annotationObj","checkAndRemoveAnnotations","refreshCanvasLayers","addTextAnnotation","oldNodeId","oldPortId","cut","undoRedoModule","clipObject","copyObjects","addLayer","layerZIndexTable","activeLayer","objectName","layerName","removeLayer","layerId","layerObject","moveObjects","targetLayer","setActiveLayer","targerNodes","objects_1","cloneLayer","cloneObject_1","newlayer","paste","copy","copyProcesses","tempNode","connectorsList","selectedItems_1","sortByZIndex","processes_1","protectedChange","Group","unGroup","removePorts","removeLabels","removeNode","copiedItems","getNewObject","multiSelect","objectTable","keyTable","copiedItems_1","clonedObj","cloneConnector","newNode","edges_1","edge","newConnector","edges_2","newobjs","translateObject","groupnodeID","process","checkAnnotation","cloneGroup","cloneSubProcesses","currentAnnotation","innerChild","addProcess","connector_1","connectorTable","newChildren","connectorObj","oldID","childObj","multipleSelection","cause","selectionChange","canDoMultipleSelection","canMultiSelect","canDoSingleSelection","findParent","selectGroup","selectProcesses","selectBpmnSubProcesses","hasProcesses","preventUpdate","hasLayer","objArray","selectormodel","getChildElements","moveSvgNode","diagramDiv","backNode","sendLayerBackward","currentLayerObject","targetObject","currentLayerObject_1","bringLayerForward","targetLayerObjects_1","sendToBack","layerNum","updateNativeNodeIndex","bringToFront","tabelLength","diagramLayer","lastChildNode","nextSibling","nodeArray","sortID","sendForward","layerIndex","intersectArray","temp_1","overlapObject","currentObject","sendBackward","temp_3","initSelectorWrapper","clearSelectionRectangle","selArray","rubberArray","getNodesConnectors","rubberBandSelectionMode","checkBezierThumb","dragSourceEnd","dragTargetEnd","triggerAction","selectedNodes","selectedConnectors","highlighter","symbolDrag","updateInnerParentProperties","hasEnds","connectorSegmentChange","existingInnerBounds","isRotate","segmentChange","secondSegment","isDragSource","changeSegmentLength","sequence","updatePathElementOffset","translateBezierPoints","second","secPoint","nextDirection","changeSourceEndToNode","changeSourceEndToPort","segValues1","isTerminal","changeTerminal","sourcePoint2","boundaryConstraints","segmentNumber","rotateObjects","includeParent","objects_2","getChildrenBound","updateSubProcessess","getChildren","rotatePoints","SnapToLines","innerParents","refWrapper","scaleObject","updateGroupOffset","innerParent","parentNodes","isResize","oldleft","oldtop","parent_3","scaleConnector","changedvalues","getPortChanges","getAnnotationChanges","updatePathAnnotationOffset","intersectingOffset","pointLength","totalLength","intersetingPts","getInterceptWithSegment","dragLimit","minDistance","getRelativeOffset","updateLabelMargin","dragLimitValue","tempPt","contentDimension","curZoomfactor","annotationWrtapper","draggableBounds","line1","lineIntersects_1","boundsInterSects","cursorLimit","polyLine","self","polyLine2","polyLine1","pre","found","deg","conPoints","tarAngle","srcAngle","maxLength","intercepts","imgLine","segemnt","angleAdd","labelWrapper","newMat","offsetx","offsety","selectorBounds","top_2","preventNodesUpdate","PreventIconsUpdate","expandNode","expand","preventConnectorsUpdate","expandCollapse","fixedNode","enableAnimation","organizationalChartModule","isAnimation","doLayout","expandStateChange","getparentexpand","boolean","previousNode","newTarget","oldTarget","nodeCollection","removeChildFromBPMN","targetNodes","connectHighlighter","tgt","tgtWrap","towardsLeft","towardsTop","SnapToObject","removeGuidelines","dropBPMNchild","objectBounds","storeObject","distribute","top_3","btt","undoSelectorObj","redoSelectorObj","sameSize","selectorObject","scrollX","scrollY","panx","PanX","canPanX","pany","PanY","canPanY","pan","clearHighlighter","child_1","DiagramScroller","oldCollectionObjects","removeCollection","vPortWidth","vPortHeight","currentZoomFActor","hScrollSize","vScrollSize","realActions","hScrollbarMoved","vScrollbarMoved","updateScrollOffsets","pageBounds","getPageBounds","setOffset","setScrollOffset","viewWidth","viewHeight","newX","actualRight","currentRight","newY","actualBottom","currentBottom","getObjects","coll1","coll2","isExist","virtualizeElements","oObjects","oObjectsID","newObjects","removeObjects","updateVirtualObjects","scrollerWidth","oldWidth","diagramWidth","oldHeight","diagramHeight","overflow","hasPadding","negwidth","negheight","multiplePage","origin","scrollpadding","getPageBreak","widthCount","heightCount","factor","deltaX","deltaY","Zoom","canZoom","canPan","minZoom","maxZoom","targetMatrix","applyScrollLimit","fitToPage","canZoomIn","customBounds","zoomFactor","bringIntoView","hoffset","voffset","bringToCenter","actualbounds","scrollLimit","scrollableArea","allowedRight","allowed","allowedBottom","Quad","spatialSearching","findQuads","currentViewPort","quads","isIntersect","third","fourth","selectQuad","quadSet","getQuad","halfWidth","halfHeight","xCenter","yCenter","childRight","childBottom","newQuad","childTop","childLeft","isContained","addIntoAQuad","quadAddition","setCurrentNode","quad","isAdded","parentQuad","newParent","isempty","newWidth","newHeight","SpatialSearch","quadSize","pageLeft","pageRight","pageTop","pageBottom","quadTable","objectIndex","updateQuad","nodBounds","isWithinPageBounds","leftElement","topElement","rightElement","bottomElement","modified","findLeft","findTop","findBottom","findRight","quads_1","originX","originY","SerializationSettings","groupTable","isGroup","selectionConnectorsList","crudDeleteNodes","renderTimer","clearCollection","isConnector","clearObjects","isPropertyChanged","refreshLayout","refereshColelction","view","updateView","changedProp","excludeFromLayout","propertyChange","updateBridging","intOffPageBackground","validatePageSize","updatePage","updateSnapSettings","initCommands","initObjects","updateRulerSettings","updateLayer","updateScrollSettings","PreventDataInit","showCustomMenuOnly","show","items","_h","_j","canLogChange","modelChanged","resetDiagramActions","resetTemplate","renderRulers","initializePrivateVariables","isProtectedOnChange","serviceLocator","initializeServices","setCulture","initDiagram","initViews","defaultLocale","Copy","Cut","Paste","Undo","Redo","SelectAll","Grouping","UnGroup","Order","BringToFront","MoveForward","SendToBack","SendBackward","layerZIndex","pathTable","localeObj","L10n","locale","collapsedNode","crudAction","read","renderInitialCrud","initHistory","initLayers","initializeDiagramLayers","renderPageBreaks","isDevice","Render","updateTemplate","isBlazor","pathAnnotation","updateBlazorTemplate","htmlNode","templateAnnotation","resetBlazorTemplate","tempObj","callback","Ajax","onSuccess","dataManager","dataSource","send","then","connectionDataSource","requiredModules","modules","tooltipelement","startEvent","touchStartEvent","stopEvent","touchEndEvent","moveEvent","touchMoveEvent","cancelEvent","isPointer","isIE11Pointer","wheelEvent","EventHandler","initDroppables","selectAll","getObjectsOfLayer","updateViewPort","cutCommand","removeProcess","pasteCommand","copyCommand","moveForward","getActiveLayer","nudgeCommand","nudge","updateAnnotationDrag","updateConnectorProperties","getCustomTool","active","getCustomCursor","historyChangeTrigger","historyChange","undo","redo","PublicMethod","focusedPoint","zoomTo","eventName","updateEventValue","hideTooltip","propertyChangeValue","collectionChange","updateEdges","getTextAnnotationConn","initConnectors","updateDocks","PreventHistory","updateSvgNodes","updateProcesses","moveNode","processes_2","addAnnotation","spliceConnectorEdges","objIndex","removeElement_1","removeCommand","removeSwimLane","Delete","canDelete","Clear","isStackChild","deleteGroup","removeBpmnProcesses","removeLane","updateNodeEdges","parentnode","isstack","updateStackProperty","startEditCommad","bpmnAnnotation","getTextAnnotationWrapper","addLabels","enumValue","enableReadOnly","textArea","toLocaleLowerCase","lineHeight","focusOutEdit","updateNodeExpand","updateConnectorAnnotation","annotationWrapper","propChange","viewPort","updateLayout","rootNode","mindMapChartModule","root","radialTreeModule","symmetricalLayoutModule","maxIteration","springLength","springFactor","complexHierarchicalTreeModule","getLayoutNodesCollection","updateIcon","updateDefaultLayoutIcons","saveDiagram","loadDiagram","getDiagramContent","styleSheets","printandExportModule","exportImage","exportImages","printImage","printOptions","setStackLimit","stackLimit","applyLimit","clearHistory","getDiagramBounds","exportDiagram","print","addPorts","constraintsType","constraintsValue","labels","removelabelExtension","removePortsExtenion","real","overlap","renderOverlapElement","tabindex","renderBackgroundLayer","commonStyle","bgLayer","createSvg","backgroundImage","renderGridLayer","svgGridSvg","renderDiagramLayer","diagramLayerDiv","diagramSvg","transformationLayer","scrollerSize","outer","widthNoScroll","inner","widthWithScroll","getScrollerWidth","renderHTMLLayer","renderPortsExpandLayer","renderNativeLayer","renderAdornerLayer","svgAdornerSvg","svgSelector","svgPortsSvg","svgPortsLayer","svgExpandLayer","htmlLayerDiv","nativeLayerSvg","svgObj","isLoad","initData","initLayerObjects","hasLayers","tempTabel","bpmnTable","groups","addToLayer","initNodes","_k","_l","_m","groups_1","_o","connectors_1","setZIndex","layerObject_1","hPan","vPan","VerticalOffset","HorizontalOffset","ViewportHeight","ViewportWidth","CurrentZoom","scrollChange","dataBindingModule","generateData","url","initSource","makeData","fields","sourcePointX","sourcePointY","targetPointX","targetPointY","customFields","independentObj","currentLayer","initObjectExtend","getDefaults","defaults","initNode","getConnectedPort","findInOutConnectPorts","getEndNodeWrapper","isWidth","PreventDrag","updateDefaultLayoutIcon","iconWrapper","isUpdateSize","node1","PreventScale","portContainer","childCollection","updateChildPosition","newCommands","bind","C","V","delete","A","Z","Y","nudgeUp","Up","nudgeRight","Right","nudgeDown","Down","nudgeLeft","Left","startEdit","F2","endEditCommand","Escape","focusToNextItem","Tab","focusToPreviousItem","selectFocusedItem","Enter","initCommandManager","overrideCommands","newCommand","updateIconVisibility","updateDiagramContainerVisibility","refreshDiagram","updateCanupdateStyle","getZindexPosition","canIgnoreIndex","updateGridContainer","refreshCanvasDiagramLayer","objectArray","objectArray_1","refreshSvgDiagramLayer","view_1","renderBasicElement","refreshElements","isDestroyed","clearCanvas","setTransform","renderDiagramElements","transformOrigin","inverse","changed","clearIntervalVal","updateTextElementValue","tCollection","fromExport","isOverView","renderNode","transformValue","verticalValue","status_1","bridgingModule","pathSegment","clearRect","getPortLayerSvg","adornerSVG","gridLayer","removePageBreaks","backgroundLayer","showPageBreaks","setOverview","overview","renderDocument","renderNodes","updateThumbConstraints","canInitialize","hideRotate","hideResize","thumbConstraints","isSwimLane","selectorElement","renderSelectorForAnnotation","selectorEle","stackPanel","symbolBorder","selectionRect","getPortContainer","containsMargin","isBpmnTextAnnotation","textEdit","updateTextAnnotationContent","isAction","tempNode_1","updateObject","oldNode","oldConnector","actualSourcePoint","actualTargetPoint","nodePropertyChangeExtend","updateShadow","swimLaneNodePropertyChange","oldShape","oldObjects","newLane","childNodeIndex","node_1","id_1","isLayout","existingBounds","offsetX_1","updateFlipOffset","offsetY_1","updatePorts","updateMargin","updateBPMN","updateUMLActivity","actualPort","updatePort","updateTextAnnotationProp","checkSelectedItem","parent_4","updateGroupSize","portWrapper","connectorProprtyChangeExtend","updateBPMNConnector","disableBridging","oldSource","updateAnnotations","isInconnect","updateNodeProperty","selItems","canUpdateSize","updateAnnotationContent","updateAnnotationWrapper","String","iconRect","iconShape","enable","nodeShadow","changedShadow","entryTable","Droppable","over","dragData","selectedSymbol","helper","paletteId","getAttribute","ej2_instances","selectedSymbols","dragEnter","swimLaneObj","child1","child2","findChild","removeChildInNodes","addChildNodes","droppedElement","out","dragLeave","moveObjectsUp","insertData","crudOperation","getNewUpdateNodes","updateData","removeData","getDeletedNodes","crud","getNodesCollection","parameterMap","raiseAjaxPost","processCrudCollection","nodeCrudAction","connectorCrudAction","mappingObj","name_1","Event","PrintAndExport","fileType","buffers","fileName","format","setCanvas","diagramAsSvg","buffer","XMLSerializer","serializeToString","blob","Blob","msSaveOrOpenBlob","pom","download","URL","createObjectURL","href","createEvent","initMouseEvent","dispatchEvent","setScaleValueforCanvas","diagramAsCanvas","scaleOffsetX","scaleOffsetY","toDataURL","canvasMultiplePage","images","pageHeight","pageWidth","pageOrientation","img_1","getMultipleImage","image1","byteString","atob","ArrayBuffer","intArray","Uint8Array","charCodeAt","_loop_1","htmlElement_1","urlLink","mouseEvent_1","getObjectsBound","nodebounds","backimage","backRect","diagramLayerSVG","bgColor","context","bgImg","proportionX","proportionY","exportable","isImageExportable","proportion","brColor","brWidth","strokeRect","updateObjectValue","updateWrapper","getPrintCanvasStyle","img","imageArray","pageSize","mLeft","mTop","mRight","mBottom","drawnX","drawnY","imgHeight","imgWidth","pageWidth_1","pageHeight_1","pageSize_1","innerDiv","printImages","printWind","write","scrollerX","scrollerY","oldZoom","oldHorizontalOffset","oldVerticalOffset","snapConstraints","ShowLines","styleSheetRef","htmlData","DataBinding","dataTable","json","applyDataSource","mapper","DataManager","query","defaultQuery","Query","executeQuery","firstNode","nextLevel","rootNodes","updateMultipleRootNodes","applyNodeTemplate","renderChildNodes","parents","nodeModel","rtNodes","canBreak","containsConnector","applyConnectorTemplate","sNode","tNode","connModel","menuClass","grouping","order","DiagramContextMenu","service","defaultItems","disableItems","hiddenItems","localeText","setLocaleKey","addEventListener","on","removeEventListener","off","l10n","contextMenu","Menu","getMenuItems","enableRtl","enablePersistence","contextMenuItemClick","contextMenuBeforeOpen","onOpen","beforeItemRender","BeforeItemRender","onClose","contextMenuOnClose","menuItems","orderItems","groupItems","getDefaultItems","buildDefaultItems","orderGroup","customItem","isOpen","getKeyFromId","updateItemStatus","getLocaleText","getConstant","showItems","enableItems","ensureItems","ensureTarget","diagramArgs","newItem","hidden","contextItems","forEach","hideItems","selectedLength","canUndo","canRedo","generateID","menuItem","iconCss","bringToFrontOrder","moveForwardOrder","sendToBackOrder","sendBackwardOrder","BpmnDiagrams","annotationObjects","getSize","getBPMNEventShape","getBPMNGatewayShape","getBPMNDataObjectShape","getBPMNShapes","getBPMNActivityShape","renderBPMNTextAnnotation","getBPMNTextAnnotation","bpmnShape","bpmnShapeData","gatewayshape","gatewayNode","gatewayTypeNode","gatewayTypeNodeShapeData","shapeType","gateway","setSizeForBPMNGateway","dataObjectshape","dataObject","dataobjNode","dataobjTypeNode","dataobjCollectionNode","getBPMNTaskShape","task","taskShapes","taskNode","childCount","getTaskChildCount","childSpace","area","taskTypeNodeData","taskTypeNode","taskTypeNodeService","childNode2data","loopType","loop","taskLoopNode","taskCompNode","getBPMNCompensationShape","compensation","subEvent","sub","eventshape","shapeEvent","shapeActivity","innerEvtNode","outerEvtNode","triggerNode","triggerNodeData","setSizeForBPMNEvents","setEventVisibility","setSubProcessVisibility","eventLength","events","elementWrapper","adhoc","getBPMNSubProcessShape","subProcessShapes","subprocessAdhoc","subProcessLoopShapes","subChildCount","getSubprocessChildCount","subprocessNode","getBPMNSubProcessTransaction","collapsedShape","getBPMNSubEvent","getBPMNSubProcessLoopShape","subChildSpace","boundary","getBPMNAdhocShape","subprocessComp","eventContainer","getBPMNSubprocessEvent","shapeWidth","shapeHeight","innerRect","transactionEvents","subprocessLoopData","subprocessLoop","redoElement","sources","processTable_1","processIndex","excludeChild","compensationNode","subProcessEventsShapes","annot","adhocNode","annotationContainer","annotationPath","setAnnotationPath","annotationConnector","annotationsContainer","textObject","annotationObject","bpmnShapeContent","clearAnnotations","removeAnnotationObjects","nodeContent","parentBounds","getAnnotationPathAngle","parentNodeId","newShape","sizeChanged","updateBPMNGateway","updateBPMNDataObject","updateBPMNActivity","updateBPMNEvent","updateBPMNStyle","bpmnshapeGatewaydata","elementWrapperChild1","elementWrapperChild2","setSizeForBPMNDataObjects","getEvent","child0","updateEventVisibility","event_1","elementWrapperChild0","updateBPMNEventTrigger","bpmnshapeTriggerdata","actualObjectProp","updateBPMNActivityTask","updateBPMNActivityTaskLoop","updateBPMNActivitySubProcess","setSizeForBPMNActivity","bpmnshapeTaskdata","bpmnshapeLoopdata","updateChildMargin","updateBPMNSubProcessEvent","updateBPMNSubProcessAdhoc","updateBPMNSubProcessBoundary","updateBPMNSubProcessCollapsed","updateBPMNSubProcessCompensation","updateBPMNSubProcessLoop","updateBPMNSubProcessTransaction","eventIndex","eventWrapper","actualEvent","updateBPMNSubEvent","newEvent","eventType","getEventSize","wrapperChild","currentNode","flowType","getSequence","association","getAssociation","message","getMessage","offLength","eventNode","Message","SubProcess","Timer","Error","Escalation","Cancel","Compensation","Conditional","Link","Signal","Terminate","Multiple","Parallel","Exclusive","Inclusive","EventBased","ExclusiveEventBased","ParallelEventBased","Service","Receive","Send","InstantiatingReceive","Manual","BusinessRule","User","Script","Standard","ParallelMultiInstance","SequenceMultiInstance","ConnectorBridging","lastBridge","Bridging","InheritBridging","canBridge","points1","bridgeSpacing","bridgeSpace","bgedir","q","connector1","points2","intersectsRect","intersectPts","getLengthAtFractionPoint","lengthFractionIndex","fullLength","stBridge","enBridge","angleCalculation","fix","lengthCalculation","var1","insertAt","arcSeg","paths","createSegment","join","bridgeStartPoint","arcs","bgseg","stPoints","firstBridge","bridgeList","subBridge","createBridgeSegment","sweepDirection","startPt","endPt","angle1","zOrder","inter1","checkForHorizontalLine","roundedAngle","pointAt","confirm","lengthAtFractionPt","previouspt2","suspect","getSlope","delX","delY","lhs","rhs","isFinite","xDiff","yDiff","Snapping","delta","horizontallysnapped","verticallysnapped","snapObject","roundedRight","roundedLeft","roundedTop","roundedBottom","currentright","currentbottom","SnapToVerticalLines","SnapToHorizontalLines","cutoff","bal","horizontalSnap","verticalSnap","ended","lengthY","hTarget","vTarget","lengthX","objectsAtLeft","objectsAtRight","objectsAtTop","objectsAtBottom","snapObjDistance","snapObjectDistance","hIntersectRect","vIntersectRect","targetBounds","findNodes","canBeTarget","canConsider","createSnapObject","createGuidelines","createHSpacingLines","createVSpacingLines","snapSize","sameWidth","sameHeight","hintersectedrect","vintersectedrect","nodesInView","targetBounds_1","targetBounds_2","difference","actualDiff","addSameWidthLines","addSameHeightLines","initialBoundsT","actualTop","initialBound","initialBoundsB","actualLeft","initialRect","renderAlignmentLines","sortByDistance","nearestleft","nearestright","equaldistance","equallySpaced","findEquallySpacedNodesAtLeft","adjustablevalue","findEquallySpacedNodesAtRight","addHSpacingLines","deltaHorizontal","nearesttop","nearestbottom","findEquallySpacedNodesAtTop","findEquallySpacedNodesAtBottom","addVSpacingLines","deltaVertical","crnt","renderSpacingLines","equallySpacedObjects","sameWidths","sameSizes","sameHeights","snap","nd","ascending","equalDistance","prevBounds","actualDistance","groupUndo","historyCount","groupCount","Function","canLog","undoStack","redoStack","setEntryLimit","getHistoryList","limitHistory","limitHistoryStack","hList","removeFromStack","entyList","getUndoEntry","endGroupActionCount","undoEntry","undoGroupAction","currEntry","getHistroyObject","nodeObject","recordPositionChanged","recordSizeChanged","recordRotationChanged","recordConnectionChanged","recordPropertyChanged","recordCollectionChanged","recordLabelCollectionChanged","recordPortCollectionChanged","recordSegmentChanged","recordPortChanged","recordAnnotationChanged","recordChildCollectionChanged","recordStackPositionChanged","recordGridSizeChanged","recordLanePositionChanged","recordLaneOrPhaseCollectionChanged","checkNodeObject","getnodeDefaults","updateSelection","undoNode_1","knownNode","historyEntry","ignoreProperty","getProperty","isRedo","oldElement","undoChanges","isRow","segmentChanged","positionChanged","connectionChanged","scaleWidth","scaleHeight","selectorObj","rotationChanged","getRedoEntry","startGroupActionCount","redoGroupAction","redovalue","entryCurrent","LayoutAnimation","setIntervalObject","layoutAnimation","opacity_1","setIntervalObjects_1","updateOpacity","objValue","layoutTimer","stop","differenceX","differenceY","animationComplete","HierarchicalTree","layoutProp","viewport","uniqueId","anchorX","anchorY","firstLevelNodes","centerNode","levels","maxLevel","graphNodes","horizontalSpacing","verticalSpacing","setUpLayoutInfo","tree","hasSubTree","updateTree","rootInfo","updateAnchor","updateNodes","updateConnectors","level","dontupdate","dimensions","lev","hasChild","getDimensions","assistants","treeBounds","levelBounds","asstBounds","setDepthSpaceForAssitants","updateHorizontalTreeWithMultipleRows","updateVerticalTree","updateHorizontalTree","setBreadthSpaceForAssistants","canMoveBy","treeWidth","translateInfo","shapeBounds","dim","translateSubTree","subTreeTranslation","updateLeafNode","enableRouting","asstDif","firstChildInfo","findIntersectingLevels","actualLevel","treeIntersect","spaceLeftFromPrevSubTree","translated","shiftSubordinates","rBounds","updateRearBounds","bnds","lastLevel","isLastLeaf","findLevel","vSpace","asstHeight","asstElement","asst","asstWidth","uniteRects","shape1","childWidth","childHeight","actBounds","oldActBounds","childInfo","canMoveValue","translateSibilingsBy","leftCenter","rightCenter","minTranslation","splitChildrenInRows","unique","leftTree","rightTree","splitRows","treeInfo","rightMost","updateLeftTree","rightX","rightBounds","alignRowsToCenter","leftBounds","centered","centerObjct","childDimension","centeredX","centeredY","updateRearBoundsOfTree","childBnds","half","dontUpdate","oddBounds","evenBounds","oddLevels","findOffset","canMoveBy_1","extend","dummy","treeType","dif","intersectingLevels","getParentNode","depth","layoutInfo","layoutBounds","mod","viewPortBounds","visited","getConnectorSegments","get3Points","updateSegmentsForHorizontalOrientation","updateSegmentsForBalancedTree","get5Points","relative","getSegmentsForMultipleRows","startingPoint","getSegmentsFromPoints","point_1","dx","MindMap","isRoot","checkRoot","fistLevelNodes","findFirstLevelNodes","leftNodes","rightNodes","getMindmapBranch","fistLevelNodes_1","updateMindMapBranch","nodes_2","excludeNodes","newCollection","exclude","newCollection_1","outEdge","RadialTree","layoutNodes","depthFirstAllignment","populateLevels","transformToCircleLayout","nodeInfo","obj1","obj2","segmentOffset","stages","full","newlevel","filter","nodeInfo1","nodeInfo2","actualCircumference","circumference","GraphForceNode","gnNode","velocityX","velocityY","graphNode","location","applyChanges","SymmetricLayout","cdCOEF","cfMAXVELOCITY","cnMAXITERACTION","cnSPRINGLENGTH","mszMaxForceVelocity","doGraphLayout","graphLayoutManager","graph","Bounds","getModelBounds","lstGraphNodes","GraphNodes","lstNodes","convertGraphNodes","preLayoutNodes","nLenght","makeSymmetricLayout","appendForces","resetGraphPosition","rcBounds","fMaxSize","ptCenter","dRotateAngle","dAngle","getForceNode","forceNode","gnChild","calcNodesForce","vtx1","vtx2","normalDistance","calcRelatesForce","updateNeigbour","gfnNode","ptPoint","szMin","ptLocation","lstToReturn","keys_1","tag","vtSource","vtTarget","pointDistance","lineAngle","calcForce","radians","vx","vy","atan","symmetricLayout","GraphLayoutManager","minDist","fOffset","visitedStack","cycleEdgesCollection","graphObjects","passedNodes","selectionList","mhelperSelectedNode","nodeCollection_1","nodeGraphObject","graphType","connectorGraphObject","updateLayout1","modelBounds","trnsX","lNodes","nodesToLayout","detectCyclesInGraph","nodesCount","cycleConnColln","nodeSymbols","isCycleEdge","dictionaryLength","getNodesToPosition","selectNodes","nodeGraph","exploreGraphEdge","addNode","isConnectedToAnotherNode","LeftMargin","TopMargin","selectConnectedNodes","nodeName","dictionaryContains","Added","getConnectedRelatives","exploreRelatives","addGraphNode","exploreRelatives1","relativesToExplore","fromNode","toNode","getConnectedParents","getConnectedChildren","keyObj","gnNodeChildren","setNode","findNode","nIndex","fullName","nLength","nodeHelper","bFoundConnectedNode","searchEdgeCollection","edgesToSearchThrough","connectionDirection","nodeLink","nodeToAdd","collectionToAdd","vertex","currentStack","getUnVisitedChildNodes","currentEdge","con","ComplexHierarchicalTree","HierarchicalLayoutUtil","nodesCollection","crossReduction","CrossReduction","createVertex","geometry","getEdges","findRoots","vertices","roots","best","maxDiff","conns","getVisibleTerminal","terminalCache","traverse","directed","currentComp","hierarchyVertices","filledVertices","vertexID","edgeIsSource","netCount","isSource2","comp","marginX","marginY","filledVertexSet","candidateRoots","vertexSet","limit","tmp","MultiParentModel","cycleStage","layeringStage","crossingStage","placementStage","clnode","dnode","coordinateAssignment","widestRankValue","placementStageExecute","plalementChange","calculateWidestRank","lastRankMaxCellSize","rankSizes","rankOffset","rankValue","maxRank","maxCellSize","rank","ranks","localOffset","isVertex","numEdges","setXY","setTempVariable","widestRank","distanceToNextRank","minRank","isY","rankCoordinates","stage","maxOffset","initialCoords","facade","isAncestor","otherNode","hashCode","weightedCellSorter","weightedValue","rankIndex","minNode","nodeList","nodeWrapper","setDictionaryForSorter","maxTries","cellWrapper","shift","nextLayerConnectedCells","getConnectedCellsOnLayer","previousLayerConnectedCells","nextConnectedCount","prevConnectedCount","medianNextLevel","medianXValue","medianPreviousLevel","numConnectedNeighbours","getTempVariable","cellMedian","tempValue","leftCell","leftLimit","intraCellSpacing","rightCell","rightLimit","updateNodeList","connectedCell","connectedCellWrapper","getDictionaryForSorter","connectedCells","medianValues","medianPoint","jettyPositions","currentYDelta","currentXDelta","bestOffsetDelta","maxIterations","setCellLocations","getValues","vertexMapper","setVertexLocation","garphModelsetVertexLocation","realCell","positionX","positionY","initialRank","fixRanks","startNodes","internalNodes","getDictionaryValues","startNodesCopy","layerDeterminingEdges","internalNode","connectsAsTarget","edgesToBeMarked","connectsAsSource","allEdgesScanned","minimumLayer","internalEdge","removedCell","currentMaxLayer","seenNodes","unseenNodesArray","unseenNodes","rootsArray","modelRoots","getDictionary","visit","seenNodesCopy","invert","connectingEdge","isReversed","getEdgesBetween","trg","dlayout","multiObjectIdentityCounter","dfsCount","hierarchicalUtil","internalVertices","hierarchicalLayout","createInternalCells","realEdges","realEdge","targetCell","internalTargetCell","setDictionary","undirectedEdges","directedEdges","ids","rankList","oldRootsArray","updateMinMaxRank","seen","dic","flag","layoutObjectId","visitor","dfsRoots","trackAncestors","extendedDfs","depthFirstSearch","rootId","updateConnectionRank","outgoingEdges","traversedList","removeConnectionEdge","cHash","hashCodeLength","transients","shallow","calculateCrossings","numRanks","totalCrossings","calculateRankCrossing","previousRank","tmpIndices","rankPosition","nodeIndices","connectedNode","otherCellRankPosition","indices","firstIndex","treeSize","treeIndex","nestedBestRanks","iterationsWithoutImprovement","currentBestCrossings","weightedMedian","candidateCrossings","check","iteration","downwardSweep","medianRank","isPrevious","connectedlayer","connectedAs","medianValue","arrayCount","leftMedian","rightMedian","numCellsForRank","reservedPositions","sorterEntry","nextLevelConnectedCells","nextRankValue","compare","Palette","SymbolPreview","SymbolPalette","symbolTable","laneTable","isExpand","isCollapsed","clonedElement","sender","symbol","getSymbolPreview","enableSearch","createTextbox","accordionElement","title","expanded","isInteraction","collapse","expandMode","refreshPalettes","paletteElement","accordionDiv","Accordion","updatePalettes","measureElemnt","initSymbols","symbolGroup","laneHeight","swimLaneShape","symbolHeight","symbolWidth","laneStyle","headerStyle","headerObj","addPaletteItem","prepareSymbol","group_1","renderPalette","paletteDiv","renderSymbols","paletteName","paletteSymbol","symbolPaletteGroup","param","getSymbolContainer","removePaletteItem","symbolId","symbolContainer","getSymbolTemplate","getContainer","symbolInfo","getSymbolInfo","actualWidth","actualHeight","symbolMargin","fit","scaleSymbol","getSymbolDescription","parentDiv","symbolPreviewWidth","symbolPreviewHeight","symbolPreview","measureAndArrangeSymbol","previewContainer","getHtmlSymbol","getGroupParent","updateSymbolSize","preview","getSymbolSize","HTMLCanvasElement","isPreview","offsetTop","offsetLeft","highlightedSymbol","srcElement","searchPalette","keyUp","palette_1","timer","HTMLInputElement","oldSymbol","initDraggable","Draggable","dragTarget","dragStart","dragStop","cursorAt","measureChild","scaleChildren","scaleGroup","childContainer","elements","removeElementsByClass","symGroup","searchDiv","textBox","placeholder","span","filterSymbols","createSearchPalette","symbolGroup_1","emptyDiv","addItem","Overview","actionName","prevPoint","viewPortRatio","setParent","renderCanvas","oldparent","removeDocument","getDiagram","documentMouseUp","xlink","eWidth","eHeight","bRect","screenX","screenY","innerWidth","innerHeight","renderHtmlLayer","addOverviewRectPanel","htmlDiv","ovw","innerrect","renderOverviewCorner","transrect","updateOverviewRectangle","resizeDirection","updateHelper","difx_1","dify_1","updateOverviewrect","updateOverviewCorner","transattr","rectname","translateOverviewRectangle","offwidth","offheight","updateParentView","renderOverviewRect","viewwidth","viewheight","scrollOverviewRect","svgRect","scaled","delx","dely","webkitTransform","widthratio","heightratio","initHelper","stroke-dasharray","shape-rendering"],"mappings":"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"}