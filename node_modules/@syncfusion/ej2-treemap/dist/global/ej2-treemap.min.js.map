{"version":3,"file":"ej2-treemap.min.js","sources":["../../src/treemap/utils/helper.js","../../src/treemap/model/theme.js","../../src/treemap/model/constants.js","../../src/treemap/model/base.js","../../src/treemap/layout/render-panel.js","../../src/treemap/utils/export.js","../../src/treemap/treemap.js","../../src/treemap/layout/legend.js","../../src/treemap/user-interaction/highlight-selection.js","../../src/treemap/user-interaction/tooltip.js","../../src/global.js"],"sourcesContent":["import { createElement, compile, merge, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Create the class for size\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Internal use of type rect\n * @private\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/**\n * Internal use of rectangle options\n * @private\n */\nvar RectOption = /** @class */ (function () {\n    function RectOption(id, fill, border, opacity, rect, dashArray) {\n        this.y = rect.y;\n        this.x = rect.x;\n        this.height = rect.height;\n        this.width = rect.width;\n        this.id = id;\n        this.fill = fill;\n        this.opacity = opacity;\n        this.stroke = border.color;\n        this['stroke-width'] = border.width;\n        this['stroke-dasharray'] = dashArray;\n    }\n    return RectOption;\n}());\nexport { RectOption };\nvar PathOption = /** @class */ (function () {\n    function PathOption(id, fill, width, color, opacity, dashArray, d) {\n        this.id = id;\n        this.opacity = opacity;\n        this.fill = fill;\n        this.stroke = color;\n        this['stroke-width'] = width;\n        this['stroke-dasharray'] = dashArray;\n        this.d = d;\n    }\n    return PathOption;\n}());\nexport { PathOption };\n/**\n * Function to measure the height and width of the text.\n * @param  {string} text\n * @param  {FontModel} font\n * @param  {string} id\n * @returns no\n * @private\n */\nexport function measureText(text, font) {\n    var measureObject = document.getElementById('treeMapMeasureText');\n    if (measureObject === null) {\n        measureObject = createElement('text', { id: 'treeMapMeasureText' });\n        document.body.appendChild(measureObject);\n    }\n    measureObject.innerHTML = text;\n    measureObject.style.position = 'absolute';\n    measureObject.style.fontSize = font.size;\n    measureObject.style.fontWeight = font.fontWeight;\n    measureObject.style.fontStyle = font.fontStyle;\n    measureObject.style.fontFamily = font.fontFamily;\n    measureObject.style.visibility = 'hidden';\n    measureObject.style.top = '-100';\n    measureObject.style.left = '0';\n    measureObject.style.whiteSpace = 'nowrap';\n    // For bootstrap line height issue\n    measureObject.style.lineHeight = 'normal';\n    return new Size(measureObject.clientWidth, measureObject.clientHeight);\n}\n/**\n * Internal use of text options\n * @private\n */\nvar TextOption = /** @class */ (function () {\n    function TextOption(id, x, y, anchor, text, transform, baseLine, connectorText) {\n        if (transform === void 0) { transform = ''; }\n        this.transform = '';\n        this.baseLine = 'auto';\n        this.id = id;\n        this.text = text;\n        this.transform = transform;\n        this.anchor = anchor;\n        this.x = x;\n        this.y = y;\n        this.baseLine = baseLine;\n        this.connectorText = connectorText;\n    }\n    return TextOption;\n}());\nexport { TextOption };\n/**\n * @private\n * Trim the title text\n */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth || label.length < 4) {\n                if (label.length < 4) {\n                    label = ' ';\n                }\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/**\n * Map internal class for Point\n */\nvar Location = /** @class */ (function () {\n    function Location(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return Location;\n}());\nexport { Location };\n/**\n * Method to calculate x position of title\n */\nexport function findPosition(location, alignment, textSize, type) {\n    var x;\n    var y;\n    switch (alignment) {\n        case 'Near':\n            x = location.x;\n            break;\n        case 'Center':\n            x = (type === 'title') ? (location.width / 2 - textSize.width / 2) :\n                ((location.x + (location.width / 2)) - textSize.width / 2);\n            break;\n        case 'Far':\n            x = (type === 'title') ? (location.width - location.y - textSize.width) :\n                ((location.x + location.width) - textSize.width);\n            break;\n    }\n    y = (type === 'title') ? location.y + (textSize.height / 2) : ((location.y + location.height / 2) + textSize.height / 2);\n    return new Location(x, y);\n}\nexport function createTextStyle(renderer, renderOptions, text) {\n    var htmlObject;\n    htmlObject = renderer.createText(renderOptions, text);\n    htmlObject.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n    htmlObject.style['user-select'] = 'none';\n    htmlObject.style['-moz-user-select'] = 'none';\n    htmlObject.style['-webkit-touch-callout'] = 'none';\n    htmlObject.style['-webkit-user-select'] = 'none';\n    htmlObject.style['-khtml-user-select'] = 'none';\n    htmlObject.style['-ms-user-select'] = 'none';\n    htmlObject.style['-o-user-select'] = 'none';\n    return htmlObject;\n}\n/**\n * Internal rendering of text\n * @private\n */\n/* tslint:disable:no-string-literal */\nexport function renderTextElement(options, font, color, parent, isMinus) {\n    if (isMinus === void 0) { isMinus = false; }\n    var renderOptions = {\n        'font-size': font.size,\n        'font-style': font.fontStyle,\n        'font-family': font.fontFamily,\n        'font-weight': font.fontWeight,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color\n    };\n    var text = typeof options.text === 'string' ? options.text : isMinus ? options.text[options.text.length - 1] : options.text[0];\n    var tspanElement;\n    var renderer = new SvgRenderer('');\n    var height;\n    var htmlObject;\n    var breadCrumbText = !isNullOrUndefined(text) && !isNullOrUndefined(options.connectorText) ?\n        (text.search(options.connectorText[1]) >= 0) : false;\n    if (breadCrumbText) {\n        var drilledLabel = text;\n        var drillLevelText = void 0;\n        var spacing = 5;\n        drillLevelText = drilledLabel.split('#');\n        for (var z = 0; z < drillLevelText.length; z++) {\n            var drillText = (drillLevelText[z].search(options.connectorText) !== -1 && !isNullOrUndefined(options.connectorText)) ?\n                options.connectorText : drillLevelText[z];\n            renderOptions['id'] = options.id + '_' + z;\n            htmlObject = createTextStyle(renderer, renderOptions, drillText);\n            if (z % 2 === 0 && z !== 0) {\n                var re = /\\s+/g;\n                drillText = drillText.replace(re, '&nbsp');\n            }\n            var size = measureText(drillText, font);\n            renderOptions['x'] = z !== 0 ? renderOptions['x'] + size.width : renderOptions['x'] + size.width + spacing;\n            parent.appendChild(htmlObject);\n        }\n    }\n    else {\n        htmlObject = createTextStyle(renderer, renderOptions, text);\n        parent.appendChild(htmlObject);\n    }\n    if (typeof options.text !== 'string' && options.text.length > 1) {\n        for (var i = 1, len = options.text.length; i < len; i++) {\n            height = (measureText(options.text[i], font).height);\n            tspanElement = renderer.createTSpan({\n                'x': options.x, 'id': options.id,\n                'y': (options.y) + (i * height)\n            }, options.text[i]);\n            htmlObject.appendChild(tspanElement);\n        }\n        parent.appendChild(htmlObject);\n    }\n    return htmlObject;\n}\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/* tslint:disable:no-string-literal */\nexport function itemsToOrder(a, b) {\n    return a['weight'] === b['weight'] ? 0 : a['weight'] < b['weight'] ? 1 : -1;\n}\nexport function isContainsData(source, pathName, processData, treemap) {\n    var isExist = false;\n    var name = '';\n    var path;\n    var leaf = treemap.leafItemSettings;\n    for (var i = 0; i < source.length; i++) {\n        path = treemap.levels[i] ? treemap.levels[i].groupPath : leaf.labelPath ? leaf.labelPath : treemap.weightValuePath;\n        if (source[i] === processData[path]) {\n            name += (processData[path]) + (i === source.length - 1 ? '' : '#');\n            if (name === pathName) {\n                isExist = true;\n                break;\n            }\n        }\n    }\n    return isExist;\n}\nexport function findChildren(data) {\n    var children;\n    if (data) {\n        var keys = Object.keys(data);\n        children = new Object();\n        for (var i = 0; i < keys.length; i++) {\n            if (data[keys[i]] instanceof Array) {\n                children['values'] = data[keys[i]];\n                children['key'] = keys[i];\n                break;\n            }\n        }\n    }\n    return children;\n}\nexport function findHightLightItems(data, items, mode, treeMap) {\n    if (mode === 'Child') {\n        items.push(data['levelOrderName']);\n        var children = findChildren(data)['values'];\n        if (children && children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                if (items.indexOf(children[i]['levelOrderName']) === -1) {\n                    items.push(children[i]['levelOrderName']);\n                }\n            }\n            for (var j = 0; j < children.length; j++) {\n                findHightLightItems(children[j], items, mode, treeMap);\n            }\n        }\n    }\n    else if (mode === 'Parent') {\n        if (typeof data['levelOrderName'] === 'string' && items.indexOf(data['levelOrderName']) === -1) {\n            items.push(data['levelOrderName']);\n            findHightLightItems(data['parent'], items, mode, treeMap);\n        }\n    }\n    else if (mode === 'All') {\n        var parentName = data['levelOrderName'].split('#')[0];\n        var currentItem = void 0;\n        for (var i = 0; i < treeMap.layout.renderItems.length; i++) {\n            currentItem = treeMap.layout.renderItems[i];\n            if ((currentItem['levelOrderName']).indexOf(parentName) > -1 && items.indexOf(currentItem['levelOrderName']) === -1) {\n                items.push(currentItem['levelOrderName']);\n            }\n        }\n    }\n    else {\n        items.push(data['levelOrderName']);\n    }\n    return items;\n}\n/**\n * Function to compile the template function for maps.\n * @returns Function\n * @private\n */\nexport function getTemplateFunction(template) {\n    var templateFn = null;\n    var e;\n    try {\n        if (document.querySelectorAll(template).length) {\n            templateFn = compile(document.querySelector(template).innerHTML.trim());\n        }\n    }\n    catch (e) {\n        templateFn = compile(template);\n    }\n    return templateFn;\n}\n/**\n * @private\n */\nexport function convertElement(element, labelId, data) {\n    var childElement = createElement('div', {\n        id: labelId,\n        styles: 'position: absolute;pointer-events: auto;'\n    });\n    while (element.length > 0) {\n        childElement.appendChild(element[0]);\n    }\n    var templateHtml = childElement.innerHTML;\n    var keys = Object.keys(data);\n    for (var i = 0; i < keys.length; i++) {\n        templateHtml = templateHtml.replace(new RegExp('{{:' + keys[i] + '}}', 'g'), data[keys[i].toString()]);\n    }\n    childElement.innerHTML = templateHtml;\n    return childElement;\n}\nexport function findLabelLocation(rect, position, labelSize, type, treemap) {\n    var location = new Location(0, 0);\n    var padding = 5;\n    var paddings = 2;\n    var elementRect = treemap.element.getBoundingClientRect();\n    var x = (type === 'Template') ? treemap.areaRect.x : 0;\n    var y = (type === 'Template') ? treemap.areaRect.y : 0;\n    location.x = (Math.abs(x - ((position.indexOf('Left') > -1) ? rect.x + padding : !(position.indexOf('Right') > -1) ?\n        rect.x + ((rect.width / 2) - (labelSize.width / 2)) : (rect.x + rect.width) - labelSize.width))) - paddings;\n    if (treemap.enableDrillDown && (treemap.renderDirection === 'BottomLeftTopRight'\n        || treemap.renderDirection === 'BottomRightTopLeft')) {\n        location.y = Math.abs((rect.y + rect.height) - labelSize.height + padding);\n    }\n    else {\n        location.y = Math.abs(y - ((position.indexOf('Top') > -1) ? (type === 'Template' ? rect.y : rect.y + labelSize.height) :\n            !(position.indexOf('Bottom') > -1) ? type === 'Template' ? (rect.y + ((rect.height / 2) - (labelSize.height / 2))) :\n                (rect.y + (rect.height / 2) + labelSize.height / 4) : (rect.y + rect.height) - labelSize.height));\n    }\n    return location;\n}\nexport function measureElement(element, parentElement) {\n    var size = new Size(0, 0);\n    parentElement.appendChild(element);\n    size.height = element.offsetHeight;\n    size.width = element.offsetWidth;\n    document.getElementById(element.id).remove();\n    return size;\n}\nexport function getArea(rect) {\n    return (rect.width - rect.x) * (rect.height - rect.y);\n}\nexport function getShortestEdge(input) {\n    var container = convertToContainer(input);\n    var width = container.width;\n    var height = container.height;\n    var result = Math.min(width, height);\n    return result;\n}\nexport function convertToContainer(rect) {\n    var x = rect.x;\n    var y = rect.y;\n    var width = rect.width;\n    var height = rect.height;\n    return {\n        x: x,\n        y: y,\n        width: width - x,\n        height: height - y\n    };\n}\nexport function convertToRect(container) {\n    var xOffset = container.x;\n    var yOffset = container.y;\n    var width = container.width;\n    var height = container.height;\n    return {\n        x: xOffset,\n        y: yOffset,\n        width: xOffset + width,\n        height: yOffset + height,\n    };\n}\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new Location((pageX - positionX), (pageY - positionY));\n}\nexport function colorMap(colorMapping, equalValue, value, weightValuePath) {\n    var fill;\n    var paths = [];\n    var opacity;\n    if (isNullOrUndefined(equalValue) && (isNullOrUndefined(value) && isNaN(value))) {\n        return null;\n    }\n    for (var i = 0; i < colorMapping.length; i++) {\n        var isEqualColor = false;\n        var dataValue = value;\n        if (!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to)\n            && !isNullOrUndefined(colorMapping[i].value)) {\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) && (colorMapping[i].value === equalValue)) {\n                isEqualColor = true;\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        else if ((!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to))\n            || !isNullOrUndefined((colorMapping[i].value))) {\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) || (colorMapping[i].value === equalValue)) {\n                if (colorMapping[i].value === equalValue) {\n                    isEqualColor = true;\n                }\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        if (((value >= colorMapping[i].from && value <= colorMapping[i].to) || (colorMapping[i].value === equalValue))\n            && !isNullOrUndefined(colorMapping[i].minOpacity) && !isNullOrUndefined(colorMapping[i].maxOpacity) && fill) {\n            opacity = deSaturationColor(weightValuePath, colorMapping[i], fill, value);\n        }\n        if ((fill === '' || isNullOrUndefined(fill))\n            && isNullOrUndefined(colorMapping[i].from) && isNullOrUndefined(colorMapping[i].to)\n            && isNullOrUndefined(colorMapping[i].minOpacity) && isNullOrUndefined(colorMapping[i].maxOpacity)\n            && isNullOrUndefined(colorMapping[i].value)) {\n            fill = (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') ?\n                colorMapping[i].color[0] : colorMapping[i].color;\n        }\n        opacity = !isNullOrUndefined(opacity) ? opacity : '1';\n        paths.push(fill);\n    }\n    for (var j = paths.length - 1; j >= 0; j--) {\n        fill = paths[j];\n        j = (fill) ? -1 : j;\n    }\n    return { fill: fill, opacity: opacity };\n}\nexport function deSaturationColor(weightValuePath, colorMapping, color, rangeValue) {\n    var opacity = 1;\n    if ((rangeValue >= colorMapping.from && rangeValue <= colorMapping.to)) {\n        var ratio = (rangeValue - colorMapping.from) / (colorMapping.to - colorMapping.from);\n        opacity = (ratio * (colorMapping.maxOpacity - colorMapping.minOpacity)) + colorMapping.minOpacity;\n    }\n    return opacity.toString();\n}\nexport function colorCollections(colorMap, value) {\n    var gradientFill = getColorByValue(colorMap, value);\n    return gradientFill;\n}\nexport function rgbToHex(r, g, b) {\n    return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\nexport function getColorByValue(colorMap, value) {\n    var color = '';\n    var rbg;\n    if (Number(value) === colorMap.from) {\n        color = colorMap.color[0];\n    }\n    else if (Number(value) === colorMap.to) {\n        color = colorMap.color[colorMap.color.length - 1];\n    }\n    else {\n        rbg = getGradientColor(Number(value), colorMap);\n        color = rgbToHex(rbg.r, rbg.g, rbg.b);\n    }\n    return color;\n}\n/* tslint:disable-next-line:max-func-body-length */\nexport function getGradientColor(value, colorMap) {\n    var previousOffset = colorMap.from;\n    var nextOffset = colorMap.to;\n    var percent = 0;\n    var prev1;\n    var full = nextOffset - previousOffset;\n    var midColor;\n    var midreturn;\n    percent = (value - previousOffset) / full;\n    var previousColor;\n    var nextColor;\n    if (colorMap.color.length <= 2) {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n    }\n    else {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n        var a = full / (colorMap.color.length - 1);\n        var b = void 0;\n        var c = void 0;\n        var length_1 = colorMap.color.length - 1;\n        var splitColorValueOffset = [];\n        var splitColor = {};\n        for (var j = 1; j < length_1; j++) {\n            c = j * a;\n            b = previousOffset + c;\n            splitColor = { b: b, color: colorMap.color[j] };\n            splitColorValueOffset.push(splitColor);\n        }\n        for (var i = 0; i < splitColorValueOffset.length; i++) {\n            if (previousOffset <= value && value <= splitColorValueOffset[i]['b'] && i === 0) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                nextColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ? 1 - Math.abs((value - splitColorValueOffset[i]['b']) / a)\n                    : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            else if (splitColorValueOffset[i]['b'] <= value && value <= nextOffset && i === (splitColorValueOffset.length - 1)) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                previousColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ?\n                    1 - Math.abs((value - splitColorValueOffset[i]['b']) / a) : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            if (i !== splitColorValueOffset.length - 1 && i < splitColorValueOffset.length) {\n                if (splitColorValueOffset[i]['b'] <= value && value <= splitColorValueOffset[i + 1]['b']) {\n                    midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                    previousColor = midColor;\n                    nextColor = splitColorValueOffset[i + 1]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i + 1]['color'] : colorNameToHex(splitColorValueOffset[i + 1]['color']);\n                    percent = Math.abs((value - splitColorValueOffset[i + 1]['b'])) / a;\n                }\n            }\n        }\n    }\n    return getPercentageColor(percent, previousColor, nextColor);\n}\nexport function getPercentageColor(percent, previous, next) {\n    var nextColor = next.split('#')[1];\n    var prevColor = previous.split('#')[1];\n    var r = getPercentage(percent, parseInt(prevColor.substr(0, 2), 16), parseInt(nextColor.substr(0, 2), 16));\n    var g = getPercentage(percent, parseInt(prevColor.substr(2, 2), 16), parseInt(nextColor.substr(2, 2), 16));\n    var b = getPercentage(percent, parseInt(prevColor.substr(4, 2), 16), parseInt(nextColor.substr(4, 2), 16));\n    return new ColorValue(r, g, b);\n}\nexport function getPercentage(percent, previous, next) {\n    var full = next - previous;\n    return Math.round((previous + (full * percent)));\n}\nexport function wordWrap(maximumWidth, dataLabel, font) {\n    var textCollection = dataLabel.split(' ');\n    var label = '';\n    var labelCollection = [];\n    var text;\n    for (var i = 0, len = textCollection.length; i < len; i++) {\n        text = textCollection[i];\n        if (measureText(label.concat(text), font).width < maximumWidth) {\n            label = label.concat((label === '' ? '' : ' ') + text);\n        }\n        else {\n            if (label !== '') {\n                labelCollection.push(textTrim(maximumWidth, label, font));\n                label = text;\n            }\n            else {\n                labelCollection.push(textTrim(maximumWidth, text, font));\n                text = '';\n            }\n        }\n        if (label && i === len - 1) {\n            labelCollection.push(textTrim(maximumWidth, label, font));\n        }\n    }\n    return labelCollection;\n}\nexport function textWrap(maxWidth, label, font) {\n    var text = label;\n    var resultText = [];\n    var currentLength = 0;\n    var totalWidth = measureText(label, font).width;\n    var totalLength = label.length;\n    if (maxWidth >= totalWidth) {\n        resultText.push(label);\n        return resultText;\n    }\n    else {\n        for (var i = label.length; i > currentLength; i--) {\n            var sliceString = label.slice(currentLength, i);\n            totalWidth = measureText(sliceString, font).width;\n            if (totalWidth <= maxWidth) {\n                resultText.push(sliceString);\n                currentLength += sliceString.length;\n                if (totalLength === currentLength) {\n                    return resultText;\n                }\n                i = totalLength + 1;\n            }\n        }\n    }\n    return resultText;\n}\n/**\n * hide function\n */\nexport function hide(maxWidth, maxHeight, text, font) {\n    var hideText = text;\n    var textSize = measureText(text, font);\n    hideText = (textSize.width > maxWidth || textSize.height > maxHeight) ? ' ' : text;\n    return hideText;\n}\nexport function orderByArea(a, b) {\n    if (a['itemArea'] === b['itemArea']) {\n        return 0;\n    }\n    else if (a['itemArea'] < b['itemArea']) {\n        return 1;\n    }\n    return -1;\n}\nexport function removeClassNames(elements, type, treemap) {\n    var opacity;\n    var process = true;\n    var element;\n    var stroke;\n    var strokeWidth;\n    var fill;\n    var options = {};\n    for (var j = 0; j < elements.length; j++) {\n        element = elements[j].childNodes[0];\n        options = treemap.layout.renderItems[element.id.split('_')[6]]['options'];\n        applyOptions(element, options);\n        elements[j].classList.remove(type);\n        j -= 1;\n    }\n}\nexport function applyOptions(element, options) {\n    element.setAttribute('opacity', options['opacity']);\n    element.setAttribute('fill', options['fill']);\n    element.setAttribute('stroke', options['border']['color']);\n    element.setAttribute('stroke-width', options['border']['width']);\n}\nexport function textFormatter(format, data, treemap) {\n    if (isNullOrUndefined(format)) {\n        return null;\n    }\n    var keys = Object.keys(data);\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n        format = format.split('${' + key + '}').join(formatValue(data[key], treemap).toString());\n    }\n    return format;\n}\nexport function formatValue(value, treemap) {\n    var formatValue;\n    var formatFunction;\n    if (treemap.format && !isNaN(Number(value))) {\n        formatFunction = treemap.intl.getNumberFormat({ format: treemap.format, useGrouping: treemap.useGroupingSeparator });\n        formatValue = formatFunction(Number(value));\n    }\n    else {\n        formatValue = value;\n    }\n    return formatValue ? formatValue : '';\n}\n/** @private */\nvar ColorValue = /** @class */ (function () {\n    function ColorValue(r, g, b) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n    }\n    return ColorValue;\n}());\nexport { ColorValue };\n/** @private */\nexport function convertToHexCode(value) {\n    return '#' + componentToHex(value.r) + componentToHex(value.g) + componentToHex(value.b);\n}\n/** @private */\nexport function componentToHex(value) {\n    var hex = value.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n}\n/** @private */\nexport function convertHexToColor(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? new ColorValue(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) :\n        new ColorValue(255, 255, 255);\n}\n/** @private */\nexport function colorNameToHex(color) {\n    var element;\n    color = color === 'transparent' ? 'white' : color;\n    element = document.getElementById('treeMapMeasureText');\n    element.style.color = color;\n    color = window.getComputedStyle(element).color;\n    var exp = /^(rgb|hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/;\n    var isRGBValue = exp.exec(color);\n    return convertToHexCode(new ColorValue(parseInt(isRGBValue[3], 10), parseInt(isRGBValue[4], 10), parseInt(isRGBValue[5], 10)));\n}\n/** @private */\nexport function drawSymbol(location, shape, size, url, options, label) {\n    var functionName = 'Path';\n    var svgRenderer = new SvgRenderer('');\n    var temp = renderLegendShape(location, size, shape, options, url);\n    var htmlElement = svgRenderer['draw' + temp.functionName](temp.renderOption);\n    htmlElement.setAttribute('aria-label', label);\n    return htmlElement;\n}\n/** @private */\nexport function renderLegendShape(location, size, shape, options, url) {\n    var renderPath;\n    var functionName = 'Path';\n    var shapeWidth = size.width;\n    var shapeHeight = size.height;\n    var shapeX = location.x;\n    var shapeY = location.y;\n    var x = location.x + (-shapeWidth / 2);\n    var y = location.y + (-shapeHeight / 2);\n    switch (shape) {\n        case 'Circle':\n        case 'Bubble':\n            functionName = 'Ellipse';\n            merge(options, { 'rx': shapeWidth / 2, 'ry': shapeHeight / 2, 'cx': shapeX, 'cy': shapeY });\n            break;\n        case 'VerticalLine':\n            renderPath = 'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' '\n                + (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Diamond':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + shapeY + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Rectangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Triangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'InvertedTriangle':\n            renderPath = 'M' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX - (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Pentagon':\n            var eq = 72;\n            var xValue = void 0;\n            var yValue = void 0;\n            for (var i = 0; i <= 5; i++) {\n                xValue = (shapeWidth / 2) * Math.cos((Math.PI / 180) * (i * eq));\n                yValue = (shapeWidth / 2) * Math.sin((Math.PI / 180) * (i * eq));\n                if (i === 0) {\n                    renderPath = 'M' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ';\n                }\n                else {\n                    renderPath = renderPath.concat('L' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ');\n                }\n            }\n            renderPath = renderPath.concat('Z');\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Star':\n            renderPath = 'M ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + (location.x - size.width / 2)\n                + ' ' + (location.y + size.height / 6) + ' L ' + (location.x + size.width / 2) + ' ' + (location.y + size.height / 6)\n                + ' L ' + (location.x - size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + location.x + ' ' +\n                (location.y + size.height / 2) + ' L ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' Z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Cross':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' + 'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' ' +\n                (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Image':\n            functionName = 'Image';\n            merge(options, { 'href': url, 'height': shapeHeight, 'width': shapeWidth, x: x, y: y });\n            break;\n    }\n    return { renderOption: options, functionName: functionName };\n}\nexport function isParentItem(data, item) {\n    var isParentItem = false;\n    for (var j = 0; j < data.length; j++) {\n        if (item['levelOrderName'] === data[j]['levelOrderName']) {\n            isParentItem = true;\n            break;\n        }\n    }\n    return isParentItem;\n}\n/**\n * Ajax support for treemap\n */\nvar TreeMapAjax = /** @class */ (function () {\n    function TreeMapAjax(options, type, async, contentType, sendData) {\n        this.dataOptions = options;\n        this.type = type || 'GET';\n        this.async = async || true;\n        this.contentType = contentType;\n        this.sendData = sendData;\n    }\n    return TreeMapAjax;\n}());\nexport { TreeMapAjax };\nexport function removeShape(collection, value) {\n    if (collection.length > 0) {\n        for (var i = 0; i < collection.length; i++) {\n            var item = collection[i];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n        }\n    }\n}\nexport function removeLegend(collection, value) {\n    if (collection.length > 0) {\n        for (var j = 0; j < collection.length; j++) {\n            var item = collection[j];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n            var dataCount = item['ShapeCollection']['Elements'].length;\n            for (var k = 0; k < dataCount; k++) {\n                setColor(item['ShapeCollection']['Elements'][k], item['shapeOldFill'], item['shapeOldOpacity'], item['shapeOldBorderColor'], item['shapeOldBorderWidth']);\n            }\n        }\n    }\n}\nexport function setColor(element, fill, opacity, borderColor, borderWidth) {\n    element.setAttribute('fill', fill);\n    element.setAttribute('opacity', opacity);\n    element.setAttribute('stroke', borderColor);\n    element.setAttribute('stroke-width', borderWidth);\n}\nexport function removeSelectionWithHighlight(collection, element, treemap) {\n    removeShape(collection, 'highlight');\n    element = [];\n    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n}\nexport function getLegendIndex(length, item, treemap) {\n    var index;\n    for (var i = 0; i < length; i++) {\n        var dataLength = treemap.treeMapLegendModule.legendCollections[i]['legendData'].length;\n        for (var j = 0; j < dataLength; j++) {\n            if (treemap.treeMapLegendModule.legendCollections[i]['legendData'][j]['levelOrderName'] === item['levelOrderName']) {\n                index = i;\n                break;\n            }\n        }\n    }\n    return index;\n}\nexport function pushCollection(collection, index, number, legendElement, shapeElement, renderItems, legendCollection) {\n    collection.push({\n        legendEle: legendElement, oldFill: legendCollection[index]['legendFill'],\n        oldOpacity: legendCollection[index]['opacity'], oldBorderColor: legendCollection[index]['borderColor'],\n        oldBorderWidth: legendCollection[index]['borderWidth'],\n        shapeElement: shapeElement, shapeOldFill: renderItems[number]['options']['fill'],\n        shapeOldOpacity: renderItems[number]['options']['opacity'],\n        shapeOldBorderColor: renderItems[number]['options']['border']['color'],\n        shapeOldBorderWidth: renderItems[number]['options']['border']['width']\n    });\n}\n","/**\n * Maps Themes doc\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.mapsTitleFont = {\n        size: '14px',\n        fontWeight: 'Medium',\n        color: '#424242',\n        fontStyle: 'Medium',\n        fontFamily: 'Roboto, Noto, Sans-serif'\n    };\n})(Theme || (Theme = {}));\n/**\n * @private\n * To get the theme style based on treemap theme.\n */\nexport function getThemeStyle(theme) {\n    var style;\n    var color;\n    switch (theme) {\n        case 'MaterialDark':\n            color = '#303030';\n            break;\n        case 'FabricDark':\n            color = '#201F1F';\n            break;\n        case 'BootstrapDark':\n            color = '#1A1A1A';\n            break;\n    }\n    switch (theme) {\n        case 'BootstrapDark':\n        case 'FabricDark':\n        case 'MaterialDark':\n            style = {\n                backgroundColor: color,\n                titleFontColor: '#FFFFFF',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#DADADA',\n                legendTextColor: '#DADADA'\n            };\n            break;\n        case 'HighContrast':\n            style = {\n                backgroundColor: '#000000',\n                titleFontColor: '#FFFFFF',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#FFFFFF',\n                legendTextColor: '#FFFFFF'\n            };\n            break;\n        case 'Bootstrap4':\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#212529',\n                subTitleFontColor: '#212529',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                legendTitleColor: '#212529',\n                legendTextColor: '#212529',\n                fontFamily: 'HelveticaNeue-Medium',\n                fontSize: '16px',\n                legendFontSize: '14px',\n                labelFontFamily: 'HelveticaNeue'\n            };\n            break;\n        default:\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#424242',\n                subTitleFontColor: '#424242',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#353535',\n                legendTextColor: '#353535'\n            };\n            break;\n    }\n    return style;\n}\n","/**\n * TreeMap constants doc\n */\n/**\n * Specifies TreeMap load event name.\n * @private\n */\nexport var load = 'load';\n/**\n * Specifies TreeMap loaded event name.\n * @private\n */\nexport var loaded = 'loaded';\n/**\n * Specifies TreeMap beforePrint event name.\n * @private\n */\nexport var beforePrint = 'beforePrint';\n/**\n * Specifies the itemRendering event name.\n * @private\n */\nexport var itemRendering = 'itemRendering';\n/**\n * Specifies the drilldown start event name.\n * @private\n */\nexport var drillStart = 'drillStart';\n/**\n * Specifies the drilldown end event name.\n * @private\n */\nexport var drillEnd = 'drillEnd';\n/**\n * Specifies the item selected event name.\n * @private\n */\nexport var itemSelected = 'itemSelected';\n/**\n * Specifies the item highlight event name.\n * @private\n */\nexport var itemHighlight = 'itemHighlight';\n/**\n * Specifies the tooltip rendering event name.\n * @private\n */\nexport var tooltipRendering = 'tooltipRendering';\n/**\n * Specifies the item click event name.\n * @private\n */\nexport var itemClick = 'itemClick';\n/**\n * Specifies the item move event name.\n * @private\n */\nexport var itemMove = 'itemMove';\n/**\n * Specifies the mouse click event name.\n * @private\n */\nexport var click = 'click';\n/**\n * Specifies maps double click event name.\n * @private\n */\nexport var doubleClick = 'doubleClick';\n/**\n * Specifies maps right click event name.\n * @private\n */\nexport var rightClick = 'rightClick';\n/**\n * Specifies the mouse move event name.\n * @private\n */\nexport var mouseMove = 'mouseMove';\n/**\n * Specifies legend item rendering event name.\n * @private\n */\nexport var legendItemRendering = 'legendItemRendering';\n/**\n * Specifies legend rendering event name.\n * @private\n */\nexport var legendRendering = 'legendRendering';\n/**\n * Specifies treemap resize event name.\n * @private\n */\nexport var resize = 'resize';\n/**\n * Specifies the font family\n * @private\n */\nexport var defaultFont = 'Roboto, Segoe UI, Noto, Sans-serif';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Maps base doc\n */\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { defaultFont } from './constants';\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#808080')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Configures the treemap margin.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Configures the fonts in treemap.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property(defaultFont)\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * To configure title of the maps.\n */\nvar CommonTitleSettings = /** @class */ (function (_super) {\n    __extends(CommonTitleSettings, _super);\n    function CommonTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"description\", void 0);\n    return CommonTitleSettings;\n}(ChildProperty));\nexport { CommonTitleSettings };\n/**\n * To configure subtitle of the maps.\n */\nvar SubTitleSettings = /** @class */ (function (_super) {\n    __extends(SubTitleSettings, _super);\n    function SubTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], SubTitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], SubTitleSettings.prototype, \"alignment\", void 0);\n    return SubTitleSettings;\n}(CommonTitleSettings));\nexport { SubTitleSettings };\n/**\n * To configure title of the maps.\n */\nvar TitleSettings = /** @class */ (function (_super) {\n    __extends(TitleSettings, _super);\n    function TitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ size: '15px' }, Font)\n    ], TitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], TitleSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({}, SubTitleSettings)\n    ], TitleSettings.prototype, \"subtitleSettings\", void 0);\n    return TitleSettings;\n}(CommonTitleSettings));\nexport { TitleSettings };\nvar ColorMapping = /** @class */ (function (_super) {\n    __extends(ColorMapping, _super);\n    function ColorMapping() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"from\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"to\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"label\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"minOpacity\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"maxOpacity\", void 0);\n    __decorate([\n        Property(true)\n    ], ColorMapping.prototype, \"showLegend\", void 0);\n    return ColorMapping;\n}(ChildProperty));\nexport { ColorMapping };\n/**\n * Configures the legend settings.\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Default')\n    ], LegendSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('transparent')\n    ], LegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property('Circle')\n    ], LegendSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], LegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"shapeBorder\", void 0);\n    __decorate([\n        Complex({}, CommonTitleSettings)\n    ], LegendSettings.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], LegendSettings.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Property('Bottom')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"invertedPointer\", void 0);\n    __decorate([\n        Property('After')\n    ], LegendSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"labelDisplayMode\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Property({ x: 0, y: 0 })\n    ], LegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"showLegendPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"valuePath\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"removeDuplicateLegend\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\nvar InitialDrillSettings = /** @class */ (function (_super) {\n    __extends(InitialDrillSettings, _super);\n    function InitialDrillSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupName\", void 0);\n    return InitialDrillSettings;\n}(ChildProperty));\nexport { InitialDrillSettings };\nvar LeafItemSettings = /** @class */ (function (_super) {\n    __extends(LeafItemSettings, _super);\n    function LeafItemSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LeafItemSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LeafItemSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(0)\n    ], LeafItemSettings.prototype, \"gap\", void 0);\n    __decorate([\n        Property(10)\n    ], LeafItemSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property(1)\n    ], LeafItemSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LeafItemSettings.prototype, \"showLabels\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LeafItemSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Complex({ color: null, size: '12px' }, Font)\n    ], LeafItemSettings.prototype, \"labelStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelTemplate\", void 0);\n    __decorate([\n        Property('Center')\n    ], LeafItemSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Property('Trim')\n    ], LeafItemSettings.prototype, \"interSectAction\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LeafItemSettings.prototype, \"colorMapping\", void 0);\n    return LeafItemSettings;\n}(ChildProperty));\nexport { LeafItemSettings };\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('')\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property('#000816')\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(0.75)\n    ], TooltipSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(['Circle'])\n    ], TooltipSettings.prototype, \"markerShapes\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ fontFamily: defaultFont, size: '13px' }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('#808080')\n    ], SelectionSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], SelectionSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], SelectionSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\nvar HighlightSettings = /** @class */ (function (_super) {\n    __extends(HighlightSettings, _super);\n    function HighlightSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], HighlightSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('#808080')\n    ], HighlightSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], HighlightSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], HighlightSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], HighlightSettings.prototype, \"mode\", void 0);\n    return HighlightSettings;\n}(ChildProperty));\nexport { HighlightSettings };\n/**\n * Options for customizing the tree map levels.\n */\nvar LevelSettings = /** @class */ (function (_super) {\n    __extends(LevelSettings, _super);\n    function LevelSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"groupPath\", void 0);\n    __decorate([\n        Property(0)\n    ], LevelSettings.prototype, \"groupGap\", void 0);\n    __decorate([\n        Property(10)\n    ], LevelSettings.prototype, \"groupPadding\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LevelSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LevelSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Property(1)\n    ], LevelSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LevelSettings.prototype, \"showHeader\", void 0);\n    __decorate([\n        Property(20)\n    ], LevelSettings.prototype, \"headerHeight\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerFormat\", void 0);\n    __decorate([\n        Property('Near')\n    ], LevelSettings.prototype, \"headerAlignment\", void 0);\n    __decorate([\n        Complex({ color: null, size: '13px' }, Font)\n    ], LevelSettings.prototype, \"headerStyle\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LevelSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LevelSettings.prototype, \"colorMapping\", void 0);\n    return LevelSettings;\n}(ChildProperty));\nexport { LevelSettings };\n","import { Rect, itemsToOrder, TextOption, measureText, textTrim, hide, wordWrap, textWrap, getTemplateFunction, convertElement, findLabelLocation, PathOption, textFormatter, colorNameToHex, convertHexToColor, colorMap, measureElement, convertToContainer, convertToRect, getShortestEdge, getArea, orderByArea, isParentItem } from '../utils/helper';\nimport { isNullOrUndefined, createElement, extend } from '@syncfusion/ej2-base';\nimport { Location, findChildren, renderTextElement } from '../utils/helper';\nimport { itemRendering } from '../model/constants';\n/**\n * To calculate and render the shape layer\n */\nvar LayoutPanel = /** @class */ (function () {\n    function LayoutPanel(treemap) {\n        this.treemap = treemap;\n    }\n    /* tslint:disable:no-string-literal */\n    LayoutPanel.prototype.processLayoutPanel = function () {\n        var data;\n        var totalRect;\n        if (this.treemap.levelsOfData && this.treemap.levelsOfData.length > 0) {\n            data = (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                !isNullOrUndefined(this.treemap.initialDrillDown.groupName)) &&\n                (isNullOrUndefined(this.treemap.drilledItems) ? isNullOrUndefined(this.treemap.drilledItems)\n                    : this.treemap.drilledItems.length === 0) ?\n                this.getDrilldownData(this.treemap.levelsOfData[0], [])[0] : this.treemap.levelsOfData[0];\n            totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n            if (!isNullOrUndefined(this.treemap.treeMapLegendModule) && !isNullOrUndefined(this.treemap.totalRect)) {\n                if (this.treemap.legendSettings.position !== 'Float') {\n                    totalRect = this.treemap.totalRect;\n                }\n            }\n            if (!isNullOrUndefined(this.treemap.currentLevel) &&\n                (isNullOrUndefined(this.treemap.drilledItems) ? !isNullOrUndefined(this.treemap.drilledItems)\n                    : this.treemap.drilledItems.length !== 0)) {\n                var count = this.treemap.drilledItems.length - 1;\n                var x = this.treemap.drilledItems[count]['data'];\n                var y = new Object();\n                y[this.treemap.drilledItems[count]['data']['groupName']] = [x];\n                if (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) && !this.treemap.enableBreadcrumb) {\n                    this.treemap.currentLevel = this.treemap.drilledItems[count]['data']['groupIndex'];\n                }\n                this.calculateLayoutItems(y || this.treemap.levelsOfData[0], totalRect);\n                this.renderLayoutItems(y || this.treemap.levelsOfData[0]);\n            }\n            else {\n                if (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                    (isNullOrUndefined(this.treemap.drilledItems) ? isNullOrUndefined(this.treemap.drilledItems)\n                        : this.treemap.drilledItems.length === 0)) {\n                    this.treemap.currentLevel = this.treemap.initialDrillDown.groupIndex;\n                }\n                this.calculateLayoutItems(data || this.treemap.levelsOfData[0], totalRect);\n                this.renderLayoutItems(data || this.treemap.levelsOfData[0]);\n            }\n        }\n    };\n    LayoutPanel.prototype.getDrilldownData = function (data, drillData) {\n        var treemap = this.treemap;\n        var newData = {};\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0 && drillData.length === 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (child[i]['groupIndex'] === treemap.initialDrillDown.groupIndex &&\n                    child[i]['name'] === treemap.initialDrillDown.groupName) {\n                    child[i]['isDrilled'] = true;\n                    newData[child[i]['groupName']] = [child[i]];\n                    drillData.push(newData);\n                }\n            }\n            for (var j = 0; j < child.length; j++) {\n                this.getDrilldownData(child[j], drillData);\n            }\n        }\n        return drillData;\n    };\n    LayoutPanel.prototype.calculateLayoutItems = function (data, rect) {\n        this.renderItems = [];\n        this.parentData = [];\n        if (!isNullOrUndefined(this.treemap.weightValuePath)) {\n            if (this.treemap.layoutType.indexOf('SliceAndDice') > -1) {\n                this.computeSliceAndDiceDimensional(data, rect);\n            }\n            else {\n                rect.height = rect.height + rect.y;\n                rect.width = rect.width + rect.x;\n                this.computeSquarifyDimensional(data, rect);\n            }\n        }\n    };\n    LayoutPanel.prototype.computeSliceAndDiceDimensional = function (data, coords) {\n        var leafItem = this.treemap.leafItemSettings;\n        var rect;\n        var groups = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        var children = findChildren(data)['values'];\n        var gap;\n        var headerHeight;\n        if (children && children.length > 0) {\n            this.sliceAndDiceProcess(children, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < children.length; i++) {\n                    groupIndex = children[i]['groupIndex'];\n                    isLeafItem = (groups.length === 0 || groupIndex === groups.length);\n                    gap = isLeafItem ? leafItem.gap : groups[groupIndex].groupGap;\n                    headerHeight = groups.length === 0 ? 0 : groups[groupIndex] ? groups[groupIndex].showHeader ?\n                        groups[groupIndex].headerHeight : 0 : groups[groupIndex - 1].showHeader ? groups[groupIndex - 1].headerHeight : 0;\n                    rect = children[i]['rect'];\n                    rect = new Rect(rect.x + (gap / 2), rect.y + (headerHeight + (gap / 2)), rect.width - gap, Math.abs(rect.height - (gap + headerHeight)));\n                    this.computeSliceAndDiceDimensional(children[i], rect);\n                }\n            }\n        }\n        return data;\n    };\n    LayoutPanel.prototype.sliceAndDiceProcess = function (processData, rect) {\n        var parentArea = rect.height * rect.width;\n        var levels = this.treemap.levels;\n        var childValue;\n        var alottedValue = 0;\n        var totalWeight = 0;\n        processData.forEach(function (data) { totalWeight += data['weight']; });\n        processData.forEach(function (child) {\n            child['weightArea'] = parentArea * child['weight'] / totalWeight;\n        });\n        var isHorizontal = (this.treemap.layoutType === 'SliceAndDiceAuto') ? (rect.width > rect.height) :\n            (this.treemap.layoutType === 'SliceAndDiceHorizontal');\n        processData.sort(itemsToOrder);\n        for (var i = 0; i < processData.length; i++) {\n            var item = processData[i];\n            item['isLeafItem'] = (levels.length === 0) || ((this.treemap.isHierarchicalData ||\n                isNullOrUndefined(this.treemap.leafItemSettings.labelPath)) ?\n                item['groupIndex'] === levels.length - 1 : item['groupIndex'] === this.treemap.levels.length);\n            if (isHorizontal) {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.height;\n                if (alottedValue <= rect.width) {\n                    processData[i]['rect'] = new Rect(alottedValue + rect.x, rect.y, childValue, rect.height);\n                }\n            }\n            else {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.width;\n                if (alottedValue <= rect.height) {\n                    processData[i]['rect'] = new Rect(rect.x, alottedValue + rect.y, rect.width, childValue);\n                }\n            }\n            alottedValue += childValue;\n            this.renderItems.push(processData[i]);\n        }\n    };\n    LayoutPanel.prototype.computeSquarifyDimensional = function (data, coords) {\n        var leaf = this.treemap.leafItemSettings;\n        var rect;\n        var levels = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        var item;\n        var child = findChildren(data)['values'];\n        var index;\n        var gap;\n        var padding;\n        var headerHeight;\n        if (child && child.length > 0) {\n            if (this.parentData.length === 0) {\n                this.parentData = [];\n                this.parentData.push(child);\n            }\n            this.calculateChildrenLayout(data, child, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    item = child[i];\n                    index = item['groupIndex'];\n                    rect = item['rect'];\n                    gap = (item['isLeafItem'] ? leaf.gap : levels[index].groupGap) / 2;\n                    padding = (item['isLeafItem'] ? leaf.padding : levels[index].groupPadding) / 2;\n                    headerHeight = this.treemap.isHierarchicalData ? index === 0 && item['isLeafItem'] ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0 : (levels.length === 0) ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0;\n                    rect = new Rect(rect.x + padding, rect.y + (headerHeight + padding), rect.width - padding, rect.height - padding);\n                    if (!item['isLeafItem'] && item['weight'] > 0) {\n                        this.computeSquarifyDimensional(child[i], rect);\n                    }\n                }\n            }\n        }\n    };\n    LayoutPanel.prototype.calculateChildrenLayout = function (parent, children, coords) {\n        this.computeTotalArea(children, getArea(coords));\n        children.sort(orderByArea);\n        this.performRowsLayout(children, [], coords, []);\n    };\n    LayoutPanel.prototype.performRowsLayout = function (data, currentRow, rect, stack) {\n        var dataLength = data.length;\n        if (dataLength === 0) {\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            var newStack = stack.concat(newCoordinates);\n            return newStack;\n        }\n        var width = getShortestEdge(rect);\n        var nextDatum = data[0];\n        var restData = data.slice(1, dataLength);\n        if (this.aspectRatio(currentRow, nextDatum, width)) {\n            var newRow = currentRow.concat(nextDatum);\n            return this.performRowsLayout(restData, newRow, rect, stack);\n        }\n        else {\n            var currentRowLength = currentRow.length;\n            var valueSum = 0;\n            for (var i = 0; i < currentRowLength; i += 1) {\n                valueSum += currentRow[i]['itemArea'];\n            }\n            var newContainer = this.cutArea(rect, valueSum);\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            var newStack = stack.concat(newCoordinates);\n            return this.performRowsLayout(data, [], newContainer, newStack);\n        }\n    };\n    LayoutPanel.prototype.aspectRatio = function (currentRow, nextDatum, length) {\n        if (currentRow.length === 0) {\n            return true;\n        }\n        else {\n            var newRow = currentRow.concat(nextDatum);\n            var currentMaxAspectRatio = this.findMaxAspectRatio(currentRow, length);\n            var newMaxAspectRatio = this.findMaxAspectRatio(newRow, length);\n            return (currentMaxAspectRatio >= newMaxAspectRatio);\n        }\n    };\n    LayoutPanel.prototype.findMaxAspectRatio = function (row, length) {\n        var rowLength = row.length;\n        var minArea = Infinity;\n        var maxArea = -Infinity;\n        var sumArea = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            var area = row[i]['itemArea'];\n            if (area < minArea) {\n                minArea = area;\n            }\n            if (area > maxArea) {\n                maxArea = area;\n            }\n            sumArea += area;\n        }\n        var result = Math.max((Math.pow(length, 2)) * maxArea / (Math.pow(sumArea, 2)), (Math.pow(sumArea, 2)) /\n            ((Math.pow(length, 2)) * minArea));\n        return result;\n    };\n    LayoutPanel.prototype.cutArea = function (rect, area) {\n        var newContainer = convertToContainer(rect);\n        var width = newContainer.width;\n        var height = newContainer.height;\n        var xOffset = newContainer.x;\n        var yOffset = newContainer.y;\n        if (width >= height) {\n            var areaWidth = area / height;\n            var newWidth = width - areaWidth;\n            var container = {\n                x: xOffset + areaWidth,\n                y: yOffset,\n                width: newWidth,\n                height: height,\n            };\n            return convertToRect(container);\n        }\n        else {\n            var areaHeight = area / width;\n            var newHeight = height - areaHeight;\n            var container = {\n                x: xOffset,\n                y: yOffset + areaHeight,\n                width: width,\n                height: newHeight,\n            };\n            return convertToRect(container);\n        }\n    };\n    LayoutPanel.prototype.getCoordinates = function (row, rect) {\n        var container = convertToContainer(rect);\n        var headerHeight;\n        var width = container.width;\n        var height = container.height;\n        var xOffset = container.x;\n        var yOffset = container.y;\n        var rowLength = row.length;\n        var levels = this.treemap.levels;\n        var leaf = this.treemap.leafItemSettings;\n        var index;\n        var valueSum = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            valueSum += row[i]['itemArea'];\n        }\n        var areaWidth = valueSum / height;\n        var areaHeight = valueSum / width;\n        var subXOffset = xOffset;\n        var subYOffset = yOffset;\n        var padding;\n        var coordinates = [];\n        var isParent;\n        var gap;\n        var parentRect;\n        for (var i = 0; i < rowLength; i += 1) {\n            var item = row[i];\n            index = item['groupIndex'];\n            item['isLeafItem'] = (levels.length === 0) || (this.treemap.isHierarchicalData ? index === levels.length :\n                isNullOrUndefined(leaf.labelPath) ? false : index === levels.length);\n            isParent = isParentItem(this.parentData[0], item);\n            parentRect = isParent ? this.treemap.areaRect : item['parent'].rect;\n            padding = item['isLeafItem'] ? leaf.padding : levels[index].groupPadding;\n            if (width >= height) {\n                var y1 = subYOffset + item['itemArea'] / areaWidth;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: subXOffset + areaWidth,\n                    height: y1,\n                };\n                subYOffset = y1;\n            }\n            else {\n                var x1 = subXOffset + item['itemArea'] / areaHeight;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: x1,\n                    height: subYOffset + areaHeight,\n                };\n                subXOffset = x1;\n            }\n            if (item['weight'] > 0 && (isParent || (Math.round(rect.y + (padding / 2)) <=\n                Math.round(parentRect.y + (parentRect.height - parentRect.y)) && Math.round(rect.x + (padding / 2)) <=\n                Math.round(parentRect.x + (parentRect.width - parentRect.x))))) {\n                this.renderItems.push(item);\n                coordinates.push(item);\n            }\n        }\n        return coordinates;\n    };\n    LayoutPanel.prototype.computeTotalArea = function (data, area) {\n        var dataLength = data.length;\n        var dataSum = 0;\n        var result = [];\n        for (var i = 0; i < dataLength; i += 1) {\n            var dataLength_1 = data.length;\n            var dataSum_1 = 0;\n            for (var i_1 = 0; i_1 < dataLength_1; i_1 += 1) {\n                dataSum_1 += data[i_1]['weight'];\n            }\n            var multiplier = area / dataSum_1;\n            var datum = void 0;\n            for (var j = 0; j < dataLength_1; j++) {\n                datum = data[j];\n                datum['itemArea'] = datum['weight'] * multiplier;\n                result.push(datum);\n            }\n        }\n        return result;\n    };\n    LayoutPanel.prototype.onDemandProcess = function (childItems) {\n        var parentItem = new Object();\n        var totalRect;\n        parentItem = childItems[0]['parent'];\n        this.treemap.currentLevel = parentItem['isDrilled'] ? parentItem['groupIndex'] : null;\n        var parentItemGroupname = new Object();\n        if (isNullOrUndefined(parentItem['groupName'])) {\n            parentItemGroupname = parentItem;\n        }\n        else {\n            parentItemGroupname[parentItem['groupName']] = [parentItem];\n        }\n        totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n        if (!isNullOrUndefined(this.treemap.treeMapLegendModule) && !isNullOrUndefined(this.treemap.totalRect)) {\n            totalRect = this.treemap.totalRect;\n        }\n        var count = this.treemap.levels.length;\n        for (var i = 0; i < count; i++) {\n            var levelCount = childItems[0]['groupIndex'];\n            if (count === levelCount) {\n                this.treemap.levels[count] = this.treemap.levels[i];\n            }\n            else {\n                this.treemap.levels.splice(count - 1, 1);\n            }\n        }\n        this.calculateLayoutItems(parentItemGroupname, totalRect);\n        this.renderLayoutItems(parentItemGroupname);\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    LayoutPanel.prototype.renderLayoutItems = function (renderData) {\n        var textCollection = [];\n        var position;\n        var treeMap = this.treemap;\n        var colorMapping;\n        var txtVisible;\n        var getItemColor;\n        var eventArgs;\n        this.renderer = treeMap.renderer;\n        var trimHeader;\n        var textLocation = new Location(0, 0);\n        var pathOptions;\n        var elementID = treeMap.element.id;\n        var index;\n        var templatePosition;\n        var mode = treeMap.layoutType;\n        var rect;\n        var format;\n        var interSectAction = this.treemap.leafItemSettings.interSectAction;\n        var textSize;\n        var fill;\n        var item;\n        var renderText;\n        var opacity;\n        var padding = 5;\n        var rectPath = '';\n        var isRender;\n        var secondaryEle = document.getElementById(treeMap.element.id + '_Secondary_Element');\n        var groupId;\n        var textOptions;\n        var templateEle;\n        var gap;\n        var textStyle;\n        var levels = treeMap.levels;\n        this.layoutGroup = this.renderer.createGroup({ id: elementID + '_TreeMap_' + mode + '_Layout' });\n        var itemGroup;\n        var level;\n        var template;\n        var border;\n        var templateGroup = createElement('div', {\n            id: treeMap.element.id + '_Label_Template_Group',\n            className: 'template',\n            styles: 'overflow: hidden; position: absolute;pointer-events: none;' +\n                'top:' + treeMap.areaRect.y + 'px;' +\n                'left:' + treeMap.areaRect.x + 'px;' +\n                'height:' + treeMap.areaRect.height + 'px;' +\n                'width:' + treeMap.areaRect.width + 'px;'\n        });\n        var isLeafItem = false;\n        var leaf = treeMap.leafItemSettings;\n        var childItems;\n        var connectorText;\n        for (var i = 0; i < this.renderItems.length; i++) {\n            item = this.renderItems[i];\n            index = item['groupIndex'];\n            if (this.treemap.drillDownView && isNullOrUndefined(this.treemap.currentLevel)\n                && index > 0 || this.treemap.drillDownView\n                && index > (this.treemap.currentLevel + 1)) {\n                continue;\n            }\n            rect = item['rect'];\n            isLeafItem = item['isLeafItem'];\n            groupId = elementID + '_Level_Index_' + index + '_Item_Index_' + i;\n            itemGroup = this.renderer.createGroup({ id: groupId + '_Group' });\n            gap = (isLeafItem ? leaf.gap : levels[index].groupGap) / 2;\n            var treemapItemRect = this.treemap.totalRect ? convertToContainer(this.treemap.totalRect) : this.treemap.areaRect;\n            if (treeMap.layoutType === 'Squarified') {\n                rect.width = Math.abs(rect.x - rect.width) - gap;\n                rect.height = Math.abs(rect.y - rect.height) - gap;\n            }\n            if (treeMap.renderDirection === 'TopRightBottomLeft') {\n                rect.x = (treemapItemRect.x + treemapItemRect.width) - rect.width - Math.abs(treemapItemRect.x - rect.x);\n            }\n            else if (treeMap.renderDirection === 'BottomLeftTopRight') {\n                rect.y = (treemapItemRect.y + treemapItemRect.height) - rect.height - Math.abs(treemapItemRect.y - rect.y);\n            }\n            else if (treeMap.renderDirection === 'BottomRightTopLeft') {\n                rect.x = (treemapItemRect.x + treemapItemRect.width) - rect.width - Math.abs(treemapItemRect.x - rect.x);\n                rect.y = (treemapItemRect.y + treemapItemRect.height) - rect.height - Math.abs(treemapItemRect.y - rect.y);\n            }\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[index].colorMapping;\n            getItemColor = this.getItemColor(isLeafItem, item);\n            fill = getItemColor['fill'];\n            opacity = getItemColor['opacity'];\n            format = isLeafItem ? leaf.labelFormat : (levels[index]).headerFormat;\n            var levelName = void 0;\n            txtVisible = isLeafItem ? leaf.showLabels : (levels[index]).showHeader;\n            if (index === this.treemap.currentLevel) {\n                if (this.treemap.enableBreadcrumb) {\n                    var re = /#/gi;\n                    connectorText = '#' + this.treemap.breadcrumbConnector + '#';\n                    levelName = item['levelOrderName'].replace(re, connectorText);\n                    levelName = index !== 0 ? '#' + levelName : levelName;\n                }\n                else {\n                    levelName = item['name'];\n                }\n            }\n            else {\n                if (this.treemap.enableBreadcrumb) {\n                    item['isDrilled'] = false;\n                }\n                levelName = item['name'];\n            }\n            renderText = textFormatter(format, item['data'], this.treemap) || levelName;\n            childItems = findChildren(item)['values'];\n            renderText = !isLeafItem && childItems && childItems.length > 0 && this.treemap.enableDrillDown ?\n                !item['isDrilled'] ? treeMap.enableRtl ? renderText + ' [+]' : '[+] ' + renderText :\n                    treeMap.enableRtl ? renderText + ' [-]' : '[-] ' + renderText : renderText;\n            textStyle = (isLeafItem ? leaf.labelStyle : levels[index].headerStyle);\n            textStyle.fontFamily = this.treemap.themeStyle.labelFontFamily || textStyle.fontFamily;\n            border = isLeafItem ? leaf.border : levels[index].border;\n            position = !isLeafItem ? (levels[index].headerAlignment) === 'Near' ? 'TopLeft' : (levels[index].headerAlignment) === 'Center' ?\n                'TopCenter' : 'TopRight' : leaf.labelPosition;\n            templatePosition = isLeafItem ? leaf.templatePosition : levels[index].templatePosition;\n            template = isLeafItem ? leaf.labelTemplate : levels[index].headerTemplate;\n            item['options'] = { border: border, opacity: opacity, fill: fill };\n            eventArgs = {\n                cancel: false, name: itemRendering, treemap: this.treemap,\n                currentItem: item, RenderItems: this.renderItems, options: item['options']\n            };\n            this.treemap.trigger(itemRendering, eventArgs);\n            if (!eventArgs.cancel) {\n                rectPath = ' M ' + rect.x + ' ' + rect.y + ' L ' + (rect.x + rect.width) + ' ' + rect.y +\n                    ' L ' + (rect.x + rect.width) + ' ' + (rect.y + rect.height) + ' L ' + rect.x + ' ' + (rect.y + rect.height) + 'z';\n                pathOptions = new PathOption(groupId + '_RectPath', fill, border.width, border.color, opacity, null, rectPath);\n                var path = this.renderer.drawPath(pathOptions);\n                itemGroup.appendChild(path);\n                if (txtVisible) {\n                    this.renderItemText(renderText.toString(), itemGroup, textStyle, rect, interSectAction, groupId, fill, position, connectorText);\n                }\n                if (template) {\n                    templateEle = this.renderTemplate(secondaryEle, groupId, rect, templatePosition, template, item);\n                    templateGroup.appendChild(templateEle);\n                }\n                itemGroup.setAttribute('aria-label', item['name']);\n                itemGroup.setAttribute('tabindex', (this.treemap.tabIndex + i + 2).toString());\n                this.layoutGroup.appendChild(itemGroup);\n            }\n        }\n        if (templateGroup.childNodes.length > 0) {\n            secondaryEle.appendChild(templateGroup);\n        }\n        this.treemap.svgObject.appendChild(this.layoutGroup);\n    };\n    LayoutPanel.prototype.renderItemText = function (text, parentElement, textStyle, rect, interSectAction, groupId, fill, position, connectorText) {\n        var level;\n        var textOptions;\n        var headerPosition;\n        var secondaryEle = document.getElementById(this.treemap.element.id + '_Secondary_Element');\n        var leaf = this.treemap.leafItemSettings;\n        var padding = 5;\n        var textSize;\n        var textLocation;\n        var textCollection = [];\n        var customText;\n        var templateEle;\n        var tspanText = [];\n        var height = 0;\n        var textName;\n        textCollection = ((text.indexOf('<br>')) !== -1) ? text.split('<br>') : null;\n        customText = this.labelInterSectAction(rect, text, textStyle, interSectAction);\n        textSize = measureText(textCollection && textCollection[0] || customText[0], textStyle);\n        if (this.treemap.enableRtl) {\n            var labelSize = measureText(text, textStyle);\n            var drillSymbolCount = text.search('[+]') || text.search('[-]');\n            if (rect.width < labelSize.width && drillSymbolCount > 0) {\n                var label = text.substring(drillSymbolCount - 1, text.length);\n                var drillSymbol = '[+]';\n                var drillSymbolSize = measureText(drillSymbol, textStyle);\n                customText['0'] = textTrim(rect.width - drillSymbolSize.width - padding, customText[0], textStyle) + label;\n            }\n        }\n        textLocation = findLabelLocation(rect, position, textSize, 'Text', this.treemap);\n        if (!isNullOrUndefined(textCollection)) {\n            var collection = [];\n            var texts = null;\n            var maxNumber = [];\n            for (var i = 0; i < textCollection.length; i++) {\n                texts = textTrim((rect.width - 5), textCollection[i], textStyle);\n                textSize = measureText(texts, textStyle);\n                height += textSize.height;\n                maxNumber.push(textSize.width);\n                collection.push(texts);\n            }\n            customText = collection;\n            textSize.width = Math.max.apply(null, maxNumber);\n            textSize.height = height;\n        }\n        if (interSectAction === 'WrapByWord' || interSectAction === 'Wrap' || interSectAction === 'Trim') {\n            for (var j = 0; j < customText.length; j++) {\n                textSize = measureText(customText[j], textStyle);\n                height += textSize.height;\n                if ((rect.height - padding) > height) {\n                    tspanText.push(customText[j]);\n                }\n            }\n            if (interSectAction === 'Wrap' && customText.length !== tspanText.length && tspanText.length) {\n                var collectionLength = tspanText.length - 1;\n                var stringText = tspanText[collectionLength];\n                stringText = stringText.substring(0, (stringText.length - 1)) + '...';\n                tspanText.splice(collectionLength);\n                if (stringText !== '...') {\n                    tspanText.push(stringText);\n                }\n            }\n        }\n        else {\n            textName = customText;\n            tspanText.push(textName);\n        }\n        textOptions = new TextOption(groupId + '_Text', textLocation.x, textLocation.y, 'start', tspanText, '', '', connectorText);\n        renderTextElement(textOptions, textStyle, textStyle.color || this.getSaturatedColor(fill), parentElement);\n    };\n    LayoutPanel.prototype.getItemColor = function (isLeafItem, item) {\n        var treemap = this.treemap;\n        var itemFill = isLeafItem ? treemap.leafItemSettings.fill : treemap.levels[item['groupIndex']].fill;\n        var itemOpacity = isLeafItem ? treemap.leafItemSettings.opacity : treemap.levels[item['groupIndex']].opacity;\n        if (!isNullOrUndefined(this.treemap.defaultLevelData)) {\n            if (this.treemap.defaultLevelData.length > 0) {\n                treemap.levelsOfData = this.treemap.defaultLevelData;\n            }\n        }\n        var parentData = findChildren(treemap.levelsOfData[0])['values'];\n        var colorMapping = isLeafItem ? treemap.leafItemSettings.colorMapping :\n            treemap.levels[item['groupIndex']].colorMapping;\n        if (colorMapping.length > 0) {\n            var option = colorMap(colorMapping, item['data'][this.treemap.equalColorValuePath], item['data'][this.treemap.rangeColorValuePath], item['data'][this.treemap.weightValuePath]);\n            itemFill = !isNullOrUndefined(option['fill']) ? option['fill'] : treemap.leafItemSettings.fill;\n            itemOpacity = option['opacity'];\n        }\n        else {\n            for (var i = 0; i < parentData.length; i++) {\n                if (parentData[i]['levelOrderName'] === item['levelOrderName'].split('#')[0]) {\n                    itemFill = !isNullOrUndefined(itemFill) ? itemFill : !isNullOrUndefined(treemap.colorValuePath) ?\n                        parentData[i]['data'][treemap.colorValuePath] : treemap.palette.length > 0 ?\n                        treemap.palette[i % treemap.palette.length] : '#808080';\n                }\n            }\n        }\n        return { fill: itemFill, opacity: itemOpacity };\n    };\n    /**\n     * To find saturated color for datalabel\n     */\n    LayoutPanel.prototype.getSaturatedColor = function (color) {\n        var saturatedColor = color;\n        saturatedColor = (saturatedColor === 'transparent') ? window.getComputedStyle(document.body, null).backgroundColor : saturatedColor;\n        var rgbValue = convertHexToColor(colorNameToHex(saturatedColor));\n        var contrast = Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000);\n        return contrast >= 128 ? 'black' : 'white';\n    };\n    LayoutPanel.prototype.renderTemplate = function (secondaryEle, groupId, rect, position, template, item) {\n        var templateElement;\n        var labelEle;\n        var templateSize;\n        var templateFn;\n        var templateLocation;\n        if (isNullOrUndefined(template['prototype'])) {\n            var keys = Object.keys(item['data']);\n            for (var i = 0; i < keys.length; i++) {\n                template = template.replace(new RegExp('{{:' + keys[i] + '}}', 'g'), item['data'][keys[i].toString()]);\n            }\n        }\n        templateFn = getTemplateFunction(template);\n        templateElement = templateFn(item['data'], this.treemap);\n        labelEle = convertElement(templateElement, groupId + '_Template', item['data']);\n        templateSize = measureElement(labelEle, secondaryEle);\n        templateLocation = findLabelLocation(rect, position, templateSize, 'Template', this.treemap);\n        labelEle.style.left = templateLocation.x + 'px';\n        labelEle.style.top = templateLocation.y + 'px';\n        return labelEle;\n    };\n    LayoutPanel.prototype.labelInterSectAction = function (rect, text, textStyle, alignment) {\n        var textValue;\n        var maxWidth = rect.width - 10;\n        switch (alignment) {\n            case 'Hide':\n                textValue = [hide(maxWidth, rect.height, text, textStyle)];\n                break;\n            case 'Trim':\n                textValue = [textTrim((maxWidth + 3), text, textStyle)];\n                break;\n            case 'WrapByWord':\n                textValue = wordWrap(maxWidth, text, textStyle);\n                break;\n            case 'Wrap':\n                textValue = textWrap(maxWidth, text, textStyle);\n                break;\n        }\n        return textValue;\n    };\n    return LayoutPanel;\n}());\nexport { LayoutPanel };\n","import { print as printWindow, createElement, isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { getElement } from '../utils/helper';\nimport { beforePrint } from '../model/constants';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\n/**\n * Annotation Module handles the Annotation for Maps\n */\nvar ExportUtils = /** @class */ (function () {\n    /**\n     * Constructor for Maps\n     * @param control\n     */\n    function ExportUtils(control) {\n        this.control = control;\n    }\n    /**\n     * To print the Maps\n     * @param elements\n     */\n    ExportUtils.prototype.print = function (elements) {\n        this.printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        this.printWindow.moveTo(0, 0);\n        this.printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        var argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(elements), name: beforePrint\n        };\n        this.control.trigger(beforePrint, argsData);\n        if (!argsData.cancel) {\n            printWindow(argsData.htmlContent, this.printWindow);\n        }\n    };\n    /**\n     * To get the html string of the Maps\n     * @param elements\n     * @private\n     */\n    ExportUtils.prototype.getHTMLContent = function (elements) {\n        var div = createElement('div');\n        if (elements) {\n            if (elements instanceof Array) {\n                elements.forEach(function (value) {\n                    div.appendChild(getElement(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            div.appendChild(this.control.element.cloneNode(true));\n        }\n        return div;\n    };\n    /**\n     * To export the file as image/svg format\n     * @param type\n     * @param fileName\n     */\n    ExportUtils.prototype.export = function (type, fileName, orientation) {\n        var _this = this;\n        var element = createElement('canvas', {\n            id: 'ej2-canvas',\n            attrs: {\n                'width': this.control.availableSize.width.toString(),\n                'height': this.control.availableSize.height.toString()\n            }\n        });\n        var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n        orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n        var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n            this.control.svgObject.outerHTML +\n            '</svg>';\n        var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n            [(new XMLSerializer()).serializeToString(this.control.svgObject)], { type: 'image/svg+xml' }));\n        if (type === 'SVG') {\n            this.triggerDownload(fileName, type, url, isDownload);\n        }\n        else {\n            var image_1 = new Image();\n            var ctx_1 = element.getContext('2d');\n            image_1.onload = (function () {\n                ctx_1.drawImage(image_1, 0, 0);\n                window.URL.revokeObjectURL(url);\n                if (type === 'PDF') {\n                    var document_1 = new PdfDocument();\n                    var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                    document_1.pageSettings.orientation = orientation;\n                    imageString = imageString.slice(imageString.indexOf(',') + 1);\n                    document_1.pages.add().graphics.drawImage(new PdfBitmap(imageString), 0, 0, (_this.control.availableSize.width - 60), _this.control.availableSize.height);\n                    if (isDownload) {\n                        document_1.save(fileName + '.pdf');\n                        document_1.destroy();\n                    }\n                }\n                else {\n                    _this.triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                }\n            });\n            image_1.src = url;\n        }\n    };\n    /**\n     * To trigger the download element\n     * @param fileName\n     * @param type\n     * @param url\n     */\n    ExportUtils.prototype.triggerDownload = function (fileName, type, url, isDownload) {\n        createElement('a', {\n            attrs: {\n                'download': fileName + '.' + type.toLocaleLowerCase(),\n                'href': url\n            }\n        }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n            view: window,\n            bubbles: false,\n            cancelable: true\n        }));\n    };\n    return ExportUtils;\n}());\nexport { ExportUtils };\n","/**\n * Tree Map Component\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, NotifyPropertyChanges, Property, extend, Ajax } from '@syncfusion/ej2-base';\nimport { Complex, Collection } from '@syncfusion/ej2-base';\nimport { Event, Internationalization } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { isNullOrUndefined, createElement, EventHandler, Browser, remove } from '@syncfusion/ej2-base';\nimport { Border, Margin, TitleSettings, LegendSettings, InitialDrillSettings } from './model/base';\nimport { SelectionSettings, TooltipSettings, LevelSettings, LeafItemSettings, HighlightSettings, } from './model/base';\nimport { Size, stringToNumber, RectOption, Rect, textTrim, measureText, findChildren } from '../treemap/utils/helper';\nimport { removeClassNames, removeShape } from '../treemap/utils/helper';\nimport { findPosition, TextOption, renderTextElement, isContainsData, TreeMapAjax } from '../treemap/utils/helper';\nimport { load, loaded, drillStart, drillEnd } from '../treemap/model/constants';\nimport { itemClick, itemMove, click, mouseMove, resize, doubleClick, rightClick } from '../treemap/model/constants';\nimport { LayoutPanel } from './layout/render-panel';\nimport { ExportUtils } from '../treemap/utils/export';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { getThemeStyle } from './model/theme';\n/**\n * Represents the TreeMap control.\n * ```html\n * <div id=\"container\"/>\n * <script>\n *   var treemap = new TreeMap();\n *   treemap.appendTo(\"#container\");\n * </script>\n * ```\n */\nvar TreeMap = /** @class */ (function (_super) {\n    __extends(TreeMap, _super);\n    /**s\n     * Constructor for TreeMap component.\n     */\n    function TreeMap(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.orientation = 'Horizontal';\n        /** @private */\n        _this.drilledItems = [];\n        /** @private */\n        _this.defaultLevelData = [];\n        /** @private */\n        _this.isHierarchicalData = false;\n        return _this;\n    }\n    TreeMap.prototype.preRender = function () {\n        this.trigger(load, { treemap: this });\n        this.initPrivateVariable();\n        this.unWireEVents();\n        this.createSvg();\n        this.wireEVents();\n        this.setCulture();\n    };\n    TreeMap.prototype.render = function () {\n        this.createSecondaryElement();\n        this.addTabIndex();\n        this.themeStyle = getThemeStyle(this.theme);\n        this.renderBorder();\n        this.renderTitle(this.titleSettings, 'title', null, null);\n        if (!isNullOrUndefined(this.levelsOfData)) {\n            this.defaultLevelData = this.levelsOfData;\n        }\n        this.processDataManager();\n    };\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable:no-eval */\n    TreeMap.prototype.processDataManager = function () {\n        var _this = this;\n        var dataModule;\n        var queryModule;\n        var ajaxModule;\n        var localAjax;\n        if (this.dataSource instanceof DataManager) {\n            dataModule = this.dataSource;\n            queryModule = this.query instanceof Query ? this.query : new Query();\n            var dataManager = dataModule.executeQuery(queryModule);\n            dataManager.then(function (e) {\n                _this.dataSource = e['result'];\n                _this.renderTreeMapElements();\n            });\n        }\n        else if (this.dataSource instanceof TreeMapAjax) {\n            localAjax = this.dataSource;\n            ajaxModule = new Ajax(localAjax.dataOptions, localAjax.type, localAjax.async, localAjax.contentType);\n            ajaxModule.onSuccess = function (args) {\n                _this.dataSource = JSON.parse('[' + args + ']')[0];\n                _this.renderTreeMapElements();\n            };\n            ajaxModule.send(localAjax.sendData);\n        }\n        else {\n            this.renderTreeMapElements();\n        }\n    };\n    TreeMap.prototype.renderTreeMapElements = function () {\n        this.processingData();\n        if (this.treeMapLegendModule && this.legendSettings.visible) {\n            this.treeMapLegendModule.renderLegend();\n        }\n        this.layout.processLayoutPanel();\n        this.element.appendChild(this.svgObject);\n        this.elementChange();\n        this.trigger(loaded, { treemap: this });\n    };\n    TreeMap.prototype.createSvg = function () {\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n        var containerWidth = this.element.clientWidth;\n        var containerHeight = this.element.clientHeight;\n        this.availableSize = new Size(stringToNumber(this.width, containerWidth) || containerWidth || 600, stringToNumber(this.height, containerHeight) || containerHeight || 450);\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To initilize the private varibales of treemap.\n     */\n    TreeMap.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-treemap').length;\n            this.element.id = 'treemap_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.layout = new LayoutPanel(this);\n    };\n    TreeMap.prototype.createSecondaryElement = function () {\n        var secondaryEle = document.getElementById(this.element.id + '_Secondary_Element');\n        if (secondaryEle && secondaryEle.childElementCount > 0) {\n            secondaryEle.remove();\n        }\n        if (isNullOrUndefined(document.getElementById(this.element.id + '_Secondary_Element'))) {\n            var secondaryElement = createElement('div', {\n                id: this.element.id + '_Secondary_Element',\n                styles: 'position: absolute;z-index:1;'\n            });\n            this.element.appendChild(secondaryElement);\n        }\n    };\n    TreeMap.prototype.elementChange = function () {\n        if (this.treeMapLegendModule && this.legendSettings.visible && this.treeMapLegendModule.legendGroup && this.layout.layoutGroup) {\n            this.svgObject.insertBefore(this.layout.layoutGroup, this.treeMapLegendModule.legendGroup);\n        }\n    };\n    /**\n     * @private\n     * Render the treemap border\n     */\n    TreeMap.prototype.renderBorder = function () {\n        var width = this.border.width;\n        var borderElement = this.svgObject.querySelector('#' + this.element.id + '_TreeMap_Border');\n        if ((this.border.width > 0 || (this.background || this.themeStyle.backgroundColor)) && isNullOrUndefined(borderElement)) {\n            var borderRect = new RectOption(this.element.id + '_TreeMap_Border', this.background || this.themeStyle.backgroundColor, this.border, 1, new Rect(width / 2, width / 2, this.availableSize.width - width, this.availableSize.height - width));\n            this.svgObject.appendChild(this.renderer.drawRectangle(borderRect));\n        }\n        else if (borderElement) {\n            borderElement.setAttribute('fill', this.background || this.themeStyle.backgroundColor);\n        }\n    };\n    TreeMap.prototype.renderTitle = function (title, type, bounds, groupEle) {\n        var style = title.textStyle;\n        var height;\n        var titlePadding = 10;\n        var width = (this.availableSize.width - this.margin.right - this.margin.left);\n        title.textStyle.fontFamily = this.themeStyle.fontFamily || title.textStyle.fontFamily;\n        title.textStyle.size = this.themeStyle.fontSize || title.textStyle.size;\n        if (title.text) {\n            if (isNullOrUndefined(groupEle)) {\n                groupEle = this.renderer.createGroup({ id: this.element.id + '_Title_Group' });\n            }\n            var trimmedTitle = textTrim(width, title.text, style);\n            var elementSize = measureText(trimmedTitle, style);\n            var rect = (isNullOrUndefined(bounds)) ? new Rect(this.margin.left, this.margin.top, this.availableSize.width, this.availableSize.height) : bounds;\n            var location_1 = findPosition(rect, title.alignment, elementSize, type);\n            var options = new TextOption(this.element.id + '_TreeMap_' + type, location_1.x, location_1.y, 'start', trimmedTitle);\n            var titleBounds = new Rect(location_1.x, location_1.y, elementSize.width, elementSize.height);\n            var element = renderTextElement(options, style, style.color || (type === 'title' ? this.themeStyle.titleFontColor : this.themeStyle.subTitleFontColor), groupEle);\n            element.setAttribute('aria-label', title.description || title.text);\n            element.setAttribute('tabindex', (this.tabIndex + (type === 'title' ? 1 : 2)).toString());\n            if ((type === 'title' && !title.subtitleSettings.text) || (type === 'subtitle')) {\n                height = (this.availableSize.height - titleBounds.y - titlePadding - this.margin.bottom);\n                this.areaRect = new Rect(this.margin.left, titleBounds.y + titlePadding, width, height);\n            }\n            if (type !== 'subtitle' && title.subtitleSettings.text) {\n                this.renderTitle(title.subtitleSettings, 'subtitle', titleBounds, groupEle);\n            }\n            else {\n                this.svgObject.appendChild(groupEle);\n            }\n        }\n        else {\n            height = (this.availableSize.height - this.margin.top - this.margin.bottom);\n            this.areaRect = new Rect(this.margin.left, this.margin.top, width, height);\n        }\n    };\n    TreeMap.prototype.processingData = function () {\n        var _this = this;\n        var path;\n        this.dataSource = this.dataSource;\n        if (!isNullOrUndefined(this.dataSource) && this.dataSource.length > 0 && this.weightValuePath) {\n            this.levelsOfData = [];\n            this.dataSource.map(function (data) {\n                data[_this.weightValuePath] = (data[_this.weightValuePath]) ? data[_this.weightValuePath].toString() :\n                    data[_this.weightValuePath];\n            });\n            this.leafItemSettings.labelPath = this.leafItemSettings.labelPath || this.weightValuePath;\n            this.checkIsHierarchicalData();\n            if (this.levels.length === 0) {\n                var data_1 = new Object();\n                data_1['level'] = 0;\n                path = this.leafItemSettings.labelPath;\n                data_1[path] = [];\n                for (var i = 0; i < this.dataSource.length; i++) {\n                    var child = findChildren(this.dataSource[i])['values'];\n                    if (this.isHierarchicalData && child && child.length > 0) {\n                        child.forEach(function (currentData, dataIndex) {\n                            if (currentData[path]) {\n                                data_1[path].push({\n                                    groupIndex: 0, name: currentData[path], levelOrderName: currentData[path].toString(),\n                                    data: currentData, weight: currentData[_this.weightValuePath]\n                                });\n                            }\n                        });\n                    }\n                    else {\n                        if (this.dataSource[i][path]) {\n                            data_1[path].push({\n                                groupIndex: 0, name: this.dataSource[i][path], levelOrderName: this.dataSource[i][path].toString(), data: this.dataSource[i],\n                                weight: this.dataSource[i][this.weightValuePath]\n                            });\n                        }\n                    }\n                }\n                this.levelsOfData.push(data_1);\n            }\n            else {\n                if (this.isHierarchicalData) {\n                    this.hierarchyData = [];\n                    this.hierarchyData = extend([], this.dataSource, this.hierarchyData, true);\n                    for (var i = 0; i < this.hierarchyData.length; i++) {\n                        this.processHierarchicalData(this.hierarchyData[i], i);\n                    }\n                    this.levelsOfData = this.hierarchyData;\n                }\n                else {\n                    this.processFlatJsonData();\n                    if (this.levelsOfData.length > 1) {\n                        this.reOrderLevelData(this.levelsOfData.length - 1);\n                    }\n                }\n                path = this.levels[0].groupPath;\n            }\n            if (!this.isHierarchicalData) {\n                this.findTotalWeight(this.levelsOfData[0][path], 'Parent');\n            }\n        }\n    };\n    TreeMap.prototype.checkIsHierarchicalData = function () {\n        var child;\n        this.dataSource = this.dataSource;\n        for (var i = 0; i < this.dataSource.length; i++) {\n            child = findChildren(this.dataSource[i])['values'];\n            if (child && child.length) {\n                this.isHierarchicalData = true;\n                break;\n            }\n            else if (i === this.dataSource.length - 1) {\n                this.isHierarchicalData = false;\n            }\n        }\n    };\n    TreeMap.prototype.processHierarchicalData = function (data, dataCount) {\n        var _this = this;\n        var childData;\n        var levelData = [];\n        var newData = new Object();\n        var levelIndex;\n        var path = this.leafItemSettings.labelPath ? this.leafItemSettings.labelPath : this.weightValuePath;\n        var currentData = new Object();\n        var level;\n        var key;\n        newData = findChildren(data);\n        childData = newData ? newData['values'] : null;\n        if (childData && childData.length > 0) {\n            key = newData['key'];\n            for (var i = 0; i < this.levels.length; i++) {\n                if (key === this.levels[i].groupPath) {\n                    level = this.levels[i];\n                    levelIndex = i;\n                }\n            }\n            for (var j = 0; j < childData.length; j++) {\n                childData[j]['name'] = childData[j][path];\n                childData[j]['levelOrderName'] = (levelIndex === 0 ? childData[j]['name'] :\n                    data['levelOrderName'] + '#' + childData[j]['name']) + '';\n                var childItemLevel = childData[j]['levelOrderName'];\n                var childLevel = void 0;\n                if (childItemLevel.search('#') > 0) {\n                    childLevel = childItemLevel.split('#').length - 1;\n                }\n                childData[j]['groupIndex'] = isNullOrUndefined(levelIndex) ? childLevel === this.levels.length\n                    ? this.levels.length : childLevel : levelIndex;\n                if (levelIndex !== 0) {\n                    childData[j]['parent'] = data;\n                }\n                childData[j]['groupName'] = key;\n                childData[j]['data'] = childData[j];\n                childData[j]['isDrilled'] = false;\n                childData[j]['weight'] = childData[j][this.weightValuePath];\n            }\n            childData.forEach(function (currentData) {\n                _this.processHierarchicalData(currentData, dataCount);\n            });\n        }\n        if (dataCount === this.hierarchyData.length - 1) {\n            var mainData_1 = this.hierarchyData[0][this.levels[0].groupPath];\n            for (var k = 0; k < this.hierarchyData.length; k++) {\n                childData = findChildren(this.hierarchyData[k])['values'];\n                if (k !== 0 && childData) {\n                    childData.forEach(function (currentData) { mainData_1.push(currentData); });\n                    this.hierarchyData.splice(k, 1);\n                    k -= 1;\n                }\n            }\n            mainData_1 = this.hierarchyData[0][this.levels[0].groupPath];\n            for (var l = 0; l < mainData_1.length; l++) {\n                newData[this.levels[0].groupPath] = mainData_1;\n                mainData_1[l]['parent'] = newData;\n            }\n        }\n    };\n    /**\n     * Handles the print method for chart control.\n     */\n    TreeMap.prototype.print = function (id) {\n        var exportChart = new ExportUtils(this);\n        exportChart.print(id);\n    };\n    /**\n     * Handles the export method for chart control.\n     * @param type\n     * @param fileName\n     */\n    TreeMap.prototype.export = function (type, fileName, orientation) {\n        var exportMap = new ExportUtils(this);\n        exportMap.export(type, fileName, orientation);\n    };\n    /* tslint:disable:no-string-literal */\n    TreeMap.prototype.processFlatJsonData = function () {\n        this.dataSource = this.dataSource;\n        var groupPath;\n        var childGroupPath;\n        var orderNames = [];\n        var process = false;\n        for (var i = 0; i < this.levels.length + 1; i++) {\n            groupPath = this.levels[i] ? this.levels[i].groupPath : this.leafItemSettings.labelPath;\n            var level = new Object();\n            level['level'] = i;\n            level[groupPath] = [];\n            this.levelsOfData.push(level);\n            for (var j = 0; j < this.dataSource.length; j++) {\n                var currentData = {};\n                var childName = '';\n                if (this.dataSource[j][groupPath]) {\n                    var name_1 = this.dataSource[j][groupPath];\n                    if (i !== 0) {\n                        for (var k = 0; k <= i; k++) {\n                            var childGroupPath_1 = this.levels[k] ? this.levels[k].groupPath : groupPath;\n                            childName += (this.dataSource[j][childGroupPath_1]) + ((k === i) ? '' : '#');\n                        }\n                    }\n                    if (!(orderNames.length > 0 ? orderNames.indexOf(childName ?\n                        childName : name_1) !== -1 : false)) {\n                        currentData['name'] = name_1;\n                        currentData['levelOrderName'] = ((childName) ? childName : name_1) + '';\n                        currentData['groupIndex'] = i;\n                        currentData['isDrilled'] = false;\n                        currentData['groupName'] = groupPath;\n                        currentData['data'] = this.dataSource[j];\n                        this.levelsOfData[this.levelsOfData.length - 1][groupPath].push(currentData);\n                        orderNames.push((childName) ? childName : name_1);\n                    }\n                }\n            }\n        }\n    };\n    TreeMap.prototype.reOrderLevelData = function (start) {\n        var currentName;\n        var currentPath = this.levels[start] ? this.levels[start].groupPath : this.leafItemSettings.labelPath;\n        var prevPath = this.levels[start - 1].groupPath;\n        var currentData = this.levelsOfData[start][currentPath];\n        var previousData = this.levelsOfData[start - 1][prevPath];\n        for (var i = 0; i < currentData.length; i++) {\n            currentName = currentData[i]['levelOrderName'];\n            for (var j = 0; j < previousData.length; j++) {\n                previousData[j][currentPath] = isNullOrUndefined(previousData[j][currentPath]) ? [] : previousData[j][currentPath];\n                if (currentName.indexOf(previousData[j]['levelOrderName']) !== -1) {\n                    if (isNullOrUndefined(currentData[i]['parent'])) {\n                        currentData[i]['parent'] = previousData[j];\n                    }\n                    previousData[j][currentPath].push(currentData[i]);\n                    break;\n                }\n            }\n        }\n        this.findTotalWeight(this.levelsOfData[this.levelsOfData.length - 1][currentPath], 'Child');\n        this.levelsOfData.splice(start, 1);\n        if ((start - 1) > 0) {\n            this.reOrderLevelData(start - 1);\n        }\n    };\n    TreeMap.prototype.findTotalWeight = function (processData, type) {\n        var _this = this;\n        var totalWeight;\n        var childData;\n        var levelName;\n        var start = 0;\n        var split;\n        var groupName;\n        var groupObj = new Object();\n        var _loop_1 = function (i) {\n            totalWeight = 0;\n            groupName = processData[i]['groupName'];\n            split = processData[i]['levelOrderName'].split('#');\n            this_1.dataSource.forEach(function (data) {\n                if (isContainsData(split, processData[i]['levelOrderName'], data, _this)) {\n                    totalWeight += parseFloat(data[_this.weightValuePath]);\n                }\n            });\n            if (type === 'Parent') {\n                groupObj[groupName] = processData;\n                processData[i]['parent'] = groupObj;\n            }\n            processData[i]['weight'] = totalWeight;\n        };\n        var this_1 = this;\n        for (var i = 0; i < processData.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * To unbind event handlers for treemap.\n     */\n    TreeMap.prototype.unWireEVents = function () {\n        EventHandler.remove(this.element, 'click', this.clickOnTreeMap);\n        EventHandler.remove(this.element, 'dblclick', this.doubleClickOnTreeMap);\n        EventHandler.remove(this.element, 'contextmenu', this.rightClickOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap);\n        EventHandler.remove(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap);\n        window.removeEventListener('resize', this.resizeOnTreeMap);\n    };\n    /**\n     * To bind event handlers for treemap.\n     */\n    TreeMap.prototype.wireEVents = function () {\n        EventHandler.add(this.element, 'click', this.clickOnTreeMap, this);\n        EventHandler.add(this.element, 'dblclick', this.doubleClickOnTreeMap, this);\n        EventHandler.add(this.element, 'contextmenu', this.rightClickOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap, this);\n        EventHandler.add(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap, this);\n        window.addEventListener('resize', this.resizeOnTreeMap.bind(this));\n    };\n    /**\n     * Method to set culture for maps\n     */\n    TreeMap.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * To add tab index for treemap element\n     */\n    TreeMap.prototype.addTabIndex = function () {\n        this.element.setAttribute('aria-label', this.description || 'TreeMap Element');\n        this.element.setAttribute('tabindex', this.tabIndex.toString());\n    };\n    /**\n     * To handle the window resize event on treemap.\n     */\n    TreeMap.prototype.resizeOnTreeMap = function (e) {\n        var _this = this;\n        var args = {\n            name: resize,\n            cancel: false,\n            previousSize: this.availableSize,\n            currentSize: new Size(0, 0),\n            treemap: this\n        };\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        if (this.element.classList.contains('e-treemap')) {\n            this.resizeTo = setTimeout(function () {\n                _this.unWireEVents();\n                _this.createSvg();\n                _this.refreshing = true;\n                _this.wireEVents();\n                args.currentSize = _this.availableSize;\n                _this.trigger(resize, args);\n                _this.render();\n            }, 500);\n        }\n    };\n    TreeMap.prototype.clickOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var itemIndex;\n        var clickArgs = { cancel: false, name: click, treemap: this, mouseEvent: e };\n        this.trigger(click, clickArgs);\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            itemIndex = parseFloat(targetId.split('_')[6]);\n            eventArgs = {\n                cancel: false, name: itemClick, treemap: this, item: this.layout.renderItems[itemIndex], mouseEvent: e,\n                groupIndex: this.layout.renderItems[itemIndex]['groupIndex'], groupName: this.layout.renderItems[itemIndex]['name']\n            };\n            this.trigger(itemClick, eventArgs);\n        }\n        var end = new Date().getMilliseconds();\n        var doubleTapTimer1;\n        if (!isNullOrUndefined(this.doubleClick)) {\n            if (!isNullOrUndefined(doubleTapTimer1) && end - doubleTapTimer1 < 500) {\n                this.doubleClickOnTreeMap(e);\n            }\n            doubleTapTimer1 = end;\n        }\n    };\n    TreeMap.prototype.doubleClickOnTreeMap = function (e) {\n        var doubleClickArgs = { cancel: false, name: doubleClick, treemap: this, mouseEvent: e };\n        this.trigger(doubleClick, doubleClickArgs);\n        //this.notify('dblclick', e);\n    };\n    TreeMap.prototype.rightClickOnTreeMap = function (e) {\n        var rightClickArgs = { cancel: false, name: rightClick, treemap: this, mouseEvent: e };\n        this.trigger(rightClick, rightClickArgs);\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMap.prototype.mouseDownOnTreeMap = function (e) {\n        if (e.target.id.indexOf('_Item_Index') > -1) {\n            this.mouseDown = true;\n        }\n        this.notify(Browser.touchStartEvent, e);\n    };\n    TreeMap.prototype.mouseMoveOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var item;\n        var moveArgs = { cancel: false, name: mouseMove, treemap: this, mouseEvent: e };\n        this.trigger(mouseMove, moveArgs);\n        var childItems;\n        this.drillMouseMove = this.mouseDown;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.layout.renderItems[parseFloat(targetId.split('_')[6])];\n            childItems = findChildren(item)['values'];\n            this.element.style.cursor = (!item['isLeafItem'] && childItems && childItems.length > 0 && this.enableDrillDown) ?\n                'pointer' : 'auto';\n            eventArgs = { cancel: false, name: itemMove, treemap: this, item: item, mouseEvent: e };\n            this.trigger(itemMove, eventArgs);\n        }\n        this.notify(Browser.touchMoveEvent, e);\n    };\n    TreeMap.prototype.calculateSelectedTextLevels = function (labelText, item) {\n        //to find the levels by clicking the particular text both for drillDownView as true / false.\n        var drillLevel;\n        var k;\n        var text;\n        var levelLabels = item['levelOrderName'];\n        var levelText = levelLabels.split('#');\n        for (var _i = 0, _a = Object.keys(levelText); _i < _a.length; _i++) {\n            k = _a[_i];\n            if (levelText[k] === labelText) {\n                drillLevel = parseInt(k, 10);\n                text = labelText;\n            }\n        }\n        return { drillLevel: drillLevel, currentLevelLabel: text, levelText: levelText };\n    };\n    TreeMap.prototype.calculatePreviousLevelChildItems = function (labelText, drillLevelValues, item, directLevel) {\n        //By clicking any child items drilldown to the particular level.\n        //At the time store all the previous drilled level items in drilledItems\n        // This condition satisfies while drilldown View is set as false and the text contains '[+]'\n        var text;\n        var p = 0;\n        var levelItems;\n        var text1;\n        var drillTextLevel = this.layout.renderItems[0]['levelOrderName'].split('#').length;\n        for (var h = 0; h < drillTextLevel; h++) {\n            text1 = h === 0 ? drillLevelValues['levelText'][h] : text1 + '#' + drillLevelValues['levelText'][h];\n        }\n        p = drillTextLevel > 1 ? drillTextLevel : p;\n        for (var _i = 0, _a = Object['values'](this.layout.renderItems); _i < _a.length; _i++) {\n            levelItems = _a[_i];\n            var drillLevelText = levelItems['levelOrderName'].split('#');\n            if (drillLevelText[0] === drillLevelValues['levelText'][0]) {\n                text = p === 0 ? isNullOrUndefined(text1) ? text1 : drillLevelValues['levelText'][p] :\n                    directLevel ? text1 : text1 + '#' + drillLevelValues['levelText'][p];\n                if (text === levelItems['levelOrderName']) {\n                    this.drilledItems.push({ name: levelItems['levelOrderName'], data: levelItems });\n                    p++;\n                    directLevel = true;\n                    if (p <= item['groupIndex']) {\n                        text = text + '#' + drillLevelValues['levelText'][p];\n                        text1 = text;\n                    }\n                }\n            }\n        }\n        return directLevel;\n    };\n    TreeMap.prototype.compareSelectedLabelWithDrillDownItems = function (drillLevelValues, item, i) {\n        var drillLevelChild;\n        var newDrillItem = new Object();\n        var b = drillLevelValues['drillLevel'] + 1;\n        if (b === this.drilledItems[i]['data']['groupIndex']) {\n            drillLevelChild = this.drilledItems[i]['data']['parent'];\n            drillLevelChild['isDrilled'] = true;\n            newDrillItem[drillLevelChild[this.drilledItems[i]['data']['groupName']]]\n                = [drillLevelChild];\n            // to remove all the items after matched drilled items\n            this.drilledItems.splice(i, this.drilledItems.length);\n        }\n        else if (drillLevelValues['drillLevel'] === (this.drilledItems.length - 1)\n            || drillLevelValues['drillLevel'] === item['groupIndex']) {\n            newDrillItem[item['groupName']] = [item];\n        }\n        return newDrillItem;\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMap.prototype.mouseEndOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var totalRect;\n        var startEvent;\n        var endEvent;\n        var directLevel = false;\n        var index;\n        var newDrillItem = new Object();\n        var item;\n        var process = true;\n        var layoutID = this.element.id + '_TreeMap_' + this.layoutType + '_Layout';\n        var drillLevel;\n        var templateID = this.element.id + '_Label_Template_Group';\n        var drillLevelValues;\n        if (targetId.indexOf('_Item_Index') > -1 && this.enableDrillDown && !this.drillMouseMove) {\n            e.preventDefault();\n            index = parseFloat(targetId.split('_')[6]);\n            item = this.layout.renderItems[index];\n            var labelText = targetEle.innerHTML;\n            if (this.enableBreadcrumb) {\n                drillLevelValues = this.calculateSelectedTextLevels(labelText, item);\n                drillLevel = drillLevelValues['drillLevel'];\n                if (!this.drillDownView && labelText.search('[+]') !== -1) {\n                    directLevel = this.calculatePreviousLevelChildItems(labelText, drillLevelValues, item, directLevel);\n                }\n            }\n            if (this.levels.length !== 0 && !item['isLeafItem'] && findChildren(item)['values'] &&\n                findChildren(item)['values'].length > 0) {\n                if (this.drilledItems.length > 0) {\n                    item = directLevel ? this.drilledItems[this.drilledItems.length - 1]['data'] : item;\n                    for (var i = 0; i < this.drilledItems.length; i++) {\n                        if (!isNullOrUndefined(drillLevel)) { //Compare the selected text level with drilled items\n                            var drillLength = this.drilledItems.length;\n                            newDrillItem = this.compareSelectedLabelWithDrillDownItems(drillLevelValues, item, i);\n                            if (drillLength !== this.drilledItems.length) {\n                                i -= 1;\n                                break;\n                            }\n                        } //when clicking the levels drill back to the previous level process takes place\n                        if (item['levelOrderName'] === this.drilledItems[i]['name'] && !directLevel && isNullOrUndefined(drillLevel)) {\n                            if (item['groupIndex'] === 0 && item['parent'][item['groupName']] instanceof Array) {\n                                item['isDrilled'] = !(item['isDrilled']);\n                                if (!item['isDrilled']) {\n                                    newDrillItem = item['parent'];\n                                }\n                                else {\n                                    newDrillItem[item['groupName']] = [item];\n                                }\n                            }\n                            else {\n                                item['isDrilled'] = false;\n                                item['parent']['isDrilled'] = true;\n                                item = item['parent'];\n                                newDrillItem[item['groupName']] = [item];\n                            }\n                            this.drilledItems.splice(i, 1);\n                            i -= 1;\n                            break;\n                        }\n                        else if (i === this.drilledItems.length - 1 && isNullOrUndefined(drillLevel)) {\n                            item['isDrilled'] = true; // click the items move to next level.\n                            newDrillItem[item['groupName']] = [item];\n                        }\n                    }\n                }\n                else {\n                    item['isDrilled'] = true;\n                    newDrillItem[item['groupName']] = [item];\n                }\n                startEvent = {\n                    cancel: false, name: drillStart, treemap: this, item: newDrillItem, element: targetEle,\n                    groupIndex: this.enableBreadcrumb && this.drilledItems.length !== 0 && !isNullOrUndefined(drillLevel) ?\n                        this.drilledItems[this.drilledItems.length - 1]['data']['groupIndex'] : item['groupIndex'],\n                    groupName: this.enableBreadcrumb && this.drilledItems.length !== 0 && !isNullOrUndefined(drillLevel) ?\n                        this.drilledItems[this.drilledItems.length - 1]['data']['name'] : item['name'],\n                    rightClick: e.which === 3 ? true : false, childItems: null\n                };\n                this.trigger(drillStart, startEvent);\n                this.currentLevel = item['isDrilled'] && isNullOrUndefined(drillLevel) ? item['groupIndex'] :\n                    (!isNullOrUndefined(drillLevel) && this.enableBreadcrumb && item['isDrilled']) ? drillLevel : null;\n                if (!startEvent.cancel) {\n                    if (document.getElementById(layoutID)) {\n                        document.getElementById(layoutID).remove();\n                    }\n                    totalRect = extend({}, this.areaRect, totalRect, true);\n                    if (this.legendSettings.visible && !isNullOrUndefined(this.treeMapLegendModule)) {\n                        if (!isNullOrUndefined(newDrillItem)) {\n                            this.treeMapLegendModule.legendGroup.textContent = '';\n                            this.treeMapLegendModule.legendGroup = null;\n                            this.treeMapLegendModule.widthIncrement = 0;\n                            this.treeMapLegendModule.heightIncrement = 0;\n                            if (this.enableBreadcrumb && !isNullOrUndefined(drillLevel)) {\n                                this.drilledLegendItems = {\n                                    name: this.drilledItems[this.drilledItems.length - 1]['data']['levelOrderName'],\n                                    data: this.drilledItems[this.drilledItems.length - 1]['data']\n                                };\n                            }\n                            else {\n                                this.drilledLegendItems = { name: item['levelOrderName'], data: item };\n                            }\n                            this.treeMapLegendModule.renderLegend();\n                        }\n                        totalRect = !isNullOrUndefined(this.totalRect) ? this.totalRect : totalRect;\n                    }\n                    if (document.getElementById(templateID)) {\n                        document.getElementById(templateID).remove();\n                    }\n                    if (!isNullOrUndefined(startEvent.childItems) && !startEvent.cancel) {\n                        this.layout.onDemandProcess(startEvent.childItems);\n                    }\n                    else {\n                        this.layout.calculateLayoutItems(newDrillItem, totalRect);\n                        this.layout.renderLayoutItems(newDrillItem);\n                    }\n                }\n                endEvent = { cancel: false, name: drillEnd, treemap: this, renderItems: this.layout.renderItems };\n                this.trigger(drillEnd, endEvent);\n                if (process) {\n                    if (!directLevel && isNullOrUndefined(drillLevel)) {\n                        this.drilledItems.push({ name: item['levelOrderName'], data: item });\n                    }\n                }\n            }\n        }\n        this.mouseDown = false;\n        this.notify(Browser.touchEndEvent, e);\n    };\n    TreeMap.prototype.mouseLeaveOnTreeMap = function (e) {\n        if (this.treeMapTooltipModule) {\n            this.treeMapTooltipModule.removeTooltip();\n        }\n        if (this.treeMapLegendModule) {\n            this.treeMapLegendModule.removeInteractivePointer();\n        }\n        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', this);\n        if (this.treeMapHighlightModule) {\n            removeShape(this.treeMapHighlightModule.shapeHighlightCollection, 'highlight');\n            this.treeMapHighlightModule.highLightId = '';\n        }\n    };\n    /**\n     * To provide the array of modules needed for maps rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    TreeMap.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.tooltipSettings.visible) {\n            modules.push({\n                member: 'treeMapTooltip',\n                args: [this]\n            });\n        }\n        if (this.highlightSettings.enable) {\n            modules.push({\n                member: 'treeMapHighlight',\n                args: [this]\n            });\n        }\n        if (this.selectionSettings.enable) {\n            modules.push({\n                member: 'treeMapSelection',\n                args: [this]\n            });\n        }\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'treeMapLegend',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    TreeMap.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var render = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'background':\n                    this.renderBorder();\n                    break;\n                case 'height':\n                case 'width':\n                    render = true;\n                    break;\n            }\n        }\n        if (render) {\n            this.createSvg();\n            this.render();\n        }\n    };\n    /**\n     * Get component name\n     */\n    TreeMap.prototype.getModuleName = function () {\n        return 'treemap';\n    };\n    /**\n     * To destroy the treemap control.\n     */\n    TreeMap.prototype.destroy = function () {\n        this.unWireEVents();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @private\n     */\n    TreeMap.prototype.getPersistData = function () {\n        return '';\n    };\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TreeMap.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], TreeMap.prototype, \"margin\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"background\", void 0);\n    __decorate([\n        Property('Material')\n    ], TreeMap.prototype, \"theme\", void 0);\n    __decorate([\n        Complex({}, TitleSettings)\n    ], TreeMap.prototype, \"titleSettings\", void 0);\n    __decorate([\n        Property('Squarified')\n    ], TreeMap.prototype, \"layoutType\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"query\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"weightValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"rangeColorValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"equalColorValuePath\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"colorValuePath\", void 0);\n    __decorate([\n        Property([])\n    ], TreeMap.prototype, \"palette\", void 0);\n    __decorate([\n        Property('TopLeftBottomRight')\n    ], TreeMap.prototype, \"renderDirection\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableDrillDown\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableBreadcrumb\", void 0);\n    __decorate([\n        Property(' - ')\n    ], TreeMap.prototype, \"breadcrumbConnector\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"drillDownView\", void 0);\n    __decorate([\n        Complex({}, InitialDrillSettings)\n    ], TreeMap.prototype, \"initialDrillDown\", void 0);\n    __decorate([\n        Complex({}, LeafItemSettings)\n    ], TreeMap.prototype, \"leafItemSettings\", void 0);\n    __decorate([\n        Collection([], LevelSettings)\n    ], TreeMap.prototype, \"levels\", void 0);\n    __decorate([\n        Complex({}, HighlightSettings)\n    ], TreeMap.prototype, \"highlightSettings\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeMap.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], TreeMap.prototype, \"tooltipSettings\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], TreeMap.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], TreeMap.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"format\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillEnd\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemHighlight\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"tooltipRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"rightClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"mouseMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"legendItemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"legendRendering\", void 0);\n    TreeMap = __decorate([\n        NotifyPropertyChanges\n    ], TreeMap);\n    return TreeMap;\n}(Component));\nexport { TreeMap };\n","import { findChildren, Location, Rect, Size, measureText, TextOption, PathOption, RectOption, drawSymbol, orderByArea } from '../utils/helper';\nimport { Browser, isNullOrUndefined, EventHandler, extend } from '@syncfusion/ej2-base';\nimport { renderTextElement, textTrim } from '../utils/helper';\nimport { legendItemRendering, legendRendering } from '../model/constants';\n/**\n * Legend module class\n */\nvar TreeMapLegend = /** @class */ (function () {\n    function TreeMapLegend(treemap) {\n        this.page = 0;\n        this.legendBorderRect = new Rect(0, 0, 0, 0);\n        this.currentPage = 0;\n        this.heightIncrement = 0;\n        this.widthIncrement = 0;\n        this.textMaxWidth = 0;\n        this.legendInteractiveGradient = [];\n        this.legendItemRect = new Rect(0, 0, 0, 0);\n        this.treemap = treemap;\n        this.addEventListener();\n    }\n    /**\n     * method for legend\n     */\n    TreeMapLegend.prototype.renderLegend = function () {\n        this.legendRenderingCollections = [];\n        this.legendCollections = [];\n        this.legendNames = [];\n        this.totalPages = [];\n        this.gradientCount = 1;\n        this.widthIncrement = 0;\n        this.heightIncrement = 0;\n        this.defsElement = this.treemap.renderer.createDefs();\n        this.treemap.svgObject.appendChild(this.defsElement);\n        var eventArgs;\n        eventArgs = {\n            cancel: false, name: legendRendering, treemap: this.treemap, _changePosition: this.treemap.legendSettings.position,\n            position: this.treemap.legendSettings.position\n        };\n        this.treemap.trigger(legendRendering, eventArgs);\n        if (!eventArgs.cancel && eventArgs._changePosition !== this.treemap.legendSettings.position) {\n            this.treemap.legendSettings.position = eventArgs._changePosition;\n        }\n        this.calculateLegendBounds();\n        if (this.legendCollections.length > 0) {\n            this.drawLegend();\n        }\n    };\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.calculateLegendBounds = function () {\n        var _this = this;\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        this.findColorMappingLegendItems(treemap.levelsOfData[0]);\n        if ((this.treemap.palette.length > 0 || !isNullOrUndefined(this.treemap.colorValuePath))\n            && this.legendCollections.length === 0) {\n            this.findPaletteLegendItems(this.treemap.levelsOfData[0], 'Parent');\n        }\n        if (this.legendCollections.length > 0) {\n            var defaultSize = 25;\n            var textPadding = 10;\n            var position = legend.position;\n            var legendTitle = legend.title.text;\n            var titleTextStyle = legend.titleStyle;\n            var legendMode = legend.mode;\n            var shapeX = 0;\n            var shapeY = 0;\n            var textX = 0;\n            var textY = 0;\n            var shapeHeight = legend.shapeHeight;\n            var shapeWidth = legend.shapeWidth;\n            var shapeLocation = [];\n            var textLocation = [];\n            var orientation_1 = (legend.orientation === 'None') ? ((position === 'Top' || position === 'Bottom'\n                || (position === 'Auto' && treemap.availableSize.width <= treemap.availableSize.height))\n                ? 'Horizontal' : 'Vertical') : legend.orientation;\n            var leftPadding = 10;\n            var topPadding = 10;\n            var spacing = 10;\n            var legendWidth = (legend.width.length > 1) ? (legend.width.indexOf('%') > -1) ? (treemap.availableSize.width / 100)\n                * parseFloat(legend.width) : parseFloat(legend.width) : null;\n            var legendHeight = (legend.height.length > 1) ? (legend.height.indexOf('%') > -1) ?\n                (treemap.availableSize.height / 100) * parseFloat(legend.height) : parseFloat(legend.height) : null;\n            titleTextStyle.fontFamily = treemap.themeStyle.fontFamily || titleTextStyle.fontFamily;\n            titleTextStyle.size = treemap.themeStyle.legendFontSize || titleTextStyle.size;\n            var legendTitleSize = measureText(legendTitle, titleTextStyle);\n            var startX_1 = 0;\n            var startY_1 = 0;\n            var shapePadding = legend.shapePadding;\n            var rectWidth = void 0;\n            var rectHeight = void 0;\n            var itemTextStyle = legend.textStyle;\n            var legendLength = this.legendCollections.length;\n            legend.textStyle.size = treemap.themeStyle.legendFontSize || legend.textStyle.size;\n            legend.textStyle.fontFamily = treemap.themeStyle.fontFamily || legend.textStyle.fontFamily;\n            if (legendMode === 'Default') {\n                legendWidth = (isNullOrUndefined(legendWidth)) ? treemap.areaRect.width : legendWidth;\n                legendHeight = (isNullOrUndefined(legendHeight)) ? treemap.areaRect.height : legendHeight;\n                var j = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    var legendItem = this.legendCollections[i];\n                    if (isNullOrUndefined(this.totalPages[this.page])) {\n                        this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n                    }\n                    var legendTextSize = measureText(legendItem['legendName'], legend.textStyle);\n                    this.textMaxWidth = Math.max(this.textMaxWidth, legendTextSize.width);\n                    if (i === 0) {\n                        startX_1 = shapeX = (leftPadding + (shapeWidth / 2));\n                        startY_1 = shapeY = topPadding + legendTitleSize.height + (shapeHeight > legendTextSize.height ? shapeHeight / 2\n                            : (legendTextSize.height / 4));\n                    }\n                    else {\n                        var maxSize = (legendTextSize.height > shapeHeight) ? legendTextSize.height : shapeHeight;\n                        if (orientation_1 === 'Horizontal') {\n                            var prvePositionX = (textLocation[j - 1].x + textLocation[j - 1].width) + textPadding + shapeWidth;\n                            if ((prvePositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                var nextPositionY = (textLocation[j - 1].y > (shapeLocation[j - 1].y + (shapeHeight / 2)) ?\n                                    textLocation[j - 1].y : (shapeLocation[j - 1].y + (shapeHeight / 2))) + topPadding;\n                                if ((nextPositionY + maxSize) > legendHeight) {\n                                    this.getPageChanged();\n                                    j = 0;\n                                    shapeLocation = [];\n                                    textLocation = [];\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                }\n                                else {\n                                    shapeX = (shapeLocation[0].x);\n                                    shapeY = (nextPositionY + (maxSize / 2));\n                                }\n                            }\n                            else {\n                                shapeX = (prvePositionX - (shapeWidth / 2));\n                                shapeY = (shapeLocation[j - 1]).y;\n                            }\n                        }\n                        else {\n                            var prevPositionY = textLocation[j - 1].y > shapeLocation[j - 1].y + (shapeHeight / 2) ?\n                                textLocation[j - 1].y : shapeLocation[j - 1].y + (shapeHeight / 2);\n                            if ((prevPositionY + topPadding + maxSize) > legendHeight) {\n                                var nextPositionX = (textLocation[j - 1].x + this.textMaxWidth + textPadding);\n                                if ((nextPositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                    textLocation = [];\n                                    shapeLocation = [];\n                                    this.getPageChanged();\n                                    j = 0;\n                                }\n                                else {\n                                    shapeX = nextPositionX + (shapeWidth / 2);\n                                    shapeY = (shapeLocation[0].y);\n                                }\n                            }\n                            else {\n                                shapeX = shapeLocation[j - 1].x;\n                                shapeY = prevPositionY + topPadding + (shapeHeight / 2);\n                            }\n                        }\n                    }\n                    textX = shapeX + (shapeWidth / 2) + shapePadding;\n                    textY = shapeY + (legendTextSize.height / 4);\n                    shapeLocation.push({ x: shapeX, y: shapeY });\n                    textLocation.push({ x: textX, y: textY, width: legendTextSize.width, height: (legendTextSize.height / 2) });\n                    this.totalPages[this.page]['Collection'].push({\n                        DisplayText: legendItem['legendName'], element: legendItem['gradientElement'],\n                        Shape: { x: shapeX, y: shapeY },\n                        Text: { x: textX, y: textY },\n                        Fill: legendItem['legendFill'],\n                        Data: legendItem['legendData'],\n                        Rect: {\n                            x: shapeLocation[j].x - (shapeWidth / 2),\n                            y: (shapeLocation[j].y - (shapeHeight / 2)) < (textY - legendTextSize.height) ?\n                                (shapeLocation[j].y - (shapeHeight / 2)) : (textY - legendTextSize.height),\n                            width: Math.abs((shapeLocation[j].x - (shapeWidth / 2)) - (textX + legendTextSize.width)),\n                            height: ((shapeHeight > legendTextSize.height) ? shapeHeight : legendTextSize.height)\n                        }\n                    });\n                    j++;\n                }\n                var collection = this.totalPages[0]['Collection'];\n                collection.forEach(function (legendObj, index) {\n                    var legendRect = new Rect(legendObj['Rect']['x'], legendObj['Rect']['y'], legendObj['Rect']['width'], legendObj['Rect']['height']);\n                    if (index === 0) {\n                        startX_1 = legendRect.x;\n                        startY_1 = legendRect.y;\n                    }\n                    _this.widthIncrement = Math.max(_this.widthIncrement, Math.abs(startX_1 - (legendRect.x + legendRect.width)));\n                    _this.heightIncrement = Math.max(_this.heightIncrement, Math.abs(startY_1 - (legendRect.y + legendRect.height)));\n                });\n                legendWidth = ((this.widthIncrement < legendWidth) ? this.widthIncrement : legendWidth);\n                legendHeight = ((this.heightIncrement < legendHeight) ? this.heightIncrement : legendHeight);\n                this.legendItemRect = {\n                    x: collection[0]['Rect']['x'], y: collection[0]['Rect']['y'],\n                    width: legendWidth, height: legendHeight\n                };\n            }\n            else {\n                var itemTextStyle_1 = legend.textStyle;\n                var rectWidth_1;\n                var rectHeight_1;\n                var legendLength_1 = this.legendCollections.length;\n                rectWidth_1 = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendWidth)) ? (treemap.areaRect.width / legendLength_1) :\n                    (legendWidth / legendLength_1) : (isNullOrUndefined(legendWidth)) ? defaultSize : legendWidth;\n                rectHeight_1 = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendHeight)) ? defaultSize : legendHeight :\n                    (isNullOrUndefined(legendHeight)) ? (treemap.areaRect.height / legendLength_1) : (legendHeight / legendLength_1);\n                startX_1 = 0;\n                startY_1 = legendTitleSize.height + spacing;\n                var textPadding_1 = 10;\n                var placement = legend.labelPosition;\n                var itemStartX = 0;\n                var itemStartY = 0;\n                var labelAction = legend.labelDisplayMode;\n                var maxTextHeight = 0;\n                var maxTextWidth = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    startX_1 = (orientation_1 === 'Horizontal') ? (startX_1 + rectWidth_1) : startX_1;\n                    startY_1 = (orientation_1 === 'Horizontal') ? startY_1 : (startY_1 + rectHeight_1);\n                    var legendText = this.legendCollections[i]['legendName'];\n                    var itemTextSize = new Size(0, 0);\n                    if (labelAction === 'None') {\n                        itemTextSize = measureText(legendText, itemTextStyle_1);\n                    }\n                    else if (labelAction === 'Trim') {\n                        legendText = textTrim((orientation_1 === 'Horizontal' ? rectWidth_1 : rectHeight_1), legendText, itemTextStyle_1);\n                        itemTextSize = measureText(legendText, itemTextStyle_1);\n                    }\n                    else {\n                        legendText = '';\n                    }\n                    maxTextHeight = Math.max(maxTextHeight, itemTextSize.height);\n                    maxTextWidth = Math.max(maxTextWidth, itemTextSize.width);\n                    if (itemTextSize.width > 0 && itemTextSize.height > 0) {\n                        if (orientation_1 === 'Horizontal') {\n                            textX = startX_1 + (rectWidth_1 / 2);\n                            textY = (placement === 'After') ? (startY_1 + rectHeight_1 + (itemTextSize.height / 2)) + textPadding_1 :\n                                (startY_1 - textPadding_1);\n                        }\n                        else {\n                            textX = (placement === 'After') ? startX_1 - (itemTextSize.width / 2) - textPadding_1\n                                : (startX_1 + rectWidth_1 + itemTextSize.width / 2) + textPadding_1;\n                            textY = startY_1 + (rectHeight_1 / 2) + (itemTextSize.height / 4);\n                        }\n                    }\n                    if (i === 0) {\n                        itemStartX = (orientation_1 === 'Horizontal') ? startX_1 : (placement === 'After') ?\n                            textX - (itemTextSize.width / 2) : startX_1;\n                        itemStartY = (orientation_1 === 'Horizontal') ? (placement === 'After') ? startY_1 :\n                            textY - (itemTextSize.height / 2) : startY_1;\n                    }\n                    if (i === legendLength_1 - 1) {\n                        legendWidth = (orientation_1 === 'Horizontal') ? Math.abs((startX_1 + rectWidth_1) - itemStartX) :\n                            (rectWidth_1 + maxTextWidth + textPadding_1);\n                        legendHeight = (orientation_1 === 'Horizontal') ? (rectHeight_1 + (maxTextHeight / 2) + textPadding_1) :\n                            Math.abs((startY_1 + rectHeight_1) - itemStartY);\n                    }\n                    this.legendRenderingCollections.push({\n                        fill: this.legendCollections[i]['legendFill'], x: startX_1, y: startY_1,\n                        width: rectWidth_1, height: rectHeight_1, element: this.legendCollections[i]['gradientElement'],\n                        text: legendText, textX: textX, textY: textY,\n                        textWidth: itemTextSize.width, textHeight: itemTextSize.height,\n                        data: this.legendCollections[i]['legendData']\n                    });\n                }\n                this.legendItemRect = { x: itemStartX, y: itemStartY, width: legendWidth, height: legendHeight };\n            }\n        }\n    };\n    TreeMapLegend.prototype.getPageChanged = function () {\n        this.page++;\n        if (isNullOrUndefined(this.totalPages[this.page])) {\n            this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n        }\n    };\n    TreeMapLegend.prototype.findColorMappingLegendItems = function (data) {\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0) {\n            this.calculateLegendItems(child);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    this.findColorMappingLegendItems(child[i]);\n                }\n            }\n        }\n    };\n    TreeMapLegend.prototype.findPaletteLegendItems = function (data, type) {\n        var child;\n        var legendFillColor;\n        if (!isNullOrUndefined(this.treemap.drilledItems)) {\n            if (this.treemap.drilledItems.length === 0 && !isNullOrUndefined(this.treemap.initialDrillDown.groupName)\n                && isNullOrUndefined(this.treemap.drilledLegendItems)) {\n                var items = findChildren(data)['values'];\n                for (var k = 0; k < items.length; k++) {\n                    if (items[k]['Name'] === this.treemap.initialDrillDown.groupName) {\n                        items[k]['isDrilled'] = !items[k]['isDrilled'];\n                        data = items[k];\n                        this.treemap.currentLevel = this.treemap.initialDrillDown.groupIndex;\n                        legendFillColor = this.treemap.palette.length > 0 ? this.treemap.palette[k % this.treemap.palette.length] :\n                            items[k]['data'][this.treemap.colorValuePath];\n                        break;\n                    }\n                }\n            }\n        }\n        if (this.treemap.enableDrillDown && !isNullOrUndefined(this.treemap.drilledLegendItems)) {\n            var childElement = this.treemap.drilledLegendItems;\n            legendFillColor = childElement['data']['options']['fill'];\n            if (childElement['data']['isDrilled']) {\n                child = findChildren(childElement['data'])['values'];\n            }\n            else {\n                var parentElement = childElement['data']['parent'];\n                child = findChildren(parentElement)['values'];\n            }\n        }\n        else {\n            child = findChildren(data)['values'];\n        }\n        var isDuplicate;\n        var legendName;\n        if (child && child.length > 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (isNullOrUndefined(child[i]['data'][this.treemap.legendSettings.showLegendPath]) ||\n                    child[i]['data'][this.treemap.legendSettings.showLegendPath]) {\n                    legendName = child[i]['data'][this.treemap.legendSettings.valuePath] ?\n                        child[i]['data'][this.treemap.legendSettings.valuePath] : child[i]['name'];\n                    isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                        this.removeDuplicates(this.legendCollections, legendName) : false;\n                    if (!isDuplicate) {\n                        this.legendCollections.push({\n                            legendName: legendName,\n                            legendFill: this.treemap.palette.length > 0 ? !isNullOrUndefined(this.treemap.currentLevel)\n                                ? legendFillColor : this.treemap.palette[i % this.treemap.palette.length] :\n                                child[i]['data'][this.treemap.colorValuePath],\n                            legendData: [],\n                            itemArea: child[i]['weight']\n                        });\n                    }\n                }\n            }\n            this.legendCollections.sort(orderByArea);\n            if (this.treemap.palette.length > 0) {\n                for (var j = 0; j < this.legendCollections.length; j++) {\n                    this.legendCollections[j]['legendFill'] = !isNullOrUndefined(this.treemap.currentLevel)\n                        ? legendFillColor : this.treemap.palette[j % this.treemap.palette.length];\n                }\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.calculateLegendItems = function (data) {\n        var isAddData;\n        var fill;\n        var rangeValue;\n        var currentData;\n        var legendText;\n        var itemValue;\n        var isLeafItem;\n        var colorMapProcess = false;\n        var colorMapping;\n        var groupIndex;\n        var leaf = this.treemap.leafItemSettings;\n        var levels = this.treemap.levels;\n        var equalValue;\n        var position = this.treemap.legendSettings.position;\n        var gradientElement;\n        var x2;\n        var y2;\n        var actualValue;\n        var isDuplicate;\n        var isEqualColor;\n        var isRange;\n        var isDesaturation = false;\n        var legendIndex = 0;\n        var outfill;\n        var labelLegend;\n        var otherIndex;\n        this.outOfRangeLegend = null;\n        for (var i = 0; i < data.length; i++) {\n            fill = '';\n            isEqualColor = false;\n            isRange = false;\n            isDesaturation = false;\n            currentData = data[i]['data'];\n            groupIndex = data[i]['groupIndex'];\n            isLeafItem = (this.treemap.levels.length === 0 || groupIndex === this.treemap.levels.length);\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[groupIndex].colorMapping;\n            for (var _i = 0, colorMapping_1 = colorMapping; _i < colorMapping_1.length; _i++) {\n                var colorMap = colorMapping_1[_i];\n                gradientElement = null;\n                rangeValue = Number(currentData[this.treemap.rangeColorValuePath]);\n                equalValue = currentData[this.treemap.equalColorValuePath];\n                colorMap.value = !isNullOrUndefined(colorMap.value) ? colorMap.value.toString() : colorMap.value;\n                if (!isNullOrUndefined(colorMap.from) && !isNullOrUndefined(colorMap.to) &&\n                    rangeValue >= colorMap.from && rangeValue <= colorMap.to && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isRange = true;\n                    actualValue = colorMap.from + ' - ' + colorMap.to;\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.from + ' - ' + colorMap.to;\n                    fill = isNullOrUndefined(colorMap.color) ? fill : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                else if (!isNullOrUndefined(colorMap.value) && equalValue === colorMap.value && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isEqualColor = true;\n                    actualValue = colorMap.value.toString();\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.value.toString();\n                    fill = isNullOrUndefined(colorMap.color) ? fill :\n                        Object.prototype.toString.call(colorMap.color) === '[object Array]' ? colorMap.color[0] : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                if (colorMapProcess && isNullOrUndefined(colorMap.value) && colorMap.maxOpacity && colorMap.minOpacity\n                    && this.treemap.legendSettings.mode === 'Interactive') {\n                    var colors = [];\n                    var gradient = void 0;\n                    isDesaturation = true;\n                    if (Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n                        for (var q = 0; q < colorMap.color.length; q++) {\n                            var offsetColor = 100 / (colorMap.color.length - 1);\n                            var offsetValue = q * offsetColor + '%';\n                            var stop1Color = { colorStop: offsetValue.toString(), color: colorMap.color[q] };\n                            colors.push(stop1Color);\n                        }\n                    }\n                    else {\n                        var stop1Color = { colorStop: '0%', color: fill };\n                        var stop2Color = { colorStop: '100%', color: fill };\n                        colors.push(stop1Color);\n                        colors.push(stop2Color);\n                    }\n                    x2 = position === 'Top' || position === 'Bottom' ? '100%' : '0%';\n                    y2 = position === 'Top' || position === 'Bottom' ? '0%' : '100%';\n                    gradient = {\n                        id: 'groupIndex_' + groupIndex + '_colorIndex_' + this.gradientCount, x1: '0%', y1: '0%', x2: x2, y2: y2\n                    };\n                    gradientElement = this.treemap.renderer.drawGradient('linearGradient', gradient, colors).childNodes[0];\n                    if (Object.prototype.toString.call(colorMap.color) !== '[object Array]') {\n                        gradientElement.childNodes[0].setAttribute('stop-opacity', colorMap.minOpacity.toString());\n                        gradientElement.childNodes[1].setAttribute('stop-opacity', colorMap.maxOpacity.toString());\n                    }\n                    this.defsElement.appendChild(gradientElement);\n                    this.gradientCount++;\n                }\n                isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                    this.removeDuplicates(this.legendCollections, legendText) : false;\n                if (isAddData && isAddData['process'] && colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    fill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]')) && isNullOrUndefined(gradientElement)\n                        && isNullOrUndefined(colorMap.value) ? this.legendGradientColor(colorMap, legendIndex) : fill;\n                    this.legendCollections.push({\n                        actualValue: actualValue,\n                        legendName: legendText, legendFill: fill, legendData: [],\n                        gradientElement: !isNullOrUndefined(gradientElement) ? gradientElement : isNullOrUndefined(colorMap.value)\n                            ? this.legendLinearGradient : null, name: data[i]['name'],\n                        opacity: this.treemap.legendSettings.opacity, borderColor: this.treemap.legendSettings.border.color,\n                        borderWidth: this.treemap.legendSettings.border.width\n                    });\n                    this.legendCollections[this.legendCollections.length - 1]['legendData'].push(data[i]);\n                    legendIndex++;\n                }\n                else if (colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    this.legendCollections[isAddData['value']]['legendData'].push(data[i]);\n                }\n                if (!isRange && !isDesaturation && !isEqualColor) {\n                    if (isNullOrUndefined(colorMap.from) && isNullOrUndefined(colorMap.to)\n                        && isNullOrUndefined(colorMap.minOpacity) &&\n                        isNullOrUndefined(colorMap.maxOpacity) && isNullOrUndefined(colorMap.value) &&\n                        !isNullOrUndefined(colorMap.color)) {\n                        outfill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]'))\n                            ? colorMap.color[0] : colorMap.color;\n                        labelLegend = !isNullOrUndefined(colorMap.label) ? colorMap.label : 'Others';\n                        if (isNullOrUndefined(this.outOfRangeLegend)) {\n                            this.legendCollections.push({\n                                actualValue: labelLegend, legendData: [],\n                                legendName: labelLegend, legendFill: outfill\n                            });\n                            otherIndex = this.legendCollections.length;\n                            this.outOfRangeLegend = this.legendCollections[otherIndex - 1];\n                            legendIndex++;\n                        }\n                        this.legendCollections[otherIndex - 1]['legendData'].push(data[i]);\n                    }\n                }\n            }\n        }\n    };\n    TreeMapLegend.prototype.removeDuplicates = function (legendCollection, text) {\n        var isDuplicate = false;\n        for (var i = 0; i < legendCollection.length; i++) {\n            if (legendCollection[i]['legendName'] === text) {\n                isDuplicate = true;\n                break;\n            }\n            else {\n                continue;\n            }\n        }\n        return isDuplicate;\n    };\n    TreeMapLegend.prototype.isAddNewLegendData = function (legendText) {\n        var newDataProcess;\n        var itemValue;\n        if (this.legendCollections.length === 0) {\n            newDataProcess = true;\n        }\n        else {\n            for (var j = 0; j < this.legendCollections.length; j++) {\n                if (legendText === this.legendCollections[j]['actualValue']) {\n                    newDataProcess = false;\n                    itemValue = j;\n                    break;\n                }\n                else if (j === this.legendCollections.length - 1) {\n                    newDataProcess = true;\n                }\n            }\n        }\n        return { process: newDataProcess, value: itemValue };\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    /**\n     * To draw the legend\n     */\n    TreeMapLegend.prototype.drawLegend = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var render = treemap.renderer;\n        var fill;\n        var textOptions;\n        var gradientElement;\n        var textFont = legend.textStyle;\n        this.legendGroup = render.createGroup({ id: treemap.element.id + '_Legend_Group' });\n        this.renderLegendBorder();\n        this.renderLegendTitle();\n        if (legend.mode === 'Default') {\n            this.drawLegendItem(this.currentPage);\n        }\n        else {\n            for (var i = 0; i < this.legendRenderingCollections.length; i++) {\n                var itemId = treemap.element.id + '_Legend_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Index_' + i + '_Text';\n                var item = this.legendRenderingCollections[i];\n                gradientElement = item['element'];\n                fill = gradientElement ? 'url(#' + gradientElement.id + ')' : item['fill'];\n                var bounds = new Rect(item['x'], item['y'], item['width'], item['height']);\n                var textLocation = new Location(item['textX'], item['textY']);\n                var rectOptions = new RectOption(itemId, fill, legend.shapeBorder, legend.opacity, bounds);\n                if (this.treemap.enableRtl) {\n                    if (treemap.legendSettings.position === 'Left' || treemap.legendSettings.position === 'Right'\n                        || (treemap.legendSettings.position === 'Auto'\n                            && this.treemap.availableSize.width >= this.treemap.availableSize.height)) {\n                        rectOptions.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                            - (this.translate.y + rectOptions.height) - Math.abs(this.legendBorderRect.y - rectOptions.y);\n                        textLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                            - (this.translate.y) + (item['textHeight'] / 2)\n                            - Math.abs(this.legendBorderRect.y - textLocation.y);\n                    }\n                    else {\n                        rectOptions.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n                            - (this.translate.x + rectOptions.width)\n                            - Math.abs(this.legendBorderRect.x - rectOptions.x);\n                        textLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n                            - this.translate.x - Math.abs(this.legendBorderRect.x - textLocation.x);\n                    }\n                }\n                textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'middle', item['text'], '', '');\n                renderTextElement(textOptions, textFont, textFont.color || this.treemap.themeStyle.legendTextColor, this.legendGroup);\n                this.legendGroup.appendChild(render.drawRectangle(rectOptions));\n            }\n        }\n    };\n    TreeMapLegend.prototype.defaultLegendRtlLocation = function (collection, spacing, treemap, legend) {\n        var shapeLocation = collection['Shape'];\n        var textLocation = collection['Text'];\n        var legendText = collection['DisplayText'];\n        var textSize = measureText(legendText, legend.textStyle);\n        shapeLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n            - (this.translate.x + spacing) - Math.abs(this.legendBorderRect.x - shapeLocation.x);\n        textLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n            - (this.translate.x + textSize.width + spacing) - Math.abs(this.legendBorderRect.x - textLocation.x);\n        if (treemap.legendSettings.position === 'Left' || treemap.legendSettings.position === 'Right'\n            || (treemap.legendSettings.position === 'Auto'\n                && this.treemap.availableSize.width >= this.treemap.availableSize.height)) {\n            shapeLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                - this.translate.y - Math.abs(Math.abs(this.legendBorderRect.y) - shapeLocation.y) - (legend.shapeHeight / 2);\n            textLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                - this.translate.y - Math.abs(Math.abs(this.legendBorderRect.y) - textLocation.y);\n        }\n        return { shapeLocation: shapeLocation, textLocation: textLocation };\n    };\n    TreeMapLegend.prototype.drawLegendItem = function (page) {\n        var treemap = this.treemap;\n        var spacing = 10;\n        var legend = treemap.legendSettings;\n        var shapeSize = new Size(legend.shapeWidth, legend.shapeHeight);\n        var textOptions;\n        var legendRtlLocation;\n        var renderOptions;\n        var render = treemap.renderer;\n        var shapeBorder = legend.shapeBorder;\n        var eventArgs;\n        if (page >= 0 && page < this.totalPages.length) {\n            if (document.getElementById(this.legendGroup.id)) {\n                document.getElementById(this.legendGroup.id).remove();\n            }\n            var isLineShape = (legend.shape === 'HorizontalLine' || legend.shape === 'VerticalLine' || legend.shape === 'Cross');\n            var strokeColor = isLineShape ? isNullOrUndefined(legend.fill) ? '#000000' : legend.fill : shapeBorder.color;\n            var strokeWidth = isLineShape ? (shapeBorder.width === 0) ? 1 : shapeBorder.width : shapeBorder.width;\n            for (var i = 0; i < this.totalPages[page]['Collection'].length; i++) {\n                var collection = this.totalPages[page]['Collection'][i];\n                var legendElement = render.createGroup({ id: treemap.element.id + '_Legend_Index_' + i });\n                var legendText = collection['DisplayText'];\n                var shapeId = treemap.element.id + '_Legend_Shape_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Text_Index_' + i;\n                var shapeLocation = collection['Shape'];\n                var textLocation = collection['Text'];\n                if (treemap.enableRtl) {\n                    legendRtlLocation = this.defaultLegendRtlLocation(collection, spacing, treemap, legend);\n                    shapeLocation = legendRtlLocation['shapeLocation'];\n                    textLocation = legendRtlLocation['textLocation'];\n                }\n                eventArgs = {\n                    cancel: false, name: legendItemRendering, treemap: treemap, fill: collection['Fill'],\n                    shape: legend.shape, imageUrl: legend.imageUrl\n                };\n                this.treemap.trigger(legendItemRendering, eventArgs);\n                var renderOptions_1 = new PathOption(shapeId, eventArgs.fill, strokeWidth, isLineShape ? collection['Fill'] : strokeColor, legend.opacity, '');\n                legendElement.appendChild(drawSymbol(shapeLocation, eventArgs.shape, shapeSize, eventArgs.imageUrl, renderOptions_1, legendText));\n                textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'start', legendText, '', '');\n                renderTextElement(textOptions, legend.textStyle, legend.textStyle.color || this.treemap.themeStyle.legendTextColor, legendElement);\n                this.legendGroup.appendChild(legendElement);\n            }\n            var pagingGroup = void 0;\n            var width = spacing;\n            var height = (spacing / 2);\n            if (this.page !== 0) {\n                var pagingText = (page + 1) + '/' + this.totalPages.length;\n                var pagingFont = legend.textStyle;\n                var pagingTextSize = measureText(pagingText, pagingFont);\n                var leftPageX = (this.legendItemRect.x + this.legendItemRect.width) - pagingTextSize.width -\n                    (width * 2) - spacing;\n                var rightPageX = (this.legendItemRect.x + this.legendItemRect.width);\n                var locY = (this.legendItemRect.y + this.legendItemRect.height) + (height / 2) + spacing;\n                var pageTextX = rightPageX - width - (pagingTextSize.width / 2) - (spacing / 2);\n                pagingGroup = render.createGroup({ id: treemap.element.id + '_Legend_Paging_Group' });\n                var leftPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Left_Paging_Group' });\n                var rightPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Right_Paging_Group' });\n                var rightPath = ' M ' + rightPageX + ' ' + locY + ' L ' + (rightPageX - width) + ' ' + (locY - height) +\n                    ' L ' + (rightPageX - width) + ' ' + (locY + height) + ' z ';\n                var leftPath = ' M ' + leftPageX + ' ' + locY + ' L ' + (leftPageX + width) + ' ' + (locY - height) +\n                    ' L ' + (leftPageX + width) + ' ' + (locY + height) + ' z ';\n                var leftPageOptions = new PathOption(treemap.element.id + '_Left_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', leftPath);\n                leftPageElement.appendChild(render.drawPath(leftPageOptions));\n                var leftRectPageOptions = new RectOption(treemap.element.id + '_Left_Page_Rect', 'transparent', {}, 1, new Rect(leftPageX - (width / 2), (locY - (height * 2)), width * 2, spacing * 2), '');\n                leftPageElement.appendChild(render.drawRectangle(leftRectPageOptions));\n                this.wireEvents(leftPageElement);\n                var rightPageOptions = new PathOption(treemap.element.id + '_Right_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', rightPath);\n                rightPageElement.appendChild(render.drawPath(rightPageOptions));\n                var rightRectPageOptions = new RectOption(treemap.element.id + '_Right_Page_Rect', 'transparent', {}, 1, new Rect((rightPageX - width), (locY - height), width, spacing), '');\n                rightPageElement.appendChild(render.drawRectangle(rightRectPageOptions));\n                this.wireEvents(rightPageElement);\n                pagingGroup.appendChild(leftPageElement);\n                pagingGroup.appendChild(rightPageElement);\n                var pageTextOptions = {\n                    'id': treemap.element.id + '_Paging_Text',\n                    'x': pageTextX,\n                    'y': locY + (pagingTextSize.height / 4),\n                    'fill': '#a6a6a6',\n                    'font-size': '14px',\n                    'font-style': pagingFont.fontStyle,\n                    'font-family': pagingFont.fontFamily,\n                    'font-weight': pagingFont.fontWeight,\n                    'text-anchor': 'middle',\n                    'transform': '',\n                    'opacity': 1,\n                    'dominant-baseline': ''\n                };\n                pagingGroup.appendChild(render.createText(pageTextOptions, pagingText));\n                this.legendGroup.appendChild(pagingGroup);\n            }\n        }\n    };\n    TreeMapLegend.prototype.renderLegendBorder = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var legendTitle = legend.title.text;\n        var spacing = 10;\n        var textStyle = legend.titleStyle;\n        var textOptions;\n        var title = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(title, textStyle);\n        this.legendBorderRect = new Rect((this.legendItemRect.x - spacing), (this.legendItemRect.y - spacing - textSize.height), (this.legendItemRect.width) + (spacing * 2), (this.legendItemRect.height) + (spacing * 2) + textSize.height +\n            (legend.mode === 'Interactive' ? 0 : (this.page !== 0) ? spacing : 0));\n        var renderOptions = new RectOption(treemap.element.id + '_Legend_Border', legend.background, legend.border, 1, this.legendBorderRect, '');\n        var legendBorder = treemap.renderer.drawRectangle(renderOptions);\n        legendBorder.style.pointerEvents = 'none';\n        this.legendGroup.appendChild(legendBorder);\n        this.getLegendAlignment(treemap, this.legendBorderRect.width, this.legendBorderRect.height, legend);\n        this.legendGroup.setAttribute('transform', 'translate( ' + (this.translate.x + (-(this.legendBorderRect.x))) + ' ' +\n            (this.translate.y + (-(this.legendBorderRect.y))) + ' )');\n        treemap.svgObject.appendChild(this.legendGroup);\n    };\n    TreeMapLegend.prototype.renderLegendTitle = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var textStyle = legend.titleStyle;\n        var legendTitle = legend.title.text;\n        var textOptions;\n        var spacing = 10;\n        var trimTitle = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(trimTitle, textStyle);\n        if (legendTitle) {\n            textOptions = new TextOption(treemap.element.id + '_LegendTitle', (this.legendItemRect.x) + (this.legendItemRect.width / 2), this.legendItemRect.y - (textSize.height / 2) - (spacing / 2), 'middle', trimTitle, '');\n            renderTextElement(textOptions, textStyle, textStyle.color || this.treemap.themeStyle.legendTitleColor, this.legendGroup);\n        }\n    };\n    /**\n     * To rendered the interactive pointer\n     */\n    TreeMapLegend.prototype.renderInteractivePointer = function (e) {\n        var treemap = this.treemap;\n        var target = e.target;\n        var interactiveId = treemap.element.id + '_Interactive_Legend';\n        target = !(e.type.indexOf('touch') > -1) ? target :\n            document.elementFromPoint(e.changedTouches[0].clientX, e.changedTouches[0].clientY);\n        var targetItem;\n        var legend = treemap.legendSettings;\n        if (target.id.indexOf('_Item_Index') > -1 && legend.visible && this.legendRenderingCollections.length > 0) {\n            var currentData = void 0;\n            var legendRect = void 0;\n            var rect = void 0;\n            var data = void 0;\n            var fill = void 0;\n            var stroke = void 0;\n            var strokeWidth = void 0;\n            var legendElement = void 0;\n            targetItem = treemap.layout.renderItems[parseFloat(target.id.split('_')[6])];\n            var svgRect = treemap.svgObject.getBoundingClientRect();\n            for (var i = 0; i < this.legendCollections.length; i++) {\n                currentData = this.legendCollections[i];\n                legendElement = document.getElementById(treemap.element.id + '_Legend_Index_' + i);\n                legendRect = legendElement.getBoundingClientRect();\n                var rect_1 = new Rect(Math.abs(legendRect.left - svgRect.left), Math.abs(legendRect.top - svgRect.top), legendRect.width, legendRect.height);\n                fill = legendElement.getAttribute('fill');\n                stroke = legend.shapeBorder.color;\n                strokeWidth = legend.shapeBorder.width;\n                if (!isNullOrUndefined(currentData['legendData'])) {\n                    data = currentData['legendData'];\n                    for (var j = 0; j < data.length; j++) {\n                        if (data[j]['levelOrderName'] === targetItem['levelOrderName']) {\n                            this.drawInteractivePointer(legend, fill, stroke, interactiveId, strokeWidth, rect_1);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            this.removeInteractivePointer();\n        }\n    };\n    TreeMapLegend.prototype.drawInteractivePointer = function (legend, fill, stroke, id, strokeWidth, rect) {\n        var path;\n        var pathOptions;\n        var locX;\n        var locY;\n        var height = 10;\n        var width = 10;\n        var direction = (legend.orientation === 'None') ? (legend.position === 'Top' || legend.position === 'Bottom')\n            ? 'Horizontal' : 'Vertical' : legend.orientation;\n        if (direction === 'Horizontal') {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y;\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY - height) + ' Z ';\n            }\n            else {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y + (rect.height);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY + height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' Z ';\n            }\n        }\n        else {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width);\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX + width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' z ';\n            }\n            else {\n                locX = rect.x;\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX - width) + ' ' + (locY + height) + ' z ';\n            }\n        }\n        pathOptions = new PathOption(id, fill, strokeWidth, stroke, 1, '', path);\n        this.treemap.svgObject.appendChild(this.treemap.renderer.drawPath(pathOptions));\n    };\n    TreeMapLegend.prototype.getLegendAlignment = function (treemap, width, height, legend) {\n        var x;\n        var y;\n        var spacing = 10;\n        var totalRect;\n        totalRect = extend({}, treemap.areaRect, totalRect, true);\n        var areaX = totalRect.x;\n        var areaY = totalRect.y;\n        var areaHeight = totalRect.height;\n        var areaWidth = totalRect.width;\n        var totalWidth = treemap.availableSize.width;\n        var totalHeight = treemap.availableSize.height;\n        var position = legend.position === 'Auto' ? (totalWidth > totalHeight) ? 'Right' : 'Bottom' : legend.position;\n        if (legend.position === 'Float') {\n            this.translate = legend.location;\n        }\n        else {\n            switch (position) {\n                case 'Top':\n                case 'Bottom':\n                    totalRect.height = (areaHeight - height);\n                    x = (totalWidth / 2) - (width / 2);\n                    y = (position === 'Top') ? areaY : (areaY + totalRect.height) + spacing;\n                    totalRect.y = (position === 'Top') ? areaY + height + spacing : areaY;\n                    break;\n                case 'Left':\n                case 'Right':\n                    totalRect.width = (areaWidth - width);\n                    x = (position === 'Left') ? areaX : areaX + totalRect.width;\n                    y = (totalHeight / 2) - (height / 2);\n                    totalRect.x = (position === 'Left') ? areaX + width : areaX;\n                    break;\n            }\n            switch (legend.alignment) {\n                case 'Near':\n                    if (position === 'Top' || position === 'Bottom') {\n                        x = totalRect.x;\n                    }\n                    else {\n                        y = totalRect.y;\n                    }\n                    break;\n                case 'Far':\n                    if (position === 'Top' || position === 'Bottom') {\n                        x = totalWidth - width;\n                    }\n                    else {\n                        y = totalHeight - height;\n                    }\n                    break;\n            }\n            this.treemap.totalRect = totalRect;\n            this.translate = new Location(x, y);\n        }\n    };\n    TreeMapLegend.prototype.mouseUpHandler = function (e) {\n        this.renderInteractivePointer(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeInteractivePointer.bind(this), 3000);\n    };\n    /**\n     * To remove the interactive pointer\n     */\n    TreeMapLegend.prototype.removeInteractivePointer = function () {\n        if (document.getElementById(this.treemap.element.id + '_Interactive_Legend')) {\n            document.getElementById(this.treemap.element.id + '_Interactive_Legend').remove();\n        }\n    };\n    /**\n     * To change the next page\n     */\n    TreeMapLegend.prototype.changeNextPage = function (e) {\n        this.currentPage = (e.target.id.indexOf('_Left_Page_') > -1) ? (this.currentPage - 1) :\n            (this.currentPage + 1);\n        this.drawLegend();\n    };\n    /**\n     * Wire events for event handler\n     */\n    TreeMapLegend.prototype.wireEvents = function (element) {\n        EventHandler.add(element, Browser.touchStartEvent, this.changeNextPage, this);\n    };\n    /**\n     * To add the event listener\n     */\n    TreeMapLegend.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderInteractivePointer, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To remove the event listener\n     */\n    TreeMapLegend.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderInteractivePointer);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapLegend.prototype.getModuleName = function () {\n        return 'treeMapLegend';\n    };\n    /**\n     * To destroy the legend.\n     * @return {void}\n     * @private\n     */\n    TreeMapLegend.prototype.destroy = function (treemap) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    /**\n     * Get the gradient color for interactive legend.\n     */\n    TreeMapLegend.prototype.legendGradientColor = function (colorMap, legendIndex) {\n        var legendFillColor;\n        var xmlns = 'http://www.w3.org/2000/svg';\n        if (!isNullOrUndefined(colorMap.color) && Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n            var defElement = this.treemap.renderer.createDefs();\n            var linerGradientEle = document.createElementNS(xmlns, 'linearGradient');\n            var opacity = 1;\n            var position = this.treemap.legendSettings.position;\n            var x2 = void 0;\n            var y2 = void 0;\n            x2 = position === 'Top' || position === 'Bottom' ? '100' : '0';\n            y2 = position === 'Top' || position === 'Bottom' ? '0' : '100';\n            linerGradientEle.setAttribute('id', 'linear_' + legendIndex);\n            linerGradientEle.setAttribute('x1', 0 + '%');\n            linerGradientEle.setAttribute('y1', 0 + '%');\n            linerGradientEle.setAttribute('x2', x2 + '%');\n            linerGradientEle.setAttribute('y2', y2 + '%');\n            for (var b = 0; b < colorMap.color.length; b++) {\n                var offsetColor = 100 / (colorMap.color.length - 1);\n                var stopEle = document.createElementNS(xmlns, 'stop');\n                stopEle.setAttribute('offset', b * offsetColor + '%');\n                stopEle.setAttribute('stop-color', colorMap.color[b]);\n                stopEle.setAttribute('stop-opacity', opacity.toString());\n                linerGradientEle.appendChild(stopEle);\n            }\n            defElement.appendChild(linerGradientEle);\n            this.legendLinearGradient = linerGradientEle;\n            var color = 'url(' + '#linear_' + legendIndex + ')';\n            this.defsElement.appendChild(linerGradientEle);\n            legendFillColor = color;\n        }\n        return legendFillColor;\n    };\n    return TreeMapLegend;\n}());\nexport { TreeMapLegend };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { itemHighlight, itemSelected } from '../model/constants';\nimport { findHightLightItems, removeClassNames, applyOptions, removeShape, removeLegend, removeSelectionWithHighlight, setColor, getLegendIndex, pushCollection } from '../utils/helper';\n/**\n * Performing treemap highlight\n */\nvar TreeMapHighlight = /** @class */ (function () {\n    function TreeMapHighlight(treeMap) {\n        this.target = 'highlight';\n        this.shapeTarget = 'highlight';\n        this.shapeHighlightCollection = [];\n        this.legendHighlightCollection = [];\n        this.currentElement = [];\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    //tslint:disable:max-func-body-length\n    /* tslint:disable:max-line-length */\n    /**\n     * Mouse down event in highlight\n     */\n    TreeMapHighlight.prototype.mouseMove = function (e) {\n        var treemap = this.treemap;\n        var processHighlight;\n        var targetId = e.target.id;\n        var eventArgs;\n        var items = [];\n        var highlight = this.treemap.highlightSettings;\n        var item;\n        var highLightElements = [];\n        var process;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selectionModule = this.treemap.treeMapSelectionModule;\n        if (targetId.indexOf('_Item_Index') > -1 && (selectionModule ? selectionModule.selectionId !== targetId : true)) {\n            if (this.highLightId !== targetId) {\n                treeMapElement = document.getElementById(treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout');\n                var selectionElements = document.getElementsByClassName('treeMapSelection');\n                item = this.treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    var length_1 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    index = getLegendIndex(length_1, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById('container_Legend_Shape_Index_' + index) : document.getElementById('container_Legend_Index_' + index);\n                    if (this.shapeElement !== null && (selectionModule ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true)) {\n                        if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true) {\n                            this.currentElement.push({ currentElement: this.shapeElement });\n                            removeShape(this.shapeHighlightCollection, 'highlight');\n                            this.shapeHighlightCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                                oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                                oldBorderWidth: collection[index]['borderWidth']\n                            });\n                            setColor(this.shapeElement, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            this.target = 'highlight';\n                        }\n                        else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                            removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                            this.highLightId = '';\n                        }\n                    }\n                    else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                        removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                        this.highLightId = '';\n                    }\n                }\n                orders = findHightLightItems(item, [], highlight.mode, treemap);\n                if (this.treemap.legendSettings.visible ? selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true : true) {\n                    if (this.treemap.legendSettings.visible ? selectionModule ? this.shapeElement !== selectionModule.shapeElement : true : true) {\n                        for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                            element = treeMapElement.childNodes[i];\n                            process = true;\n                            item = treemap.layout.renderItems[element.id.split('_')[6]];\n                            for (var j = 0; j < selectionElements.length; j++) {\n                                if (element.id === selectionElements[j].id) {\n                                    process = false;\n                                    break;\n                                }\n                            }\n                            if (orders.indexOf(item['levelOrderName']) > -1 && process) {\n                                highLightElements.push(element);\n                                items.push(item);\n                            }\n                        }\n                        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                        for (var k = 0; k < highLightElements.length; k++) {\n                            element = highLightElements[k];\n                            applyOptions(element.childNodes[0], { border: highlight.border, fill: highlight.fill, opacity: highlight.opacity });\n                            element.classList.add('treeMapHighLight');\n                            this.highLightId = targetId;\n                        }\n                        eventArgs = { cancel: false, name: itemHighlight, treemap: treemap, items: items, elements: highLightElements };\n                        treemap.trigger(itemHighlight, eventArgs);\n                    }\n                    else {\n                        processHighlight = false;\n                    }\n                }\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1) {\n            if (this.treemap.legendSettings.visible && (selectionModule ? selectionModule.legendSelectId !== targetId : true) && (selectionModule ? selectionModule.shapeSelectId !== targetId : true)) {\n                var index = void 0;\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_2;\n                var targetEle = document.getElementById(targetId);\n                if (this.shapeTarget === 'highlight') {\n                    removeLegend(this.legendHighlightCollection, 'highlight');\n                }\n                this.shapeTarget = 'highlight';\n                index = this.treemap.legendSettings.mode === 'Default' ? parseFloat(targetId.split('_')[4]) : parseFloat(targetId.split('_')[3]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                var collection = this.treemap.treeMapLegendModule.legendCollections;\n                var legendIndex = parseInt(targetId[targetId.length - 1], 10);\n                for (var i = 0; i < dataLength; i++) {\n                    for (var j = 0; j < this.treemap.layout.renderItems.length; j++) {\n                        if (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][i]['levelOrderName'] === this.treemap.layout.renderItems[j]['levelOrderName']) {\n                            itemIndex = j;\n                            groupIndex = this.treemap.layout.renderItems[j]['groupIndex'];\n                            var nodeEle = document.getElementById('container_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (i === 0) {\n                                this.legendHighlightCollection = [];\n                                pushCollection(this.legendHighlightCollection, legendIndex, j, targetEle, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_2 = this.legendHighlightCollection.length;\n                                this.legendHighlightCollection[length_2 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            setColor(nodeEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            length_2 = this.legendHighlightCollection.length;\n                            this.legendHighlightCollection[length_2 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && this.treemap.legendSettings.visible) {\n                    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                }\n            }\n            if ((this.shapeTarget === 'highlight' || this.target === 'highlight') && this.treemap.legendSettings.visible) {\n                if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                    if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && selectionModule ? selectionModule.legendSelect : true) {\n                        removeShape(this.shapeHighlightCollection, 'highlight');\n                        this.shapeHighlightCollection = [];\n                    }\n                }\n            }\n            if (this.shapeTarget === 'highlight' && this.treemap.legendSettings.visible) {\n                removeLegend(this.legendHighlightCollection, 'highlight');\n            }\n            this.highLightId = '';\n            processHighlight = false;\n        }\n        return processHighlight;\n    };\n    /**\n     * To bind events for highlight\n     */\n    TreeMapHighlight.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.mouseMove, this);\n    };\n    /**\n     * To unbind events for highlight\n     */\n    TreeMapHighlight.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.mouseMove);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapHighlight.prototype.getModuleName = function () {\n        return 'treeMapHighlight';\n    };\n    /**\n     * To destroy the hightlight.\n     * @return {void}\n     * @private\n     */\n    TreeMapHighlight.prototype.destroy = function (treeMap) {\n        this.removeEventListener();\n    };\n    return TreeMapHighlight;\n}());\nexport { TreeMapHighlight };\n/**\n * Performing treemap selection\n */\nvar TreeMapSelection = /** @class */ (function () {\n    function TreeMapSelection(treeMap) {\n        this.shapeSelectionCollection = [];\n        this.legendSelectionCollection = [];\n        this.shapeSelect = true;\n        this.legendSelect = true;\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    /**\n     * Mouse down event in selection\n     */\n    TreeMapSelection.prototype.mouseDown = function (e) {\n        var targetEle = e.target;\n        var eventArgs;\n        var treemap = this.treemap;\n        var items = [];\n        var targetId = targetEle.id;\n        var item;\n        var selectionElements = [];\n        var opacity;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selection = treemap.selectionSettings;\n        var highlightModule = this.treemap.treeMapHighlightModule;\n        var layoutID = treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout';\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            if (this.selectionId !== targetId && this.legendSelect) {\n                treeMapElement = document.getElementById(layoutID);\n                item = treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    this.shapeSelect = false;\n                    var length_3 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    this.shapeElement = undefined;\n                    removeShape(this.shapeSelectionCollection, 'selection');\n                    if (highlightModule) {\n                        highlightModule.shapeTarget = 'selection';\n                        highlightModule.shapeHighlightCollection = [];\n                    }\n                    index = getLegendIndex(length_3, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById('container_Legend_Shape_Index_' + index) : document.getElementById('container_Legend_Index_' + index);\n                    if (this.shapeElement !== null) {\n                        this.shapeSelectId = this.shapeElement.getAttribute('id');\n                        this.shapeSelectionCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                            oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                            oldBorderWidth: collection[index]['borderWidth']\n                        });\n                        setColor(this.shapeElement, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                    }\n                }\n                orders = findHightLightItems(item, [], selection.mode, treemap);\n                for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                    element = treeMapElement.childNodes[i];\n                    item = treemap.layout.renderItems[element.id.split('_')[6]];\n                    if (orders.indexOf(item['levelOrderName']) > -1) {\n                        selectionElements.push(element);\n                        items.push(item);\n                    }\n                }\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.selectionId = targetId;\n                var highLightElements = document.getElementsByClassName('treeMapHighLight');\n                for (var k = 0; k < selectionElements.length; k++) {\n                    element = selectionElements[k];\n                    if (highLightElements.length > 0) {\n                        for (var j = 0; j < highLightElements.length; j++) {\n                            if (highLightElements[j].id === element.id) {\n                                highLightElements[j].classList.remove('treeMapHighLight');\n                            }\n                            applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                            element.classList.add('treeMapSelection');\n                        }\n                    }\n                    else {\n                        applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                        element.classList.add('treeMapSelection');\n                    }\n                    eventArgs = { cancel: false, name: itemSelected, treemap: treemap, items: items, elements: selectionElements };\n                    treemap.trigger(itemSelected, eventArgs);\n                }\n            }\n            else {\n                removeShape(this.shapeSelectionCollection, 'selection');\n                this.shapeElement = undefined;\n                this.shapeSelect = true;\n                this.shapeSelectId = '';\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.selectionId = '';\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1) {\n            var collection = this.treemap.treeMapLegendModule.legendCollections;\n            if (this.treemap.legendSettings.visible && this.legendSelectId !== targetId && this.shapeSelect) {\n                var index = void 0;\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_4;\n                this.legendSelectId = targetId;\n                this.legendSelect = false;\n                var legendIndex = parseInt(targetId[targetId.length - 1], 10);\n                var targetEle_1 = document.getElementById(targetId);\n                removeLegend(this.legendSelectionCollection, 'selection');\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'selection';\n                }\n                index = this.treemap.legendSettings.mode === 'Default' ? parseFloat(targetId.split('_')[4]) : parseFloat(targetId.split('_')[3]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                for (var k = 0; k < dataLength; k++) {\n                    for (var l = 0; l < this.treemap.layout.renderItems.length; l++) {\n                        if (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][k]['levelOrderName'] === this.treemap.layout.renderItems[l]['levelOrderName']) {\n                            itemIndex = l;\n                            groupIndex = this.treemap.layout.renderItems[l]['groupIndex'];\n                            var nodeEle = document.getElementById('container_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (k === 0) {\n                                pushCollection(this.legendSelectionCollection, legendIndex, l, targetEle_1, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_4 = this.legendSelectionCollection.length;\n                                this.legendSelectionCollection[length_4 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle_1, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            setColor(nodeEle, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            length_4 = this.legendSelectionCollection.length;\n                            this.legendSelectionCollection[length_4 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n            else {\n                removeLegend(this.legendSelectionCollection, 'Selection');\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'highlight';\n                }\n                this.legendSelect = true;\n                this.legendSelectId = '';\n            }\n        }\n    };\n    /**\n     * To bind events for selection\n     */\n    TreeMapSelection.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchStartEvent, this.mouseDown, this);\n    };\n    /**\n     * To unbind events for selection\n     */\n    TreeMapSelection.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchStartEvent, this.mouseDown);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapSelection.prototype.getModuleName = function () {\n        return 'treeMapSelection';\n    };\n    /**\n     * To destroy the selection.\n     * @return {void}\n     * @private\n     */\n    TreeMapSelection.prototype.destroy = function (treeMap) {\n        this.removeEventListener();\n    };\n    return TreeMapSelection;\n}());\nexport { TreeMapSelection };\n","import { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { Browser, createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getMousePosition, textFormatter, formatValue } from '../utils/helper';\nimport { tooltipRendering } from '../model/constants';\n/**\n * Render Tooltip\n */\nvar TreeMapTooltip = /** @class */ (function () {\n    function TreeMapTooltip(treeMap) {\n        this.treemap = treeMap;\n        this.tooltipSettings = this.treemap.tooltipSettings;\n        this.tooltipId = this.treemap.element.id + '_TreeMapTooltip';\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    TreeMapTooltip.prototype.renderTooltip = function (e) {\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var tootipArgs;\n        if (e.type.indexOf('touch') !== -1) {\n            this.isTouch = true;\n            touchArg = e;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n            target = touchArg.target;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch';\n            pageX = e.pageX;\n            pageY = e.pageY;\n            target = e.target;\n        }\n        var value;\n        var targetId = target.id;\n        var item = {};\n        var tooltipEle;\n        var location;\n        var toolTipHeader;\n        var toolTipData = {};\n        var tooltipContent = [];\n        var markerFill;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n            if (!isNullOrUndefined(item)) {\n                toolTipHeader = item['name'];\n                value = item['weight'];\n                toolTipData = item['data'];\n                markerFill = item['options']['fill'];\n                if (this.treemap.enableRtl) {\n                    tooltipContent = [textFormatter(this.tooltipSettings.format, toolTipData, this.treemap) ||\n                            formatValue(value, this.treemap) + ' : ' + this.treemap.weightValuePath.toString()];\n                }\n                else {\n                    tooltipContent = [textFormatter(this.tooltipSettings.format, toolTipData, this.treemap) ||\n                            this.treemap.weightValuePath.toString() + ' : ' + formatValue(value, this.treemap)];\n                }\n                if (document.getElementById(this.tooltipId)) {\n                    tooltipEle = document.getElementById(this.tooltipId);\n                }\n                else {\n                    tooltipEle = createElement('div', {\n                        id: this.treemap.element.id + '_TreeMapTooltip',\n                        className: 'EJ2-TreeMap-Tooltip',\n                        styles: 'position: absolute;pointer-events:none;'\n                    });\n                    document.getElementById(this.treemap.element.id + '_Secondary_Element').appendChild(tooltipEle);\n                }\n                location = getMousePosition(pageX, pageY, this.treemap.svgObject);\n                location.y = (this.tooltipSettings.template) ? location.y + 10 : location.y;\n                this.tooltipSettings.textStyle.fontFamily = this.treemap.theme === 'Bootstrap4' ? 'HelveticaNeue-Medium'\n                    : this.tooltipSettings.textStyle.fontFamily;\n                this.tooltipSettings.textStyle.color = this.treemap.themeStyle.tooltipFontColor\n                    || this.tooltipSettings.textStyle.color;\n                this.tooltipSettings.textStyle.opacity = this.treemap.themeStyle.tooltipTextOpacity\n                    || this.tooltipSettings.textStyle.opacity;\n                tootipArgs = {\n                    cancel: false, name: tooltipRendering, item: item,\n                    options: {\n                        location: location, text: tooltipContent, data: toolTipData,\n                        textStyle: this.tooltipSettings.textStyle, template: this.tooltipSettings.template\n                    },\n                    treemap: this.treemap,\n                    element: target, eventArgs: e\n                };\n                this.treemap.trigger(tooltipRendering, tootipArgs);\n                if (!tootipArgs.cancel) {\n                    this.svgTooltip = new Tooltip({\n                        enable: true,\n                        header: '',\n                        data: tootipArgs.options['data'],\n                        template: tootipArgs.options['template'],\n                        content: tootipArgs.options['text'],\n                        shapes: [],\n                        location: tootipArgs.options['location'],\n                        palette: [markerFill],\n                        areaBounds: this.treemap.areaRect,\n                        textStyle: tootipArgs.options['textStyle']\n                    });\n                    this.svgTooltip.opacity = this.treemap.themeStyle.tooltipFillOpacity || this.svgTooltip.opacity;\n                    this.svgTooltip.appendTo(tooltipEle);\n                }\n                else {\n                    this.removeTooltip();\n                }\n            }\n        }\n        else {\n            this.removeTooltip();\n        }\n    };\n    TreeMapTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    TreeMapTooltip.prototype.removeTooltip = function () {\n        if (document.getElementsByClassName('EJ2-TreeMap-Tooltip').length > 0) {\n            document.getElementsByClassName('EJ2-TreeMap-Tooltip')[0].remove();\n        }\n    };\n    /**\n     * To bind events for tooltip module\n     */\n    TreeMapTooltip.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To unbind events for tooltip module\n     */\n    TreeMapTooltip.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapTooltip.prototype.getModuleName = function () {\n        return 'treeMapTooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     * @return {void}\n     * @private\n     */\n    TreeMapTooltip.prototype.destroy = function (treeMap) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    return TreeMapTooltip;\n}());\nexport { TreeMapTooltip };\n","import * as index from './index';\nindex.TreeMap.Inject(index.TreeMapTooltip, index.TreeMapLegend, index.TreeMapHighlight, index.TreeMapSelection);\nexport * from './index';\n"],"names":["stringToNumber","value","containerSize","undefined","indexOf","parseInt","measureText","text","font","measureObject","document","getElementById","createElement","id","body","appendChild","innerHTML","style","position","fontSize","size","fontWeight","fontStyle","fontFamily","visibility","top","left","whiteSpace","lineHeight","Size","clientWidth","clientHeight","textTrim","maxWidth","label","width","i","length","substring","findPosition","location","alignment","textSize","type","x","y","height","Location","createTextStyle","renderer","renderOptions","htmlObject","createText","setAttributeNS","renderTextElement","options","color","parent","isMinus","tspanElement","font-size","font-style","font-family","font-weight","text-anchor","anchor","transform","opacity","dominant-baseline","baseLine","fill","SvgRenderer","isNullOrUndefined","connectorText","search","drillLevelText","split","z","drillText","replace","len","createTSpan","getElement","itemsToOrder","a","b","isContainsData","source","pathName","processData","treemap","path","isExist","name","leaf","leafItemSettings","levels","groupPath","labelPath","weightValuePath","findChildren","data","children","keys","Object","Array","findHightLightItems","items","mode","treeMap","push","j","parentName","currentItem","layout","renderItems","getTemplateFunction","template","templateFn","querySelectorAll","compile","querySelector","trim","e","convertElement","element","labelId","childElement","styles","templateHtml","RegExp","toString","findLabelLocation","rect","labelSize","getBoundingClientRect","areaRect","Math","abs","enableDrillDown","renderDirection","measureElement","parentElement","offsetHeight","offsetWidth","remove","getArea","getShortestEdge","input","container","convertToContainer","min","convertToRect","xOffset","yOffset","getMousePosition","pageX","pageY","elementRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","positionY","colorMap","colorMapping","equalValue","paths","isNaN","isEqualColor","dataValue","from","to","prototype","call","colorCollections","minOpacity","maxOpacity","deSaturationColor","rangeValue","getColorByValue","rgbToHex","r","g","componentToHex","rbg","Number","getGradientColor","previousOffset","nextOffset","percent","full","previousColor","nextColor","charAt","colorNameToHex","length_1","splitColorValueOffset","splitColor","getPercentageColor","previous","next","prevColor","getPercentage","substr","ColorValue","round","wordWrap","maximumWidth","dataLabel","textCollection","labelCollection","concat","textWrap","resultText","currentLength","totalWidth","totalLength","sliceString","slice","hide","maxHeight","orderByArea","removeClassNames","elements","applyOptions","childNodes","classList","setAttribute","textFormatter","format","_i","keys_1","key","join","formatValue","intl","getNumberFormat","useGrouping","useGroupingSeparator","convertToHexCode","hex","convertHexToColor","result","exec","window","getComputedStyle","isRGBValue","drawSymbol","shape","url","svgRenderer","temp","renderLegendShape","htmlElement","functionName","renderOption","renderPath","shapeWidth","shapeHeight","shapeX","shapeY","merge","rx","ry","cx","cy","d","xValue","yValue","cos","PI","sin","href","isParentItem","item","removeShape","collection","setColor","removeLegend","dataCount","k","borderColor","borderWidth","removeSelectionWithHighlight","getElementsByClassName","getLegendIndex","index","dataLength","treeMapLegendModule","legendCollections","pushCollection","number","legendElement","shapeElement","legendCollection","legendEle","oldFill","oldOpacity","oldBorderColor","oldBorderWidth","shapeOldFill","shapeOldOpacity","shapeOldBorderColor","shapeOldBorderWidth","getThemeStyle","theme","backgroundColor","titleFontColor","subTitleFontColor","tooltipFillColor","tooltipFontColor","legendTitleColor","legendTextColor","tooltipFillOpacity","tooltipTextOpacity","legendFontSize","labelFontFamily","defaultFont","__extends","extendStatics","setPrototypeOf","__proto__","p","hasOwnProperty","__","this","constructor","create","__decorate","decorators","target","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Border","_super","apply","Property","ChildProperty","Margin","Font","CommonTitleSettings","SubTitleSettings","Complex","TitleSettings","ColorMapping","LegendSettings","InitialDrillSettings","LeafItemSettings","Collection","TooltipSettings","SelectionSettings","HighlightSettings","LevelSettings","Rect","RectOption","border","dashArray","stroke","PathOption","TextOption","TreeMapAjax","async","contentType","sendData","dataOptions","LayoutPanel","processLayoutPanel","totalRect","levelsOfData","initialDrillDown","groupIndex","groupName","drilledItems","getDrilldownData","extend","legendSettings","currentLevel","calculateLayoutItems","renderLayoutItems","count","enableBreadcrumb","drillData","newData","child","parentData","layoutType","computeSliceAndDiceDimensional","computeSquarifyDimensional","coords","gap","headerHeight","leafItem","groups","sliceAndDiceProcess","groupGap","showHeader","childValue","parentArea","alottedValue","totalWeight","forEach","isHorizontal","sort","isHierarchicalData","padding","calculateChildrenLayout","groupPadding","computeTotalArea","performRowsLayout","currentRow","stack","newCoordinates","getCoordinates","newStack","nextDatum","restData","aspectRatio","newRow","currentRowLength","valueSum","newContainer","cutArea","findMaxAspectRatio","row","rowLength","minArea","Infinity","maxArea","sumArea","area","max","pow","areaWidth","areaHeight","isParent","parentRect","subXOffset","subYOffset","coordinates","y1","x1","dataLength_1","dataSum_1","i_1","multiplier","datum","onDemandProcess","childItems","parentItem","parentItemGroupname","splice","renderData","txtVisible","getItemColor","eventArgs","pathOptions","templatePosition","renderText","groupId","templateEle","textStyle","elementID","interSectAction","rectPath","secondaryEle","layoutGroup","createGroup","itemGroup","templateGroup","className","isLeafItem","drillDownView","treemapItemRect","labelFormat","headerFormat","levelName","showLabels","breadcrumbConnector","enableRtl","labelStyle","headerStyle","themeStyle","labelPosition","labelTemplate","headerTemplate","cancel","RenderItems","trigger","drawPath","renderItemText","renderTemplate","tabIndex","svgObject","textLocation","customText","textName","tspanText","labelInterSectAction","drillSymbolCount","drillSymbolSize","texts","maxNumber","collectionLength","stringText","getSaturatedColor","itemFill","itemOpacity","defaultLevelData","option","equalColorValuePath","rangeColorValuePath","colorValuePath","palette","saturatedColor","rgbValue","templateElement","labelEle","templateSize","templateLocation","textValue","ExportUtils","control","print","printWindow","open","outerHeight","outerWidth","moveTo","resizeTo","screen","availWidth","availHeight","argsData","htmlContent","getHTMLContent","div","cloneNode","Element","export","fileName","orientation","_this","attrs","availableSize","isDownload","Browser","userAgent","PdfPageOrientation","Landscape","svgData","outerHTML","URL","createObjectURL","Blob","XMLSerializer","serializeToString","triggerDownload","image_1","Image","ctx_1","getContext","onload","drawImage","revokeObjectURL","document_1","PdfDocument","imageString","toDataURL","pageSettings","pages","add","graphics","PdfBitmap","save","destroy","src","download","toLocaleLowerCase","dispatchEvent","MouseEvent","view","bubbles","cancelable","Theme","mapsTitleFont","TreeMap","preRender","initPrivateVariable","unWireEVents","createSvg","wireEVents","setCulture","render","createSecondaryElement","addTabIndex","renderBorder","renderTitle","titleSettings","processDataManager","dataModule","queryModule","ajaxModule","localAjax","dataSource","DataManager","query","Query","executeQuery","then","renderTreeMapElements","Ajax","onSuccess","args","JSON","parse","send","processingData","visible","renderLegend","elementChange","removeChild","firstChild","hasChildNodes","parentNode","containerWidth","containerHeight","childElementCount","secondaryElement","legendGroup","insertBefore","borderElement","background","borderRect","drawRectangle","title","bounds","groupEle","margin","right","trimmedTitle","elementSize","location_1","titleBounds","description","subtitleSettings","bottom","map","checkIsHierarchicalData","data_1","currentData","dataIndex","levelOrderName","weight","hierarchyData","processHierarchicalData","processFlatJsonData","reOrderLevelData","findTotalWeight","childData","levelIndex","childItemLevel","childLevel","mainData_1","l","orderNames","level","childName","name_1","childGroupPath_1","start","currentName","currentPath","prevPath","previousData","groupObj","this_1","parseFloat","EventHandler","clickOnTreeMap","doubleClickOnTreeMap","rightClickOnTreeMap","touchStartEvent","mouseDownOnTreeMap","touchMoveEvent","mouseMoveOnTreeMap","touchEndEvent","mouseEndOnTreeMap","mouseLeaveOnTreeMap","removeEventListener","resizeOnTreeMap","addEventListener","bind","Internationalization","previousSize","currentSize","clearTimeout","contains","setTimeout","refreshing","itemIndex","targetId","clickArgs","mouseEvent","preventDefault","doubleTapTimer1","end","Date","getMilliseconds","doubleClick","doubleClickArgs","rightClickArgs","mouseDown","notify","moveArgs","drillMouseMove","cursor","calculateSelectedTextLevels","labelText","drillLevel","levelText","_a","currentLevelLabel","calculatePreviousLevelChildItems","drillLevelValues","directLevel","levelItems","text1","drillTextLevel","h","compareSelectedLabelWithDrillDownItems","drillLevelChild","newDrillItem","startEvent","endEvent","targetEle","layoutID","templateID","drillLength","rightClick","which","textContent","widthIncrement","heightIncrement","drilledLegendItems","treeMapTooltipModule","removeTooltip","removeInteractivePointer","treeMapHighlightModule","shapeHighlightCollection","highLightId","requiredModules","modules","tooltipSettings","member","highlightSettings","enable","selectionSettings","onPropertyChanged","newProp","oldProp","getModuleName","getPersistData","Event","NotifyPropertyChanges","Component","TreeMapLegend","page","legendBorderRect","currentPage","textMaxWidth","legendInteractiveGradient","legendItemRect","legendRenderingCollections","legendNames","totalPages","gradientCount","defsElement","createDefs","_changePosition","calculateLegendBounds","drawLegend","legend","findColorMappingLegendItems","findPaletteLegendItems","legendTitle","titleTextStyle","titleStyle","legendMode","textX","textY","shapeLocation","orientation_1","legendWidth","legendHeight","legendTitleSize","startX_1","startY_1","shapePadding","legendItem","Page","legendTextSize","maxSize","prvePositionX","nextPositionY","getPageChanged","prevPositionY","nextPositionX","DisplayText","Shape","Text","Fill","Data","legendObj","legendRect","rectWidth_1","rectHeight_1","itemTextStyle_1","legendLength_1","placement","itemStartX","itemStartY","labelAction","labelDisplayMode","maxTextHeight","maxTextWidth","legendText","itemTextSize","textWidth","textHeight","calculateLegendItems","legendFillColor","legendName","showLegendPath","valuePath","removeDuplicateLegend","removeDuplicates","legendFill","legendData","itemArea","isAddData","gradientElement","x2","y2","actualValue","isDuplicate","isRange","outfill","labelLegend","otherIndex","colorMapProcess","isDesaturation","legendIndex","outOfRangeLegend","colorMapping_1","showLegend","isAddNewLegendData","colors","gradient","q","stop1Color","colorStop","stop2Color","drawGradient","legendGradientColor","legendLinearGradient","newDataProcess","itemValue","process","textFont","renderLegendBorder","renderLegendTitle","drawLegendItem","itemId","textId","rectOptions","shapeBorder","translate","defaultLegendRtlLocation","spacing","legendRtlLocation","shapeSize","isLineShape","strokeColor","strokeWidth","shapeId","imageUrl","renderOptions_1","pagingGroup","pagingText","pagingFont","pagingTextSize","leftPageX","rightPageX","locY","pageTextX","leftPageElement","rightPageElement","rightPath","leftPath","leftPageOptions","leftRectPageOptions","wireEvents","rightPageOptions","rightRectPageOptions","pageTextOptions","legendBorder","pointerEvents","getLegendAlignment","trimTitle","renderInteractivePointer","interactiveId","elementFromPoint","changedTouches","clientX","clientY","targetItem","svgRect","rect_1","getAttribute","drawInteractivePointer","locX","invertedPointer","areaX","areaY","totalHeight","mouseUpHandler","changeNextPage","isDestroyed","on","off","xmlns","defElement","linerGradientEle","createElementNS","offsetColor","stopEle","TreeMapHighlight","shapeTarget","legendHighlightCollection","currentElement","mouseMove","processHighlight","treeMapElement","orders","highlight","highLightElements","selectionModule","treeMapSelectionModule","selectionId","selectionElements","legendSelectId","shapeSelectId","length_2","nodeEle","Elements","legendSelect","TreeMapSelection","shapeSelectionCollection","legendSelectionCollection","shapeSelect","selection","highlightModule","length_3","length_4","targetEle_1","TreeMapTooltip","tooltipId","renderTooltip","touchArg","tootipArgs","isTouch","pointerType","tooltipEle","markerFill","toolTipData","tooltipContent","svgTooltip","Tooltip","header","content","shapes","areaBounds","appendTo","index.TreeMap","Inject","index.TreeMapTooltip","index.TreeMapLegend","index.TreeMapHighlight","index.TreeMapSelection"],"mappings":"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W,cAAW,IACjC4J,IACIa,WAAS,uBACVyP,EAAQla,UAAW,sBAAmB,IACzC4J,IACIa,YAAS,IACVyP,EAAQla,UAAW,sBAAmB,IACzC4J,IACIa,YAAS,IACVyP,EAAQla,UAAW,uBAAoB,IAC1C4J,IACIa,WAAS,QACVyP,EAAQla,UAAW,0BAAuB,IAC7C4J,IACIa,YAAS,IACVyP,EAAQla,UAAW,oBAAiB,IACvC4J,IACImB,aAAYI,KACb+O,EAAQla,UAAW,uBAAoB,IAC1C4J,IACImB,aAAYK,KACb8O,EAAQla,UAAW,uBAAoB,IAC1C4J,IACIyB,gBAAeI,KAChByO,EAAQla,UAAW,aAAU,IAChC4J,IACImB,aAAYS,KACb0O,EAAQla,UAAW,wBAAqB,IAC3C4J,IACImB,aAAYQ,KACb2O,EAAQla,UAAW,wBAAqB,IAC3C4J,IACImB,aAAYO,KACb4O,EAAQla,UAAW,sBAAmB,IACzC4J,IACImB,aAAYG,KACbgP,EAAQla,UAAW,qBAAkB,IACxC4J,IACIa,YAAS,IACVyP,EAAQla,UAAW,2BAAwB,IAC9C4J,IACIa,WAAS,OACVyP,EAAQla,UAAW,kBAAe,IACrC4J,IACIa,WAAS,IACVyP,EAAQla,UAAW,eAAY,IAClC4J,IACIa,WAAS,OACVyP,EAAQla,UAAW,aAAU,IAChC4J,IACIub,WACDjL,EAAQla,UAAW,WAAQ,IAC9B4J,IACIub,WACDjL,EAAQla,UAAW,kBAAe,IACrC4J,IACIub,WACDjL,EAAQla,UAAW,aAAU,IAChC4J,IACIub,WACDjL,EAAQla,UAAW,oBAAiB,IACvC4J,IACIub,WACDjL,EAAQla,UAAW,iBAAc,IACpC4J,IACIub,WACDjL,EAAQla,UAAW,eAAY,IAClC4J,IACIub,WACDjL,EAAQla,UAAW,mBAAgB,IACtC4J,IACIub,WACDjL,EAAQla,UAAW,oBAAiB,IACvC4J,IACIub,WACDjL,EAAQla,UAAW,uBAAoB,IAC1C4J,IACIub,WACDjL,EAAQla,UAAW,gBAAa,IACnC4J,IACIub,WACDjL,EAAQla,UAAW,eAAY,IAClC4J,IACIub,WACDjL,EAAQla,UAAW,YAAS,IAC/B4J,IACIub,WACDjL,EAAQla,UAAW,kBAAe,IACrC4J,IACIub,WACDjL,EAAQla,UAAW,iBAAc,IACpC4J,IACIub,WACDjL,EAAQla,UAAW,gBAAa,IACnC4J,IACIub,WACDjL,EAAQla,UAAW,aAAU,IAChC4J,IACIub,WACDjL,EAAQla,UAAW,0BAAuB,IAC7C4J,IACIub,WACDjL,EAAQla,UAAW,sBAAmB,IACzCka,EAAUtQ,IACNwb,yBACDlL,IAELmL,aCz/BEC,GAA+B,WAC/B,QAASA,GAAc7qB,GACnBgP,KAAK8b,KAAO,EACZ9b,KAAK+b,iBAAmB,GAAI9Z,IAAK,EAAG,EAAG,EAAG,GAC1CjC,KAAKgc,YAAc,EACnBhc,KAAKsa,gBAAkB,EACvBta,KAAKqa,eAAiB,EACtBra,KAAKic,aAAe,EACpBjc,KAAKkc,6BACLlc,KAAKmc,eAAiB,GAAIla,IAAK,EAAG,EAAG,EAAG,GACxCjC,KAAKhP,QAAUA,EACfgP,KAAKkX,mBA26BT,MAt6BA2E,GAActlB,UAAUmc,aAAe,WACnC1S,KAAKoc,8BACLpc,KAAKpC,qBACLoC,KAAKqc,eACLrc,KAAKsc,cACLtc,KAAKuc,cAAgB,EACrBvc,KAAKqa,eAAiB,EACtBra,KAAKsa,gBAAkB,EACvBta,KAAKwc,YAAcxc,KAAKhP,QAAQzC,SAASkuB,aACzCzc,KAAKhP,QAAQ4Z,UAAUve,YAAY2T,KAAKwc,YACxC,IAAIlU,EACJA,IACI+B,QAAQ,EAAOlZ,KLoDE,kBKpDqBH,QAASgP,KAAKhP,QAAS0rB,gBAAiB1c,KAAKhP,QAAQuS,eAAe/W,SAC1GA,SAAUwT,KAAKhP,QAAQuS,eAAe/W,UAE1CwT,KAAKhP,QAAQuZ,QLiDQ,kBKjDiBjC,GACjCA,EAAU+B,QAAU/B,EAAUoU,kBAAoB1c,KAAKhP,QAAQuS,eAAe/W,WAC/EwT,KAAKhP,QAAQuS,eAAe/W,SAAW8b,EAAUoU,iBAErD1c,KAAK2c,wBACD3c,KAAKpC,kBAAkBjQ,OAAS,GAChCqS,KAAK4c,cAKbf,EAActlB,UAAUomB,sBAAwB,WAC5C,GAAI9O,GAAQ7N,KACRhP,EAAUgP,KAAKhP,QACf6rB,EAAS7rB,EAAQuS,cAMrB,IALAvD,KAAK8c,4BAA4B9rB,EAAQgS,aAAa,KACjDhD,KAAKhP,QAAQgb,QAAQre,OAAS,IAAMmC,oBAAkBkQ,KAAKhP,QAAQ+a,kBAC/B,IAAlC/L,KAAKpC,kBAAkBjQ,QAC1BqS,KAAK+c,uBAAuB/c,KAAKhP,QAAQgS,aAAa,GAAI,UAE1DhD,KAAKpC,kBAAkBjQ,OAAS,EAAG,CACnC,GAEInB,GAAWqwB,EAAOrwB,SAClBwwB,EAAcH,EAAOnJ,MAAM7nB,KAC3BoxB,EAAiBJ,EAAOK,WACxBC,EAAaN,EAAO3qB,KACpB4J,EAAS,EACTC,EAAS,EACTqhB,EAAQ,EACRC,EAAQ,EACRxhB,EAAcghB,EAAOhhB,YACrBD,EAAaihB,EAAOjhB,WACpB0hB,KACAzS,KACA0S,EAAwC,SAAvBV,EAAOjP,YAAyC,QAAbphB,GAAmC,WAAbA,GACzD,SAAbA,GAAuBwE,EAAQ+c,cAActgB,OAASuD,EAAQ+c,cAAc3f,OAC9E,aAAe,WAAcyuB,EAAOjP,YAItC4P,EAAeX,EAAOpvB,MAAME,OAAS,EAAMkvB,EAAOpvB,MAAM/B,QAAQ,MAAQ,EAAMsF,EAAQ+c,cAActgB,MAAQ,IAC1G2oB,WAAWyG,EAAOpvB,OAAS2oB,WAAWyG,EAAOpvB,OAAS,KACxDgwB,EAAgBZ,EAAOzuB,OAAOT,OAAS,EAAMkvB,EAAOzuB,OAAO1C,QAAQ,MAAQ,EAC1EsF,EAAQ+c,cAAc3f,OAAS,IAAOgoB,WAAWyG,EAAOzuB,QAAUgoB,WAAWyG,EAAOzuB,QAAU,IACnG6uB,GAAepwB,WAAamE,EAAQiZ,WAAWpd,YAAcowB,EAAepwB,WAC5EowB,EAAevwB,KAAOsE,EAAQiZ,WAAW3K,gBAAkB2d,EAAevwB,IAC1E,IAAIgxB,GAAkB9xB,EAAYoxB,EAAaC,GAC3CU,EAAW,EACXC,EAAW,EACXC,EAAehB,EAAOgB,YAGNhB,GAAOjU,UACR5I,KAAKpC,kBAAkBjQ,MAG1C,IAFAkvB,EAAOjU,UAAUlc,KAAOsE,EAAQiZ,WAAW3K,gBAAkBud,EAAOjU,UAAUlc,KAC9EmwB,EAAOjU,UAAU/b,WAAamE,EAAQiZ,WAAWpd,YAAcgwB,EAAOjU,UAAU/b,WAC7D,YAAfswB,EAA0B,CAC1BK,EAAe1tB,oBAAkB0tB,GAAgBxsB,EAAQ8C,SAASrG,MAAQ+vB,EAC1EC,EAAgB3tB,oBAAkB2tB,GAAiBzsB,EAAQ8C,SAAS1F,OAASqvB,CAE7E,KAAK,GADDprB,GAAI,EACC3E,EAAI,EAAGA,EAAIsS,KAAKpC,kBAAkBjQ,OAAQD,IAAK,CACpD,GAAIowB,GAAa9d,KAAKpC,kBAAkBlQ,EACpCoC,qBAAkBkQ,KAAKsc,WAAWtc,KAAK8b,SACvC9b,KAAKsc,WAAWtc,KAAK8b,OAAUiC,KAAO/d,KAAK8b,KAAO,EAAIla,eAE1D,IAAIoc,GAAiBpyB,EAAYkyB,EAAuB,WAAGjB,EAAOjU,UAElE,IADA5I,KAAKic,aAAeloB,KAAK+S,IAAI9G,KAAKic,aAAc+B,EAAevwB,OACrD,IAANC,EACAiwB,EAAW7hB,EA/BL,GA+B8BF,EAAa,EACjDgiB,EAAW7hB,EA/BN,GA+B4B2hB,EAAgBtvB,QAAUyN,EAAcmiB,EAAe5vB,OAASyN,EAAc,EACxGmiB,EAAe5vB,OAAS,OAE9B,CACD,GAAI6vB,GAAWD,EAAe5vB,OAASyN,EAAemiB,EAAe5vB,OAASyN,CAC9E,IAAsB,eAAlB0hB,EAAgC,CAChC,GAAIW,GAAiBrT,EAAaxY,EAAI,GAAGnE,EAAI2c,EAAaxY,EAAI,GAAG5E,MAtD/D,GAsDsFmO,CACxF,IAAKsiB,EAAgBL,EAAeG,EAAevwB,MAAS+vB,EAAa,CACrE,GAAIW,IAAiBtT,EAAaxY,EAAI,GAAGlE,EAAKmvB,EAAcjrB,EAAI,GAAGlE,EAAK0N,EAAc,EAClFgP,EAAaxY,EAAI,GAAGlE,EAAKmvB,EAAcjrB,EAAI,GAAGlE,EAAK0N,EAAc,GAxCxE,EAyCQsiB,GAAgBF,EAAWR,GAC5Bzd,KAAKoe,iBACL/rB,EAAI,EACJirB,KACAzS,KACA/O,EAAS6hB,EACT5hB,EAAS6hB,IAGT9hB,EAAUwhB,EAAc,GAAK,EAC7BvhB,EAAUoiB,EAAiBF,EAAU,OAIzCniB,GAAUoiB,EAAiBtiB,EAAa,EACxCG,EAAUuhB,EAAcjrB,EAAI,GAAIlE,MAGnC,CACD,GAAIkwB,GAAgBxT,EAAaxY,EAAI,GAAGlE,EAAImvB,EAAcjrB,EAAI,GAAGlE,EAAK0N,EAAc,EAChFgP,EAAaxY,EAAI,GAAGlE,EAAImvB,EAAcjrB,EAAI,GAAGlE,EAAK0N,EAAc,CACpE,IAAKwiB,EA9DJ,GA8DiCJ,EAAWR,EAAc,CACvD,GAAIa,GAAiBzT,EAAaxY,EAAI,GAAGnE,EAAI8R,KAAKic,aAhFpD,EAiFOqC,GAAgBT,EAAeG,EAAevwB,MAAS+vB,GACxD1hB,EAAS6hB,EACT5hB,EAAS6hB,EACT/S,KACAyS,KACAtd,KAAKoe,iBACL/rB,EAAI,IAGJyJ,EAASwiB,EAAiB1iB,EAAa,EACvCG,EAAUuhB,EAAc,GAAK,OAIjCxhB,GAASwhB,EAAcjrB,EAAI,GAAGnE,EAC9B6N,EAASsiB,EA/EZ,GA+E0CxiB,EAAc,GAIjEuhB,EAAQthB,EAAUF,EAAa,EAAKiiB,EACpCR,EAAQthB,EAAUiiB,EAAe5vB,OAAS,EAC1CkvB,EAAclrB,MAAOlE,EAAG4N,EAAQ3N,EAAG4N,IACnC8O,EAAazY,MAAOlE,EAAGkvB,EAAOjvB,EAAGkvB,EAAO5vB,MAAOuwB,EAAevwB,MAAOW,OAAS4vB,EAAe5vB,OAAS,IACtG4R,KAAKsc,WAAWtc,KAAK8b,MAAkB,WAAE1pB,MACrCmsB,YAAaT,EAAuB,WAAG3qB,QAAS2qB,EAA4B,gBAC5EU,OAAStwB,EAAG4N,EAAQ3N,EAAG4N,GACvB0iB,MAAQvwB,EAAGkvB,EAAOjvB,EAAGkvB,GACrBqB,KAAMZ,EAAuB,WAC7Ba,KAAMb,EAAuB,WAC7B7b,MACI/T,EAAGovB,EAAcjrB,GAAGnE,EAAK0N,EAAa,EACtCzN,EAAImvB,EAAcjrB,GAAGlE,EAAK0N,EAAc,EAAOwhB,EAAQW,EAAe5vB,OACjEkvB,EAAcjrB,GAAGlE,EAAK0N,EAAc,EAAOwhB,EAAQW,EAAe5vB,OACvEX,MAAOsG,KAAKC,IAAKspB,EAAcjrB,GAAGnE,EAAK0N,EAAa,GAAOwhB,EAAQY,EAAevwB,QAClFW,OAAUyN,EAAcmiB,EAAe5vB,OAAUyN,EAAcmiB,EAAe5vB,UAGtFiE,IAEJ,GAAI0K,GAAaiD,KAAKsc,WAAW,GAAe,UAChDvf,GAAWiI,QAAQ,SAAU4Z,EAAWnhB,GACpC,GAAIohB,GAAa,GAAI5c,IAAK2c,EAAgB,KAAK,EAAGA,EAAgB,KAAK,EAAGA,EAAgB,KAAS,MAAGA,EAAgB,KAAU,OAClH,KAAVnhB,IACAkgB,EAAWkB,EAAW3wB,EACtB0vB,EAAWiB,EAAW1wB,GAE1B0f,EAAMwM,eAAiBtmB,KAAK+S,IAAI+G,EAAMwM,eAAgBtmB,KAAKC,IAAI2pB,GAAYkB,EAAW3wB,EAAI2wB,EAAWpxB,SACrGogB,EAAMyM,gBAAkBvmB,KAAK+S,IAAI+G,EAAMyM,gBAAiBvmB,KAAKC,IAAI4pB,GAAYiB,EAAW1wB,EAAI0wB,EAAWzwB,YAE3GovB,EAAgBxd,KAAKqa,eAAiBmD,EAAexd,KAAKqa,eAAiBmD,EAC3EC,EAAiBzd,KAAKsa,gBAAkBmD,EAAgBzd,KAAKsa,gBAAkBmD,EAC/Ezd,KAAKmc,gBACDjuB,EAAG6O,EAAW,GAAS,KAAK,EAAG5O,EAAG4O,EAAW,GAAS,KAAK,EAC3DtP,MAAO+vB,EAAapvB,OAAQqvB,OAG/B,CACD,GACIqB,GACAC,EAFAC,EAAkBnC,EAAOjU,UAGzBqW,EAAiBjf,KAAKpC,kBAAkBjQ,MAC5CmxB,GAAiC,eAAlBvB,EAAmCztB,oBAAkB0tB,GAAiBxsB,EAAQ8C,SAASrG,MAAQwxB,EACzGzB,EAAcyB,EAAmBnvB,oBAAkB0tB,GAhJ1C,GAgJwEA,EACtFuB,EAAkC,eAAlBxB,EAAmCztB,oBAAkB2tB,GAjJvD,GAiJsFA,EAC/F3tB,oBAAkB2tB,GAAkBzsB,EAAQ8C,SAAS1F,OAAS6wB,EAAmBxB,EAAewB,EACrGtB,EAAW,EACXC,EAAWF,EAAgBtvB,OAjIjB,EAyIV,KAAK,GAND8wB,GAAYrC,EAAO3S,cACnBiV,EAAa,EACbC,EAAa,EACbC,EAAcxC,EAAOyC,iBACrBC,EAAgB,EAChBC,EAAe,EACV9xB,EAAI,EAAGA,EAAIsS,KAAKpC,kBAAkBjQ,OAAQD,IAAK,CACpDiwB,EAA8B,eAAlBJ,EAAmCI,EAAWmB,EAAenB,EACzEC,EAA8B,eAAlBL,EAAkCK,EAAYA,EAAWmB,CACrE,IAAIU,GAAazf,KAAKpC,kBAAkBlQ,GAAe,WACnDgyB,EAAe,GAAIvyB,IAAK,EAAG,EACX,UAAhBkyB,EACAK,EAAe9zB,EAAY6zB,EAAYT,GAElB,SAAhBK,EAELK,EAAe9zB,EADf6zB,EAAanyB,EAA4B,eAAlBiwB,EAAiCuB,EAAcC,EAAeU,EAAYT,GAC1DA,GAGvCS,EAAa,GAEjBF,EAAgBxrB,KAAK+S,IAAIyY,EAAeG,EAAatxB,QACrDoxB,EAAezrB,KAAK+S,IAAI0Y,EAAcE,EAAajyB,OAC/CiyB,EAAajyB,MAAQ,GAAKiyB,EAAatxB,OAAS,IAC1B,eAAlBmvB,GACAH,EAAQO,EAAYmB,EAAc,EAClCzB,EAAuB,UAAd6B,EAA0BtB,EAAWmB,EAAgBW,EAAatxB,OAAS,EA3B5E,GA4BHwvB,EA5BG,KA+BRR,EAAuB,UAAd8B,EAAyBvB,EAAY+B,EAAajyB,MAAQ,EA/B3D,GAgCDkwB,EAAWmB,EAAcY,EAAajyB,MAAQ,EAhC7C,GAiCR4vB,EAAQO,EAAYmB,EAAe,EAAMW,EAAatxB,OAAS,IAG7D,IAANV,IACAyxB,EAAgC,eAAlB5B,EAAkCI,EAA0B,UAAduB,EACxD9B,EAASsC,EAAajyB,MAAQ,EAAKkwB,EACvCyB,EAAgC,eAAlB7B,EAAiD,UAAd2B,EAAyBtB,EACtEP,EAASqC,EAAatxB,OAAS,EAAKwvB,GAExClwB,IAAMuxB,EAAiB,IACvBzB,EAAiC,eAAlBD,EAAkCxpB,KAAKC,IAAK2pB,EAAWmB,EAAeK,GAChFL,EAAcU,EA5CP,GA6CZ/B,EAAkC,eAAlBF,EAAmCwB,EAAgBQ,EAAgB,EA7CvE,GA8CRxrB,KAAKC,IAAK4pB,EAAWmB,EAAgBK,IAE7Cpf,KAAKoc,2BAA2BhqB,MAC5BxC,KAAMoQ,KAAKpC,kBAAkBlQ,GAAe,WAAGQ,EAAGyvB,EAAUxvB,EAAGyvB,EAC/DnwB,MAAOqxB,EAAa1wB,OAAQ2wB,EAAc5rB,QAAS6M,KAAKpC,kBAAkBlQ,GAAoB,gBAC9F7B,KAAM4zB,EAAYrC,MAAOA,EAAOC,MAAOA,EACvCsC,UAAWD,EAAajyB,MAAOmyB,WAAYF,EAAatxB,OACxDuD,KAAMqO,KAAKpC,kBAAkBlQ,GAAe,aAGpDsS,KAAKmc,gBAAmBjuB,EAAGixB,EAAYhxB,EAAGixB,EAAY3xB,MAAO+vB,EAAapvB,OAAQqvB,MAI9F5B,EAActlB,UAAU6nB,eAAiB,WACrCpe,KAAK8b,OACDhsB,oBAAkBkQ,KAAKsc,WAAWtc,KAAK8b,SACvC9b,KAAKsc,WAAWtc,KAAK8b,OAAUiC,KAAO/d,KAAK8b,KAAO,EAAIla,iBAG9Dia,EAActlB,UAAUumB,4BAA8B,SAAUnrB,GAC5D,GAAIoS,GAAQrS,EAAaC,GAAc,MACvC,IAAIoS,GAASA,EAAMpW,OAAS,IACxBqS,KAAK6f,qBAAqB9b,GACtB/D,KAAKhP,QAAQM,OAAO3D,OAAS,GAC7B,IAAK,GAAID,GAAI,EAAGA,EAAIqW,EAAMpW,OAAQD,IAC9BsS,KAAK8c,4BAA4B/Y,EAAMrW,KAKvDmuB,EAActlB,UAAUwmB,uBAAyB,SAAUprB,EAAM1D,GAC7D,GAAI8V,GACA+b,CACJ,KAAKhwB,oBAAkBkQ,KAAKhP,QAAQoS,eACS,IAArCpD,KAAKhP,QAAQoS,aAAazV,SAAiBmC,oBAAkBkQ,KAAKhP,QAAQiS,iBAAiBE,YACxFrT,oBAAkBkQ,KAAKhP,QAAQupB,oBAElC,IAAK,GADDtoB,GAAQP,EAAaC,GAAc,OAC9BwL,EAAI,EAAGA,EAAIlL,EAAMtE,OAAQwP,IAC9B,GAAIlL,EAAMkL,GAAS,OAAM6C,KAAKhP,QAAQiS,iBAAiBE,UAAW,CAC9DlR,EAAMkL,GAAc,WAAKlL,EAAMkL,GAAc,UAC7CxL,EAAOM,EAAMkL,GACb6C,KAAKhP,QAAQwS,aAAexD,KAAKhP,QAAQiS,iBAAiBC,WAC1D4c,EAAkB9f,KAAKhP,QAAQgb,QAAQre,OAAS,EAAIqS,KAAKhP,QAAQgb,QAAQ7O,EAAI6C,KAAKhP,QAAQgb,QAAQre,QAC9FsE,EAAMkL,GAAS,KAAE6C,KAAKhP,QAAQ+a,eAClC,OAKhB,GAAI/L,KAAKhP,QAAQiD,kBAAoBnE,oBAAkBkQ,KAAKhP,QAAQupB,oBAAqB,CACrF,GAAIlnB,GAAe2M,KAAKhP,QAAQupB,kBAChCuF,GAAkBzsB,EAAmB,KAAW,QAAQ,KAEpD0Q,EADA1Q,EAAmB,KAAa,UACxB3B,EAAa2B,EAAmB,MAAW,OAI3C3B,EADY2B,EAAmB,KAAU,QACL,WAIhD0Q,GAAQrS,EAAaC,GAAc,MAEvC,IACIouB,EACJ,IAAIhc,GAASA,EAAMpW,OAAS,EAAG,CAC3B,IAAK,GAAID,GAAI,EAAGA,EAAIqW,EAAMpW,OAAQD,KAC1BoC,oBAAkBiU,EAAMrW,GAAS,KAAEsS,KAAKhP,QAAQuS,eAAeyc,kBAC/Djc,EAAMrW,GAAS,KAAEsS,KAAKhP,QAAQuS,eAAeyc,mBAC7CD,EAAahc,EAAMrW,GAAS,KAAEsS,KAAKhP,QAAQuS,eAAe0c,WACtDlc,EAAMrW,GAAS,KAAEsS,KAAKhP,QAAQuS,eAAe0c,WAAalc,EAAMrW,GAAS,OAC/DsS,KAAKhP,QAAQuS,eAAe2c,uBACtClgB,KAAKmgB,iBAAiBngB,KAAKpC,kBAAmBmiB,IAE9C/f,KAAKpC,kBAAkBxL,MACnB2tB,WAAYA,EACZK,WAAYpgB,KAAKhP,QAAQgb,QAAQre,OAAS,EAAKmC,oBAAkBkQ,KAAKhP,QAAQwS,cACtDxD,KAAKhP,QAAQgb,QAAQte,EAAIsS,KAAKhP,QAAQgb,QAAQre,QAAhEmyB,EACF/b,EAAMrW,GAAS,KAAEsS,KAAKhP,QAAQ+a,gBAClCsU,cACAC,SAAUvc,EAAMrW,GAAW,SAM3C,IADAsS,KAAKpC,kBAAkBsH,KAAK1L,GACxBwG,KAAKhP,QAAQgb,QAAQre,OAAS,EAC9B,IAAK,GAAI0E,GAAI,EAAGA,EAAI2N,KAAKpC,kBAAkBjQ,OAAQ0E,IAC/C2N,KAAKpC,kBAAkBvL,GAAe,WAAKvC,oBAAkBkQ,KAAKhP,QAAQwS,cAClDxD,KAAKhP,QAAQgb,QAAQ3Z,EAAI2N,KAAKhP,QAAQgb,QAAQre,QAAhEmyB,IAMtBjE,EAActlB,UAAUspB,qBAAuB,SAAUluB,GACrD,GAAI4uB,GACA3wB,EACAiH,EACA4d,EACAgL,EAEAnW,EAEAvT,EACAmN,EAGAlN,EAEAwqB,EACAC,EACAC,EACAC,EACAC,EACAzqB,EACA0qB,EAGAC,EACAC,EACAC,EAlBAC,GAAkB,EAGlB7vB,EAAO4O,KAAKhP,QAAQK,iBACpBC,EAAS0O,KAAKhP,QAAQM,OAEtB9E,EAAWwT,KAAKhP,QAAQuS,eAAe/W,SAQvC00B,GAAiB,EACjBC,EAAc,CAIlBnhB,MAAKohB,iBAAmB,IACxB,KAAK,GAAI1zB,GAAI,EAAGA,EAAIiE,EAAKhE,OAAQD,IAAK,CAClCkC,EAAO,GACPuG,GAAe,EACf0qB,GAAU,EACVK,GAAiB,EACjBzM,EAAc9iB,EAAKjE,GAAS,KAC5BwV,EAAavR,EAAKjE,GAAe,UAGjC,KAAK,GAAIuM,GAAK,EAAGonB,EADjBtrB,GADAuT,EAA6C,IAA/BtJ,KAAKhP,QAAQM,OAAO3D,QAAgBuV,IAAelD,KAAKhP,QAAQM,OAAO3D,QACzDyD,EAAK2E,aAAezE,EAAO4R,GAAYnN,aACnBkE,EAAKonB,EAAe1zB,OAAQsM,IAAM,CAC9E,GAAInE,GAAWurB,EAAepnB,EAuB9B,IAtBAumB,EAAkB,KAClB3pB,EAAaO,OAAOqd,EAAYzU,KAAKhP,QAAQ8a,sBAC7C9V,EAAaye,EAAYzU,KAAKhP,QAAQ6a,qBACtC/V,EAASvK,MAASuE,oBAAkBgG,EAASvK,OAAqCuK,EAASvK,MAArCuK,EAASvK,MAAMkI,YAChE3D,oBAAkBgG,EAASO,QAAUvG,oBAAkBgG,EAASQ,KACjEO,GAAcf,EAASO,MAAQQ,GAAcf,EAASQ,IAAMR,EAASwrB,YACrEL,GAAkB,EAClBJ,GAAU,EACVF,EAAc7qB,EAASO,KAAO,MAAQP,EAASQ,GAC/CmpB,EAAc3vB,oBAAkBgG,EAAStI,OAA0BsI,EAASO,KAAO,MAAQP,EAASQ,GAAlDR,EAAStI,MAC3DoC,EAAOE,oBAAkBgG,EAAShH,OAASc,EAAOkG,EAAShH,MAC3DyxB,EAAYvgB,KAAKuhB,mBAAmBZ,KAE9B7wB,oBAAkBgG,EAASvK,QAAUyK,IAAeF,EAASvK,OAASuK,EAASwrB,aACrFL,GAAkB,EAClB9qB,GAAe,EACfwqB,EAAc7qB,EAASvK,MAAMkI,WAC7BgsB,EAAc3vB,oBAAkBgG,EAAStI,OAA0BsI,EAASvK,MAAMkI,WAAhCqC,EAAStI,MAC3DoC,EAAOE,oBAAkBgG,EAAShH,OAASc,EACY,mBAAnDkC,OAAOyE,UAAU9C,SAAS+C,KAAKV,EAAShH,OAA8BgH,EAAShH,MAAM,GAAKgH,EAAShH,MACvGyxB,EAAYvgB,KAAKuhB,mBAAmBZ,IAEpCM,GAAmBnxB,oBAAkBgG,EAASvK,QAAUuK,EAASa,YAAcb,EAASY,YAChD,gBAArCsJ,KAAKhP,QAAQuS,eAAerR,KAAwB,CACvD,GAAIsvB,MACAC,MAAW,EAEf,IADAP,GAAiB,EACsC,mBAAnDpvB,OAAOyE,UAAU9C,SAAS+C,KAAKV,EAAShH,OACxC,IAAK,GAAI4yB,GAAI,EAAGA,EAAI5rB,EAAShH,MAAMnB,OAAQ+zB,IAAK,CAGxCC,GAAeC,WADDF,GADA,KAAO5rB,EAAShH,MAAMnB,OAAS,IACb,KACM8F,WAAY3E,MAAOgH,EAAShH,MAAM4yB,GAC5EF,GAAOpvB,KAAKuvB,OAGf,CACD,GAAIA,IAAeC,UAAW,KAAM9yB,MAAOc,GACvCiyB,GAAeD,UAAW,OAAQ9yB,MAAOc,EAC7C4xB,GAAOpvB,KAAKuvB,GACZH,EAAOpvB,KAAKyvB,GAEhBpB,EAAkB,QAAbj0B,GAAmC,WAAbA,EAAwB,OAAS,KAC5Dk0B,EAAkB,QAAbl0B,GAAmC,WAAbA,EAAwB,KAAO,OAC1Di1B,GACIt1B,GAAI,cAAgB+W,EAAa,eAAiBlD,KAAKuc,cAAe/U,GAAI,KAAMD,GAAI,KAAMkZ,GAAIA,EAAIC,GAAIA,GAE1GF,EAAkBxgB,KAAKhP,QAAQzC,SAASuzB,aAAa,iBAAkBL,EAAUD,GAAQ5nB,WAAW,GAC7C,mBAAnD9H,OAAOyE,UAAU9C,SAAS+C,KAAKV,EAAShH,SACxC0xB,EAAgB5mB,WAAW,GAAGE,aAAa,eAAgBhE,EAASY,WAAWjD,YAC/E+sB,EAAgB5mB,WAAW,GAAGE,aAAa,eAAgBhE,EAASa,WAAWlD,aAEnFuM,KAAKwc,YAAYnwB,YAAYm0B,GAC7BxgB,KAAKuc,gBAETqE,IAAc5gB,KAAKhP,QAAQuS,eAAe2c,uBACtClgB,KAAKmgB,iBAAiBngB,KAAKpC,kBAAmB6hB,GAC9Cc,GAAaA,EAAmB,SAAKU,IAAoBL,GACzDK,GAAkB,EAClBrxB,EAA4D,mBAAnDkC,OAAOyE,UAAU9C,SAAS+C,KAAKV,EAAShH,QAAiCgB,oBAAkB0wB,IAC7F1wB,oBAAkBgG,EAASvK,OAASyU,KAAK+hB,oBAAoBjsB,EAAUqrB,GAAevxB,EAC7FoQ,KAAKpC,kBAAkBxL,MACnBuuB,YAAaA,EACbZ,WAAYN,EAAYW,WAAYxwB,EAAMywB,cAC1CG,gBAAkB1wB,oBAAkB0wB,GAAqC1wB,oBAAkBgG,EAASvK,OAC9FyU,KAAKgiB,qBAAuB,KADqBxB,EACfrvB,KAAMQ,EAAKjE,GAAS,KAC5D+B,QAASuQ,KAAKhP,QAAQuS,eAAe9T,QAAS2N,YAAa4C,KAAKhP,QAAQuS,eAAepB,OAAOrT,MAC9FuO,YAAa2C,KAAKhP,QAAQuS,eAAepB,OAAO1U,QAEpDuS,KAAKpC,kBAAkBoC,KAAKpC,kBAAkBjQ,OAAS,GAAe,WAAEyE,KAAKT,EAAKjE,IAClFyzB,KAEKF,IAAoBL,IACzBK,GAAkB,EAClBjhB,KAAKpC,kBAAkB2iB,EAAiB,OAAe,WAAEnuB,KAAKT,EAAKjE,KAElEmzB,GAAYK,GAAmB/qB,GAC5BrG,oBAAkBgG,EAASO,OAASvG,oBAAkBgG,EAASQ,KAC5DxG,oBAAkBgG,EAASY,aAC9B5G,oBAAkBgG,EAASa,aAAe7G,oBAAkBgG,EAASvK,SACpEuE,oBAAkBgG,EAAShH,SAC5BgyB,EAA+D,mBAAnDhvB,OAAOyE,UAAU9C,SAAS+C,KAAKV,EAAShH,OAC9CgH,EAAShH,MAAM,GAAKgH,EAAShH,MACnCiyB,EAAejxB,oBAAkBgG,EAAStI,OAA0B,SAAjBsI,EAAStI,MACxDsC,oBAAkBkQ,KAAKohB,oBACvBphB,KAAKpC,kBAAkBxL,MACnBuuB,YAAaI,EAAaV,cAC1BN,WAAYgB,EAAaX,WAAYU,IAEzCE,EAAahhB,KAAKpC,kBAAkBjQ,OACpCqS,KAAKohB,iBAAmBphB,KAAKpC,kBAAkBojB,EAAa,GAC5DG,KAEJnhB,KAAKpC,kBAAkBojB,EAAa,GAAe,WAAE5uB,KAAKT,EAAKjE,QAMnFmuB,EAActlB,UAAU4pB,iBAAmB,SAAUliB,EAAkBpS,GAEnE,IAAK,GADD+0B,IAAc,EACTlzB,EAAI,EAAGA,EAAIuQ,EAAiBtQ,OAAQD,IACzC,GAAIuQ,EAAiBvQ,GAAe,aAAM7B,EAAM,CAC5C+0B,GAAc,CACd,OAMR,MAAOA,IAEX/E,EAActlB,UAAUgrB,mBAAqB,SAAU9B,GACnD,GAAIwC,GACAC,CACJ,IAAsC,IAAlCliB,KAAKpC,kBAAkBjQ,OACvBs0B,GAAiB,MAGjB,KAAK,GAAI5vB,GAAI,EAAGA,EAAI2N,KAAKpC,kBAAkBjQ,OAAQ0E,IAAK,CACpD,GAAIotB,IAAezf,KAAKpC,kBAAkBvL,GAAgB,YAAG,CACzD4vB,GAAiB,EACjBC,EAAY7vB,CACZ,OAEKA,IAAM2N,KAAKpC,kBAAkBjQ,OAAS,IAC3Cs0B,GAAiB,GAI7B,OAASE,QAASF,EAAgB12B,MAAO22B,IAM7CrG,EAActlB,UAAUqmB,WAAa,WACjC,GAGIhtB,GAEA4wB,EALAxvB,EAAUgP,KAAKhP,QACf6rB,EAAS7rB,EAAQuS,eACjByN,EAAShgB,EAAQzC,SAIjB6zB,EAAWvF,EAAOjU,SAItB,IAHA5I,KAAKoT,YAAcpC,EAAO9H,aAAc/c,GAAI6E,EAAQmC,QAAQhH,GAAK,kBACjE6T,KAAKqiB,qBACLriB,KAAKsiB,oBACe,YAAhBzF,EAAO3qB,KACP8N,KAAKuiB,eAAeviB,KAAKgc,iBAGzB,KAAK,GAAItuB,GAAI,EAAGA,EAAIsS,KAAKoc,2BAA2BzuB,OAAQD,IAAK,CAC7D,GAAI80B,GAASxxB,EAAQmC,QAAQhH,GAAK,iBAAmBuB,EACjD+0B,EAASzxB,EAAQmC,QAAQhH,GAAK,iBAAmBuB,EAAI,QACrDmP,EAAOmD,KAAKoc,2BAA2B1uB,EAE3CkC,IADA4wB,EAAkB3jB,EAAc,SACP,QAAU2jB,EAAgBr0B,GAAK,IAAM0Q,EAAW,IACzE,IAAI8W,GAAS,GAAI1R,IAAKpF,EAAQ,EAAGA,EAAQ,EAAGA,EAAY,MAAGA,EAAa,QACpEgO,EAAe,GAAIxc,IAASwO,EAAY,MAAGA,EAAY,OACvD6lB,EAAc,GAAIxgB,IAAWsgB,EAAQ5yB,EAAMitB,EAAO8F,YAAa9F,EAAOptB,QAASkkB,EAC/E3T,MAAKhP,QAAQ8Y,YAC2B,SAApC9Y,EAAQuS,eAAe/W,UAA2D,UAApCwE,EAAQuS,eAAe/W,UAC7B,SAApCwE,EAAQuS,eAAe/W,UACpBwT,KAAKhP,QAAQ+c,cAActgB,OAASuS,KAAKhP,QAAQ+c,cAAc3f,QACtEs0B,EAAYv0B,EAAK6R,KAAK4iB,UAAUz0B,EAAI6R,KAAK+b,iBAAiB5tB,EAAI6R,KAAK+b,iBAAiB3tB,QAC7E4R,KAAK4iB,UAAUz0B,EAAIu0B,EAAYt0B,QAAU2F,KAAKC,IAAIgM,KAAK+b,iBAAiB5tB,EAAIu0B,EAAYv0B,GAC/F0c,EAAa1c,EAAK6R,KAAK4iB,UAAUz0B,EAAI6R,KAAK+b,iBAAiB5tB,EAAI6R,KAAK+b,iBAAiB3tB,OAC9E4R,KAAK4iB,YAAgB/lB,EAAiB,WAAI,EAC3C9I,KAAKC,IAAIgM,KAAK+b,iBAAiB5tB,EAAI0c,EAAa1c,KAGtDu0B,EAAYx0B,EAAK8R,KAAK4iB,UAAU10B,EAAI8R,KAAK+b,iBAAiB7tB,EAAI8R,KAAK+b,iBAAiBtuB,OAC7EuS,KAAK4iB,UAAU10B,EAAIw0B,EAAYj1B,OAChCsG,KAAKC,IAAIgM,KAAK+b,iBAAiB7tB,EAAIw0B,EAAYx0B,GACrD2c,EAAa3c,EAAK8R,KAAK4iB,UAAU10B,EAAI8R,KAAK+b,iBAAiB7tB,EAAI8R,KAAK+b,iBAAiBtuB,MAC/EuS,KAAK4iB,UAAU10B,EAAI6F,KAAKC,IAAIgM,KAAK+b,iBAAiB7tB,EAAI2c,EAAa3c,KAIjFU,EADc,GAAI2T,IAAWkgB,EAAQ5X,EAAa3c,EAAG2c,EAAa1c,EAAG,SAAU0O,EAAW,KAAG,GAAI,IAClEulB,EAAUA,EAAStzB,OAASkR,KAAKhP,QAAQiZ,WAAW9K,gBAAiBa,KAAKoT,aACzGpT,KAAKoT,YAAY/mB,YAAY2kB,EAAOyC,cAAciP,MAI9D7G,EAActlB,UAAUssB,yBAA2B,SAAU9lB,EAAY+lB,EAAS9xB,EAAS6rB,GACvF,GAAIS,GAAgBvgB,EAAkB,MAClC8N,EAAe9N,EAAiB,KAEhC/O,EAAWpC,EADEmR,EAAwB,YACF8f,EAAOjU,UAa9C,OAZA0U,GAAcpvB,EAAK8R,KAAK4iB,UAAU10B,EAAI8R,KAAK+b,iBAAiB7tB,EAAI8R,KAAK+b,iBAAiBtuB,OAC/EuS,KAAK4iB,UAAU10B,EAAI40B,GAAW/uB,KAAKC,IAAIgM,KAAK+b,iBAAiB7tB,EAAIovB,EAAcpvB,GACtF2c,EAAa3c,EAAK8R,KAAK4iB,UAAU10B,EAAI8R,KAAK+b,iBAAiB7tB,EAAI8R,KAAK+b,iBAAiBtuB,OAC9EuS,KAAK4iB,UAAU10B,EAAIF,EAASP,MAAQq1B,GAAW/uB,KAAKC,IAAIgM,KAAK+b,iBAAiB7tB,EAAI2c,EAAa3c,IAC9D,SAApC8C,EAAQuS,eAAe/W,UAA2D,UAApCwE,EAAQuS,eAAe/W,UAC7B,SAApCwE,EAAQuS,eAAe/W,UACpBwT,KAAKhP,QAAQ+c,cAActgB,OAASuS,KAAKhP,QAAQ+c,cAAc3f,UACtEkvB,EAAcnvB,EAAK6R,KAAK4iB,UAAUz0B,EAAI6R,KAAK+b,iBAAiB5tB,EAAI6R,KAAK+b,iBAAiB3tB,OAChF4R,KAAK4iB,UAAUz0B,EAAI4F,KAAKC,IAAID,KAAKC,IAAIgM,KAAK+b,iBAAiB5tB,GAAKmvB,EAAcnvB,GAAM0uB,EAAOhhB,YAAc,EAC/GgP,EAAa1c,EAAK6R,KAAK4iB,UAAUz0B,EAAI6R,KAAK+b,iBAAiB5tB,EAAI6R,KAAK+b,iBAAiB3tB,OAC/E4R,KAAK4iB,UAAUz0B,EAAI4F,KAAKC,IAAID,KAAKC,IAAIgM,KAAK+b,iBAAiB5tB,GAAK0c,EAAa1c,KAE9EmvB,cAAeA,EAAezS,aAAcA,IAEzDgR,EAActlB,UAAUgsB,eAAiB,SAAUzG,GAC/C,GAKIiH,GAIAza,EATAtX,EAAUgP,KAAKhP,QAEf6rB,EAAS7rB,EAAQuS,eACjByf,EAAY,GAAI71B,IAAK0vB,EAAOjhB,WAAYihB,EAAOhhB,aAI/CmV,EAAShgB,EAAQzC,SACjBo0B,EAAc9F,EAAO8F,WAEzB,IAAI7G,GAAQ,GAAKA,EAAO9b,KAAKsc,WAAW3uB,OAAQ,CACxC3B,SAASC,eAAe+T,KAAKoT,YAAYjnB,KACzCH,SAASC,eAAe+T,KAAKoT,YAAYjnB,IAAIoI,QAKjD,KAAK,GAHD0uB,GAAgC,mBAAjBpG,EAAO1hB,OAA+C,iBAAjB0hB,EAAO1hB,OAA6C,UAAjB0hB,EAAO1hB,MAC9F+nB,EAAcD,EAAcnzB,oBAAkB+sB,EAAOjtB,MAAQ,UAAYitB,EAAOjtB,KAAO+yB,EAAY7zB,MACnGq0B,EAAcF,GAAqC,IAAtBN,EAAYl1B,MAAe,EAAwBk1B,EAAYl1B,MACvFC,EAAI,EAAGA,EAAIsS,KAAKsc,WAAWR,GAAkB,WAAEnuB,OAAQD,IAAK,CACjE,GAAIqP,GAAaiD,KAAKsc,WAAWR,GAAkB,WAAEpuB,GACjDqQ,EAAgBiT,EAAO9H,aAAc/c,GAAI6E,EAAQmC,QAAQhH,GAAK,iBAAmBuB,IACjF+xB,EAAa1iB,EAAwB,YACrCqmB,EAAUpyB,EAAQmC,QAAQhH,GAAK,uBAAyBuB,EACxD+0B,EAASzxB,EAAQmC,QAAQhH,GAAK,sBAAwBuB,EACtD4vB,EAAgBvgB,EAAkB,MAClC8N,EAAe9N,EAAiB,IAChC/L,GAAQ8Y,YAERwT,GADAyF,EAAoB/iB,KAAK6iB,yBAAyB9lB,EAzBhD,GAyBqE/L,EAAS6rB,IAC/B,cACjDhS,EAAekY,EAAgC,cAEnDza,GACI+B,QAAQ,EAAOlZ,KL7hBF,sBK6hB6BH,QAASA,EAASpB,KAAMmN,EAAiB,KACnF5B,MAAO0hB,EAAO1hB,MAAOkoB,SAAUxG,EAAOwG,UAE1CrjB,KAAKhP,QAAQuZ,QLhiBI,sBKgiByBjC,EAC1C,IAAIgb,GAAkB,GAAIhhB,IAAW8gB,EAAS9a,EAAU1Y,KAAMuzB,EAAaF,EAAclmB,EAAiB,KAAImmB,EAAarG,EAAOptB,QAAS,GAC3IsO,GAAc1R,YAAY6O,EAAWoiB,EAAehV,EAAUnN,MAAO6nB,EAAW1a,EAAU+a,SAAUC,EAAiB7D,IAErH7wB,EADc,GAAI2T,IAAWkgB,EAAQ5X,EAAa3c,EAAG2c,EAAa1c,EAAG,QAASsxB,EAAY,GAAI,IAC/D5C,EAAOjU,UAAWiU,EAAOjU,UAAU9Z,OAASkR,KAAKhP,QAAQiZ,WAAW9K,gBAAiBpB,GACpHiC,KAAKoT,YAAY/mB,YAAY0R,GAEjC,GAAIwlB,OAAc,EAGlB,IAAkB,IAAdvjB,KAAK8b,KAAY,CACjB,GAAI0H,GAAc1H,EAAO,EAAK,IAAM9b,KAAKsc,WAAW3uB,OAChD81B,EAAa5G,EAAOjU,UACpB8a,EAAiB93B,EAAY43B,EAAYC,GACzCE,EAAa3jB,KAAKmc,eAAejuB,EAAI8R,KAAKmc,eAAe1uB,MAASi2B,EAAej2B,SA/C/E,GAiDFm2B,EAAc5jB,KAAKmc,eAAejuB,EAAI8R,KAAKmc,eAAe1uB,MAC1Do2B,EAAQ7jB,KAAKmc,eAAehuB,EAAI6R,KAAKmc,eAAe/tB,WAlDlD,GAmDF01B,EAAYF,EAnDV,GAmDgCF,EAAej2B,MAAQ,GAC7D81B,GAAcvS,EAAO9H,aAAc/c,GAAI6E,EAAQmC,QAAQhH,GAAK,wBAC5D,IAAI43B,GAAkB/S,EAAO9H,aAAc/c,GAAI6E,EAAQmC,QAAQhH,GAAK,8BAChE63B,EAAmBhT,EAAO9H,aAAc/c,GAAI6E,EAAQmC,QAAQhH,GAAK,+BACjE83B,EAAY,MAAQL,EAAa,IAAMC,EAAO,OAASD,EAvDrD,IAuD2E,KAAOC,KACpF,OAASD,EAxDP,IAwD6B,KAAOC,KAAiB,MACvDK,EAAW,MAAQP,EAAY,IAAME,EAAO,OAASF,EAzDnD,IAyDwE,KAAOE,KACjF,OAASF,EA1DP,IA0D4B,KAAOE,KAAiB,MACtDM,EAAkB,GAAI7hB,IAAWtR,EAAQmC,QAAQhH,GAAK,aAAc,UAAW,EAAG,UAAW,EAAG,GAAI+3B,EACxGH,GAAgB13B,YAAY2kB,EAAOxG,SAAS2Z,GAC5C,IAAIC,GAAsB,GAAIliB,IAAWlR,EAAQmC,QAAQhH,GAAK,kBAAmB,iBAAmB,EAAG,GAAI8V,IAAK0hB,IAA0BE,KAAsBp2B,GAAWq1B,IAAc,GACzLiB,GAAgB13B,YAAY2kB,EAAOyC,cAAc2Q,IACjDpkB,KAAKqkB,WAAWN,EAChB,IAAIO,GAAmB,GAAIhiB,IAAWtR,EAAQmC,QAAQhH,GAAK,cAAe,UAAW,EAAG,UAAW,EAAG,GAAI83B,EAC1GD,GAAiB33B,YAAY2kB,EAAOxG,SAAS8Z,GAC7C,IAAIC,GAAuB,GAAIriB,IAAWlR,EAAQmC,QAAQhH,GAAK,mBAAoB,iBAAmB,EAAG,GAAI8V,IAAM2hB,EAlE7G,GAkEmIC,IAlEnI,GAAA,IAkEoK,GAC1KG,GAAiB33B,YAAY2kB,EAAOyC,cAAc8Q,IAClDvkB,KAAKqkB,WAAWL,GAChBT,EAAYl3B,YAAY03B,GACxBR,EAAYl3B,YAAY23B,EACxB,IAAIQ,IACAr4B,GAAM6E,EAAQmC,QAAQhH,GAAK,eAC3B+B,EAAK41B,EACL31B,EAAK01B,EAAQH,EAAet1B,OAAS,EACrCwB,KAAQ,UACRV,YAAa,OACbC,aAAcs0B,EAAW72B,UACzBwC,cAAeq0B,EAAW52B,WAC1BwC,cAAeo0B,EAAW92B,WAC1B2C,cAAe,SACfE,UAAa,GACbC,QAAW,EACXC,oBAAqB,GAEzB6zB,GAAYl3B,YAAY2kB,EAAOtiB,WAAW81B,EAAiBhB,IAC3DxjB,KAAKoT,YAAY/mB,YAAYk3B,MAIzC1H,EAActlB,UAAU8rB,mBAAqB,WACzC,GAAIrxB,GAAUgP,KAAKhP,QACf6rB,EAAS7rB,EAAQuS,eACjByZ,EAAcH,EAAOnJ,MAAM7nB,KAE3B+c,EAAYiU,EAAOK,WAGnBlvB,EAAWpC,EADH0B,EAAU0S,KAAKmc,eAAe1uB,SAAwBuvB,EAAapU,GAC7CA,EAClC5I,MAAK+b,iBAAmB,GAAI9Z,IAAMjC,KAAKmc,eAAejuB,EALxC,GAKuD8R,KAAKmc,eAAehuB,EAL3E,GAKyFH,EAASI,OAAU4R,KAAKmc,wBAAwCnc,KAAKmc,yBAAyCnuB,EAASI,QACzM,gBAAhByuB,EAAO3qB,KAAyB,EAAmB,IAAd8N,KAAK8b,KANjC,GAMyD,GACvE,IAAIttB,GAAgB,GAAI0T,IAAWlR,EAAQmC,QAAQhH,GAAK,iBAAkB0wB,EAAOtJ,WAAYsJ,EAAO1a,OAAQ,EAAGnC,KAAK+b,iBAAkB,IAClI0I,EAAezzB,EAAQzC,SAASklB,cAAcjlB,EAClDi2B,GAAal4B,MAAMm4B,cAAgB,OACnC1kB,KAAKoT,YAAY/mB,YAAYo4B,GAC7BzkB,KAAK2kB,mBAAmB3zB,EAASgP,KAAK+b,iBAAiBtuB,MAAOuS,KAAK+b,iBAAiB3tB,OAAQyuB,GAC5F7c,KAAKoT,YAAYtZ,aAAa,YAAa,eAAiBkG,KAAK4iB,UAAU10B,GAAO8R,KAAK+b,iBAAmB,GAAK,KAC1G/b,KAAK4iB,UAAUz0B,GAAO6R,KAAK+b,iBAAmB,GAAK,MACxD/qB,EAAQ4Z,UAAUve,YAAY2T,KAAKoT,cAEvCyI,EAActlB,UAAU+rB,kBAAoB,WACxC,GAAItxB,GAAUgP,KAAKhP,QACf6rB,EAAS7rB,EAAQuS,eACjBqF,EAAYiU,EAAOK,WACnBF,EAAcH,EAAOnJ,MAAM7nB,KAG3B+4B,EAAYt3B,EAAU0S,KAAKmc,eAAe1uB,SAAwBuvB,EAAapU,GAC/E5a,EAAWpC,EAAYg5B,EAAWhc,EAClCoU,IAEApuB,EADc,GAAI2T,IAAWvR,EAAQmC,QAAQhH,GAAK,eAAiB6T,KAAKmc,iBAAqBnc,KAAKmc,eAAe1uB,MAAQ,EAAIuS,KAAKmc,eAAehuB,EAAKH,EAASI,OAAS,IAAoB,SAAUw2B,EAAW,IAClLhc,EAAWA,EAAU9Z,OAASkR,KAAKhP,QAAQiZ,WAAW/K,iBAAkBc,KAAKoT,cAMpHyI,EAActlB,UAAUsuB,yBAA2B,SAAU5xB,GACzD,GAAIjC,GAAUgP,KAAKhP,QACfqP,EAASpN,EAAEoN,OACXykB,EAAgB9zB,EAAQmC,QAAQhH,GAAK,qBACzCkU,GAAWpN,EAAEhF,KAAKvC,QAAQ,UAAY,EAClCM,SAAS+4B,iBAAiB9xB,EAAE+xB,eAAe,GAAGC,QAAShyB,EAAE+xB,eAAe,GAAGE,SADpC7kB,CAE3C,IAAI8kB,GACAtI,EAAS7rB,EAAQuS,cACrB,IAAIlD,EAAOlU,GAAGT,QAAQ,gBAAkB,GAAKmxB,EAAOpK,SAAWzS,KAAKoc,2BAA2BzuB,OAAS,EAAG,CACvG,GAAI8mB,OAAc,GACdoK,MAAa,GAEbltB,MAAO,GACP/B,MAAO,GACPyS,MAAS,GACT8gB,MAAc,GACdplB,MAAgB,EACpBonB,GAAan0B,EAAQwB,OAAOC,YAAY2jB,WAAW/V,EAAOlU,GAAG+D,MAAM,KAAK,IAExE,KAAK,GADDk1B,GAAUp0B,EAAQ4Z,UAAU/W,wBACvBnG,EAAI,EAAGA,EAAIsS,KAAKpC,kBAAkBjQ,OAAQD,IAAK,CACpD+mB,EAAczU,KAAKpC,kBAAkBlQ,GAErCmxB,GADA9gB,EAAgB/R,SAASC,eAAe+E,EAAQmC,QAAQhH,GAAK,iBAAmBuB,IACrDmG,uBAC3B,IAAIwxB,GAAS,GAAIpjB,IAAKlO,KAAKC,IAAI6qB,EAAW7xB,KAAOo4B,EAAQp4B,MAAO+G,KAAKC,IAAI6qB,EAAW9xB,IAAMq4B,EAAQr4B,KAAM8xB,EAAWpxB,MAAOoxB,EAAWzwB,OAIrI,IAHAwB,EAAOmO,EAAcunB,aAAa,QAClCjjB,EAASwa,EAAO8F,YAAY7zB,MAC5Bq0B,EAActG,EAAO8F,YAAYl1B,OAC5BqC,oBAAkB2kB,EAAwB,YAAI,CAC/C9iB,EAAO8iB,EAAwB,UAC/B,KAAK,GAAIpiB,GAAI,EAAGA,EAAIV,EAAKhE,OAAQ0E,IAC7B,GAAIV,EAAKU,GAAmB,iBAAM8yB,EAA2B,eAAG,CAC5DnlB,KAAKulB,uBAAuB1I,EAAQjtB,EAAMyS,EAAQyiB,EAAe3B,EAAakC,EAC9E,cAOhBrlB,MAAK0a,4BAGbmB,EAActlB,UAAUgvB,uBAAyB,SAAU1I,EAAQjtB,EAAMyS,EAAQlW,EAAIg3B,EAAaxvB,GAC9F,GAAI1C,GACAsX,EACAid,EACA3B,CAeI5yB,GAVU,gBAFsB,SAAvB4rB,EAAOjP,YAA+C,QAApBiP,EAAOrwB,UAA0C,WAApBqwB,EAAOrwB,SACjF,aAAe,WAAaqwB,EAAOjP,aAEhCiP,EAAO4I,gBASD,OAFPD,EAAO7xB,EAAKzF,EAAKyF,EAAKlG,MAAQ,GAER,KADtBo2B,EAAOlwB,EAAKxF,EAAKwF,EAAY,QACM,OAAS6xB,EAbxC,IAawD,KAAO3B,EAd9D,IAeD,OAAS2B,EAdT,IAcyB,KAAO3B,EAf/B,IAegD,MAP9C,OAFP2B,EAAO7xB,EAAKzF,EAAKyF,EAAKlG,MAAQ,GAER,KADtBo2B,EAAOlwB,EAAKxF,GACuB,OAASq3B,EAPxC,IAOwD,KAAO3B,EAR9D,IASD,OAAS2B,EART,IAQyB,KAAO3B,EAT/B,IASgD,MAUpDhH,EAAO4I,gBASD,OAFPD,EAAO7xB,EAAKzF,GAEU,KADtB21B,EAAOlwB,EAAKxF,EAAKwF,EAAKvF,OAAS,GACI,OAASo3B,EA3BxC,IA2BwD,KAAO3B,EA5B9D,IA6BD,OAAS2B,EA5BT,IA4ByB,KAAO3B,EA7B/B,IA6BgD,MAP9C,OAFP2B,EAAO7xB,EAAKzF,EAAKyF,EAAW,OAEN,KADtBkwB,EAAOlwB,EAAKxF,EAAKwF,EAAKvF,OAAS,GACI,OAASo3B,EArBxC,IAqBwD,KAAO3B,EAtB9D,IAuBD,OAAS2B,EAtBT,IAsByB,KAAO3B,EAvB/B,IAuBgD,MAS7Dtb,EAAc,GAAIjG,IAAWnW,EAAIyD,EAAMuzB,EAAa9gB,EAAQ,EAAG,GAAIpR,GACnE+O,KAAKhP,QAAQ4Z,UAAUve,YAAY2T,KAAKhP,QAAQzC,SAASic,SAASjC,KAEtEsT,EAActlB,UAAUouB,mBAAqB,SAAU3zB,EAASvD,EAAOW,EAAQyuB,GAC3E,GAAI3uB,GACAC,EAEA4U,EAEA2iB,GADJ3iB,EAAYO,YAAWtS,EAAQ8C,SAAUiP,GAAW,IAC9B7U,EAClBy3B,EAAQ5iB,EAAU5U,EAClB8Y,EAAalE,EAAU3U,OACvB4Y,EAAYjE,EAAUtV,MACtByL,EAAalI,EAAQ+c,cAActgB,MACnCm4B,EAAc50B,EAAQ+c,cAAc3f,OACpC5B,EAA+B,SAApBqwB,EAAOrwB,SAAuB0M,EAAa0sB,EAAe,QAAU,SAAW/I,EAAOrwB,QACrG,IAAwB,UAApBqwB,EAAOrwB,SACPwT,KAAK4iB,UAAY/F,EAAO/uB,aAEvB,CACD,OAAQtB,GACJ,IAAK,MACL,IAAK,SACDuW,EAAU3U,OAAU6Y,EAAa7Y,EACjCF,EAAKgL,EAAa,EAAMzL,EAAQ,EAChCU,EAAkB,QAAb3B,EAAsBm5B,EAASA,EAAQ5iB,EAAU3U,OAnBpD,GAoBF2U,EAAU5U,EAAkB,QAAb3B,EAAsBm5B,EAAQv3B,EApB3C,GAoB8Du3B,CAChE,MACJ,KAAK,OACL,IAAK,QACD5iB,EAAUtV,MAASuZ,EAAYvZ,EAC/BS,EAAkB,SAAb1B,EAAuBk5B,EAAQA,EAAQ3iB,EAAUtV,MACtDU,EAAKy3B,EAAc,EAAMx3B,EAAS,EAClC2U,EAAU7U,EAAkB,SAAb1B,EAAuBk5B,EAAQj4B,EAAQi4B,EAG9D,OAAQ7I,EAAO9uB,WACX,IAAK,OACgB,QAAbvB,GAAmC,WAAbA,EACtB0B,EAAI6U,EAAU7U,EAGdC,EAAI4U,EAAU5U,CAElB,MACJ,KAAK,MACgB,QAAb3B,GAAmC,WAAbA,EACtB0B,EAAIgL,EAAazL,EAGjBU,EAAIy3B,EAAcx3B,EAI9B4R,KAAKhP,QAAQ+R,UAAYA,EACzB/C,KAAK4iB,UAAY,GAAIv0B,IAASH,EAAGC,KAGzC0tB,EAActlB,UAAUsvB,eAAiB,SAAU5yB,GAC/C+M,KAAK6kB,yBAAyB5xB,GAC9BskB,aAAavX,KAAKuX,cAClBvX,KAAKuX,aAAeE,WAAWzX,KAAK0a,yBAAyBvD,KAAKnX,MAAO,MAK7E6b,EAActlB,UAAUmkB,yBAA2B,WAC3C1uB,SAASC,eAAe+T,KAAKhP,QAAQmC,QAAQhH,GAAK,wBAClDH,SAASC,eAAe+T,KAAKhP,QAAQmC,QAAQhH,GAAK,uBAAuBoI,UAMjFsnB,EAActlB,UAAUuvB,eAAiB,SAAU7yB,GAC/C+M,KAAKgc,YAAe/oB,EAAEoN,OAAOlU,GAAGT,QAAQ,gBAAkB,EAAMsU,KAAKgc,YAAc,EAC9Ehc,KAAKgc,YAAc,EACxBhc,KAAK4c,cAKTf,EAActlB,UAAU8tB,WAAa,SAAUlxB,GAC3CkjB,eAAa3G,IAAIvc,EAAS8a,UAAQwI,gBAAiBzW,KAAK8lB,eAAgB9lB,OAK5E6b,EAActlB,UAAU2gB,iBAAmB,WACnClX,KAAKhP,QAAQ+0B,cAGjB/lB,KAAKhP,QAAQg1B,GAAG/X,UAAQ0I,eAAgB3W,KAAK6kB,yBAA0B7kB,MACvEA,KAAKhP,QAAQg1B,GAAG/X,UAAQ4I,cAAe7W,KAAK6lB,eAAgB7lB,QAKhE6b,EAActlB,UAAUygB,oBAAsB,WACtChX,KAAKhP,QAAQ+0B,cAGjB/lB,KAAKhP,QAAQi1B,IAAIhY,UAAQ0I,eAAgB3W,KAAK6kB,0BAC9C7kB,KAAKhP,QAAQi1B,IAAIhY,UAAQ4I,cAAe7W,KAAK6lB,kBAKjDhK,EAActlB,UAAUilB,cAAgB,WACpC,MAAO,iBAOXK,EAActlB,UAAUuZ,QAAU,SAAU9e,GAIxCgP,KAAKgX,uBAKT6E,EAActlB,UAAUwrB,oBAAsB,SAAUjsB,EAAUqrB,GAC9D,GAAIrB,GACAoG,EAAQ,4BACZ,KAAKp2B,oBAAkBgG,EAAShH,QAA6D,mBAAnDgD,OAAOyE,UAAU9C,SAAS+C,KAAKV,EAAShH,OAA6B,CAC3G,GAAIq3B,GAAanmB,KAAKhP,QAAQzC,SAASkuB,aACnC2J,EAAmBp6B,SAASq6B,gBAAgBH,EAAO,kBAEnD15B,EAAWwT,KAAKhP,QAAQuS,eAAe/W,SACvCi0B,MAAK,GACLC,MAAK,EACTD,GAAkB,QAAbj0B,GAAmC,WAAbA,EAAwB,MAAQ,IAC3Dk0B,EAAkB,QAAbl0B,GAAmC,WAAbA,EAAwB,IAAM,MACzD45B,EAAiBtsB,aAAa,KAAM,UAAYqnB,GAChDiF,EAAiBtsB,aAAa,KAAM,MACpCssB,EAAiBtsB,aAAa,KAAM,MACpCssB,EAAiBtsB,aAAa,KAAM2mB,EAAK,KACzC2F,EAAiBtsB,aAAa,KAAM4mB,EAAK,IACzC,KAAK,GAAI/vB,GAAI,EAAGA,EAAImF,EAAShH,MAAMnB,OAAQgD,IAAK,CAC5C,GAAI21B,GAAc,KAAOxwB,EAAShH,MAAMnB,OAAS,GAC7C44B,EAAUv6B,SAASq6B,gBAAgBH,EAAO,OAC9CK,GAAQzsB,aAAa,SAAUnJ,EAAI21B,EAAc,KACjDC,EAAQzsB,aAAa,aAAchE,EAAShH,MAAM6B,IAClD41B,EAAQzsB,aAAa,eAhBX,GAgBmCrG,YAC7C2yB,EAAiB/5B,YAAYk6B,GAEjCJ,EAAW95B,YAAY+5B,GACvBpmB,KAAKgiB,qBAAuBoE,CAC5B,IAAIt3B,GAAQ,eAAsBqyB,EAAc,GAChDnhB,MAAKwc,YAAYnwB,YAAY+5B,GAC7BtG,EAAkBhxB,EAEtB,MAAOgxB,IAEJjE,KCv7BP2K,GAAkC,WAClC,QAASA,GAAiBr0B,GACtB6N,KAAKK,OAAS,YACdL,KAAKymB,YAAc,YACnBzmB,KAAK4a,4BACL5a,KAAK0mB,6BACL1mB,KAAK2mB,kBACL3mB,KAAKhP,QAAUmB,EACf6N,KAAKkX,mBAkLT,MA1KAsP,GAAiBjwB,UAAUqwB,UAAY,SAAU3zB,GAC7C,GACI4zB,GAEAve,EAGAzL,EAEAslB,EACA2E,EACA3zB,EACA4zB,EAXA/1B,EAAUgP,KAAKhP,QAEf4mB,EAAW3kB,EAAEoN,OAAOlU,GAEpB8F,KACA+0B,EAAYhnB,KAAKhP,QAAQkqB,kBAEzB+L,KAKAC,EAAkBlnB,KAAKhP,QAAQm2B,sBACnC,IAAIvP,EAASlsB,QAAQ,gBAAkB,KAAMw7B,GAAkBA,EAAgBE,cAAgBxP,IAC3F,GAAI5X,KAAK6a,cAAgBjD,EAAU,CAC/BkP,EAAiB96B,SAASC,eAAe+E,EAAQmC,QAAQhH,GAAK,YAAc6E,EAAQiT,WAAa,UACjG,IAAIojB,GAAoBr7B,SAASuR,uBAAuB,mBACxDV,GAAOmD,KAAKhP,QAAQwB,OAAOC,YAAY2jB,WAAWwB,EAAS1nB,MAAM,KAAK,IAClEuN,OAAQ,EACZ,IAAIuC,KAAKhP,QAAQuS,eAAekP,QAAS,CACjC1V,EAAaiD,KAAKhP,QAAQ2M,oBAAoBC,iBAElDH,GAAQD,EADOwC,KAAKhP,QAAQ2M,oBAAoBC,kBAAkBjQ,OACjCkP,EAAM7L,GACvCgP,KAAKhC,aAAoD,YAArCgC,KAAKhP,QAAQuS,eAAerR,KAAqBlG,SAASC,eAAe,gCAAkCwR,GAASzR,SAASC,eAAe,0BAA4BwR,GAClK,OAAtBuC,KAAKhC,cAA0BkpB,GAAkBlnB,KAAKhC,aAAasnB,aAAa,QAAU4B,EAAgBI,eAgBrGtnB,KAAK2mB,eAAeh5B,OAAS,GAAKqS,KAAK2mB,eAAe3mB,KAAK2mB,eAAeh5B,OAAS,GAAmB,iBAAMqS,KAAKhC,eACtHV,EAA6B0C,KAAK4a,yBAA0B5a,KAAK2mB,eAAgB31B,GACjFgP,KAAK6a,YAAc,IAjBfqM,GAAkBlnB,KAAKhC,eAAiBkpB,EAAgBlpB,aAUnDgC,KAAK2mB,eAAeh5B,OAAS,GAAKqS,KAAK2mB,eAAe3mB,KAAK2mB,eAAeh5B,OAAS,GAAmB,iBAAMqS,KAAKhC,eACtHV,EAA6B0C,KAAK4a,yBAA0B5a,KAAK2mB,eAAgB31B,GACjFgP,KAAK6a,YAAc,KAXnB7a,KAAK2mB,eAAev0B,MAAOu0B,eAAgB3mB,KAAKhC,eAChDlB,EAAYkD,KAAK4a,yBAA0B,aAC3C5a,KAAK4a,yBAAyBxoB,MAAO8L,UAAW8B,KAAKhC,aAAcG,QAASpB,EAAWU,GAAmB,WACtGW,WAAYrB,EAAWU,GAAgB,QAAGY,eAAgBtB,EAAWU,GAAoB,YACzFa,eAAgBvB,EAAWU,GAAoB,cAEnDT,EAASgD,KAAKhC,aAAcgpB,EAAUp3B,KAAMo3B,EAAUv3B,QAASu3B,EAAU7kB,OAAOrT,MAAOk4B,EAAU7kB,OAAO1U,MAAMgG,YAC9GuM,KAAKK,OAAS,aAa1B,GADA0mB,EAAS/0B,EAAoB6K,KAAUmqB,EAAU90B,KAAMlB,IACnDgP,KAAKhP,QAAQuS,eAAekP,WAAUyU,KAAkBlnB,KAAKhC,cAAegC,KAAKhC,aAAasnB,aAAa,QAAU4B,EAAgBI,iBACrI,GAAItnB,KAAKhP,QAAQuS,eAAekP,UAAUyU,GAAkBlnB,KAAKhC,eAAiBkpB,EAAgBlpB,cA2B9F6oB,GAAmB,MA3BuG,CAC1H,IAASn5B,EAAI,EAAGA,EAAIo5B,EAAe5T,kBAAmBxlB,IAAK,CACvDyF,EAAU2zB,EAAeltB,WAAWlM,GACpCy0B,GAAU,EACVtlB,EAAO7L,EAAQwB,OAAOC,YAAYU,EAAQhH,GAAG+D,MAAM,KAAK,GACxD,KAASmC,EAAI,EAAGA,EAAIg1B,EAAkB15B,OAAQ0E,IAC1C,GAAIc,EAAQhH,KAAOk7B,EAAkBh1B,GAAGlG,GAAI,CACxCg2B,GAAU,CACV,OAGJ4E,EAAOr7B,QAAQmR,EAAqB,iBAAM,GAAKslB,IAC/C8E,EAAkB70B,KAAKe,GACvBlB,EAAMG,KAAKyK,IAGnBpD,EAAiBzN,SAASuR,uBAAuB,oBAAqB,mBAAoBvM,EAC1F,KAAK,GAAImM,GAAI,EAAGA,EAAI8pB,EAAkBt5B,OAAQwP,IAE1CxD,GADAxG,EAAU8zB,EAAkB9pB,IACPvD,WAAW,IAAMuI,OAAQ6kB,EAAU7kB,OAAQvS,KAAMo3B,EAAUp3B,KAAMH,QAASu3B,EAAUv3B,UACzG0D,EAAQ0G,UAAU6V,IAAI,oBACtB1P,KAAK6a,YAAcjD,CAEvBtP,IAAc+B,QAAQ,EAAOlZ,KNnD1B,gBMmD+CH,QAASA,EAASiB,MAAOA,EAAOyH,SAAUutB,GAC5Fj2B,EAAQuZ,QNpDL,gBMoD4BjC,SAQ1C,IAAIsP,EAASlsB,QAAQ,kBAAoB,GAAKksB,EAASlsB,QAAQ,kBAAoB,GACpF,GAAIsU,KAAKhP,QAAQuS,eAAekP,WAAYyU,GAAkBA,EAAgBI,iBAAmB1P,MAAqBsP,GAAkBA,EAAgBK,gBAAkB3P,GAAkB,CACxL,GAGI4P,GAHA/pB,MAAQ,GACRka,MAAY,GACZzU,MAAa,GAEb4W,EAAY9tB,SAASC,eAAe2rB,EACf,eAArB5X,KAAKymB,aACLxpB,EAAa+C,KAAK0mB,0BAA2B,aAEjD1mB,KAAKymB,YAAc,YACnBhpB,EAA6C,YAArCuC,KAAKhP,QAAQuS,eAAerR,KAAqBkkB,WAAWwB,EAAS1nB,MAAM,KAAK,IAAMkmB,WAAWwB,EAAS1nB,MAAM,KAAK,GAI7H,KAAK,GAHDwN,GAAasC,KAAKhP,QAAQ2M,oBAAoBC,kBAAkBH,GAAmB,WAAE9P,OACrFoP,EAAaiD,KAAKhP,QAAQ2M,oBAAoBC,kBAC9CujB,EAAcx1B,SAASisB,EAASA,EAASjqB,OAAS,GAAI,IACjDD,EAAI,EAAGA,EAAIgQ,EAAYhQ,IAC5B,IAAK,GAAI2E,GAAI,EAAGA,EAAI2N,KAAKhP,QAAQwB,OAAOC,YAAY9E,OAAQ0E,IACxD,GAAI2N,KAAKhP,QAAQ2M,oBAAoBC,kBAAkBH,GAAmB,WAAE/P,GAAmB,iBAAMsS,KAAKhP,QAAQwB,OAAOC,YAAYJ,GAAmB,eAAG,CACvJslB,EAAYtlB,EACZ6Q,EAAalD,KAAKhP,QAAQwB,OAAOC,YAAYJ,GAAe,UAC5D,IAAIo1B,GAAUz7B,SAASC,eAAe,yBAA2BiX,EAAa,eAAiByU,EAAY,YACjG,KAANjqB,IACAsS,KAAK0mB,6BACL7oB,EAAemC,KAAK0mB,0BAA2BvF,EAAa9uB,EAAGynB,EAAW2N,EAASznB,KAAKhP,QAAQwB,OAAOC,YAAasK,GACpHyqB,EAAWxnB,KAAK0mB,0BAA0B/4B,OAC1CqS,KAAK0mB,0BAA0Bc,EAAW,GAAoB,iBAAME,cAExE1qB,EAAS8c,EAAWkN,EAAUp3B,KAAMo3B,EAAUv3B,QAASu3B,EAAU7kB,OAAOrT,MAAOk4B,EAAU7kB,OAAO1U,MAAMgG,YACtGuJ,EAASyqB,EAAST,EAAUp3B,KAAMo3B,EAAUv3B,QAASu3B,EAAU7kB,OAAOrT,MAAOk4B,EAAU7kB,OAAO1U,MAAMgG,YACpG+zB,EAAWxnB,KAAK0mB,0BAA0B/4B,OAC1CqS,KAAK0mB,0BAA0Bc,EAAW,GAAoB,gBAAY,SAAEp1B,KAAKq1B,SAO7FP,IAAkBlnB,KAAKhC,cAAegC,KAAKhC,aAAasnB,aAAa,QAAU4B,EAAgBI,iBAC3FJ,EAAkBlnB,KAAKhC,eAAiBkpB,EAAgBlpB,aAAuBgC,KAAKhP,QAAQuS,eAAekP,UAC3GhZ,EAAiBzN,SAASuR,uBAAuB,oBAAqB,mBAAoBvM,GAGxE,cAArBgP,KAAKymB,aAA+C,cAAhBzmB,KAAKK,SAA2BL,KAAKhP,QAAQuS,eAAekP,SAC7FyU,GAAkBlnB,KAAKhC,cAAegC,KAAKhC,aAAasnB,aAAa,QAAU4B,EAAgBI,iBAC3FJ,EAAkBlnB,KAAKhC,eAAiBkpB,EAAgBlpB,cAAuBkpB,GAAkBA,EAAgBS,gBACjH7qB,EAAYkD,KAAK4a,yBAA0B,aAC3C5a,KAAK4a,6BAIQ,cAArB5a,KAAKymB,aAA+BzmB,KAAKhP,QAAQuS,eAAekP,SAChExV,EAAa+C,KAAK0mB,0BAA2B,aAEjD1mB,KAAK6a,YAAc,GACnBgM,GAAmB,CAEvB,OAAOA,IAKXL,EAAiBjwB,UAAU2gB,iBAAmB,WACtClX,KAAKhP,QAAQ+0B,aAGjB/lB,KAAKhP,QAAQg1B,GAAG/X,UAAQ0I,eAAgB3W,KAAK4mB,UAAW5mB,OAK5DwmB,EAAiBjwB,UAAUygB,oBAAsB,WACzChX,KAAKhP,QAAQ+0B,aAGjB/lB,KAAKhP,QAAQi1B,IAAIhY,UAAQ0I,eAAgB3W,KAAK4mB,YAKlDJ,EAAiBjwB,UAAUilB,cAAgB,WACvC,MAAO,oBAOXgL,EAAiBjwB,UAAUuZ,QAAU,SAAU3d,GAC3C6N,KAAKgX,uBAEFwP,KAMPoB,GAAkC,WAClC,QAASA,GAAiBz1B,GACtB6N,KAAK6nB,4BACL7nB,KAAK8nB,6BACL9nB,KAAK+nB,aAAc,EACnB/nB,KAAK2nB,cAAe,EACpB3nB,KAAKhP,QAAUmB,EACf6N,KAAKkX,mBAsKT,MAhKA0Q,GAAiBrxB,UAAUgiB,UAAY,SAAUtlB,GAC7C,GACIqV,GAIAzL,EAGAiqB,EACA3zB,EACA4zB,EAVAjN,EAAY7mB,EAAEoN,OAEdrP,EAAUgP,KAAKhP,QACfiB,KACA2lB,EAAWkC,EAAU3tB,GAErBk7B,KAKAW,EAAYh3B,EAAQoqB,kBACpB6M,EAAkBjoB,KAAKhP,QAAQ2pB,uBAC/BZ,EAAW/oB,EAAQmC,QAAQhH,GAAK,YAAc6E,EAAQiT,WAAa,SACvE,IAAI2T,EAASlsB,QAAQ,gBAAkB,EAEnC,GADAuH,EAAE8kB,iBACE/X,KAAKonB,cAAgBxP,GAAY5X,KAAK2nB,aAAc,CACpDb,EAAiB96B,SAASC,eAAe8tB,GACzCld,EAAO7L,EAAQwB,OAAOC,YAAY2jB,WAAWwB,EAAS1nB,MAAM,KAAK,IAC7DuN,OAAQ,EACZ,IAAIuC,KAAKhP,QAAQuS,eAAekP,QAAS,CACrCzS,KAAK+nB,aAAc,CACnB,IAAIG,GAAWloB,KAAKhP,QAAQ2M,oBAAoBC,kBAAkBjQ,OAC9DoP,EAAaiD,KAAKhP,QAAQ2M,oBAAoBC,iBAClDoC,MAAKhC,iBAAevS,GACpBqR,EAAYkD,KAAK6nB,yBAA0B,aACvCI,IACAA,EAAgBxB,YAAc,YAC9BwB,EAAgBrN,6BAEpBnd,EAAQD,EAAe0qB,EAAUrrB,EAAM7L,GACvCgP,KAAKhC,aAAoD,YAArCgC,KAAKhP,QAAQuS,eAAerR,KAAqBlG,SAASC,eAAe,gCAAkCwR,GAASzR,SAASC,eAAe,0BAA4BwR,GAClK,OAAtBuC,KAAKhC,eACLgC,KAAKunB,cAAgBvnB,KAAKhC,aAAasnB,aAAa,MACpDtlB,KAAK6nB,yBAAyBz1B,MAAO8L,UAAW8B,KAAKhC,aAAcG,QAASpB,EAAWU,GAAmB,WACtGW,WAAYrB,EAAWU,GAAgB,QAAGY,eAAgBtB,EAAWU,GAAoB,YACzFa,eAAgBvB,EAAWU,GAAoB,cAEnDT,EAASgD,KAAKhC,aAAcgqB,EAAUp4B,KAAMo4B,EAAUv4B,QAASu4B,EAAU7lB,OAAOrT,MAAOk5B,EAAU7lB,OAAO1U,MAAMgG,aAGtHszB,EAAS/0B,EAAoB6K,KAAUmrB,EAAU91B,KAAMlB,EACvD,KAAK,GAAItD,GAAI,EAAGA,EAAIo5B,EAAe5T,kBAAmBxlB,IAClDyF,EAAU2zB,EAAeltB,WAAWlM,GACpCmP,EAAO7L,EAAQwB,OAAOC,YAAYU,EAAQhH,GAAG+D,MAAM,KAAK,IACpD62B,EAAOr7B,QAAQmR,EAAqB,iBAAM,IAC1CwqB,EAAkBj1B,KAAKe,GACvBlB,EAAMG,KAAKyK,GAGnBpD,GAAiBzN,SAASuR,uBAAuB,oBAAqB,mBAAoBvM,GAC1FgP,KAAKonB,YAAcxP,CAEnB,KAAK,GADDqP,GAAoBj7B,SAASuR,uBAAuB,oBAC/CJ,EAAI,EAAGA,EAAIkqB,EAAkB15B,OAAQwP,IAAK,CAE/C,GADAhK,EAAUk0B,EAAkBlqB,GACxB8pB,EAAkBt5B,OAAS,EAC3B,IAAK,GAAI0E,GAAI,EAAGA,EAAI40B,EAAkBt5B,OAAQ0E,IACtC40B,EAAkB50B,GAAGlG,KAAOgH,EAAQhH,IACpC86B,EAAkB50B,GAAGwH,UAAUtF,OAAO,oBAE1CoF,EAAaxG,EAAQyG,WAAW,IAAMuI,OAAQ6lB,EAAU7lB,OAAQvS,KAAMo4B,EAAUp4B,KAAMH,QAASu4B,EAAUv4B,UACzG0D,EAAQ0G,UAAU6V,IAAI,wBAI1B/V,GAAaxG,EAAQyG,WAAW,IAAMuI,OAAQ6lB,EAAU7lB,OAAQvS,KAAMo4B,EAAUp4B,KAAMH,QAASu4B,EAAUv4B,UACzG0D,EAAQ0G,UAAU6V,IAAI,mBAE1BpH,IAAc+B,QAAQ,EAAOlZ,KNnPvB,eMmP2CH,QAASA,EAASiB,MAAOA,EAAOyH,SAAU2tB,GAC3Fr2B,EAAQuZ,QNpPF,eMoPwBjC,QAIlCxL,GAAYkD,KAAK6nB,yBAA0B,aAC3C7nB,KAAKhC,iBAAevS,GACpBuU,KAAK+nB,aAAc,EACnB/nB,KAAKunB,cAAgB,GACrB9tB,EAAiBzN,SAASuR,uBAAuB,oBAAqB,mBAAoBvM,GAC1FgP,KAAKonB,YAAc,OAGtB,IAAIxP,EAASlsB,QAAQ,kBAAoB,GAAKksB,EAASlsB,QAAQ,kBAAoB,EAAG,CACnFqR,EAAaiD,KAAKhP,QAAQ2M,oBAAoBC,iBAClD,IAAIoC,KAAKhP,QAAQuS,eAAekP,SAAWzS,KAAKsnB,iBAAmB1P,GAAY5X,KAAK+nB,YAAa,CAC7F,GAGII,GAHA1qB,MAAQ,GACRka,MAAY,GACZzU,MAAa,EAEjBlD,MAAKsnB,eAAiB1P,EACtB5X,KAAK2nB,cAAe,CACpB,IAAIxG,GAAcx1B,SAASisB,EAASA,EAASjqB,OAAS,GAAI,IACtDy6B,EAAcp8B,SAASC,eAAe2rB,EAC1C3a,GAAa+C,KAAK8nB,0BAA2B,aACzCG,IACAA,EAAgBxB,YAAc,aAElChpB,EAA6C,YAArCuC,KAAKhP,QAAQuS,eAAerR,KAAqBkkB,WAAWwB,EAAS1nB,MAAM,KAAK,IAAMkmB,WAAWwB,EAAS1nB,MAAM,KAAK,GAE7H,KAAK,GADDwN,GAAasC,KAAKhP,QAAQ2M,oBAAoBC,kBAAkBH,GAAmB,WAAE9P,OAChFwP,EAAI,EAAGA,EAAIO,EAAYP,IAC5B,IAAK,GAAIoY,GAAI,EAAGA,EAAIvV,KAAKhP,QAAQwB,OAAOC,YAAY9E,OAAQ4nB,IACxD,GAAIvV,KAAKhP,QAAQ2M,oBAAoBC,kBAAkBH,GAAmB,WAAEN,GAAmB,iBAAM6C,KAAKhP,QAAQwB,OAAOC,YAAY8iB,GAAmB,eAAG,CACvJoC,EAAYpC,EACZrS,EAAalD,KAAKhP,QAAQwB,OAAOC,YAAY8iB,GAAe,UAC5D,IAAIkS,GAAUz7B,SAASC,eAAe,yBAA2BiX,EAAa,eAAiByU,EAAY,YACjG,KAANxa,IACAU,EAAemC,KAAK8nB,0BAA2B3G,EAAa5L,EAAG6S,EAAaX,EAASznB,KAAKhP,QAAQwB,OAAOC,YAAasK,GACtHorB,EAAWnoB,KAAK8nB,0BAA0Bn6B,OAC1CqS,KAAK8nB,0BAA0BK,EAAW,GAAoB,iBAAMT,cAExE1qB,EAASorB,EAAaJ,EAAUp4B,KAAMo4B,EAAUv4B,QAASu4B,EAAU7lB,OAAOrT,MAAOk5B,EAAU7lB,OAAO1U,MAAMgG,YACxGuJ,EAASyqB,EAASO,EAAUp4B,KAAMo4B,EAAUv4B,QAASu4B,EAAU7lB,OAAOrT,MAAOk5B,EAAU7lB,OAAO1U,MAAMgG,YACpG00B,EAAWnoB,KAAK8nB,0BAA0Bn6B,OAC1CqS,KAAK8nB,0BAA0BK,EAAW,GAAoB,gBAAY,SAAE/1B,KAAKq1B,QAM7FxqB,GAAa+C,KAAK8nB,0BAA2B,aACzCG,IACAA,EAAgBxB,YAAc,aAElCzmB,KAAK2nB,cAAe,EACpB3nB,KAAKsnB,eAAiB,KAOlCM,EAAiBrxB,UAAU2gB,iBAAmB,WACtClX,KAAKhP,QAAQ+0B,aAGjB/lB,KAAKhP,QAAQg1B,GAAG/X,UAAQwI,gBAAiBzW,KAAKuY,UAAWvY,OAK7D4nB,EAAiBrxB,UAAUygB,oBAAsB,WACzChX,KAAKhP,QAAQ+0B,aAGjB/lB,KAAKhP,QAAQi1B,IAAIhY,UAAQwI,gBAAiBzW,KAAKuY,YAKnDqP,EAAiBrxB,UAAUilB,cAAgB,WACvC,MAAO,oBAOXoM,EAAiBrxB,UAAUuZ,QAAU,SAAU3d,GAC3C6N,KAAKgX,uBAEF4Q,KC5WPS,GAAgC,WAChC,QAASA,GAAel2B,GACpB6N,KAAKhP,QAAUmB,EACf6N,KAAKgb,gBAAkBhb,KAAKhP,QAAQgqB,gBACpChb,KAAKsoB,UAAYtoB,KAAKhP,QAAQmC,QAAQhH,GAAK,kBAC3C6T,KAAKkX,mBAmJT,MAhJAmR,GAAe9xB,UAAUgyB,cAAgB,SAAUt1B,GAC/C,GAAIiC,GACAC,EACAkL,EACAmoB,EACAC,GAC6B,IAA7Bx1B,EAAEhF,KAAKvC,QAAQ,UACfsU,KAAK0oB,SAAU,EAEfxzB,GADAszB,EAAWv1B,GACM+xB,eAAe,GAAG9vB,MACnCC,EAAQqzB,EAASxD,eAAe,GAAG7vB,MACnCkL,EAASmoB,EAASnoB,SAGlBL,KAAK0oB,QAA4B,UAAlBz1B,EAAE01B,YACjBzzB,EAAQjC,EAAEiC,MACVC,EAAQlC,EAAEkC,MACVkL,EAASpN,EAAEoN,OAEf,IAAI9U,GAGAq9B,EACA96B,EAIA+6B,EAPAjR,EAAWvX,EAAOlU,GAClB0Q,KAIAisB,KACAC,IAEAnR,GAASlsB,QAAQ,gBAAkB,GACnCmR,EAAOmD,KAAKhP,QAAQwB,OAAOC,YAAY2jB,WAAWwB,EAAS1nB,MAAM,KAAK,KACjEJ,oBAAkB+M,KACHA,EAAW,KAC3BtR,EAAQsR,EAAa,OACrBisB,EAAcjsB,EAAW,KACzBgsB,EAAahsB,EAAc,QAAQ,KAE/BksB,EADA/oB,KAAKhP,QAAQ8Y,WACK/P,EAAciG,KAAKgb,gBAAgBhhB,OAAQ8uB,EAAa9oB,KAAKhP,UACvEqJ,EAAY9O,EAAOyU,KAAKhP,SAAW,MAAQgP,KAAKhP,QAAQS,gBAAgBgC,aAG9DsG,EAAciG,KAAKgb,gBAAgBhhB,OAAQ8uB,EAAa9oB,KAAKhP,UACvEgP,KAAKhP,QAAQS,gBAAgBgC,WAAa,MAAQ4G,EAAY9O,EAAOyU,KAAKhP,UAElFhF,SAASC,eAAe+T,KAAKsoB,WAC7BM,EAAa58B,SAASC,eAAe+T,KAAKsoB,YAG1CM,EAAa18B,gBAAc,OACvBC,GAAI6T,KAAKhP,QAAQmC,QAAQhH,GAAK,kBAC9Bkd,UAAW,sBACX/V,OAAQ,4CAEZtH,SAASC,eAAe+T,KAAKhP,QAAQmC,QAAQhH,GAAK,sBAAsBE,YAAYu8B,KAExF96B,EAAWmH,EAAiBC,EAAOC,EAAO6K,KAAKhP,QAAQ4Z,YAC9Czc,EAAK6R,KAAKgb,yBAA4BltB,EAASK,EAAI,GAAKL,EAASK,EAC1E6R,KAAKgb,gBAAgBpS,UAAU/b,WAAoC,eAAvBmT,KAAKhP,QAAQ4N,MAAyB,uBAC5EoB,KAAKgb,gBAAgBpS,UAAU/b,WACrCmT,KAAKgb,gBAAgBpS,UAAU9Z,MAAQkR,KAAKhP,QAAQiZ,WAAWhL,kBACxDe,KAAKgb,gBAAgBpS,UAAU9Z,MACtCkR,KAAKgb,gBAAgBpS,UAAUnZ,QAAUuQ,KAAKhP,QAAQiZ,WAAW5K,oBAC1DW,KAAKgb,gBAAgBpS,UAAUnZ,QACtCg5B,GACIpe,QAAQ,EAAOlZ,KP/BL,mBO+B6B0L,KAAMA,EAC7ChO,SACIf,SAAUA,EAAUjC,KAAMk9B,EAAgBp3B,KAAMm3B,EAChDlgB,UAAW5I,KAAKgb,gBAAgBpS,UAAWjW,SAAUqN,KAAKgb,gBAAgBroB,UAE9E3B,QAASgP,KAAKhP,QACdmC,QAASkN,EAAQiI,UAAWrV,GAEhC+M,KAAKhP,QAAQuZ,QPvCC,mBOuCyBke,GAClCA,EAAWpe,OAiBZrK,KAAKya,iBAhBLza,KAAKgpB,WAAa,GAAIC,YAClB9N,QAAQ,EACR+N,OAAQ,GACRv3B,KAAM82B,EAAW55B,QAAc,KAC/B8D,SAAU81B,EAAW55B,QAAkB,SACvCs6B,QAASV,EAAW55B,QAAc,KAClCu6B,UACAt7B,SAAU26B,EAAW55B,QAAkB,SACvCmd,SAAU6c,GACVQ,WAAYrpB,KAAKhP,QAAQ8C,SACzB8U,UAAW6f,EAAW55B,QAAmB,YAE7CmR,KAAKgpB,WAAWv5B,QAAUuQ,KAAKhP,QAAQiZ,WAAW7K,oBAAsBY,KAAKgpB,WAAWv5B,QACxFuQ,KAAKgpB,WAAWM,SAASV,MAQjC5oB,KAAKya,iBAGb4N,EAAe9xB,UAAUsvB,eAAiB,SAAU5yB,GAChD+M,KAAKuoB,cAAct1B,GACnBskB,aAAavX,KAAKuX,cAClBvX,KAAKuX,aAAeE,WAAWzX,KAAKya,cAActD,KAAKnX,MAAO,MAElEqoB,EAAe9xB,UAAUkkB,cAAgB,WACjCzuB,SAASuR,uBAAuB,uBAAuB5P,OAAS,GAChE3B,SAASuR,uBAAuB,uBAAuB,GAAGhJ,UAMlE8zB,EAAe9xB,UAAU2gB,iBAAmB,WACpClX,KAAKhP,QAAQ+0B,cAGjB/lB,KAAKhP,QAAQg1B,GAAG/X,UAAQ0I,eAAgB3W,KAAKuoB,cAAevoB,MAC5DA,KAAKhP,QAAQg1B,GAAG/X,UAAQ4I,cAAe7W,KAAK6lB,eAAgB7lB,QAKhEqoB,EAAe9xB,UAAUygB,oBAAsB,WACvChX,KAAKhP,QAAQ+0B,cAGjB/lB,KAAKhP,QAAQi1B,IAAIhY,UAAQ0I,eAAgB3W,KAAKuoB,eAC9CvoB,KAAKhP,QAAQi1B,IAAIhY,UAAQ4I,cAAe7W,KAAK6lB,kBAKjDwC,EAAe9xB,UAAUilB,cAAgB,WACrC,MAAO,kBAOX6M,EAAe9xB,UAAUuZ,QAAU,SAAU3d,GAIzC6N,KAAKgX,uBAEFqR,WC9JXkB,IAAcC,OAAOC,GAAsBC,GAAqBC,GAAwBC,wSRMtE,gBAKE,uBAKK,8BAKE,6BAKH,wBAKF,0BAKI,+BAKC,mCAKG,+BAKP,uBAKD,mBAKH,sBAKM,2BAKD,yBAKD,kCAKU,wCAKJ,2BAKT"}