{"version":3,"file":"ej2-treemap.umd.min.js","sources":["../src/treemap/utils/helper.js","../src/treemap/model/theme.js","../src/treemap/model/constants.js","../src/treemap/model/base.js","../src/treemap/layout/render-panel.js","../src/treemap/utils/export.js","../src/treemap/treemap.js","../src/treemap/layout/legend.js","../src/treemap/user-interaction/highlight-selection.js","../src/treemap/user-interaction/tooltip.js"],"sourcesContent":["import { createElement, compile, merge, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Create the class for size\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Internal use of type rect\n * @private\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/**\n * Internal use of rectangle options\n * @private\n */\nvar RectOption = /** @class */ (function () {\n    function RectOption(id, fill, border, opacity, rect, dashArray) {\n        this.y = rect.y;\n        this.x = rect.x;\n        this.height = rect.height;\n        this.width = rect.width;\n        this.id = id;\n        this.fill = fill;\n        this.opacity = opacity;\n        this.stroke = border.color;\n        this['stroke-width'] = border.width;\n        this['stroke-dasharray'] = dashArray;\n    }\n    return RectOption;\n}());\nexport { RectOption };\nvar PathOption = /** @class */ (function () {\n    function PathOption(id, fill, width, color, opacity, dashArray, d) {\n        this.id = id;\n        this.opacity = opacity;\n        this.fill = fill;\n        this.stroke = color;\n        this['stroke-width'] = width;\n        this['stroke-dasharray'] = dashArray;\n        this.d = d;\n    }\n    return PathOption;\n}());\nexport { PathOption };\n/**\n * Function to measure the height and width of the text.\n * @param  {string} text\n * @param  {FontModel} font\n * @param  {string} id\n * @returns no\n * @private\n */\nexport function measureText(text, font) {\n    var measureObject = document.getElementById('treeMapMeasureText');\n    if (measureObject === null) {\n        measureObject = createElement('text', { id: 'treeMapMeasureText' });\n        document.body.appendChild(measureObject);\n    }\n    measureObject.innerHTML = text;\n    measureObject.style.position = 'absolute';\n    measureObject.style.fontSize = font.size;\n    measureObject.style.fontWeight = font.fontWeight;\n    measureObject.style.fontStyle = font.fontStyle;\n    measureObject.style.fontFamily = font.fontFamily;\n    measureObject.style.visibility = 'hidden';\n    measureObject.style.top = '-100';\n    measureObject.style.left = '0';\n    measureObject.style.whiteSpace = 'nowrap';\n    // For bootstrap line height issue\n    measureObject.style.lineHeight = 'normal';\n    return new Size(measureObject.clientWidth, measureObject.clientHeight);\n}\n/**\n * Internal use of text options\n * @private\n */\nvar TextOption = /** @class */ (function () {\n    function TextOption(id, x, y, anchor, text, transform, baseLine, connectorText) {\n        if (transform === void 0) { transform = ''; }\n        this.transform = '';\n        this.baseLine = 'auto';\n        this.id = id;\n        this.text = text;\n        this.transform = transform;\n        this.anchor = anchor;\n        this.x = x;\n        this.y = y;\n        this.baseLine = baseLine;\n        this.connectorText = connectorText;\n    }\n    return TextOption;\n}());\nexport { TextOption };\n/**\n * @private\n * Trim the title text\n */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth || label.length < 4) {\n                if (label.length < 4) {\n                    label = ' ';\n                }\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/**\n * Map internal class for Point\n */\nvar Location = /** @class */ (function () {\n    function Location(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return Location;\n}());\nexport { Location };\n/**\n * Method to calculate x position of title\n */\nexport function findPosition(location, alignment, textSize, type) {\n    var x;\n    var y;\n    switch (alignment) {\n        case 'Near':\n            x = location.x;\n            break;\n        case 'Center':\n            x = (type === 'title') ? (location.width / 2 - textSize.width / 2) :\n                ((location.x + (location.width / 2)) - textSize.width / 2);\n            break;\n        case 'Far':\n            x = (type === 'title') ? (location.width - location.y - textSize.width) :\n                ((location.x + location.width) - textSize.width);\n            break;\n    }\n    y = (type === 'title') ? location.y + (textSize.height / 2) : ((location.y + location.height / 2) + textSize.height / 2);\n    return new Location(x, y);\n}\nexport function createTextStyle(renderer, renderOptions, text) {\n    var htmlObject;\n    htmlObject = renderer.createText(renderOptions, text);\n    htmlObject.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n    htmlObject.style['user-select'] = 'none';\n    htmlObject.style['-moz-user-select'] = 'none';\n    htmlObject.style['-webkit-touch-callout'] = 'none';\n    htmlObject.style['-webkit-user-select'] = 'none';\n    htmlObject.style['-khtml-user-select'] = 'none';\n    htmlObject.style['-ms-user-select'] = 'none';\n    htmlObject.style['-o-user-select'] = 'none';\n    return htmlObject;\n}\n/**\n * Internal rendering of text\n * @private\n */\n/* tslint:disable:no-string-literal */\nexport function renderTextElement(options, font, color, parent, isMinus) {\n    if (isMinus === void 0) { isMinus = false; }\n    var renderOptions = {\n        'font-size': font.size,\n        'font-style': font.fontStyle,\n        'font-family': font.fontFamily,\n        'font-weight': font.fontWeight,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color\n    };\n    var text = typeof options.text === 'string' ? options.text : isMinus ? options.text[options.text.length - 1] : options.text[0];\n    var tspanElement;\n    var renderer = new SvgRenderer('');\n    var height;\n    var htmlObject;\n    var breadCrumbText = !isNullOrUndefined(text) && !isNullOrUndefined(options.connectorText) ?\n        (text.search(options.connectorText[1]) >= 0) : false;\n    if (breadCrumbText) {\n        var drilledLabel = text;\n        var drillLevelText = void 0;\n        var spacing = 5;\n        drillLevelText = drilledLabel.split('#');\n        for (var z = 0; z < drillLevelText.length; z++) {\n            var drillText = (drillLevelText[z].search(options.connectorText) !== -1 && !isNullOrUndefined(options.connectorText)) ?\n                options.connectorText : drillLevelText[z];\n            renderOptions['id'] = options.id + '_' + z;\n            htmlObject = createTextStyle(renderer, renderOptions, drillText);\n            if (z % 2 === 0 && z !== 0) {\n                var re = /\\s+/g;\n                drillText = drillText.replace(re, '&nbsp');\n            }\n            var size = measureText(drillText, font);\n            renderOptions['x'] = z !== 0 ? renderOptions['x'] + size.width : renderOptions['x'] + size.width + spacing;\n            parent.appendChild(htmlObject);\n        }\n    }\n    else {\n        htmlObject = createTextStyle(renderer, renderOptions, text);\n        parent.appendChild(htmlObject);\n    }\n    if (typeof options.text !== 'string' && options.text.length > 1) {\n        for (var i = 1, len = options.text.length; i < len; i++) {\n            height = (measureText(options.text[i], font).height);\n            tspanElement = renderer.createTSpan({\n                'x': options.x, 'id': options.id,\n                'y': (options.y) + (i * height)\n            }, options.text[i]);\n            htmlObject.appendChild(tspanElement);\n        }\n        parent.appendChild(htmlObject);\n    }\n    return htmlObject;\n}\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/* tslint:disable:no-string-literal */\nexport function itemsToOrder(a, b) {\n    return a['weight'] === b['weight'] ? 0 : a['weight'] < b['weight'] ? 1 : -1;\n}\nexport function isContainsData(source, pathName, processData, treemap) {\n    var isExist = false;\n    var name = '';\n    var path;\n    var leaf = treemap.leafItemSettings;\n    for (var i = 0; i < source.length; i++) {\n        path = treemap.levels[i] ? treemap.levels[i].groupPath : leaf.labelPath ? leaf.labelPath : treemap.weightValuePath;\n        if (source[i] === processData[path]) {\n            name += (processData[path]) + (i === source.length - 1 ? '' : '#');\n            if (name === pathName) {\n                isExist = true;\n                break;\n            }\n        }\n    }\n    return isExist;\n}\nexport function findChildren(data) {\n    var children;\n    if (data) {\n        var keys = Object.keys(data);\n        children = new Object();\n        for (var i = 0; i < keys.length; i++) {\n            if (data[keys[i]] instanceof Array) {\n                children['values'] = data[keys[i]];\n                children['key'] = keys[i];\n                break;\n            }\n        }\n    }\n    return children;\n}\nexport function findHightLightItems(data, items, mode, treeMap) {\n    if (mode === 'Child') {\n        items.push(data['levelOrderName']);\n        var children = findChildren(data)['values'];\n        if (children && children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                if (items.indexOf(children[i]['levelOrderName']) === -1) {\n                    items.push(children[i]['levelOrderName']);\n                }\n            }\n            for (var j = 0; j < children.length; j++) {\n                findHightLightItems(children[j], items, mode, treeMap);\n            }\n        }\n    }\n    else if (mode === 'Parent') {\n        if (typeof data['levelOrderName'] === 'string' && items.indexOf(data['levelOrderName']) === -1) {\n            items.push(data['levelOrderName']);\n            findHightLightItems(data['parent'], items, mode, treeMap);\n        }\n    }\n    else if (mode === 'All') {\n        var parentName = data['levelOrderName'].split('#')[0];\n        var currentItem = void 0;\n        for (var i = 0; i < treeMap.layout.renderItems.length; i++) {\n            currentItem = treeMap.layout.renderItems[i];\n            if ((currentItem['levelOrderName']).indexOf(parentName) > -1 && items.indexOf(currentItem['levelOrderName']) === -1) {\n                items.push(currentItem['levelOrderName']);\n            }\n        }\n    }\n    else {\n        items.push(data['levelOrderName']);\n    }\n    return items;\n}\n/**\n * Function to compile the template function for maps.\n * @returns Function\n * @private\n */\nexport function getTemplateFunction(template) {\n    var templateFn = null;\n    var e;\n    try {\n        if (document.querySelectorAll(template).length) {\n            templateFn = compile(document.querySelector(template).innerHTML.trim());\n        }\n    }\n    catch (e) {\n        templateFn = compile(template);\n    }\n    return templateFn;\n}\n/**\n * @private\n */\nexport function convertElement(element, labelId, data) {\n    var childElement = createElement('div', {\n        id: labelId,\n        styles: 'position: absolute;pointer-events: auto;'\n    });\n    while (element.length > 0) {\n        childElement.appendChild(element[0]);\n    }\n    var templateHtml = childElement.innerHTML;\n    var keys = Object.keys(data);\n    for (var i = 0; i < keys.length; i++) {\n        templateHtml = templateHtml.replace(new RegExp('{{:' + keys[i] + '}}', 'g'), data[keys[i].toString()]);\n    }\n    childElement.innerHTML = templateHtml;\n    return childElement;\n}\nexport function findLabelLocation(rect, position, labelSize, type, treemap) {\n    var location = new Location(0, 0);\n    var padding = 5;\n    var paddings = 2;\n    var elementRect = treemap.element.getBoundingClientRect();\n    var x = (type === 'Template') ? treemap.areaRect.x : 0;\n    var y = (type === 'Template') ? treemap.areaRect.y : 0;\n    location.x = (Math.abs(x - ((position.indexOf('Left') > -1) ? rect.x + padding : !(position.indexOf('Right') > -1) ?\n        rect.x + ((rect.width / 2) - (labelSize.width / 2)) : (rect.x + rect.width) - labelSize.width))) - paddings;\n    if (treemap.enableDrillDown && (treemap.renderDirection === 'BottomLeftTopRight'\n        || treemap.renderDirection === 'BottomRightTopLeft')) {\n        location.y = Math.abs((rect.y + rect.height) - labelSize.height + padding);\n    }\n    else {\n        location.y = Math.abs(y - ((position.indexOf('Top') > -1) ? (type === 'Template' ? rect.y : rect.y + labelSize.height) :\n            !(position.indexOf('Bottom') > -1) ? type === 'Template' ? (rect.y + ((rect.height / 2) - (labelSize.height / 2))) :\n                (rect.y + (rect.height / 2) + labelSize.height / 4) : (rect.y + rect.height) - labelSize.height));\n    }\n    return location;\n}\nexport function measureElement(element, parentElement) {\n    var size = new Size(0, 0);\n    parentElement.appendChild(element);\n    size.height = element.offsetHeight;\n    size.width = element.offsetWidth;\n    document.getElementById(element.id).remove();\n    return size;\n}\nexport function getArea(rect) {\n    return (rect.width - rect.x) * (rect.height - rect.y);\n}\nexport function getShortestEdge(input) {\n    var container = convertToContainer(input);\n    var width = container.width;\n    var height = container.height;\n    var result = Math.min(width, height);\n    return result;\n}\nexport function convertToContainer(rect) {\n    var x = rect.x;\n    var y = rect.y;\n    var width = rect.width;\n    var height = rect.height;\n    return {\n        x: x,\n        y: y,\n        width: width - x,\n        height: height - y\n    };\n}\nexport function convertToRect(container) {\n    var xOffset = container.x;\n    var yOffset = container.y;\n    var width = container.width;\n    var height = container.height;\n    return {\n        x: xOffset,\n        y: yOffset,\n        width: xOffset + width,\n        height: yOffset + height,\n    };\n}\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new Location((pageX - positionX), (pageY - positionY));\n}\nexport function colorMap(colorMapping, equalValue, value, weightValuePath) {\n    var fill;\n    var paths = [];\n    var opacity;\n    if (isNullOrUndefined(equalValue) && (isNullOrUndefined(value) && isNaN(value))) {\n        return null;\n    }\n    for (var i = 0; i < colorMapping.length; i++) {\n        var isEqualColor = false;\n        var dataValue = value;\n        if (!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to)\n            && !isNullOrUndefined(colorMapping[i].value)) {\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) && (colorMapping[i].value === equalValue)) {\n                isEqualColor = true;\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        else if ((!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to))\n            || !isNullOrUndefined((colorMapping[i].value))) {\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) || (colorMapping[i].value === equalValue)) {\n                if (colorMapping[i].value === equalValue) {\n                    isEqualColor = true;\n                }\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        if (((value >= colorMapping[i].from && value <= colorMapping[i].to) || (colorMapping[i].value === equalValue))\n            && !isNullOrUndefined(colorMapping[i].minOpacity) && !isNullOrUndefined(colorMapping[i].maxOpacity) && fill) {\n            opacity = deSaturationColor(weightValuePath, colorMapping[i], fill, value);\n        }\n        if ((fill === '' || isNullOrUndefined(fill))\n            && isNullOrUndefined(colorMapping[i].from) && isNullOrUndefined(colorMapping[i].to)\n            && isNullOrUndefined(colorMapping[i].minOpacity) && isNullOrUndefined(colorMapping[i].maxOpacity)\n            && isNullOrUndefined(colorMapping[i].value)) {\n            fill = (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') ?\n                colorMapping[i].color[0] : colorMapping[i].color;\n        }\n        opacity = !isNullOrUndefined(opacity) ? opacity : '1';\n        paths.push(fill);\n    }\n    for (var j = paths.length - 1; j >= 0; j--) {\n        fill = paths[j];\n        j = (fill) ? -1 : j;\n    }\n    return { fill: fill, opacity: opacity };\n}\nexport function deSaturationColor(weightValuePath, colorMapping, color, rangeValue) {\n    var opacity = 1;\n    if ((rangeValue >= colorMapping.from && rangeValue <= colorMapping.to)) {\n        var ratio = (rangeValue - colorMapping.from) / (colorMapping.to - colorMapping.from);\n        opacity = (ratio * (colorMapping.maxOpacity - colorMapping.minOpacity)) + colorMapping.minOpacity;\n    }\n    return opacity.toString();\n}\nexport function colorCollections(colorMap, value) {\n    var gradientFill = getColorByValue(colorMap, value);\n    return gradientFill;\n}\nexport function rgbToHex(r, g, b) {\n    return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\nexport function getColorByValue(colorMap, value) {\n    var color = '';\n    var rbg;\n    if (Number(value) === colorMap.from) {\n        color = colorMap.color[0];\n    }\n    else if (Number(value) === colorMap.to) {\n        color = colorMap.color[colorMap.color.length - 1];\n    }\n    else {\n        rbg = getGradientColor(Number(value), colorMap);\n        color = rgbToHex(rbg.r, rbg.g, rbg.b);\n    }\n    return color;\n}\n/* tslint:disable-next-line:max-func-body-length */\nexport function getGradientColor(value, colorMap) {\n    var previousOffset = colorMap.from;\n    var nextOffset = colorMap.to;\n    var percent = 0;\n    var prev1;\n    var full = nextOffset - previousOffset;\n    var midColor;\n    var midreturn;\n    percent = (value - previousOffset) / full;\n    var previousColor;\n    var nextColor;\n    if (colorMap.color.length <= 2) {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n    }\n    else {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n        var a = full / (colorMap.color.length - 1);\n        var b = void 0;\n        var c = void 0;\n        var length_1 = colorMap.color.length - 1;\n        var splitColorValueOffset = [];\n        var splitColor = {};\n        for (var j = 1; j < length_1; j++) {\n            c = j * a;\n            b = previousOffset + c;\n            splitColor = { b: b, color: colorMap.color[j] };\n            splitColorValueOffset.push(splitColor);\n        }\n        for (var i = 0; i < splitColorValueOffset.length; i++) {\n            if (previousOffset <= value && value <= splitColorValueOffset[i]['b'] && i === 0) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                nextColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ? 1 - Math.abs((value - splitColorValueOffset[i]['b']) / a)\n                    : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            else if (splitColorValueOffset[i]['b'] <= value && value <= nextOffset && i === (splitColorValueOffset.length - 1)) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                previousColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ?\n                    1 - Math.abs((value - splitColorValueOffset[i]['b']) / a) : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            if (i !== splitColorValueOffset.length - 1 && i < splitColorValueOffset.length) {\n                if (splitColorValueOffset[i]['b'] <= value && value <= splitColorValueOffset[i + 1]['b']) {\n                    midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                    previousColor = midColor;\n                    nextColor = splitColorValueOffset[i + 1]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i + 1]['color'] : colorNameToHex(splitColorValueOffset[i + 1]['color']);\n                    percent = Math.abs((value - splitColorValueOffset[i + 1]['b'])) / a;\n                }\n            }\n        }\n    }\n    return getPercentageColor(percent, previousColor, nextColor);\n}\nexport function getPercentageColor(percent, previous, next) {\n    var nextColor = next.split('#')[1];\n    var prevColor = previous.split('#')[1];\n    var r = getPercentage(percent, parseInt(prevColor.substr(0, 2), 16), parseInt(nextColor.substr(0, 2), 16));\n    var g = getPercentage(percent, parseInt(prevColor.substr(2, 2), 16), parseInt(nextColor.substr(2, 2), 16));\n    var b = getPercentage(percent, parseInt(prevColor.substr(4, 2), 16), parseInt(nextColor.substr(4, 2), 16));\n    return new ColorValue(r, g, b);\n}\nexport function getPercentage(percent, previous, next) {\n    var full = next - previous;\n    return Math.round((previous + (full * percent)));\n}\nexport function wordWrap(maximumWidth, dataLabel, font) {\n    var textCollection = dataLabel.split(' ');\n    var label = '';\n    var labelCollection = [];\n    var text;\n    for (var i = 0, len = textCollection.length; i < len; i++) {\n        text = textCollection[i];\n        if (measureText(label.concat(text), font).width < maximumWidth) {\n            label = label.concat((label === '' ? '' : ' ') + text);\n        }\n        else {\n            if (label !== '') {\n                labelCollection.push(textTrim(maximumWidth, label, font));\n                label = text;\n            }\n            else {\n                labelCollection.push(textTrim(maximumWidth, text, font));\n                text = '';\n            }\n        }\n        if (label && i === len - 1) {\n            labelCollection.push(textTrim(maximumWidth, label, font));\n        }\n    }\n    return labelCollection;\n}\nexport function textWrap(maxWidth, label, font) {\n    var text = label;\n    var resultText = [];\n    var currentLength = 0;\n    var totalWidth = measureText(label, font).width;\n    var totalLength = label.length;\n    if (maxWidth >= totalWidth) {\n        resultText.push(label);\n        return resultText;\n    }\n    else {\n        for (var i = label.length; i > currentLength; i--) {\n            var sliceString = label.slice(currentLength, i);\n            totalWidth = measureText(sliceString, font).width;\n            if (totalWidth <= maxWidth) {\n                resultText.push(sliceString);\n                currentLength += sliceString.length;\n                if (totalLength === currentLength) {\n                    return resultText;\n                }\n                i = totalLength + 1;\n            }\n        }\n    }\n    return resultText;\n}\n/**\n * hide function\n */\nexport function hide(maxWidth, maxHeight, text, font) {\n    var hideText = text;\n    var textSize = measureText(text, font);\n    hideText = (textSize.width > maxWidth || textSize.height > maxHeight) ? ' ' : text;\n    return hideText;\n}\nexport function orderByArea(a, b) {\n    if (a['itemArea'] === b['itemArea']) {\n        return 0;\n    }\n    else if (a['itemArea'] < b['itemArea']) {\n        return 1;\n    }\n    return -1;\n}\nexport function removeClassNames(elements, type, treemap) {\n    var opacity;\n    var process = true;\n    var element;\n    var stroke;\n    var strokeWidth;\n    var fill;\n    var options = {};\n    for (var j = 0; j < elements.length; j++) {\n        element = elements[j].childNodes[0];\n        options = treemap.layout.renderItems[element.id.split('_')[6]]['options'];\n        applyOptions(element, options);\n        elements[j].classList.remove(type);\n        j -= 1;\n    }\n}\nexport function applyOptions(element, options) {\n    element.setAttribute('opacity', options['opacity']);\n    element.setAttribute('fill', options['fill']);\n    element.setAttribute('stroke', options['border']['color']);\n    element.setAttribute('stroke-width', options['border']['width']);\n}\nexport function textFormatter(format, data, treemap) {\n    if (isNullOrUndefined(format)) {\n        return null;\n    }\n    var keys = Object.keys(data);\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n        format = format.split('${' + key + '}').join(formatValue(data[key], treemap).toString());\n    }\n    return format;\n}\nexport function formatValue(value, treemap) {\n    var formatValue;\n    var formatFunction;\n    if (treemap.format && !isNaN(Number(value))) {\n        formatFunction = treemap.intl.getNumberFormat({ format: treemap.format, useGrouping: treemap.useGroupingSeparator });\n        formatValue = formatFunction(Number(value));\n    }\n    else {\n        formatValue = value;\n    }\n    return formatValue ? formatValue : '';\n}\n/** @private */\nvar ColorValue = /** @class */ (function () {\n    function ColorValue(r, g, b) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n    }\n    return ColorValue;\n}());\nexport { ColorValue };\n/** @private */\nexport function convertToHexCode(value) {\n    return '#' + componentToHex(value.r) + componentToHex(value.g) + componentToHex(value.b);\n}\n/** @private */\nexport function componentToHex(value) {\n    var hex = value.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n}\n/** @private */\nexport function convertHexToColor(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? new ColorValue(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) :\n        new ColorValue(255, 255, 255);\n}\n/** @private */\nexport function colorNameToHex(color) {\n    var element;\n    color = color === 'transparent' ? 'white' : color;\n    element = document.getElementById('treeMapMeasureText');\n    element.style.color = color;\n    color = window.getComputedStyle(element).color;\n    var exp = /^(rgb|hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/;\n    var isRGBValue = exp.exec(color);\n    return convertToHexCode(new ColorValue(parseInt(isRGBValue[3], 10), parseInt(isRGBValue[4], 10), parseInt(isRGBValue[5], 10)));\n}\n/** @private */\nexport function drawSymbol(location, shape, size, url, options, label) {\n    var functionName = 'Path';\n    var svgRenderer = new SvgRenderer('');\n    var temp = renderLegendShape(location, size, shape, options, url);\n    var htmlElement = svgRenderer['draw' + temp.functionName](temp.renderOption);\n    htmlElement.setAttribute('aria-label', label);\n    return htmlElement;\n}\n/** @private */\nexport function renderLegendShape(location, size, shape, options, url) {\n    var renderPath;\n    var functionName = 'Path';\n    var shapeWidth = size.width;\n    var shapeHeight = size.height;\n    var shapeX = location.x;\n    var shapeY = location.y;\n    var x = location.x + (-shapeWidth / 2);\n    var y = location.y + (-shapeHeight / 2);\n    switch (shape) {\n        case 'Circle':\n        case 'Bubble':\n            functionName = 'Ellipse';\n            merge(options, { 'rx': shapeWidth / 2, 'ry': shapeHeight / 2, 'cx': shapeX, 'cy': shapeY });\n            break;\n        case 'VerticalLine':\n            renderPath = 'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' '\n                + (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Diamond':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + shapeY + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Rectangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Triangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'InvertedTriangle':\n            renderPath = 'M' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX - (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Pentagon':\n            var eq = 72;\n            var xValue = void 0;\n            var yValue = void 0;\n            for (var i = 0; i <= 5; i++) {\n                xValue = (shapeWidth / 2) * Math.cos((Math.PI / 180) * (i * eq));\n                yValue = (shapeWidth / 2) * Math.sin((Math.PI / 180) * (i * eq));\n                if (i === 0) {\n                    renderPath = 'M' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ';\n                }\n                else {\n                    renderPath = renderPath.concat('L' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ');\n                }\n            }\n            renderPath = renderPath.concat('Z');\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Star':\n            renderPath = 'M ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + (location.x - size.width / 2)\n                + ' ' + (location.y + size.height / 6) + ' L ' + (location.x + size.width / 2) + ' ' + (location.y + size.height / 6)\n                + ' L ' + (location.x - size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + location.x + ' ' +\n                (location.y + size.height / 2) + ' L ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' Z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Cross':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' + 'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' ' +\n                (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Image':\n            functionName = 'Image';\n            merge(options, { 'href': url, 'height': shapeHeight, 'width': shapeWidth, x: x, y: y });\n            break;\n    }\n    return { renderOption: options, functionName: functionName };\n}\nexport function isParentItem(data, item) {\n    var isParentItem = false;\n    for (var j = 0; j < data.length; j++) {\n        if (item['levelOrderName'] === data[j]['levelOrderName']) {\n            isParentItem = true;\n            break;\n        }\n    }\n    return isParentItem;\n}\n/**\n * Ajax support for treemap\n */\nvar TreeMapAjax = /** @class */ (function () {\n    function TreeMapAjax(options, type, async, contentType, sendData) {\n        this.dataOptions = options;\n        this.type = type || 'GET';\n        this.async = async || true;\n        this.contentType = contentType;\n        this.sendData = sendData;\n    }\n    return TreeMapAjax;\n}());\nexport { TreeMapAjax };\nexport function removeShape(collection, value) {\n    if (collection.length > 0) {\n        for (var i = 0; i < collection.length; i++) {\n            var item = collection[i];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n        }\n    }\n}\nexport function removeLegend(collection, value) {\n    if (collection.length > 0) {\n        for (var j = 0; j < collection.length; j++) {\n            var item = collection[j];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n            var dataCount = item['ShapeCollection']['Elements'].length;\n            for (var k = 0; k < dataCount; k++) {\n                setColor(item['ShapeCollection']['Elements'][k], item['shapeOldFill'], item['shapeOldOpacity'], item['shapeOldBorderColor'], item['shapeOldBorderWidth']);\n            }\n        }\n    }\n}\nexport function setColor(element, fill, opacity, borderColor, borderWidth) {\n    element.setAttribute('fill', fill);\n    element.setAttribute('opacity', opacity);\n    element.setAttribute('stroke', borderColor);\n    element.setAttribute('stroke-width', borderWidth);\n}\nexport function removeSelectionWithHighlight(collection, element, treemap) {\n    removeShape(collection, 'highlight');\n    element = [];\n    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n}\nexport function getLegendIndex(length, item, treemap) {\n    var index;\n    for (var i = 0; i < length; i++) {\n        var dataLength = treemap.treeMapLegendModule.legendCollections[i]['legendData'].length;\n        for (var j = 0; j < dataLength; j++) {\n            if (treemap.treeMapLegendModule.legendCollections[i]['legendData'][j]['levelOrderName'] === item['levelOrderName']) {\n                index = i;\n                break;\n            }\n        }\n    }\n    return index;\n}\nexport function pushCollection(collection, index, number, legendElement, shapeElement, renderItems, legendCollection) {\n    collection.push({\n        legendEle: legendElement, oldFill: legendCollection[index]['legendFill'],\n        oldOpacity: legendCollection[index]['opacity'], oldBorderColor: legendCollection[index]['borderColor'],\n        oldBorderWidth: legendCollection[index]['borderWidth'],\n        shapeElement: shapeElement, shapeOldFill: renderItems[number]['options']['fill'],\n        shapeOldOpacity: renderItems[number]['options']['opacity'],\n        shapeOldBorderColor: renderItems[number]['options']['border']['color'],\n        shapeOldBorderWidth: renderItems[number]['options']['border']['width']\n    });\n}\n","/**\n * Maps Themes doc\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.mapsTitleFont = {\n        size: '14px',\n        fontWeight: 'Medium',\n        color: '#424242',\n        fontStyle: 'Medium',\n        fontFamily: 'Roboto, Noto, Sans-serif'\n    };\n})(Theme || (Theme = {}));\n/**\n * @private\n * To get the theme style based on treemap theme.\n */\nexport function getThemeStyle(theme) {\n    var style;\n    var color;\n    switch (theme) {\n        case 'MaterialDark':\n            color = '#303030';\n            break;\n        case 'FabricDark':\n            color = '#201F1F';\n            break;\n        case 'BootstrapDark':\n            color = '#1A1A1A';\n            break;\n    }\n    switch (theme) {\n        case 'BootstrapDark':\n        case 'FabricDark':\n        case 'MaterialDark':\n            style = {\n                backgroundColor: color,\n                titleFontColor: '#FFFFFF',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#DADADA',\n                legendTextColor: '#DADADA'\n            };\n            break;\n        case 'HighContrast':\n            style = {\n                backgroundColor: '#000000',\n                titleFontColor: '#FFFFFF',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#FFFFFF',\n                legendTextColor: '#FFFFFF'\n            };\n            break;\n        case 'Bootstrap4':\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#212529',\n                subTitleFontColor: '#212529',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                legendTitleColor: '#212529',\n                legendTextColor: '#212529',\n                fontFamily: 'HelveticaNeue-Medium',\n                fontSize: '16px',\n                legendFontSize: '14px',\n                labelFontFamily: 'HelveticaNeue'\n            };\n            break;\n        default:\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#424242',\n                subTitleFontColor: '#424242',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#353535',\n                legendTextColor: '#353535'\n            };\n            break;\n    }\n    return style;\n}\n","/**\n * TreeMap constants doc\n */\n/**\n * Specifies TreeMap load event name.\n * @private\n */\nexport var load = 'load';\n/**\n * Specifies TreeMap loaded event name.\n * @private\n */\nexport var loaded = 'loaded';\n/**\n * Specifies TreeMap beforePrint event name.\n * @private\n */\nexport var beforePrint = 'beforePrint';\n/**\n * Specifies the itemRendering event name.\n * @private\n */\nexport var itemRendering = 'itemRendering';\n/**\n * Specifies the drilldown start event name.\n * @private\n */\nexport var drillStart = 'drillStart';\n/**\n * Specifies the drilldown end event name.\n * @private\n */\nexport var drillEnd = 'drillEnd';\n/**\n * Specifies the item selected event name.\n * @private\n */\nexport var itemSelected = 'itemSelected';\n/**\n * Specifies the item highlight event name.\n * @private\n */\nexport var itemHighlight = 'itemHighlight';\n/**\n * Specifies the tooltip rendering event name.\n * @private\n */\nexport var tooltipRendering = 'tooltipRendering';\n/**\n * Specifies the item click event name.\n * @private\n */\nexport var itemClick = 'itemClick';\n/**\n * Specifies the item move event name.\n * @private\n */\nexport var itemMove = 'itemMove';\n/**\n * Specifies the mouse click event name.\n * @private\n */\nexport var click = 'click';\n/**\n * Specifies maps double click event name.\n * @private\n */\nexport var doubleClick = 'doubleClick';\n/**\n * Specifies maps right click event name.\n * @private\n */\nexport var rightClick = 'rightClick';\n/**\n * Specifies the mouse move event name.\n * @private\n */\nexport var mouseMove = 'mouseMove';\n/**\n * Specifies legend item rendering event name.\n * @private\n */\nexport var legendItemRendering = 'legendItemRendering';\n/**\n * Specifies legend rendering event name.\n * @private\n */\nexport var legendRendering = 'legendRendering';\n/**\n * Specifies treemap resize event name.\n * @private\n */\nexport var resize = 'resize';\n/**\n * Specifies the font family\n * @private\n */\nexport var defaultFont = 'Roboto, Segoe UI, Noto, Sans-serif';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Maps base doc\n */\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { defaultFont } from './constants';\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#808080')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Configures the treemap margin.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Configures the fonts in treemap.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property(defaultFont)\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * To configure title of the maps.\n */\nvar CommonTitleSettings = /** @class */ (function (_super) {\n    __extends(CommonTitleSettings, _super);\n    function CommonTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"description\", void 0);\n    return CommonTitleSettings;\n}(ChildProperty));\nexport { CommonTitleSettings };\n/**\n * To configure subtitle of the maps.\n */\nvar SubTitleSettings = /** @class */ (function (_super) {\n    __extends(SubTitleSettings, _super);\n    function SubTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], SubTitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], SubTitleSettings.prototype, \"alignment\", void 0);\n    return SubTitleSettings;\n}(CommonTitleSettings));\nexport { SubTitleSettings };\n/**\n * To configure title of the maps.\n */\nvar TitleSettings = /** @class */ (function (_super) {\n    __extends(TitleSettings, _super);\n    function TitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ size: '15px' }, Font)\n    ], TitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], TitleSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({}, SubTitleSettings)\n    ], TitleSettings.prototype, \"subtitleSettings\", void 0);\n    return TitleSettings;\n}(CommonTitleSettings));\nexport { TitleSettings };\nvar ColorMapping = /** @class */ (function (_super) {\n    __extends(ColorMapping, _super);\n    function ColorMapping() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"from\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"to\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"label\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"minOpacity\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"maxOpacity\", void 0);\n    __decorate([\n        Property(true)\n    ], ColorMapping.prototype, \"showLegend\", void 0);\n    return ColorMapping;\n}(ChildProperty));\nexport { ColorMapping };\n/**\n * Configures the legend settings.\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Default')\n    ], LegendSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('transparent')\n    ], LegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property('Circle')\n    ], LegendSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], LegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"shapeBorder\", void 0);\n    __decorate([\n        Complex({}, CommonTitleSettings)\n    ], LegendSettings.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], LegendSettings.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Property('Bottom')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"invertedPointer\", void 0);\n    __decorate([\n        Property('After')\n    ], LegendSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"labelDisplayMode\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Property({ x: 0, y: 0 })\n    ], LegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"showLegendPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"valuePath\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"removeDuplicateLegend\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\nvar InitialDrillSettings = /** @class */ (function (_super) {\n    __extends(InitialDrillSettings, _super);\n    function InitialDrillSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupName\", void 0);\n    return InitialDrillSettings;\n}(ChildProperty));\nexport { InitialDrillSettings };\nvar LeafItemSettings = /** @class */ (function (_super) {\n    __extends(LeafItemSettings, _super);\n    function LeafItemSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LeafItemSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LeafItemSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(0)\n    ], LeafItemSettings.prototype, \"gap\", void 0);\n    __decorate([\n        Property(10)\n    ], LeafItemSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property(1)\n    ], LeafItemSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LeafItemSettings.prototype, \"showLabels\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LeafItemSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Complex({ color: null, size: '12px' }, Font)\n    ], LeafItemSettings.prototype, \"labelStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelTemplate\", void 0);\n    __decorate([\n        Property('Center')\n    ], LeafItemSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Property('Trim')\n    ], LeafItemSettings.prototype, \"interSectAction\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LeafItemSettings.prototype, \"colorMapping\", void 0);\n    return LeafItemSettings;\n}(ChildProperty));\nexport { LeafItemSettings };\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('')\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property('#000816')\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(0.75)\n    ], TooltipSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(['Circle'])\n    ], TooltipSettings.prototype, \"markerShapes\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ fontFamily: defaultFont, size: '13px' }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('#808080')\n    ], SelectionSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], SelectionSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], SelectionSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\nvar HighlightSettings = /** @class */ (function (_super) {\n    __extends(HighlightSettings, _super);\n    function HighlightSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], HighlightSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('#808080')\n    ], HighlightSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], HighlightSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], HighlightSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], HighlightSettings.prototype, \"mode\", void 0);\n    return HighlightSettings;\n}(ChildProperty));\nexport { HighlightSettings };\n/**\n * Options for customizing the tree map levels.\n */\nvar LevelSettings = /** @class */ (function (_super) {\n    __extends(LevelSettings, _super);\n    function LevelSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"groupPath\", void 0);\n    __decorate([\n        Property(0)\n    ], LevelSettings.prototype, \"groupGap\", void 0);\n    __decorate([\n        Property(10)\n    ], LevelSettings.prototype, \"groupPadding\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LevelSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LevelSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Property(1)\n    ], LevelSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LevelSettings.prototype, \"showHeader\", void 0);\n    __decorate([\n        Property(20)\n    ], LevelSettings.prototype, \"headerHeight\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerFormat\", void 0);\n    __decorate([\n        Property('Near')\n    ], LevelSettings.prototype, \"headerAlignment\", void 0);\n    __decorate([\n        Complex({ color: null, size: '13px' }, Font)\n    ], LevelSettings.prototype, \"headerStyle\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LevelSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LevelSettings.prototype, \"colorMapping\", void 0);\n    return LevelSettings;\n}(ChildProperty));\nexport { LevelSettings };\n","import { Rect, itemsToOrder, TextOption, measureText, textTrim, hide, wordWrap, textWrap, getTemplateFunction, convertElement, findLabelLocation, PathOption, textFormatter, colorNameToHex, convertHexToColor, colorMap, measureElement, convertToContainer, convertToRect, getShortestEdge, getArea, orderByArea, isParentItem } from '../utils/helper';\nimport { isNullOrUndefined, createElement, extend } from '@syncfusion/ej2-base';\nimport { Location, findChildren, renderTextElement } from '../utils/helper';\nimport { itemRendering } from '../model/constants';\n/**\n * To calculate and render the shape layer\n */\nvar LayoutPanel = /** @class */ (function () {\n    function LayoutPanel(treemap) {\n        this.treemap = treemap;\n    }\n    /* tslint:disable:no-string-literal */\n    LayoutPanel.prototype.processLayoutPanel = function () {\n        var data;\n        var totalRect;\n        if (this.treemap.levelsOfData && this.treemap.levelsOfData.length > 0) {\n            data = (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                !isNullOrUndefined(this.treemap.initialDrillDown.groupName)) &&\n                (isNullOrUndefined(this.treemap.drilledItems) ? isNullOrUndefined(this.treemap.drilledItems)\n                    : this.treemap.drilledItems.length === 0) ?\n                this.getDrilldownData(this.treemap.levelsOfData[0], [])[0] : this.treemap.levelsOfData[0];\n            totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n            if (!isNullOrUndefined(this.treemap.treeMapLegendModule) && !isNullOrUndefined(this.treemap.totalRect)) {\n                if (this.treemap.legendSettings.position !== 'Float') {\n                    totalRect = this.treemap.totalRect;\n                }\n            }\n            if (!isNullOrUndefined(this.treemap.currentLevel) &&\n                (isNullOrUndefined(this.treemap.drilledItems) ? !isNullOrUndefined(this.treemap.drilledItems)\n                    : this.treemap.drilledItems.length !== 0)) {\n                var count = this.treemap.drilledItems.length - 1;\n                var x = this.treemap.drilledItems[count]['data'];\n                var y = new Object();\n                y[this.treemap.drilledItems[count]['data']['groupName']] = [x];\n                if (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) && !this.treemap.enableBreadcrumb) {\n                    this.treemap.currentLevel = this.treemap.drilledItems[count]['data']['groupIndex'];\n                }\n                this.calculateLayoutItems(y || this.treemap.levelsOfData[0], totalRect);\n                this.renderLayoutItems(y || this.treemap.levelsOfData[0]);\n            }\n            else {\n                if (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                    (isNullOrUndefined(this.treemap.drilledItems) ? isNullOrUndefined(this.treemap.drilledItems)\n                        : this.treemap.drilledItems.length === 0)) {\n                    this.treemap.currentLevel = this.treemap.initialDrillDown.groupIndex;\n                }\n                this.calculateLayoutItems(data || this.treemap.levelsOfData[0], totalRect);\n                this.renderLayoutItems(data || this.treemap.levelsOfData[0]);\n            }\n        }\n    };\n    LayoutPanel.prototype.getDrilldownData = function (data, drillData) {\n        var treemap = this.treemap;\n        var newData = {};\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0 && drillData.length === 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (child[i]['groupIndex'] === treemap.initialDrillDown.groupIndex &&\n                    child[i]['name'] === treemap.initialDrillDown.groupName) {\n                    child[i]['isDrilled'] = true;\n                    newData[child[i]['groupName']] = [child[i]];\n                    drillData.push(newData);\n                }\n            }\n            for (var j = 0; j < child.length; j++) {\n                this.getDrilldownData(child[j], drillData);\n            }\n        }\n        return drillData;\n    };\n    LayoutPanel.prototype.calculateLayoutItems = function (data, rect) {\n        this.renderItems = [];\n        this.parentData = [];\n        if (!isNullOrUndefined(this.treemap.weightValuePath)) {\n            if (this.treemap.layoutType.indexOf('SliceAndDice') > -1) {\n                this.computeSliceAndDiceDimensional(data, rect);\n            }\n            else {\n                rect.height = rect.height + rect.y;\n                rect.width = rect.width + rect.x;\n                this.computeSquarifyDimensional(data, rect);\n            }\n        }\n    };\n    LayoutPanel.prototype.computeSliceAndDiceDimensional = function (data, coords) {\n        var leafItem = this.treemap.leafItemSettings;\n        var rect;\n        var groups = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        var children = findChildren(data)['values'];\n        var gap;\n        var headerHeight;\n        if (children && children.length > 0) {\n            this.sliceAndDiceProcess(children, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < children.length; i++) {\n                    groupIndex = children[i]['groupIndex'];\n                    isLeafItem = (groups.length === 0 || groupIndex === groups.length);\n                    gap = isLeafItem ? leafItem.gap : groups[groupIndex].groupGap;\n                    headerHeight = groups.length === 0 ? 0 : groups[groupIndex] ? groups[groupIndex].showHeader ?\n                        groups[groupIndex].headerHeight : 0 : groups[groupIndex - 1].showHeader ? groups[groupIndex - 1].headerHeight : 0;\n                    rect = children[i]['rect'];\n                    rect = new Rect(rect.x + (gap / 2), rect.y + (headerHeight + (gap / 2)), rect.width - gap, Math.abs(rect.height - (gap + headerHeight)));\n                    this.computeSliceAndDiceDimensional(children[i], rect);\n                }\n            }\n        }\n        return data;\n    };\n    LayoutPanel.prototype.sliceAndDiceProcess = function (processData, rect) {\n        var parentArea = rect.height * rect.width;\n        var levels = this.treemap.levels;\n        var childValue;\n        var alottedValue = 0;\n        var totalWeight = 0;\n        processData.forEach(function (data) { totalWeight += data['weight']; });\n        processData.forEach(function (child) {\n            child['weightArea'] = parentArea * child['weight'] / totalWeight;\n        });\n        var isHorizontal = (this.treemap.layoutType === 'SliceAndDiceAuto') ? (rect.width > rect.height) :\n            (this.treemap.layoutType === 'SliceAndDiceHorizontal');\n        processData.sort(itemsToOrder);\n        for (var i = 0; i < processData.length; i++) {\n            var item = processData[i];\n            item['isLeafItem'] = (levels.length === 0) || ((this.treemap.isHierarchicalData ||\n                isNullOrUndefined(this.treemap.leafItemSettings.labelPath)) ?\n                item['groupIndex'] === levels.length - 1 : item['groupIndex'] === this.treemap.levels.length);\n            if (isHorizontal) {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.height;\n                if (alottedValue <= rect.width) {\n                    processData[i]['rect'] = new Rect(alottedValue + rect.x, rect.y, childValue, rect.height);\n                }\n            }\n            else {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.width;\n                if (alottedValue <= rect.height) {\n                    processData[i]['rect'] = new Rect(rect.x, alottedValue + rect.y, rect.width, childValue);\n                }\n            }\n            alottedValue += childValue;\n            this.renderItems.push(processData[i]);\n        }\n    };\n    LayoutPanel.prototype.computeSquarifyDimensional = function (data, coords) {\n        var leaf = this.treemap.leafItemSettings;\n        var rect;\n        var levels = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        var item;\n        var child = findChildren(data)['values'];\n        var index;\n        var gap;\n        var padding;\n        var headerHeight;\n        if (child && child.length > 0) {\n            if (this.parentData.length === 0) {\n                this.parentData = [];\n                this.parentData.push(child);\n            }\n            this.calculateChildrenLayout(data, child, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    item = child[i];\n                    index = item['groupIndex'];\n                    rect = item['rect'];\n                    gap = (item['isLeafItem'] ? leaf.gap : levels[index].groupGap) / 2;\n                    padding = (item['isLeafItem'] ? leaf.padding : levels[index].groupPadding) / 2;\n                    headerHeight = this.treemap.isHierarchicalData ? index === 0 && item['isLeafItem'] ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0 : (levels.length === 0) ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0;\n                    rect = new Rect(rect.x + padding, rect.y + (headerHeight + padding), rect.width - padding, rect.height - padding);\n                    if (!item['isLeafItem'] && item['weight'] > 0) {\n                        this.computeSquarifyDimensional(child[i], rect);\n                    }\n                }\n            }\n        }\n    };\n    LayoutPanel.prototype.calculateChildrenLayout = function (parent, children, coords) {\n        this.computeTotalArea(children, getArea(coords));\n        children.sort(orderByArea);\n        this.performRowsLayout(children, [], coords, []);\n    };\n    LayoutPanel.prototype.performRowsLayout = function (data, currentRow, rect, stack) {\n        var dataLength = data.length;\n        if (dataLength === 0) {\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            var newStack = stack.concat(newCoordinates);\n            return newStack;\n        }\n        var width = getShortestEdge(rect);\n        var nextDatum = data[0];\n        var restData = data.slice(1, dataLength);\n        if (this.aspectRatio(currentRow, nextDatum, width)) {\n            var newRow = currentRow.concat(nextDatum);\n            return this.performRowsLayout(restData, newRow, rect, stack);\n        }\n        else {\n            var currentRowLength = currentRow.length;\n            var valueSum = 0;\n            for (var i = 0; i < currentRowLength; i += 1) {\n                valueSum += currentRow[i]['itemArea'];\n            }\n            var newContainer = this.cutArea(rect, valueSum);\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            var newStack = stack.concat(newCoordinates);\n            return this.performRowsLayout(data, [], newContainer, newStack);\n        }\n    };\n    LayoutPanel.prototype.aspectRatio = function (currentRow, nextDatum, length) {\n        if (currentRow.length === 0) {\n            return true;\n        }\n        else {\n            var newRow = currentRow.concat(nextDatum);\n            var currentMaxAspectRatio = this.findMaxAspectRatio(currentRow, length);\n            var newMaxAspectRatio = this.findMaxAspectRatio(newRow, length);\n            return (currentMaxAspectRatio >= newMaxAspectRatio);\n        }\n    };\n    LayoutPanel.prototype.findMaxAspectRatio = function (row, length) {\n        var rowLength = row.length;\n        var minArea = Infinity;\n        var maxArea = -Infinity;\n        var sumArea = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            var area = row[i]['itemArea'];\n            if (area < minArea) {\n                minArea = area;\n            }\n            if (area > maxArea) {\n                maxArea = area;\n            }\n            sumArea += area;\n        }\n        var result = Math.max((Math.pow(length, 2)) * maxArea / (Math.pow(sumArea, 2)), (Math.pow(sumArea, 2)) /\n            ((Math.pow(length, 2)) * minArea));\n        return result;\n    };\n    LayoutPanel.prototype.cutArea = function (rect, area) {\n        var newContainer = convertToContainer(rect);\n        var width = newContainer.width;\n        var height = newContainer.height;\n        var xOffset = newContainer.x;\n        var yOffset = newContainer.y;\n        if (width >= height) {\n            var areaWidth = area / height;\n            var newWidth = width - areaWidth;\n            var container = {\n                x: xOffset + areaWidth,\n                y: yOffset,\n                width: newWidth,\n                height: height,\n            };\n            return convertToRect(container);\n        }\n        else {\n            var areaHeight = area / width;\n            var newHeight = height - areaHeight;\n            var container = {\n                x: xOffset,\n                y: yOffset + areaHeight,\n                width: width,\n                height: newHeight,\n            };\n            return convertToRect(container);\n        }\n    };\n    LayoutPanel.prototype.getCoordinates = function (row, rect) {\n        var container = convertToContainer(rect);\n        var headerHeight;\n        var width = container.width;\n        var height = container.height;\n        var xOffset = container.x;\n        var yOffset = container.y;\n        var rowLength = row.length;\n        var levels = this.treemap.levels;\n        var leaf = this.treemap.leafItemSettings;\n        var index;\n        var valueSum = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            valueSum += row[i]['itemArea'];\n        }\n        var areaWidth = valueSum / height;\n        var areaHeight = valueSum / width;\n        var subXOffset = xOffset;\n        var subYOffset = yOffset;\n        var padding;\n        var coordinates = [];\n        var isParent;\n        var gap;\n        var parentRect;\n        for (var i = 0; i < rowLength; i += 1) {\n            var item = row[i];\n            index = item['groupIndex'];\n            item['isLeafItem'] = (levels.length === 0) || (this.treemap.isHierarchicalData ? index === levels.length :\n                isNullOrUndefined(leaf.labelPath) ? false : index === levels.length);\n            isParent = isParentItem(this.parentData[0], item);\n            parentRect = isParent ? this.treemap.areaRect : item['parent'].rect;\n            padding = item['isLeafItem'] ? leaf.padding : levels[index].groupPadding;\n            if (width >= height) {\n                var y1 = subYOffset + item['itemArea'] / areaWidth;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: subXOffset + areaWidth,\n                    height: y1,\n                };\n                subYOffset = y1;\n            }\n            else {\n                var x1 = subXOffset + item['itemArea'] / areaHeight;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: x1,\n                    height: subYOffset + areaHeight,\n                };\n                subXOffset = x1;\n            }\n            if (item['weight'] > 0 && (isParent || (Math.round(rect.y + (padding / 2)) <=\n                Math.round(parentRect.y + (parentRect.height - parentRect.y)) && Math.round(rect.x + (padding / 2)) <=\n                Math.round(parentRect.x + (parentRect.width - parentRect.x))))) {\n                this.renderItems.push(item);\n                coordinates.push(item);\n            }\n        }\n        return coordinates;\n    };\n    LayoutPanel.prototype.computeTotalArea = function (data, area) {\n        var dataLength = data.length;\n        var dataSum = 0;\n        var result = [];\n        for (var i = 0; i < dataLength; i += 1) {\n            var dataLength_1 = data.length;\n            var dataSum_1 = 0;\n            for (var i_1 = 0; i_1 < dataLength_1; i_1 += 1) {\n                dataSum_1 += data[i_1]['weight'];\n            }\n            var multiplier = area / dataSum_1;\n            var datum = void 0;\n            for (var j = 0; j < dataLength_1; j++) {\n                datum = data[j];\n                datum['itemArea'] = datum['weight'] * multiplier;\n                result.push(datum);\n            }\n        }\n        return result;\n    };\n    LayoutPanel.prototype.onDemandProcess = function (childItems) {\n        var parentItem = new Object();\n        var totalRect;\n        parentItem = childItems[0]['parent'];\n        this.treemap.currentLevel = parentItem['isDrilled'] ? parentItem['groupIndex'] : null;\n        var parentItemGroupname = new Object();\n        if (isNullOrUndefined(parentItem['groupName'])) {\n            parentItemGroupname = parentItem;\n        }\n        else {\n            parentItemGroupname[parentItem['groupName']] = [parentItem];\n        }\n        totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n        if (!isNullOrUndefined(this.treemap.treeMapLegendModule) && !isNullOrUndefined(this.treemap.totalRect)) {\n            totalRect = this.treemap.totalRect;\n        }\n        var count = this.treemap.levels.length;\n        for (var i = 0; i < count; i++) {\n            var levelCount = childItems[0]['groupIndex'];\n            if (count === levelCount) {\n                this.treemap.levels[count] = this.treemap.levels[i];\n            }\n            else {\n                this.treemap.levels.splice(count - 1, 1);\n            }\n        }\n        this.calculateLayoutItems(parentItemGroupname, totalRect);\n        this.renderLayoutItems(parentItemGroupname);\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    LayoutPanel.prototype.renderLayoutItems = function (renderData) {\n        var textCollection = [];\n        var position;\n        var treeMap = this.treemap;\n        var colorMapping;\n        var txtVisible;\n        var getItemColor;\n        var eventArgs;\n        this.renderer = treeMap.renderer;\n        var trimHeader;\n        var textLocation = new Location(0, 0);\n        var pathOptions;\n        var elementID = treeMap.element.id;\n        var index;\n        var templatePosition;\n        var mode = treeMap.layoutType;\n        var rect;\n        var format;\n        var interSectAction = this.treemap.leafItemSettings.interSectAction;\n        var textSize;\n        var fill;\n        var item;\n        var renderText;\n        var opacity;\n        var padding = 5;\n        var rectPath = '';\n        var isRender;\n        var secondaryEle = document.getElementById(treeMap.element.id + '_Secondary_Element');\n        var groupId;\n        var textOptions;\n        var templateEle;\n        var gap;\n        var textStyle;\n        var levels = treeMap.levels;\n        this.layoutGroup = this.renderer.createGroup({ id: elementID + '_TreeMap_' + mode + '_Layout' });\n        var itemGroup;\n        var level;\n        var template;\n        var border;\n        var templateGroup = createElement('div', {\n            id: treeMap.element.id + '_Label_Template_Group',\n            className: 'template',\n            styles: 'overflow: hidden; position: absolute;pointer-events: none;' +\n                'top:' + treeMap.areaRect.y + 'px;' +\n                'left:' + treeMap.areaRect.x + 'px;' +\n                'height:' + treeMap.areaRect.height + 'px;' +\n                'width:' + treeMap.areaRect.width + 'px;'\n        });\n        var isLeafItem = false;\n        var leaf = treeMap.leafItemSettings;\n        var childItems;\n        var connectorText;\n        for (var i = 0; i < this.renderItems.length; i++) {\n            item = this.renderItems[i];\n            index = item['groupIndex'];\n            if (this.treemap.drillDownView && isNullOrUndefined(this.treemap.currentLevel)\n                && index > 0 || this.treemap.drillDownView\n                && index > (this.treemap.currentLevel + 1)) {\n                continue;\n            }\n            rect = item['rect'];\n            isLeafItem = item['isLeafItem'];\n            groupId = elementID + '_Level_Index_' + index + '_Item_Index_' + i;\n            itemGroup = this.renderer.createGroup({ id: groupId + '_Group' });\n            gap = (isLeafItem ? leaf.gap : levels[index].groupGap) / 2;\n            var treemapItemRect = this.treemap.totalRect ? convertToContainer(this.treemap.totalRect) : this.treemap.areaRect;\n            if (treeMap.layoutType === 'Squarified') {\n                rect.width = Math.abs(rect.x - rect.width) - gap;\n                rect.height = Math.abs(rect.y - rect.height) - gap;\n            }\n            if (treeMap.renderDirection === 'TopRightBottomLeft') {\n                rect.x = (treemapItemRect.x + treemapItemRect.width) - rect.width - Math.abs(treemapItemRect.x - rect.x);\n            }\n            else if (treeMap.renderDirection === 'BottomLeftTopRight') {\n                rect.y = (treemapItemRect.y + treemapItemRect.height) - rect.height - Math.abs(treemapItemRect.y - rect.y);\n            }\n            else if (treeMap.renderDirection === 'BottomRightTopLeft') {\n                rect.x = (treemapItemRect.x + treemapItemRect.width) - rect.width - Math.abs(treemapItemRect.x - rect.x);\n                rect.y = (treemapItemRect.y + treemapItemRect.height) - rect.height - Math.abs(treemapItemRect.y - rect.y);\n            }\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[index].colorMapping;\n            getItemColor = this.getItemColor(isLeafItem, item);\n            fill = getItemColor['fill'];\n            opacity = getItemColor['opacity'];\n            format = isLeafItem ? leaf.labelFormat : (levels[index]).headerFormat;\n            var levelName = void 0;\n            txtVisible = isLeafItem ? leaf.showLabels : (levels[index]).showHeader;\n            if (index === this.treemap.currentLevel) {\n                if (this.treemap.enableBreadcrumb) {\n                    var re = /#/gi;\n                    connectorText = '#' + this.treemap.breadcrumbConnector + '#';\n                    levelName = item['levelOrderName'].replace(re, connectorText);\n                    levelName = index !== 0 ? '#' + levelName : levelName;\n                }\n                else {\n                    levelName = item['name'];\n                }\n            }\n            else {\n                if (this.treemap.enableBreadcrumb) {\n                    item['isDrilled'] = false;\n                }\n                levelName = item['name'];\n            }\n            renderText = textFormatter(format, item['data'], this.treemap) || levelName;\n            childItems = findChildren(item)['values'];\n            renderText = !isLeafItem && childItems && childItems.length > 0 && this.treemap.enableDrillDown ?\n                !item['isDrilled'] ? treeMap.enableRtl ? renderText + ' [+]' : '[+] ' + renderText :\n                    treeMap.enableRtl ? renderText + ' [-]' : '[-] ' + renderText : renderText;\n            textStyle = (isLeafItem ? leaf.labelStyle : levels[index].headerStyle);\n            textStyle.fontFamily = this.treemap.themeStyle.labelFontFamily || textStyle.fontFamily;\n            border = isLeafItem ? leaf.border : levels[index].border;\n            position = !isLeafItem ? (levels[index].headerAlignment) === 'Near' ? 'TopLeft' : (levels[index].headerAlignment) === 'Center' ?\n                'TopCenter' : 'TopRight' : leaf.labelPosition;\n            templatePosition = isLeafItem ? leaf.templatePosition : levels[index].templatePosition;\n            template = isLeafItem ? leaf.labelTemplate : levels[index].headerTemplate;\n            item['options'] = { border: border, opacity: opacity, fill: fill };\n            eventArgs = {\n                cancel: false, name: itemRendering, treemap: this.treemap,\n                currentItem: item, RenderItems: this.renderItems, options: item['options']\n            };\n            this.treemap.trigger(itemRendering, eventArgs);\n            if (!eventArgs.cancel) {\n                rectPath = ' M ' + rect.x + ' ' + rect.y + ' L ' + (rect.x + rect.width) + ' ' + rect.y +\n                    ' L ' + (rect.x + rect.width) + ' ' + (rect.y + rect.height) + ' L ' + rect.x + ' ' + (rect.y + rect.height) + 'z';\n                pathOptions = new PathOption(groupId + '_RectPath', fill, border.width, border.color, opacity, null, rectPath);\n                var path = this.renderer.drawPath(pathOptions);\n                itemGroup.appendChild(path);\n                if (txtVisible) {\n                    this.renderItemText(renderText.toString(), itemGroup, textStyle, rect, interSectAction, groupId, fill, position, connectorText);\n                }\n                if (template) {\n                    templateEle = this.renderTemplate(secondaryEle, groupId, rect, templatePosition, template, item);\n                    templateGroup.appendChild(templateEle);\n                }\n                itemGroup.setAttribute('aria-label', item['name']);\n                itemGroup.setAttribute('tabindex', (this.treemap.tabIndex + i + 2).toString());\n                this.layoutGroup.appendChild(itemGroup);\n            }\n        }\n        if (templateGroup.childNodes.length > 0) {\n            secondaryEle.appendChild(templateGroup);\n        }\n        this.treemap.svgObject.appendChild(this.layoutGroup);\n    };\n    LayoutPanel.prototype.renderItemText = function (text, parentElement, textStyle, rect, interSectAction, groupId, fill, position, connectorText) {\n        var level;\n        var textOptions;\n        var headerPosition;\n        var secondaryEle = document.getElementById(this.treemap.element.id + '_Secondary_Element');\n        var leaf = this.treemap.leafItemSettings;\n        var padding = 5;\n        var textSize;\n        var textLocation;\n        var textCollection = [];\n        var customText;\n        var templateEle;\n        var tspanText = [];\n        var height = 0;\n        var textName;\n        textCollection = ((text.indexOf('<br>')) !== -1) ? text.split('<br>') : null;\n        customText = this.labelInterSectAction(rect, text, textStyle, interSectAction);\n        textSize = measureText(textCollection && textCollection[0] || customText[0], textStyle);\n        if (this.treemap.enableRtl) {\n            var labelSize = measureText(text, textStyle);\n            var drillSymbolCount = text.search('[+]') || text.search('[-]');\n            if (rect.width < labelSize.width && drillSymbolCount > 0) {\n                var label = text.substring(drillSymbolCount - 1, text.length);\n                var drillSymbol = '[+]';\n                var drillSymbolSize = measureText(drillSymbol, textStyle);\n                customText['0'] = textTrim(rect.width - drillSymbolSize.width - padding, customText[0], textStyle) + label;\n            }\n        }\n        textLocation = findLabelLocation(rect, position, textSize, 'Text', this.treemap);\n        if (!isNullOrUndefined(textCollection)) {\n            var collection = [];\n            var texts = null;\n            var maxNumber = [];\n            for (var i = 0; i < textCollection.length; i++) {\n                texts = textTrim((rect.width - 5), textCollection[i], textStyle);\n                textSize = measureText(texts, textStyle);\n                height += textSize.height;\n                maxNumber.push(textSize.width);\n                collection.push(texts);\n            }\n            customText = collection;\n            textSize.width = Math.max.apply(null, maxNumber);\n            textSize.height = height;\n        }\n        if (interSectAction === 'WrapByWord' || interSectAction === 'Wrap' || interSectAction === 'Trim') {\n            for (var j = 0; j < customText.length; j++) {\n                textSize = measureText(customText[j], textStyle);\n                height += textSize.height;\n                if ((rect.height - padding) > height) {\n                    tspanText.push(customText[j]);\n                }\n            }\n            if (interSectAction === 'Wrap' && customText.length !== tspanText.length && tspanText.length) {\n                var collectionLength = tspanText.length - 1;\n                var stringText = tspanText[collectionLength];\n                stringText = stringText.substring(0, (stringText.length - 1)) + '...';\n                tspanText.splice(collectionLength);\n                if (stringText !== '...') {\n                    tspanText.push(stringText);\n                }\n            }\n        }\n        else {\n            textName = customText;\n            tspanText.push(textName);\n        }\n        textOptions = new TextOption(groupId + '_Text', textLocation.x, textLocation.y, 'start', tspanText, '', '', connectorText);\n        renderTextElement(textOptions, textStyle, textStyle.color || this.getSaturatedColor(fill), parentElement);\n    };\n    LayoutPanel.prototype.getItemColor = function (isLeafItem, item) {\n        var treemap = this.treemap;\n        var itemFill = isLeafItem ? treemap.leafItemSettings.fill : treemap.levels[item['groupIndex']].fill;\n        var itemOpacity = isLeafItem ? treemap.leafItemSettings.opacity : treemap.levels[item['groupIndex']].opacity;\n        if (!isNullOrUndefined(this.treemap.defaultLevelData)) {\n            if (this.treemap.defaultLevelData.length > 0) {\n                treemap.levelsOfData = this.treemap.defaultLevelData;\n            }\n        }\n        var parentData = findChildren(treemap.levelsOfData[0])['values'];\n        var colorMapping = isLeafItem ? treemap.leafItemSettings.colorMapping :\n            treemap.levels[item['groupIndex']].colorMapping;\n        if (colorMapping.length > 0) {\n            var option = colorMap(colorMapping, item['data'][this.treemap.equalColorValuePath], item['data'][this.treemap.rangeColorValuePath], item['data'][this.treemap.weightValuePath]);\n            itemFill = !isNullOrUndefined(option['fill']) ? option['fill'] : treemap.leafItemSettings.fill;\n            itemOpacity = option['opacity'];\n        }\n        else {\n            for (var i = 0; i < parentData.length; i++) {\n                if (parentData[i]['levelOrderName'] === item['levelOrderName'].split('#')[0]) {\n                    itemFill = !isNullOrUndefined(itemFill) ? itemFill : !isNullOrUndefined(treemap.colorValuePath) ?\n                        parentData[i]['data'][treemap.colorValuePath] : treemap.palette.length > 0 ?\n                        treemap.palette[i % treemap.palette.length] : '#808080';\n                }\n            }\n        }\n        return { fill: itemFill, opacity: itemOpacity };\n    };\n    /**\n     * To find saturated color for datalabel\n     */\n    LayoutPanel.prototype.getSaturatedColor = function (color) {\n        var saturatedColor = color;\n        saturatedColor = (saturatedColor === 'transparent') ? window.getComputedStyle(document.body, null).backgroundColor : saturatedColor;\n        var rgbValue = convertHexToColor(colorNameToHex(saturatedColor));\n        var contrast = Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000);\n        return contrast >= 128 ? 'black' : 'white';\n    };\n    LayoutPanel.prototype.renderTemplate = function (secondaryEle, groupId, rect, position, template, item) {\n        var templateElement;\n        var labelEle;\n        var templateSize;\n        var templateFn;\n        var templateLocation;\n        if (isNullOrUndefined(template['prototype'])) {\n            var keys = Object.keys(item['data']);\n            for (var i = 0; i < keys.length; i++) {\n                template = template.replace(new RegExp('{{:' + keys[i] + '}}', 'g'), item['data'][keys[i].toString()]);\n            }\n        }\n        templateFn = getTemplateFunction(template);\n        templateElement = templateFn(item['data'], this.treemap);\n        labelEle = convertElement(templateElement, groupId + '_Template', item['data']);\n        templateSize = measureElement(labelEle, secondaryEle);\n        templateLocation = findLabelLocation(rect, position, templateSize, 'Template', this.treemap);\n        labelEle.style.left = templateLocation.x + 'px';\n        labelEle.style.top = templateLocation.y + 'px';\n        return labelEle;\n    };\n    LayoutPanel.prototype.labelInterSectAction = function (rect, text, textStyle, alignment) {\n        var textValue;\n        var maxWidth = rect.width - 10;\n        switch (alignment) {\n            case 'Hide':\n                textValue = [hide(maxWidth, rect.height, text, textStyle)];\n                break;\n            case 'Trim':\n                textValue = [textTrim((maxWidth + 3), text, textStyle)];\n                break;\n            case 'WrapByWord':\n                textValue = wordWrap(maxWidth, text, textStyle);\n                break;\n            case 'Wrap':\n                textValue = textWrap(maxWidth, text, textStyle);\n                break;\n        }\n        return textValue;\n    };\n    return LayoutPanel;\n}());\nexport { LayoutPanel };\n","import { print as printWindow, createElement, isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { getElement } from '../utils/helper';\nimport { beforePrint } from '../model/constants';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\n/**\n * Annotation Module handles the Annotation for Maps\n */\nvar ExportUtils = /** @class */ (function () {\n    /**\n     * Constructor for Maps\n     * @param control\n     */\n    function ExportUtils(control) {\n        this.control = control;\n    }\n    /**\n     * To print the Maps\n     * @param elements\n     */\n    ExportUtils.prototype.print = function (elements) {\n        this.printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        this.printWindow.moveTo(0, 0);\n        this.printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        var argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(elements), name: beforePrint\n        };\n        this.control.trigger(beforePrint, argsData);\n        if (!argsData.cancel) {\n            printWindow(argsData.htmlContent, this.printWindow);\n        }\n    };\n    /**\n     * To get the html string of the Maps\n     * @param elements\n     * @private\n     */\n    ExportUtils.prototype.getHTMLContent = function (elements) {\n        var div = createElement('div');\n        if (elements) {\n            if (elements instanceof Array) {\n                elements.forEach(function (value) {\n                    div.appendChild(getElement(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            div.appendChild(this.control.element.cloneNode(true));\n        }\n        return div;\n    };\n    /**\n     * To export the file as image/svg format\n     * @param type\n     * @param fileName\n     */\n    ExportUtils.prototype.export = function (type, fileName, orientation) {\n        var _this = this;\n        var element = createElement('canvas', {\n            id: 'ej2-canvas',\n            attrs: {\n                'width': this.control.availableSize.width.toString(),\n                'height': this.control.availableSize.height.toString()\n            }\n        });\n        var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n        orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n        var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n            this.control.svgObject.outerHTML +\n            '</svg>';\n        var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n            [(new XMLSerializer()).serializeToString(this.control.svgObject)], { type: 'image/svg+xml' }));\n        if (type === 'SVG') {\n            this.triggerDownload(fileName, type, url, isDownload);\n        }\n        else {\n            var image_1 = new Image();\n            var ctx_1 = element.getContext('2d');\n            image_1.onload = (function () {\n                ctx_1.drawImage(image_1, 0, 0);\n                window.URL.revokeObjectURL(url);\n                if (type === 'PDF') {\n                    var document_1 = new PdfDocument();\n                    var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                    document_1.pageSettings.orientation = orientation;\n                    imageString = imageString.slice(imageString.indexOf(',') + 1);\n                    document_1.pages.add().graphics.drawImage(new PdfBitmap(imageString), 0, 0, (_this.control.availableSize.width - 60), _this.control.availableSize.height);\n                    if (isDownload) {\n                        document_1.save(fileName + '.pdf');\n                        document_1.destroy();\n                    }\n                }\n                else {\n                    _this.triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                }\n            });\n            image_1.src = url;\n        }\n    };\n    /**\n     * To trigger the download element\n     * @param fileName\n     * @param type\n     * @param url\n     */\n    ExportUtils.prototype.triggerDownload = function (fileName, type, url, isDownload) {\n        createElement('a', {\n            attrs: {\n                'download': fileName + '.' + type.toLocaleLowerCase(),\n                'href': url\n            }\n        }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n            view: window,\n            bubbles: false,\n            cancelable: true\n        }));\n    };\n    return ExportUtils;\n}());\nexport { ExportUtils };\n","/**\n * Tree Map Component\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, NotifyPropertyChanges, Property, extend, Ajax } from '@syncfusion/ej2-base';\nimport { Complex, Collection } from '@syncfusion/ej2-base';\nimport { Event, Internationalization } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { isNullOrUndefined, createElement, EventHandler, Browser, remove } from '@syncfusion/ej2-base';\nimport { Border, Margin, TitleSettings, LegendSettings, InitialDrillSettings } from './model/base';\nimport { SelectionSettings, TooltipSettings, LevelSettings, LeafItemSettings, HighlightSettings, } from './model/base';\nimport { Size, stringToNumber, RectOption, Rect, textTrim, measureText, findChildren } from '../treemap/utils/helper';\nimport { removeClassNames, removeShape } from '../treemap/utils/helper';\nimport { findPosition, TextOption, renderTextElement, isContainsData, TreeMapAjax } from '../treemap/utils/helper';\nimport { load, loaded, drillStart, drillEnd } from '../treemap/model/constants';\nimport { itemClick, itemMove, click, mouseMove, resize, doubleClick, rightClick } from '../treemap/model/constants';\nimport { LayoutPanel } from './layout/render-panel';\nimport { ExportUtils } from '../treemap/utils/export';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { getThemeStyle } from './model/theme';\n/**\n * Represents the TreeMap control.\n * ```html\n * <div id=\"container\"/>\n * <script>\n *   var treemap = new TreeMap();\n *   treemap.appendTo(\"#container\");\n * </script>\n * ```\n */\nvar TreeMap = /** @class */ (function (_super) {\n    __extends(TreeMap, _super);\n    /**s\n     * Constructor for TreeMap component.\n     */\n    function TreeMap(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.orientation = 'Horizontal';\n        /** @private */\n        _this.drilledItems = [];\n        /** @private */\n        _this.defaultLevelData = [];\n        /** @private */\n        _this.isHierarchicalData = false;\n        return _this;\n    }\n    TreeMap.prototype.preRender = function () {\n        this.trigger(load, { treemap: this });\n        this.initPrivateVariable();\n        this.unWireEVents();\n        this.createSvg();\n        this.wireEVents();\n        this.setCulture();\n    };\n    TreeMap.prototype.render = function () {\n        this.createSecondaryElement();\n        this.addTabIndex();\n        this.themeStyle = getThemeStyle(this.theme);\n        this.renderBorder();\n        this.renderTitle(this.titleSettings, 'title', null, null);\n        if (!isNullOrUndefined(this.levelsOfData)) {\n            this.defaultLevelData = this.levelsOfData;\n        }\n        this.processDataManager();\n    };\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable:no-eval */\n    TreeMap.prototype.processDataManager = function () {\n        var _this = this;\n        var dataModule;\n        var queryModule;\n        var ajaxModule;\n        var localAjax;\n        if (this.dataSource instanceof DataManager) {\n            dataModule = this.dataSource;\n            queryModule = this.query instanceof Query ? this.query : new Query();\n            var dataManager = dataModule.executeQuery(queryModule);\n            dataManager.then(function (e) {\n                _this.dataSource = e['result'];\n                _this.renderTreeMapElements();\n            });\n        }\n        else if (this.dataSource instanceof TreeMapAjax) {\n            localAjax = this.dataSource;\n            ajaxModule = new Ajax(localAjax.dataOptions, localAjax.type, localAjax.async, localAjax.contentType);\n            ajaxModule.onSuccess = function (args) {\n                _this.dataSource = JSON.parse('[' + args + ']')[0];\n                _this.renderTreeMapElements();\n            };\n            ajaxModule.send(localAjax.sendData);\n        }\n        else {\n            this.renderTreeMapElements();\n        }\n    };\n    TreeMap.prototype.renderTreeMapElements = function () {\n        this.processingData();\n        if (this.treeMapLegendModule && this.legendSettings.visible) {\n            this.treeMapLegendModule.renderLegend();\n        }\n        this.layout.processLayoutPanel();\n        this.element.appendChild(this.svgObject);\n        this.elementChange();\n        this.trigger(loaded, { treemap: this });\n    };\n    TreeMap.prototype.createSvg = function () {\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n        var containerWidth = this.element.clientWidth;\n        var containerHeight = this.element.clientHeight;\n        this.availableSize = new Size(stringToNumber(this.width, containerWidth) || containerWidth || 600, stringToNumber(this.height, containerHeight) || containerHeight || 450);\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To initilize the private varibales of treemap.\n     */\n    TreeMap.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-treemap').length;\n            this.element.id = 'treemap_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.layout = new LayoutPanel(this);\n    };\n    TreeMap.prototype.createSecondaryElement = function () {\n        var secondaryEle = document.getElementById(this.element.id + '_Secondary_Element');\n        if (secondaryEle && secondaryEle.childElementCount > 0) {\n            secondaryEle.remove();\n        }\n        if (isNullOrUndefined(document.getElementById(this.element.id + '_Secondary_Element'))) {\n            var secondaryElement = createElement('div', {\n                id: this.element.id + '_Secondary_Element',\n                styles: 'position: absolute;z-index:1;'\n            });\n            this.element.appendChild(secondaryElement);\n        }\n    };\n    TreeMap.prototype.elementChange = function () {\n        if (this.treeMapLegendModule && this.legendSettings.visible && this.treeMapLegendModule.legendGroup && this.layout.layoutGroup) {\n            this.svgObject.insertBefore(this.layout.layoutGroup, this.treeMapLegendModule.legendGroup);\n        }\n    };\n    /**\n     * @private\n     * Render the treemap border\n     */\n    TreeMap.prototype.renderBorder = function () {\n        var width = this.border.width;\n        var borderElement = this.svgObject.querySelector('#' + this.element.id + '_TreeMap_Border');\n        if ((this.border.width > 0 || (this.background || this.themeStyle.backgroundColor)) && isNullOrUndefined(borderElement)) {\n            var borderRect = new RectOption(this.element.id + '_TreeMap_Border', this.background || this.themeStyle.backgroundColor, this.border, 1, new Rect(width / 2, width / 2, this.availableSize.width - width, this.availableSize.height - width));\n            this.svgObject.appendChild(this.renderer.drawRectangle(borderRect));\n        }\n        else if (borderElement) {\n            borderElement.setAttribute('fill', this.background || this.themeStyle.backgroundColor);\n        }\n    };\n    TreeMap.prototype.renderTitle = function (title, type, bounds, groupEle) {\n        var style = title.textStyle;\n        var height;\n        var titlePadding = 10;\n        var width = (this.availableSize.width - this.margin.right - this.margin.left);\n        title.textStyle.fontFamily = this.themeStyle.fontFamily || title.textStyle.fontFamily;\n        title.textStyle.size = this.themeStyle.fontSize || title.textStyle.size;\n        if (title.text) {\n            if (isNullOrUndefined(groupEle)) {\n                groupEle = this.renderer.createGroup({ id: this.element.id + '_Title_Group' });\n            }\n            var trimmedTitle = textTrim(width, title.text, style);\n            var elementSize = measureText(trimmedTitle, style);\n            var rect = (isNullOrUndefined(bounds)) ? new Rect(this.margin.left, this.margin.top, this.availableSize.width, this.availableSize.height) : bounds;\n            var location_1 = findPosition(rect, title.alignment, elementSize, type);\n            var options = new TextOption(this.element.id + '_TreeMap_' + type, location_1.x, location_1.y, 'start', trimmedTitle);\n            var titleBounds = new Rect(location_1.x, location_1.y, elementSize.width, elementSize.height);\n            var element = renderTextElement(options, style, style.color || (type === 'title' ? this.themeStyle.titleFontColor : this.themeStyle.subTitleFontColor), groupEle);\n            element.setAttribute('aria-label', title.description || title.text);\n            element.setAttribute('tabindex', (this.tabIndex + (type === 'title' ? 1 : 2)).toString());\n            if ((type === 'title' && !title.subtitleSettings.text) || (type === 'subtitle')) {\n                height = (this.availableSize.height - titleBounds.y - titlePadding - this.margin.bottom);\n                this.areaRect = new Rect(this.margin.left, titleBounds.y + titlePadding, width, height);\n            }\n            if (type !== 'subtitle' && title.subtitleSettings.text) {\n                this.renderTitle(title.subtitleSettings, 'subtitle', titleBounds, groupEle);\n            }\n            else {\n                this.svgObject.appendChild(groupEle);\n            }\n        }\n        else {\n            height = (this.availableSize.height - this.margin.top - this.margin.bottom);\n            this.areaRect = new Rect(this.margin.left, this.margin.top, width, height);\n        }\n    };\n    TreeMap.prototype.processingData = function () {\n        var _this = this;\n        var path;\n        this.dataSource = this.dataSource;\n        if (!isNullOrUndefined(this.dataSource) && this.dataSource.length > 0 && this.weightValuePath) {\n            this.levelsOfData = [];\n            this.dataSource.map(function (data) {\n                data[_this.weightValuePath] = (data[_this.weightValuePath]) ? data[_this.weightValuePath].toString() :\n                    data[_this.weightValuePath];\n            });\n            this.leafItemSettings.labelPath = this.leafItemSettings.labelPath || this.weightValuePath;\n            this.checkIsHierarchicalData();\n            if (this.levels.length === 0) {\n                var data_1 = new Object();\n                data_1['level'] = 0;\n                path = this.leafItemSettings.labelPath;\n                data_1[path] = [];\n                for (var i = 0; i < this.dataSource.length; i++) {\n                    var child = findChildren(this.dataSource[i])['values'];\n                    if (this.isHierarchicalData && child && child.length > 0) {\n                        child.forEach(function (currentData, dataIndex) {\n                            if (currentData[path]) {\n                                data_1[path].push({\n                                    groupIndex: 0, name: currentData[path], levelOrderName: currentData[path].toString(),\n                                    data: currentData, weight: currentData[_this.weightValuePath]\n                                });\n                            }\n                        });\n                    }\n                    else {\n                        if (this.dataSource[i][path]) {\n                            data_1[path].push({\n                                groupIndex: 0, name: this.dataSource[i][path], levelOrderName: this.dataSource[i][path].toString(), data: this.dataSource[i],\n                                weight: this.dataSource[i][this.weightValuePath]\n                            });\n                        }\n                    }\n                }\n                this.levelsOfData.push(data_1);\n            }\n            else {\n                if (this.isHierarchicalData) {\n                    this.hierarchyData = [];\n                    this.hierarchyData = extend([], this.dataSource, this.hierarchyData, true);\n                    for (var i = 0; i < this.hierarchyData.length; i++) {\n                        this.processHierarchicalData(this.hierarchyData[i], i);\n                    }\n                    this.levelsOfData = this.hierarchyData;\n                }\n                else {\n                    this.processFlatJsonData();\n                    if (this.levelsOfData.length > 1) {\n                        this.reOrderLevelData(this.levelsOfData.length - 1);\n                    }\n                }\n                path = this.levels[0].groupPath;\n            }\n            if (!this.isHierarchicalData) {\n                this.findTotalWeight(this.levelsOfData[0][path], 'Parent');\n            }\n        }\n    };\n    TreeMap.prototype.checkIsHierarchicalData = function () {\n        var child;\n        this.dataSource = this.dataSource;\n        for (var i = 0; i < this.dataSource.length; i++) {\n            child = findChildren(this.dataSource[i])['values'];\n            if (child && child.length) {\n                this.isHierarchicalData = true;\n                break;\n            }\n            else if (i === this.dataSource.length - 1) {\n                this.isHierarchicalData = false;\n            }\n        }\n    };\n    TreeMap.prototype.processHierarchicalData = function (data, dataCount) {\n        var _this = this;\n        var childData;\n        var levelData = [];\n        var newData = new Object();\n        var levelIndex;\n        var path = this.leafItemSettings.labelPath ? this.leafItemSettings.labelPath : this.weightValuePath;\n        var currentData = new Object();\n        var level;\n        var key;\n        newData = findChildren(data);\n        childData = newData ? newData['values'] : null;\n        if (childData && childData.length > 0) {\n            key = newData['key'];\n            for (var i = 0; i < this.levels.length; i++) {\n                if (key === this.levels[i].groupPath) {\n                    level = this.levels[i];\n                    levelIndex = i;\n                }\n            }\n            for (var j = 0; j < childData.length; j++) {\n                childData[j]['name'] = childData[j][path];\n                childData[j]['levelOrderName'] = (levelIndex === 0 ? childData[j]['name'] :\n                    data['levelOrderName'] + '#' + childData[j]['name']) + '';\n                var childItemLevel = childData[j]['levelOrderName'];\n                var childLevel = void 0;\n                if (childItemLevel.search('#') > 0) {\n                    childLevel = childItemLevel.split('#').length - 1;\n                }\n                childData[j]['groupIndex'] = isNullOrUndefined(levelIndex) ? childLevel === this.levels.length\n                    ? this.levels.length : childLevel : levelIndex;\n                if (levelIndex !== 0) {\n                    childData[j]['parent'] = data;\n                }\n                childData[j]['groupName'] = key;\n                childData[j]['data'] = childData[j];\n                childData[j]['isDrilled'] = false;\n                childData[j]['weight'] = childData[j][this.weightValuePath];\n            }\n            childData.forEach(function (currentData) {\n                _this.processHierarchicalData(currentData, dataCount);\n            });\n        }\n        if (dataCount === this.hierarchyData.length - 1) {\n            var mainData_1 = this.hierarchyData[0][this.levels[0].groupPath];\n            for (var k = 0; k < this.hierarchyData.length; k++) {\n                childData = findChildren(this.hierarchyData[k])['values'];\n                if (k !== 0 && childData) {\n                    childData.forEach(function (currentData) { mainData_1.push(currentData); });\n                    this.hierarchyData.splice(k, 1);\n                    k -= 1;\n                }\n            }\n            mainData_1 = this.hierarchyData[0][this.levels[0].groupPath];\n            for (var l = 0; l < mainData_1.length; l++) {\n                newData[this.levels[0].groupPath] = mainData_1;\n                mainData_1[l]['parent'] = newData;\n            }\n        }\n    };\n    /**\n     * Handles the print method for chart control.\n     */\n    TreeMap.prototype.print = function (id) {\n        var exportChart = new ExportUtils(this);\n        exportChart.print(id);\n    };\n    /**\n     * Handles the export method for chart control.\n     * @param type\n     * @param fileName\n     */\n    TreeMap.prototype.export = function (type, fileName, orientation) {\n        var exportMap = new ExportUtils(this);\n        exportMap.export(type, fileName, orientation);\n    };\n    /* tslint:disable:no-string-literal */\n    TreeMap.prototype.processFlatJsonData = function () {\n        this.dataSource = this.dataSource;\n        var groupPath;\n        var childGroupPath;\n        var orderNames = [];\n        var process = false;\n        for (var i = 0; i < this.levels.length + 1; i++) {\n            groupPath = this.levels[i] ? this.levels[i].groupPath : this.leafItemSettings.labelPath;\n            var level = new Object();\n            level['level'] = i;\n            level[groupPath] = [];\n            this.levelsOfData.push(level);\n            for (var j = 0; j < this.dataSource.length; j++) {\n                var currentData = {};\n                var childName = '';\n                if (this.dataSource[j][groupPath]) {\n                    var name_1 = this.dataSource[j][groupPath];\n                    if (i !== 0) {\n                        for (var k = 0; k <= i; k++) {\n                            var childGroupPath_1 = this.levels[k] ? this.levels[k].groupPath : groupPath;\n                            childName += (this.dataSource[j][childGroupPath_1]) + ((k === i) ? '' : '#');\n                        }\n                    }\n                    if (!(orderNames.length > 0 ? orderNames.indexOf(childName ?\n                        childName : name_1) !== -1 : false)) {\n                        currentData['name'] = name_1;\n                        currentData['levelOrderName'] = ((childName) ? childName : name_1) + '';\n                        currentData['groupIndex'] = i;\n                        currentData['isDrilled'] = false;\n                        currentData['groupName'] = groupPath;\n                        currentData['data'] = this.dataSource[j];\n                        this.levelsOfData[this.levelsOfData.length - 1][groupPath].push(currentData);\n                        orderNames.push((childName) ? childName : name_1);\n                    }\n                }\n            }\n        }\n    };\n    TreeMap.prototype.reOrderLevelData = function (start) {\n        var currentName;\n        var currentPath = this.levels[start] ? this.levels[start].groupPath : this.leafItemSettings.labelPath;\n        var prevPath = this.levels[start - 1].groupPath;\n        var currentData = this.levelsOfData[start][currentPath];\n        var previousData = this.levelsOfData[start - 1][prevPath];\n        for (var i = 0; i < currentData.length; i++) {\n            currentName = currentData[i]['levelOrderName'];\n            for (var j = 0; j < previousData.length; j++) {\n                previousData[j][currentPath] = isNullOrUndefined(previousData[j][currentPath]) ? [] : previousData[j][currentPath];\n                if (currentName.indexOf(previousData[j]['levelOrderName']) !== -1) {\n                    if (isNullOrUndefined(currentData[i]['parent'])) {\n                        currentData[i]['parent'] = previousData[j];\n                    }\n                    previousData[j][currentPath].push(currentData[i]);\n                    break;\n                }\n            }\n        }\n        this.findTotalWeight(this.levelsOfData[this.levelsOfData.length - 1][currentPath], 'Child');\n        this.levelsOfData.splice(start, 1);\n        if ((start - 1) > 0) {\n            this.reOrderLevelData(start - 1);\n        }\n    };\n    TreeMap.prototype.findTotalWeight = function (processData, type) {\n        var _this = this;\n        var totalWeight;\n        var childData;\n        var levelName;\n        var start = 0;\n        var split;\n        var groupName;\n        var groupObj = new Object();\n        var _loop_1 = function (i) {\n            totalWeight = 0;\n            groupName = processData[i]['groupName'];\n            split = processData[i]['levelOrderName'].split('#');\n            this_1.dataSource.forEach(function (data) {\n                if (isContainsData(split, processData[i]['levelOrderName'], data, _this)) {\n                    totalWeight += parseFloat(data[_this.weightValuePath]);\n                }\n            });\n            if (type === 'Parent') {\n                groupObj[groupName] = processData;\n                processData[i]['parent'] = groupObj;\n            }\n            processData[i]['weight'] = totalWeight;\n        };\n        var this_1 = this;\n        for (var i = 0; i < processData.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * To unbind event handlers for treemap.\n     */\n    TreeMap.prototype.unWireEVents = function () {\n        EventHandler.remove(this.element, 'click', this.clickOnTreeMap);\n        EventHandler.remove(this.element, 'dblclick', this.doubleClickOnTreeMap);\n        EventHandler.remove(this.element, 'contextmenu', this.rightClickOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap);\n        EventHandler.remove(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap);\n        window.removeEventListener('resize', this.resizeOnTreeMap);\n    };\n    /**\n     * To bind event handlers for treemap.\n     */\n    TreeMap.prototype.wireEVents = function () {\n        EventHandler.add(this.element, 'click', this.clickOnTreeMap, this);\n        EventHandler.add(this.element, 'dblclick', this.doubleClickOnTreeMap, this);\n        EventHandler.add(this.element, 'contextmenu', this.rightClickOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap, this);\n        EventHandler.add(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap, this);\n        window.addEventListener('resize', this.resizeOnTreeMap.bind(this));\n    };\n    /**\n     * Method to set culture for maps\n     */\n    TreeMap.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * To add tab index for treemap element\n     */\n    TreeMap.prototype.addTabIndex = function () {\n        this.element.setAttribute('aria-label', this.description || 'TreeMap Element');\n        this.element.setAttribute('tabindex', this.tabIndex.toString());\n    };\n    /**\n     * To handle the window resize event on treemap.\n     */\n    TreeMap.prototype.resizeOnTreeMap = function (e) {\n        var _this = this;\n        var args = {\n            name: resize,\n            cancel: false,\n            previousSize: this.availableSize,\n            currentSize: new Size(0, 0),\n            treemap: this\n        };\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        if (this.element.classList.contains('e-treemap')) {\n            this.resizeTo = setTimeout(function () {\n                _this.unWireEVents();\n                _this.createSvg();\n                _this.refreshing = true;\n                _this.wireEVents();\n                args.currentSize = _this.availableSize;\n                _this.trigger(resize, args);\n                _this.render();\n            }, 500);\n        }\n    };\n    TreeMap.prototype.clickOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var itemIndex;\n        var clickArgs = { cancel: false, name: click, treemap: this, mouseEvent: e };\n        this.trigger(click, clickArgs);\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            itemIndex = parseFloat(targetId.split('_')[6]);\n            eventArgs = {\n                cancel: false, name: itemClick, treemap: this, item: this.layout.renderItems[itemIndex], mouseEvent: e,\n                groupIndex: this.layout.renderItems[itemIndex]['groupIndex'], groupName: this.layout.renderItems[itemIndex]['name']\n            };\n            this.trigger(itemClick, eventArgs);\n        }\n        var end = new Date().getMilliseconds();\n        var doubleTapTimer1;\n        if (!isNullOrUndefined(this.doubleClick)) {\n            if (!isNullOrUndefined(doubleTapTimer1) && end - doubleTapTimer1 < 500) {\n                this.doubleClickOnTreeMap(e);\n            }\n            doubleTapTimer1 = end;\n        }\n    };\n    TreeMap.prototype.doubleClickOnTreeMap = function (e) {\n        var doubleClickArgs = { cancel: false, name: doubleClick, treemap: this, mouseEvent: e };\n        this.trigger(doubleClick, doubleClickArgs);\n        //this.notify('dblclick', e);\n    };\n    TreeMap.prototype.rightClickOnTreeMap = function (e) {\n        var rightClickArgs = { cancel: false, name: rightClick, treemap: this, mouseEvent: e };\n        this.trigger(rightClick, rightClickArgs);\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMap.prototype.mouseDownOnTreeMap = function (e) {\n        if (e.target.id.indexOf('_Item_Index') > -1) {\n            this.mouseDown = true;\n        }\n        this.notify(Browser.touchStartEvent, e);\n    };\n    TreeMap.prototype.mouseMoveOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var item;\n        var moveArgs = { cancel: false, name: mouseMove, treemap: this, mouseEvent: e };\n        this.trigger(mouseMove, moveArgs);\n        var childItems;\n        this.drillMouseMove = this.mouseDown;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.layout.renderItems[parseFloat(targetId.split('_')[6])];\n            childItems = findChildren(item)['values'];\n            this.element.style.cursor = (!item['isLeafItem'] && childItems && childItems.length > 0 && this.enableDrillDown) ?\n                'pointer' : 'auto';\n            eventArgs = { cancel: false, name: itemMove, treemap: this, item: item, mouseEvent: e };\n            this.trigger(itemMove, eventArgs);\n        }\n        this.notify(Browser.touchMoveEvent, e);\n    };\n    TreeMap.prototype.calculateSelectedTextLevels = function (labelText, item) {\n        //to find the levels by clicking the particular text both for drillDownView as true / false.\n        var drillLevel;\n        var k;\n        var text;\n        var levelLabels = item['levelOrderName'];\n        var levelText = levelLabels.split('#');\n        for (var _i = 0, _a = Object.keys(levelText); _i < _a.length; _i++) {\n            k = _a[_i];\n            if (levelText[k] === labelText) {\n                drillLevel = parseInt(k, 10);\n                text = labelText;\n            }\n        }\n        return { drillLevel: drillLevel, currentLevelLabel: text, levelText: levelText };\n    };\n    TreeMap.prototype.calculatePreviousLevelChildItems = function (labelText, drillLevelValues, item, directLevel) {\n        //By clicking any child items drilldown to the particular level.\n        //At the time store all the previous drilled level items in drilledItems\n        // This condition satisfies while drilldown View is set as false and the text contains '[+]'\n        var text;\n        var p = 0;\n        var levelItems;\n        var text1;\n        var drillTextLevel = this.layout.renderItems[0]['levelOrderName'].split('#').length;\n        for (var h = 0; h < drillTextLevel; h++) {\n            text1 = h === 0 ? drillLevelValues['levelText'][h] : text1 + '#' + drillLevelValues['levelText'][h];\n        }\n        p = drillTextLevel > 1 ? drillTextLevel : p;\n        for (var _i = 0, _a = Object['values'](this.layout.renderItems); _i < _a.length; _i++) {\n            levelItems = _a[_i];\n            var drillLevelText = levelItems['levelOrderName'].split('#');\n            if (drillLevelText[0] === drillLevelValues['levelText'][0]) {\n                text = p === 0 ? isNullOrUndefined(text1) ? text1 : drillLevelValues['levelText'][p] :\n                    directLevel ? text1 : text1 + '#' + drillLevelValues['levelText'][p];\n                if (text === levelItems['levelOrderName']) {\n                    this.drilledItems.push({ name: levelItems['levelOrderName'], data: levelItems });\n                    p++;\n                    directLevel = true;\n                    if (p <= item['groupIndex']) {\n                        text = text + '#' + drillLevelValues['levelText'][p];\n                        text1 = text;\n                    }\n                }\n            }\n        }\n        return directLevel;\n    };\n    TreeMap.prototype.compareSelectedLabelWithDrillDownItems = function (drillLevelValues, item, i) {\n        var drillLevelChild;\n        var newDrillItem = new Object();\n        var b = drillLevelValues['drillLevel'] + 1;\n        if (b === this.drilledItems[i]['data']['groupIndex']) {\n            drillLevelChild = this.drilledItems[i]['data']['parent'];\n            drillLevelChild['isDrilled'] = true;\n            newDrillItem[drillLevelChild[this.drilledItems[i]['data']['groupName']]]\n                = [drillLevelChild];\n            // to remove all the items after matched drilled items\n            this.drilledItems.splice(i, this.drilledItems.length);\n        }\n        else if (drillLevelValues['drillLevel'] === (this.drilledItems.length - 1)\n            || drillLevelValues['drillLevel'] === item['groupIndex']) {\n            newDrillItem[item['groupName']] = [item];\n        }\n        return newDrillItem;\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMap.prototype.mouseEndOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var totalRect;\n        var startEvent;\n        var endEvent;\n        var directLevel = false;\n        var index;\n        var newDrillItem = new Object();\n        var item;\n        var process = true;\n        var layoutID = this.element.id + '_TreeMap_' + this.layoutType + '_Layout';\n        var drillLevel;\n        var templateID = this.element.id + '_Label_Template_Group';\n        var drillLevelValues;\n        if (targetId.indexOf('_Item_Index') > -1 && this.enableDrillDown && !this.drillMouseMove) {\n            e.preventDefault();\n            index = parseFloat(targetId.split('_')[6]);\n            item = this.layout.renderItems[index];\n            var labelText = targetEle.innerHTML;\n            if (this.enableBreadcrumb) {\n                drillLevelValues = this.calculateSelectedTextLevels(labelText, item);\n                drillLevel = drillLevelValues['drillLevel'];\n                if (!this.drillDownView && labelText.search('[+]') !== -1) {\n                    directLevel = this.calculatePreviousLevelChildItems(labelText, drillLevelValues, item, directLevel);\n                }\n            }\n            if (this.levels.length !== 0 && !item['isLeafItem'] && findChildren(item)['values'] &&\n                findChildren(item)['values'].length > 0) {\n                if (this.drilledItems.length > 0) {\n                    item = directLevel ? this.drilledItems[this.drilledItems.length - 1]['data'] : item;\n                    for (var i = 0; i < this.drilledItems.length; i++) {\n                        if (!isNullOrUndefined(drillLevel)) { //Compare the selected text level with drilled items\n                            var drillLength = this.drilledItems.length;\n                            newDrillItem = this.compareSelectedLabelWithDrillDownItems(drillLevelValues, item, i);\n                            if (drillLength !== this.drilledItems.length) {\n                                i -= 1;\n                                break;\n                            }\n                        } //when clicking the levels drill back to the previous level process takes place\n                        if (item['levelOrderName'] === this.drilledItems[i]['name'] && !directLevel && isNullOrUndefined(drillLevel)) {\n                            if (item['groupIndex'] === 0 && item['parent'][item['groupName']] instanceof Array) {\n                                item['isDrilled'] = !(item['isDrilled']);\n                                if (!item['isDrilled']) {\n                                    newDrillItem = item['parent'];\n                                }\n                                else {\n                                    newDrillItem[item['groupName']] = [item];\n                                }\n                            }\n                            else {\n                                item['isDrilled'] = false;\n                                item['parent']['isDrilled'] = true;\n                                item = item['parent'];\n                                newDrillItem[item['groupName']] = [item];\n                            }\n                            this.drilledItems.splice(i, 1);\n                            i -= 1;\n                            break;\n                        }\n                        else if (i === this.drilledItems.length - 1 && isNullOrUndefined(drillLevel)) {\n                            item['isDrilled'] = true; // click the items move to next level.\n                            newDrillItem[item['groupName']] = [item];\n                        }\n                    }\n                }\n                else {\n                    item['isDrilled'] = true;\n                    newDrillItem[item['groupName']] = [item];\n                }\n                startEvent = {\n                    cancel: false, name: drillStart, treemap: this, item: newDrillItem, element: targetEle,\n                    groupIndex: this.enableBreadcrumb && this.drilledItems.length !== 0 && !isNullOrUndefined(drillLevel) ?\n                        this.drilledItems[this.drilledItems.length - 1]['data']['groupIndex'] : item['groupIndex'],\n                    groupName: this.enableBreadcrumb && this.drilledItems.length !== 0 && !isNullOrUndefined(drillLevel) ?\n                        this.drilledItems[this.drilledItems.length - 1]['data']['name'] : item['name'],\n                    rightClick: e.which === 3 ? true : false, childItems: null\n                };\n                this.trigger(drillStart, startEvent);\n                this.currentLevel = item['isDrilled'] && isNullOrUndefined(drillLevel) ? item['groupIndex'] :\n                    (!isNullOrUndefined(drillLevel) && this.enableBreadcrumb && item['isDrilled']) ? drillLevel : null;\n                if (!startEvent.cancel) {\n                    if (document.getElementById(layoutID)) {\n                        document.getElementById(layoutID).remove();\n                    }\n                    totalRect = extend({}, this.areaRect, totalRect, true);\n                    if (this.legendSettings.visible && !isNullOrUndefined(this.treeMapLegendModule)) {\n                        if (!isNullOrUndefined(newDrillItem)) {\n                            this.treeMapLegendModule.legendGroup.textContent = '';\n                            this.treeMapLegendModule.legendGroup = null;\n                            this.treeMapLegendModule.widthIncrement = 0;\n                            this.treeMapLegendModule.heightIncrement = 0;\n                            if (this.enableBreadcrumb && !isNullOrUndefined(drillLevel)) {\n                                this.drilledLegendItems = {\n                                    name: this.drilledItems[this.drilledItems.length - 1]['data']['levelOrderName'],\n                                    data: this.drilledItems[this.drilledItems.length - 1]['data']\n                                };\n                            }\n                            else {\n                                this.drilledLegendItems = { name: item['levelOrderName'], data: item };\n                            }\n                            this.treeMapLegendModule.renderLegend();\n                        }\n                        totalRect = !isNullOrUndefined(this.totalRect) ? this.totalRect : totalRect;\n                    }\n                    if (document.getElementById(templateID)) {\n                        document.getElementById(templateID).remove();\n                    }\n                    if (!isNullOrUndefined(startEvent.childItems) && !startEvent.cancel) {\n                        this.layout.onDemandProcess(startEvent.childItems);\n                    }\n                    else {\n                        this.layout.calculateLayoutItems(newDrillItem, totalRect);\n                        this.layout.renderLayoutItems(newDrillItem);\n                    }\n                }\n                endEvent = { cancel: false, name: drillEnd, treemap: this, renderItems: this.layout.renderItems };\n                this.trigger(drillEnd, endEvent);\n                if (process) {\n                    if (!directLevel && isNullOrUndefined(drillLevel)) {\n                        this.drilledItems.push({ name: item['levelOrderName'], data: item });\n                    }\n                }\n            }\n        }\n        this.mouseDown = false;\n        this.notify(Browser.touchEndEvent, e);\n    };\n    TreeMap.prototype.mouseLeaveOnTreeMap = function (e) {\n        if (this.treeMapTooltipModule) {\n            this.treeMapTooltipModule.removeTooltip();\n        }\n        if (this.treeMapLegendModule) {\n            this.treeMapLegendModule.removeInteractivePointer();\n        }\n        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', this);\n        if (this.treeMapHighlightModule) {\n            removeShape(this.treeMapHighlightModule.shapeHighlightCollection, 'highlight');\n            this.treeMapHighlightModule.highLightId = '';\n        }\n    };\n    /**\n     * To provide the array of modules needed for maps rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    TreeMap.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.tooltipSettings.visible) {\n            modules.push({\n                member: 'treeMapTooltip',\n                args: [this]\n            });\n        }\n        if (this.highlightSettings.enable) {\n            modules.push({\n                member: 'treeMapHighlight',\n                args: [this]\n            });\n        }\n        if (this.selectionSettings.enable) {\n            modules.push({\n                member: 'treeMapSelection',\n                args: [this]\n            });\n        }\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'treeMapLegend',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    TreeMap.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var render = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'background':\n                    this.renderBorder();\n                    break;\n                case 'height':\n                case 'width':\n                    render = true;\n                    break;\n            }\n        }\n        if (render) {\n            this.createSvg();\n            this.render();\n        }\n    };\n    /**\n     * Get component name\n     */\n    TreeMap.prototype.getModuleName = function () {\n        return 'treemap';\n    };\n    /**\n     * To destroy the treemap control.\n     */\n    TreeMap.prototype.destroy = function () {\n        this.unWireEVents();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @private\n     */\n    TreeMap.prototype.getPersistData = function () {\n        return '';\n    };\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TreeMap.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], TreeMap.prototype, \"margin\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"background\", void 0);\n    __decorate([\n        Property('Material')\n    ], TreeMap.prototype, \"theme\", void 0);\n    __decorate([\n        Complex({}, TitleSettings)\n    ], TreeMap.prototype, \"titleSettings\", void 0);\n    __decorate([\n        Property('Squarified')\n    ], TreeMap.prototype, \"layoutType\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"query\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"weightValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"rangeColorValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"equalColorValuePath\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"colorValuePath\", void 0);\n    __decorate([\n        Property([])\n    ], TreeMap.prototype, \"palette\", void 0);\n    __decorate([\n        Property('TopLeftBottomRight')\n    ], TreeMap.prototype, \"renderDirection\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableDrillDown\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableBreadcrumb\", void 0);\n    __decorate([\n        Property(' - ')\n    ], TreeMap.prototype, \"breadcrumbConnector\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"drillDownView\", void 0);\n    __decorate([\n        Complex({}, InitialDrillSettings)\n    ], TreeMap.prototype, \"initialDrillDown\", void 0);\n    __decorate([\n        Complex({}, LeafItemSettings)\n    ], TreeMap.prototype, \"leafItemSettings\", void 0);\n    __decorate([\n        Collection([], LevelSettings)\n    ], TreeMap.prototype, \"levels\", void 0);\n    __decorate([\n        Complex({}, HighlightSettings)\n    ], TreeMap.prototype, \"highlightSettings\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeMap.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], TreeMap.prototype, \"tooltipSettings\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], TreeMap.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], TreeMap.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"format\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillEnd\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemHighlight\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"tooltipRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"rightClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"mouseMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"legendItemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"legendRendering\", void 0);\n    TreeMap = __decorate([\n        NotifyPropertyChanges\n    ], TreeMap);\n    return TreeMap;\n}(Component));\nexport { TreeMap };\n","import { findChildren, Location, Rect, Size, measureText, TextOption, PathOption, RectOption, drawSymbol, orderByArea } from '../utils/helper';\nimport { Browser, isNullOrUndefined, EventHandler, extend } from '@syncfusion/ej2-base';\nimport { renderTextElement, textTrim } from '../utils/helper';\nimport { legendItemRendering, legendRendering } from '../model/constants';\n/**\n * Legend module class\n */\nvar TreeMapLegend = /** @class */ (function () {\n    function TreeMapLegend(treemap) {\n        this.page = 0;\n        this.legendBorderRect = new Rect(0, 0, 0, 0);\n        this.currentPage = 0;\n        this.heightIncrement = 0;\n        this.widthIncrement = 0;\n        this.textMaxWidth = 0;\n        this.legendInteractiveGradient = [];\n        this.legendItemRect = new Rect(0, 0, 0, 0);\n        this.treemap = treemap;\n        this.addEventListener();\n    }\n    /**\n     * method for legend\n     */\n    TreeMapLegend.prototype.renderLegend = function () {\n        this.legendRenderingCollections = [];\n        this.legendCollections = [];\n        this.legendNames = [];\n        this.totalPages = [];\n        this.gradientCount = 1;\n        this.widthIncrement = 0;\n        this.heightIncrement = 0;\n        this.defsElement = this.treemap.renderer.createDefs();\n        this.treemap.svgObject.appendChild(this.defsElement);\n        var eventArgs;\n        eventArgs = {\n            cancel: false, name: legendRendering, treemap: this.treemap, _changePosition: this.treemap.legendSettings.position,\n            position: this.treemap.legendSettings.position\n        };\n        this.treemap.trigger(legendRendering, eventArgs);\n        if (!eventArgs.cancel && eventArgs._changePosition !== this.treemap.legendSettings.position) {\n            this.treemap.legendSettings.position = eventArgs._changePosition;\n        }\n        this.calculateLegendBounds();\n        if (this.legendCollections.length > 0) {\n            this.drawLegend();\n        }\n    };\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.calculateLegendBounds = function () {\n        var _this = this;\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        this.findColorMappingLegendItems(treemap.levelsOfData[0]);\n        if ((this.treemap.palette.length > 0 || !isNullOrUndefined(this.treemap.colorValuePath))\n            && this.legendCollections.length === 0) {\n            this.findPaletteLegendItems(this.treemap.levelsOfData[0], 'Parent');\n        }\n        if (this.legendCollections.length > 0) {\n            var defaultSize = 25;\n            var textPadding = 10;\n            var position = legend.position;\n            var legendTitle = legend.title.text;\n            var titleTextStyle = legend.titleStyle;\n            var legendMode = legend.mode;\n            var shapeX = 0;\n            var shapeY = 0;\n            var textX = 0;\n            var textY = 0;\n            var shapeHeight = legend.shapeHeight;\n            var shapeWidth = legend.shapeWidth;\n            var shapeLocation = [];\n            var textLocation = [];\n            var orientation_1 = (legend.orientation === 'None') ? ((position === 'Top' || position === 'Bottom'\n                || (position === 'Auto' && treemap.availableSize.width <= treemap.availableSize.height))\n                ? 'Horizontal' : 'Vertical') : legend.orientation;\n            var leftPadding = 10;\n            var topPadding = 10;\n            var spacing = 10;\n            var legendWidth = (legend.width.length > 1) ? (legend.width.indexOf('%') > -1) ? (treemap.availableSize.width / 100)\n                * parseFloat(legend.width) : parseFloat(legend.width) : null;\n            var legendHeight = (legend.height.length > 1) ? (legend.height.indexOf('%') > -1) ?\n                (treemap.availableSize.height / 100) * parseFloat(legend.height) : parseFloat(legend.height) : null;\n            titleTextStyle.fontFamily = treemap.themeStyle.fontFamily || titleTextStyle.fontFamily;\n            titleTextStyle.size = treemap.themeStyle.legendFontSize || titleTextStyle.size;\n            var legendTitleSize = measureText(legendTitle, titleTextStyle);\n            var startX_1 = 0;\n            var startY_1 = 0;\n            var shapePadding = legend.shapePadding;\n            var rectWidth = void 0;\n            var rectHeight = void 0;\n            var itemTextStyle = legend.textStyle;\n            var legendLength = this.legendCollections.length;\n            legend.textStyle.size = treemap.themeStyle.legendFontSize || legend.textStyle.size;\n            legend.textStyle.fontFamily = treemap.themeStyle.fontFamily || legend.textStyle.fontFamily;\n            if (legendMode === 'Default') {\n                legendWidth = (isNullOrUndefined(legendWidth)) ? treemap.areaRect.width : legendWidth;\n                legendHeight = (isNullOrUndefined(legendHeight)) ? treemap.areaRect.height : legendHeight;\n                var j = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    var legendItem = this.legendCollections[i];\n                    if (isNullOrUndefined(this.totalPages[this.page])) {\n                        this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n                    }\n                    var legendTextSize = measureText(legendItem['legendName'], legend.textStyle);\n                    this.textMaxWidth = Math.max(this.textMaxWidth, legendTextSize.width);\n                    if (i === 0) {\n                        startX_1 = shapeX = (leftPadding + (shapeWidth / 2));\n                        startY_1 = shapeY = topPadding + legendTitleSize.height + (shapeHeight > legendTextSize.height ? shapeHeight / 2\n                            : (legendTextSize.height / 4));\n                    }\n                    else {\n                        var maxSize = (legendTextSize.height > shapeHeight) ? legendTextSize.height : shapeHeight;\n                        if (orientation_1 === 'Horizontal') {\n                            var prvePositionX = (textLocation[j - 1].x + textLocation[j - 1].width) + textPadding + shapeWidth;\n                            if ((prvePositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                var nextPositionY = (textLocation[j - 1].y > (shapeLocation[j - 1].y + (shapeHeight / 2)) ?\n                                    textLocation[j - 1].y : (shapeLocation[j - 1].y + (shapeHeight / 2))) + topPadding;\n                                if ((nextPositionY + maxSize) > legendHeight) {\n                                    this.getPageChanged();\n                                    j = 0;\n                                    shapeLocation = [];\n                                    textLocation = [];\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                }\n                                else {\n                                    shapeX = (shapeLocation[0].x);\n                                    shapeY = (nextPositionY + (maxSize / 2));\n                                }\n                            }\n                            else {\n                                shapeX = (prvePositionX - (shapeWidth / 2));\n                                shapeY = (shapeLocation[j - 1]).y;\n                            }\n                        }\n                        else {\n                            var prevPositionY = textLocation[j - 1].y > shapeLocation[j - 1].y + (shapeHeight / 2) ?\n                                textLocation[j - 1].y : shapeLocation[j - 1].y + (shapeHeight / 2);\n                            if ((prevPositionY + topPadding + maxSize) > legendHeight) {\n                                var nextPositionX = (textLocation[j - 1].x + this.textMaxWidth + textPadding);\n                                if ((nextPositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                    textLocation = [];\n                                    shapeLocation = [];\n                                    this.getPageChanged();\n                                    j = 0;\n                                }\n                                else {\n                                    shapeX = nextPositionX + (shapeWidth / 2);\n                                    shapeY = (shapeLocation[0].y);\n                                }\n                            }\n                            else {\n                                shapeX = shapeLocation[j - 1].x;\n                                shapeY = prevPositionY + topPadding + (shapeHeight / 2);\n                            }\n                        }\n                    }\n                    textX = shapeX + (shapeWidth / 2) + shapePadding;\n                    textY = shapeY + (legendTextSize.height / 4);\n                    shapeLocation.push({ x: shapeX, y: shapeY });\n                    textLocation.push({ x: textX, y: textY, width: legendTextSize.width, height: (legendTextSize.height / 2) });\n                    this.totalPages[this.page]['Collection'].push({\n                        DisplayText: legendItem['legendName'], element: legendItem['gradientElement'],\n                        Shape: { x: shapeX, y: shapeY },\n                        Text: { x: textX, y: textY },\n                        Fill: legendItem['legendFill'],\n                        Data: legendItem['legendData'],\n                        Rect: {\n                            x: shapeLocation[j].x - (shapeWidth / 2),\n                            y: (shapeLocation[j].y - (shapeHeight / 2)) < (textY - legendTextSize.height) ?\n                                (shapeLocation[j].y - (shapeHeight / 2)) : (textY - legendTextSize.height),\n                            width: Math.abs((shapeLocation[j].x - (shapeWidth / 2)) - (textX + legendTextSize.width)),\n                            height: ((shapeHeight > legendTextSize.height) ? shapeHeight : legendTextSize.height)\n                        }\n                    });\n                    j++;\n                }\n                var collection = this.totalPages[0]['Collection'];\n                collection.forEach(function (legendObj, index) {\n                    var legendRect = new Rect(legendObj['Rect']['x'], legendObj['Rect']['y'], legendObj['Rect']['width'], legendObj['Rect']['height']);\n                    if (index === 0) {\n                        startX_1 = legendRect.x;\n                        startY_1 = legendRect.y;\n                    }\n                    _this.widthIncrement = Math.max(_this.widthIncrement, Math.abs(startX_1 - (legendRect.x + legendRect.width)));\n                    _this.heightIncrement = Math.max(_this.heightIncrement, Math.abs(startY_1 - (legendRect.y + legendRect.height)));\n                });\n                legendWidth = ((this.widthIncrement < legendWidth) ? this.widthIncrement : legendWidth);\n                legendHeight = ((this.heightIncrement < legendHeight) ? this.heightIncrement : legendHeight);\n                this.legendItemRect = {\n                    x: collection[0]['Rect']['x'], y: collection[0]['Rect']['y'],\n                    width: legendWidth, height: legendHeight\n                };\n            }\n            else {\n                var itemTextStyle_1 = legend.textStyle;\n                var rectWidth_1;\n                var rectHeight_1;\n                var legendLength_1 = this.legendCollections.length;\n                rectWidth_1 = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendWidth)) ? (treemap.areaRect.width / legendLength_1) :\n                    (legendWidth / legendLength_1) : (isNullOrUndefined(legendWidth)) ? defaultSize : legendWidth;\n                rectHeight_1 = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendHeight)) ? defaultSize : legendHeight :\n                    (isNullOrUndefined(legendHeight)) ? (treemap.areaRect.height / legendLength_1) : (legendHeight / legendLength_1);\n                startX_1 = 0;\n                startY_1 = legendTitleSize.height + spacing;\n                var textPadding_1 = 10;\n                var placement = legend.labelPosition;\n                var itemStartX = 0;\n                var itemStartY = 0;\n                var labelAction = legend.labelDisplayMode;\n                var maxTextHeight = 0;\n                var maxTextWidth = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    startX_1 = (orientation_1 === 'Horizontal') ? (startX_1 + rectWidth_1) : startX_1;\n                    startY_1 = (orientation_1 === 'Horizontal') ? startY_1 : (startY_1 + rectHeight_1);\n                    var legendText = this.legendCollections[i]['legendName'];\n                    var itemTextSize = new Size(0, 0);\n                    if (labelAction === 'None') {\n                        itemTextSize = measureText(legendText, itemTextStyle_1);\n                    }\n                    else if (labelAction === 'Trim') {\n                        legendText = textTrim((orientation_1 === 'Horizontal' ? rectWidth_1 : rectHeight_1), legendText, itemTextStyle_1);\n                        itemTextSize = measureText(legendText, itemTextStyle_1);\n                    }\n                    else {\n                        legendText = '';\n                    }\n                    maxTextHeight = Math.max(maxTextHeight, itemTextSize.height);\n                    maxTextWidth = Math.max(maxTextWidth, itemTextSize.width);\n                    if (itemTextSize.width > 0 && itemTextSize.height > 0) {\n                        if (orientation_1 === 'Horizontal') {\n                            textX = startX_1 + (rectWidth_1 / 2);\n                            textY = (placement === 'After') ? (startY_1 + rectHeight_1 + (itemTextSize.height / 2)) + textPadding_1 :\n                                (startY_1 - textPadding_1);\n                        }\n                        else {\n                            textX = (placement === 'After') ? startX_1 - (itemTextSize.width / 2) - textPadding_1\n                                : (startX_1 + rectWidth_1 + itemTextSize.width / 2) + textPadding_1;\n                            textY = startY_1 + (rectHeight_1 / 2) + (itemTextSize.height / 4);\n                        }\n                    }\n                    if (i === 0) {\n                        itemStartX = (orientation_1 === 'Horizontal') ? startX_1 : (placement === 'After') ?\n                            textX - (itemTextSize.width / 2) : startX_1;\n                        itemStartY = (orientation_1 === 'Horizontal') ? (placement === 'After') ? startY_1 :\n                            textY - (itemTextSize.height / 2) : startY_1;\n                    }\n                    if (i === legendLength_1 - 1) {\n                        legendWidth = (orientation_1 === 'Horizontal') ? Math.abs((startX_1 + rectWidth_1) - itemStartX) :\n                            (rectWidth_1 + maxTextWidth + textPadding_1);\n                        legendHeight = (orientation_1 === 'Horizontal') ? (rectHeight_1 + (maxTextHeight / 2) + textPadding_1) :\n                            Math.abs((startY_1 + rectHeight_1) - itemStartY);\n                    }\n                    this.legendRenderingCollections.push({\n                        fill: this.legendCollections[i]['legendFill'], x: startX_1, y: startY_1,\n                        width: rectWidth_1, height: rectHeight_1, element: this.legendCollections[i]['gradientElement'],\n                        text: legendText, textX: textX, textY: textY,\n                        textWidth: itemTextSize.width, textHeight: itemTextSize.height,\n                        data: this.legendCollections[i]['legendData']\n                    });\n                }\n                this.legendItemRect = { x: itemStartX, y: itemStartY, width: legendWidth, height: legendHeight };\n            }\n        }\n    };\n    TreeMapLegend.prototype.getPageChanged = function () {\n        this.page++;\n        if (isNullOrUndefined(this.totalPages[this.page])) {\n            this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n        }\n    };\n    TreeMapLegend.prototype.findColorMappingLegendItems = function (data) {\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0) {\n            this.calculateLegendItems(child);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    this.findColorMappingLegendItems(child[i]);\n                }\n            }\n        }\n    };\n    TreeMapLegend.prototype.findPaletteLegendItems = function (data, type) {\n        var child;\n        var legendFillColor;\n        if (!isNullOrUndefined(this.treemap.drilledItems)) {\n            if (this.treemap.drilledItems.length === 0 && !isNullOrUndefined(this.treemap.initialDrillDown.groupName)\n                && isNullOrUndefined(this.treemap.drilledLegendItems)) {\n                var items = findChildren(data)['values'];\n                for (var k = 0; k < items.length; k++) {\n                    if (items[k]['Name'] === this.treemap.initialDrillDown.groupName) {\n                        items[k]['isDrilled'] = !items[k]['isDrilled'];\n                        data = items[k];\n                        this.treemap.currentLevel = this.treemap.initialDrillDown.groupIndex;\n                        legendFillColor = this.treemap.palette.length > 0 ? this.treemap.palette[k % this.treemap.palette.length] :\n                            items[k]['data'][this.treemap.colorValuePath];\n                        break;\n                    }\n                }\n            }\n        }\n        if (this.treemap.enableDrillDown && !isNullOrUndefined(this.treemap.drilledLegendItems)) {\n            var childElement = this.treemap.drilledLegendItems;\n            legendFillColor = childElement['data']['options']['fill'];\n            if (childElement['data']['isDrilled']) {\n                child = findChildren(childElement['data'])['values'];\n            }\n            else {\n                var parentElement = childElement['data']['parent'];\n                child = findChildren(parentElement)['values'];\n            }\n        }\n        else {\n            child = findChildren(data)['values'];\n        }\n        var isDuplicate;\n        var legendName;\n        if (child && child.length > 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (isNullOrUndefined(child[i]['data'][this.treemap.legendSettings.showLegendPath]) ||\n                    child[i]['data'][this.treemap.legendSettings.showLegendPath]) {\n                    legendName = child[i]['data'][this.treemap.legendSettings.valuePath] ?\n                        child[i]['data'][this.treemap.legendSettings.valuePath] : child[i]['name'];\n                    isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                        this.removeDuplicates(this.legendCollections, legendName) : false;\n                    if (!isDuplicate) {\n                        this.legendCollections.push({\n                            legendName: legendName,\n                            legendFill: this.treemap.palette.length > 0 ? !isNullOrUndefined(this.treemap.currentLevel)\n                                ? legendFillColor : this.treemap.palette[i % this.treemap.palette.length] :\n                                child[i]['data'][this.treemap.colorValuePath],\n                            legendData: [],\n                            itemArea: child[i]['weight']\n                        });\n                    }\n                }\n            }\n            this.legendCollections.sort(orderByArea);\n            if (this.treemap.palette.length > 0) {\n                for (var j = 0; j < this.legendCollections.length; j++) {\n                    this.legendCollections[j]['legendFill'] = !isNullOrUndefined(this.treemap.currentLevel)\n                        ? legendFillColor : this.treemap.palette[j % this.treemap.palette.length];\n                }\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    TreeMapLegend.prototype.calculateLegendItems = function (data) {\n        var isAddData;\n        var fill;\n        var rangeValue;\n        var currentData;\n        var legendText;\n        var itemValue;\n        var isLeafItem;\n        var colorMapProcess = false;\n        var colorMapping;\n        var groupIndex;\n        var leaf = this.treemap.leafItemSettings;\n        var levels = this.treemap.levels;\n        var equalValue;\n        var position = this.treemap.legendSettings.position;\n        var gradientElement;\n        var x2;\n        var y2;\n        var actualValue;\n        var isDuplicate;\n        var isEqualColor;\n        var isRange;\n        var isDesaturation = false;\n        var legendIndex = 0;\n        var outfill;\n        var labelLegend;\n        var otherIndex;\n        this.outOfRangeLegend = null;\n        for (var i = 0; i < data.length; i++) {\n            fill = '';\n            isEqualColor = false;\n            isRange = false;\n            isDesaturation = false;\n            currentData = data[i]['data'];\n            groupIndex = data[i]['groupIndex'];\n            isLeafItem = (this.treemap.levels.length === 0 || groupIndex === this.treemap.levels.length);\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[groupIndex].colorMapping;\n            for (var _i = 0, colorMapping_1 = colorMapping; _i < colorMapping_1.length; _i++) {\n                var colorMap = colorMapping_1[_i];\n                gradientElement = null;\n                rangeValue = Number(currentData[this.treemap.rangeColorValuePath]);\n                equalValue = currentData[this.treemap.equalColorValuePath];\n                colorMap.value = !isNullOrUndefined(colorMap.value) ? colorMap.value.toString() : colorMap.value;\n                if (!isNullOrUndefined(colorMap.from) && !isNullOrUndefined(colorMap.to) &&\n                    rangeValue >= colorMap.from && rangeValue <= colorMap.to && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isRange = true;\n                    actualValue = colorMap.from + ' - ' + colorMap.to;\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.from + ' - ' + colorMap.to;\n                    fill = isNullOrUndefined(colorMap.color) ? fill : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                else if (!isNullOrUndefined(colorMap.value) && equalValue === colorMap.value && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isEqualColor = true;\n                    actualValue = colorMap.value.toString();\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.value.toString();\n                    fill = isNullOrUndefined(colorMap.color) ? fill :\n                        Object.prototype.toString.call(colorMap.color) === '[object Array]' ? colorMap.color[0] : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                if (colorMapProcess && isNullOrUndefined(colorMap.value) && colorMap.maxOpacity && colorMap.minOpacity\n                    && this.treemap.legendSettings.mode === 'Interactive') {\n                    var colors = [];\n                    var gradient = void 0;\n                    isDesaturation = true;\n                    if (Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n                        for (var q = 0; q < colorMap.color.length; q++) {\n                            var offsetColor = 100 / (colorMap.color.length - 1);\n                            var offsetValue = q * offsetColor + '%';\n                            var stop1Color = { colorStop: offsetValue.toString(), color: colorMap.color[q] };\n                            colors.push(stop1Color);\n                        }\n                    }\n                    else {\n                        var stop1Color = { colorStop: '0%', color: fill };\n                        var stop2Color = { colorStop: '100%', color: fill };\n                        colors.push(stop1Color);\n                        colors.push(stop2Color);\n                    }\n                    x2 = position === 'Top' || position === 'Bottom' ? '100%' : '0%';\n                    y2 = position === 'Top' || position === 'Bottom' ? '0%' : '100%';\n                    gradient = {\n                        id: 'groupIndex_' + groupIndex + '_colorIndex_' + this.gradientCount, x1: '0%', y1: '0%', x2: x2, y2: y2\n                    };\n                    gradientElement = this.treemap.renderer.drawGradient('linearGradient', gradient, colors).childNodes[0];\n                    if (Object.prototype.toString.call(colorMap.color) !== '[object Array]') {\n                        gradientElement.childNodes[0].setAttribute('stop-opacity', colorMap.minOpacity.toString());\n                        gradientElement.childNodes[1].setAttribute('stop-opacity', colorMap.maxOpacity.toString());\n                    }\n                    this.defsElement.appendChild(gradientElement);\n                    this.gradientCount++;\n                }\n                isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                    this.removeDuplicates(this.legendCollections, legendText) : false;\n                if (isAddData && isAddData['process'] && colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    fill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]')) && isNullOrUndefined(gradientElement)\n                        && isNullOrUndefined(colorMap.value) ? this.legendGradientColor(colorMap, legendIndex) : fill;\n                    this.legendCollections.push({\n                        actualValue: actualValue,\n                        legendName: legendText, legendFill: fill, legendData: [],\n                        gradientElement: !isNullOrUndefined(gradientElement) ? gradientElement : isNullOrUndefined(colorMap.value)\n                            ? this.legendLinearGradient : null, name: data[i]['name'],\n                        opacity: this.treemap.legendSettings.opacity, borderColor: this.treemap.legendSettings.border.color,\n                        borderWidth: this.treemap.legendSettings.border.width\n                    });\n                    this.legendCollections[this.legendCollections.length - 1]['legendData'].push(data[i]);\n                    legendIndex++;\n                }\n                else if (colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    this.legendCollections[isAddData['value']]['legendData'].push(data[i]);\n                }\n                if (!isRange && !isDesaturation && !isEqualColor) {\n                    if (isNullOrUndefined(colorMap.from) && isNullOrUndefined(colorMap.to)\n                        && isNullOrUndefined(colorMap.minOpacity) &&\n                        isNullOrUndefined(colorMap.maxOpacity) && isNullOrUndefined(colorMap.value) &&\n                        !isNullOrUndefined(colorMap.color)) {\n                        outfill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]'))\n                            ? colorMap.color[0] : colorMap.color;\n                        labelLegend = !isNullOrUndefined(colorMap.label) ? colorMap.label : 'Others';\n                        if (isNullOrUndefined(this.outOfRangeLegend)) {\n                            this.legendCollections.push({\n                                actualValue: labelLegend, legendData: [],\n                                legendName: labelLegend, legendFill: outfill\n                            });\n                            otherIndex = this.legendCollections.length;\n                            this.outOfRangeLegend = this.legendCollections[otherIndex - 1];\n                            legendIndex++;\n                        }\n                        this.legendCollections[otherIndex - 1]['legendData'].push(data[i]);\n                    }\n                }\n            }\n        }\n    };\n    TreeMapLegend.prototype.removeDuplicates = function (legendCollection, text) {\n        var isDuplicate = false;\n        for (var i = 0; i < legendCollection.length; i++) {\n            if (legendCollection[i]['legendName'] === text) {\n                isDuplicate = true;\n                break;\n            }\n            else {\n                continue;\n            }\n        }\n        return isDuplicate;\n    };\n    TreeMapLegend.prototype.isAddNewLegendData = function (legendText) {\n        var newDataProcess;\n        var itemValue;\n        if (this.legendCollections.length === 0) {\n            newDataProcess = true;\n        }\n        else {\n            for (var j = 0; j < this.legendCollections.length; j++) {\n                if (legendText === this.legendCollections[j]['actualValue']) {\n                    newDataProcess = false;\n                    itemValue = j;\n                    break;\n                }\n                else if (j === this.legendCollections.length - 1) {\n                    newDataProcess = true;\n                }\n            }\n        }\n        return { process: newDataProcess, value: itemValue };\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    /**\n     * To draw the legend\n     */\n    TreeMapLegend.prototype.drawLegend = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var render = treemap.renderer;\n        var fill;\n        var textOptions;\n        var gradientElement;\n        var textFont = legend.textStyle;\n        this.legendGroup = render.createGroup({ id: treemap.element.id + '_Legend_Group' });\n        this.renderLegendBorder();\n        this.renderLegendTitle();\n        if (legend.mode === 'Default') {\n            this.drawLegendItem(this.currentPage);\n        }\n        else {\n            for (var i = 0; i < this.legendRenderingCollections.length; i++) {\n                var itemId = treemap.element.id + '_Legend_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Index_' + i + '_Text';\n                var item = this.legendRenderingCollections[i];\n                gradientElement = item['element'];\n                fill = gradientElement ? 'url(#' + gradientElement.id + ')' : item['fill'];\n                var bounds = new Rect(item['x'], item['y'], item['width'], item['height']);\n                var textLocation = new Location(item['textX'], item['textY']);\n                var rectOptions = new RectOption(itemId, fill, legend.shapeBorder, legend.opacity, bounds);\n                if (this.treemap.enableRtl) {\n                    if (treemap.legendSettings.position === 'Left' || treemap.legendSettings.position === 'Right'\n                        || (treemap.legendSettings.position === 'Auto'\n                            && this.treemap.availableSize.width >= this.treemap.availableSize.height)) {\n                        rectOptions.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                            - (this.translate.y + rectOptions.height) - Math.abs(this.legendBorderRect.y - rectOptions.y);\n                        textLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                            - (this.translate.y) + (item['textHeight'] / 2)\n                            - Math.abs(this.legendBorderRect.y - textLocation.y);\n                    }\n                    else {\n                        rectOptions.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n                            - (this.translate.x + rectOptions.width)\n                            - Math.abs(this.legendBorderRect.x - rectOptions.x);\n                        textLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n                            - this.translate.x - Math.abs(this.legendBorderRect.x - textLocation.x);\n                    }\n                }\n                textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'middle', item['text'], '', '');\n                renderTextElement(textOptions, textFont, textFont.color || this.treemap.themeStyle.legendTextColor, this.legendGroup);\n                this.legendGroup.appendChild(render.drawRectangle(rectOptions));\n            }\n        }\n    };\n    TreeMapLegend.prototype.defaultLegendRtlLocation = function (collection, spacing, treemap, legend) {\n        var shapeLocation = collection['Shape'];\n        var textLocation = collection['Text'];\n        var legendText = collection['DisplayText'];\n        var textSize = measureText(legendText, legend.textStyle);\n        shapeLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n            - (this.translate.x + spacing) - Math.abs(this.legendBorderRect.x - shapeLocation.x);\n        textLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n            - (this.translate.x + textSize.width + spacing) - Math.abs(this.legendBorderRect.x - textLocation.x);\n        if (treemap.legendSettings.position === 'Left' || treemap.legendSettings.position === 'Right'\n            || (treemap.legendSettings.position === 'Auto'\n                && this.treemap.availableSize.width >= this.treemap.availableSize.height)) {\n            shapeLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                - this.translate.y - Math.abs(Math.abs(this.legendBorderRect.y) - shapeLocation.y) - (legend.shapeHeight / 2);\n            textLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                - this.translate.y - Math.abs(Math.abs(this.legendBorderRect.y) - textLocation.y);\n        }\n        return { shapeLocation: shapeLocation, textLocation: textLocation };\n    };\n    TreeMapLegend.prototype.drawLegendItem = function (page) {\n        var treemap = this.treemap;\n        var spacing = 10;\n        var legend = treemap.legendSettings;\n        var shapeSize = new Size(legend.shapeWidth, legend.shapeHeight);\n        var textOptions;\n        var legendRtlLocation;\n        var renderOptions;\n        var render = treemap.renderer;\n        var shapeBorder = legend.shapeBorder;\n        var eventArgs;\n        if (page >= 0 && page < this.totalPages.length) {\n            if (document.getElementById(this.legendGroup.id)) {\n                document.getElementById(this.legendGroup.id).remove();\n            }\n            var isLineShape = (legend.shape === 'HorizontalLine' || legend.shape === 'VerticalLine' || legend.shape === 'Cross');\n            var strokeColor = isLineShape ? isNullOrUndefined(legend.fill) ? '#000000' : legend.fill : shapeBorder.color;\n            var strokeWidth = isLineShape ? (shapeBorder.width === 0) ? 1 : shapeBorder.width : shapeBorder.width;\n            for (var i = 0; i < this.totalPages[page]['Collection'].length; i++) {\n                var collection = this.totalPages[page]['Collection'][i];\n                var legendElement = render.createGroup({ id: treemap.element.id + '_Legend_Index_' + i });\n                var legendText = collection['DisplayText'];\n                var shapeId = treemap.element.id + '_Legend_Shape_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Text_Index_' + i;\n                var shapeLocation = collection['Shape'];\n                var textLocation = collection['Text'];\n                if (treemap.enableRtl) {\n                    legendRtlLocation = this.defaultLegendRtlLocation(collection, spacing, treemap, legend);\n                    shapeLocation = legendRtlLocation['shapeLocation'];\n                    textLocation = legendRtlLocation['textLocation'];\n                }\n                eventArgs = {\n                    cancel: false, name: legendItemRendering, treemap: treemap, fill: collection['Fill'],\n                    shape: legend.shape, imageUrl: legend.imageUrl\n                };\n                this.treemap.trigger(legendItemRendering, eventArgs);\n                var renderOptions_1 = new PathOption(shapeId, eventArgs.fill, strokeWidth, isLineShape ? collection['Fill'] : strokeColor, legend.opacity, '');\n                legendElement.appendChild(drawSymbol(shapeLocation, eventArgs.shape, shapeSize, eventArgs.imageUrl, renderOptions_1, legendText));\n                textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'start', legendText, '', '');\n                renderTextElement(textOptions, legend.textStyle, legend.textStyle.color || this.treemap.themeStyle.legendTextColor, legendElement);\n                this.legendGroup.appendChild(legendElement);\n            }\n            var pagingGroup = void 0;\n            var width = spacing;\n            var height = (spacing / 2);\n            if (this.page !== 0) {\n                var pagingText = (page + 1) + '/' + this.totalPages.length;\n                var pagingFont = legend.textStyle;\n                var pagingTextSize = measureText(pagingText, pagingFont);\n                var leftPageX = (this.legendItemRect.x + this.legendItemRect.width) - pagingTextSize.width -\n                    (width * 2) - spacing;\n                var rightPageX = (this.legendItemRect.x + this.legendItemRect.width);\n                var locY = (this.legendItemRect.y + this.legendItemRect.height) + (height / 2) + spacing;\n                var pageTextX = rightPageX - width - (pagingTextSize.width / 2) - (spacing / 2);\n                pagingGroup = render.createGroup({ id: treemap.element.id + '_Legend_Paging_Group' });\n                var leftPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Left_Paging_Group' });\n                var rightPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Right_Paging_Group' });\n                var rightPath = ' M ' + rightPageX + ' ' + locY + ' L ' + (rightPageX - width) + ' ' + (locY - height) +\n                    ' L ' + (rightPageX - width) + ' ' + (locY + height) + ' z ';\n                var leftPath = ' M ' + leftPageX + ' ' + locY + ' L ' + (leftPageX + width) + ' ' + (locY - height) +\n                    ' L ' + (leftPageX + width) + ' ' + (locY + height) + ' z ';\n                var leftPageOptions = new PathOption(treemap.element.id + '_Left_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', leftPath);\n                leftPageElement.appendChild(render.drawPath(leftPageOptions));\n                var leftRectPageOptions = new RectOption(treemap.element.id + '_Left_Page_Rect', 'transparent', {}, 1, new Rect(leftPageX - (width / 2), (locY - (height * 2)), width * 2, spacing * 2), '');\n                leftPageElement.appendChild(render.drawRectangle(leftRectPageOptions));\n                this.wireEvents(leftPageElement);\n                var rightPageOptions = new PathOption(treemap.element.id + '_Right_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', rightPath);\n                rightPageElement.appendChild(render.drawPath(rightPageOptions));\n                var rightRectPageOptions = new RectOption(treemap.element.id + '_Right_Page_Rect', 'transparent', {}, 1, new Rect((rightPageX - width), (locY - height), width, spacing), '');\n                rightPageElement.appendChild(render.drawRectangle(rightRectPageOptions));\n                this.wireEvents(rightPageElement);\n                pagingGroup.appendChild(leftPageElement);\n                pagingGroup.appendChild(rightPageElement);\n                var pageTextOptions = {\n                    'id': treemap.element.id + '_Paging_Text',\n                    'x': pageTextX,\n                    'y': locY + (pagingTextSize.height / 4),\n                    'fill': '#a6a6a6',\n                    'font-size': '14px',\n                    'font-style': pagingFont.fontStyle,\n                    'font-family': pagingFont.fontFamily,\n                    'font-weight': pagingFont.fontWeight,\n                    'text-anchor': 'middle',\n                    'transform': '',\n                    'opacity': 1,\n                    'dominant-baseline': ''\n                };\n                pagingGroup.appendChild(render.createText(pageTextOptions, pagingText));\n                this.legendGroup.appendChild(pagingGroup);\n            }\n        }\n    };\n    TreeMapLegend.prototype.renderLegendBorder = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var legendTitle = legend.title.text;\n        var spacing = 10;\n        var textStyle = legend.titleStyle;\n        var textOptions;\n        var title = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(title, textStyle);\n        this.legendBorderRect = new Rect((this.legendItemRect.x - spacing), (this.legendItemRect.y - spacing - textSize.height), (this.legendItemRect.width) + (spacing * 2), (this.legendItemRect.height) + (spacing * 2) + textSize.height +\n            (legend.mode === 'Interactive' ? 0 : (this.page !== 0) ? spacing : 0));\n        var renderOptions = new RectOption(treemap.element.id + '_Legend_Border', legend.background, legend.border, 1, this.legendBorderRect, '');\n        var legendBorder = treemap.renderer.drawRectangle(renderOptions);\n        legendBorder.style.pointerEvents = 'none';\n        this.legendGroup.appendChild(legendBorder);\n        this.getLegendAlignment(treemap, this.legendBorderRect.width, this.legendBorderRect.height, legend);\n        this.legendGroup.setAttribute('transform', 'translate( ' + (this.translate.x + (-(this.legendBorderRect.x))) + ' ' +\n            (this.translate.y + (-(this.legendBorderRect.y))) + ' )');\n        treemap.svgObject.appendChild(this.legendGroup);\n    };\n    TreeMapLegend.prototype.renderLegendTitle = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var textStyle = legend.titleStyle;\n        var legendTitle = legend.title.text;\n        var textOptions;\n        var spacing = 10;\n        var trimTitle = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(trimTitle, textStyle);\n        if (legendTitle) {\n            textOptions = new TextOption(treemap.element.id + '_LegendTitle', (this.legendItemRect.x) + (this.legendItemRect.width / 2), this.legendItemRect.y - (textSize.height / 2) - (spacing / 2), 'middle', trimTitle, '');\n            renderTextElement(textOptions, textStyle, textStyle.color || this.treemap.themeStyle.legendTitleColor, this.legendGroup);\n        }\n    };\n    /**\n     * To rendered the interactive pointer\n     */\n    TreeMapLegend.prototype.renderInteractivePointer = function (e) {\n        var treemap = this.treemap;\n        var target = e.target;\n        var interactiveId = treemap.element.id + '_Interactive_Legend';\n        target = !(e.type.indexOf('touch') > -1) ? target :\n            document.elementFromPoint(e.changedTouches[0].clientX, e.changedTouches[0].clientY);\n        var targetItem;\n        var legend = treemap.legendSettings;\n        if (target.id.indexOf('_Item_Index') > -1 && legend.visible && this.legendRenderingCollections.length > 0) {\n            var currentData = void 0;\n            var legendRect = void 0;\n            var rect = void 0;\n            var data = void 0;\n            var fill = void 0;\n            var stroke = void 0;\n            var strokeWidth = void 0;\n            var legendElement = void 0;\n            targetItem = treemap.layout.renderItems[parseFloat(target.id.split('_')[6])];\n            var svgRect = treemap.svgObject.getBoundingClientRect();\n            for (var i = 0; i < this.legendCollections.length; i++) {\n                currentData = this.legendCollections[i];\n                legendElement = document.getElementById(treemap.element.id + '_Legend_Index_' + i);\n                legendRect = legendElement.getBoundingClientRect();\n                var rect_1 = new Rect(Math.abs(legendRect.left - svgRect.left), Math.abs(legendRect.top - svgRect.top), legendRect.width, legendRect.height);\n                fill = legendElement.getAttribute('fill');\n                stroke = legend.shapeBorder.color;\n                strokeWidth = legend.shapeBorder.width;\n                if (!isNullOrUndefined(currentData['legendData'])) {\n                    data = currentData['legendData'];\n                    for (var j = 0; j < data.length; j++) {\n                        if (data[j]['levelOrderName'] === targetItem['levelOrderName']) {\n                            this.drawInteractivePointer(legend, fill, stroke, interactiveId, strokeWidth, rect_1);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            this.removeInteractivePointer();\n        }\n    };\n    TreeMapLegend.prototype.drawInteractivePointer = function (legend, fill, stroke, id, strokeWidth, rect) {\n        var path;\n        var pathOptions;\n        var locX;\n        var locY;\n        var height = 10;\n        var width = 10;\n        var direction = (legend.orientation === 'None') ? (legend.position === 'Top' || legend.position === 'Bottom')\n            ? 'Horizontal' : 'Vertical' : legend.orientation;\n        if (direction === 'Horizontal') {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y;\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY - height) + ' Z ';\n            }\n            else {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y + (rect.height);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY + height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' Z ';\n            }\n        }\n        else {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width);\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX + width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' z ';\n            }\n            else {\n                locX = rect.x;\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX - width) + ' ' + (locY + height) + ' z ';\n            }\n        }\n        pathOptions = new PathOption(id, fill, strokeWidth, stroke, 1, '', path);\n        this.treemap.svgObject.appendChild(this.treemap.renderer.drawPath(pathOptions));\n    };\n    TreeMapLegend.prototype.getLegendAlignment = function (treemap, width, height, legend) {\n        var x;\n        var y;\n        var spacing = 10;\n        var totalRect;\n        totalRect = extend({}, treemap.areaRect, totalRect, true);\n        var areaX = totalRect.x;\n        var areaY = totalRect.y;\n        var areaHeight = totalRect.height;\n        var areaWidth = totalRect.width;\n        var totalWidth = treemap.availableSize.width;\n        var totalHeight = treemap.availableSize.height;\n        var position = legend.position === 'Auto' ? (totalWidth > totalHeight) ? 'Right' : 'Bottom' : legend.position;\n        if (legend.position === 'Float') {\n            this.translate = legend.location;\n        }\n        else {\n            switch (position) {\n                case 'Top':\n                case 'Bottom':\n                    totalRect.height = (areaHeight - height);\n                    x = (totalWidth / 2) - (width / 2);\n                    y = (position === 'Top') ? areaY : (areaY + totalRect.height) + spacing;\n                    totalRect.y = (position === 'Top') ? areaY + height + spacing : areaY;\n                    break;\n                case 'Left':\n                case 'Right':\n                    totalRect.width = (areaWidth - width);\n                    x = (position === 'Left') ? areaX : areaX + totalRect.width;\n                    y = (totalHeight / 2) - (height / 2);\n                    totalRect.x = (position === 'Left') ? areaX + width : areaX;\n                    break;\n            }\n            switch (legend.alignment) {\n                case 'Near':\n                    if (position === 'Top' || position === 'Bottom') {\n                        x = totalRect.x;\n                    }\n                    else {\n                        y = totalRect.y;\n                    }\n                    break;\n                case 'Far':\n                    if (position === 'Top' || position === 'Bottom') {\n                        x = totalWidth - width;\n                    }\n                    else {\n                        y = totalHeight - height;\n                    }\n                    break;\n            }\n            this.treemap.totalRect = totalRect;\n            this.translate = new Location(x, y);\n        }\n    };\n    TreeMapLegend.prototype.mouseUpHandler = function (e) {\n        this.renderInteractivePointer(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeInteractivePointer.bind(this), 3000);\n    };\n    /**\n     * To remove the interactive pointer\n     */\n    TreeMapLegend.prototype.removeInteractivePointer = function () {\n        if (document.getElementById(this.treemap.element.id + '_Interactive_Legend')) {\n            document.getElementById(this.treemap.element.id + '_Interactive_Legend').remove();\n        }\n    };\n    /**\n     * To change the next page\n     */\n    TreeMapLegend.prototype.changeNextPage = function (e) {\n        this.currentPage = (e.target.id.indexOf('_Left_Page_') > -1) ? (this.currentPage - 1) :\n            (this.currentPage + 1);\n        this.drawLegend();\n    };\n    /**\n     * Wire events for event handler\n     */\n    TreeMapLegend.prototype.wireEvents = function (element) {\n        EventHandler.add(element, Browser.touchStartEvent, this.changeNextPage, this);\n    };\n    /**\n     * To add the event listener\n     */\n    TreeMapLegend.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderInteractivePointer, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To remove the event listener\n     */\n    TreeMapLegend.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderInteractivePointer);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapLegend.prototype.getModuleName = function () {\n        return 'treeMapLegend';\n    };\n    /**\n     * To destroy the legend.\n     * @return {void}\n     * @private\n     */\n    TreeMapLegend.prototype.destroy = function (treemap) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    /**\n     * Get the gradient color for interactive legend.\n     */\n    TreeMapLegend.prototype.legendGradientColor = function (colorMap, legendIndex) {\n        var legendFillColor;\n        var xmlns = 'http://www.w3.org/2000/svg';\n        if (!isNullOrUndefined(colorMap.color) && Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n            var defElement = this.treemap.renderer.createDefs();\n            var linerGradientEle = document.createElementNS(xmlns, 'linearGradient');\n            var opacity = 1;\n            var position = this.treemap.legendSettings.position;\n            var x2 = void 0;\n            var y2 = void 0;\n            x2 = position === 'Top' || position === 'Bottom' ? '100' : '0';\n            y2 = position === 'Top' || position === 'Bottom' ? '0' : '100';\n            linerGradientEle.setAttribute('id', 'linear_' + legendIndex);\n            linerGradientEle.setAttribute('x1', 0 + '%');\n            linerGradientEle.setAttribute('y1', 0 + '%');\n            linerGradientEle.setAttribute('x2', x2 + '%');\n            linerGradientEle.setAttribute('y2', y2 + '%');\n            for (var b = 0; b < colorMap.color.length; b++) {\n                var offsetColor = 100 / (colorMap.color.length - 1);\n                var stopEle = document.createElementNS(xmlns, 'stop');\n                stopEle.setAttribute('offset', b * offsetColor + '%');\n                stopEle.setAttribute('stop-color', colorMap.color[b]);\n                stopEle.setAttribute('stop-opacity', opacity.toString());\n                linerGradientEle.appendChild(stopEle);\n            }\n            defElement.appendChild(linerGradientEle);\n            this.legendLinearGradient = linerGradientEle;\n            var color = 'url(' + '#linear_' + legendIndex + ')';\n            this.defsElement.appendChild(linerGradientEle);\n            legendFillColor = color;\n        }\n        return legendFillColor;\n    };\n    return TreeMapLegend;\n}());\nexport { TreeMapLegend };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { itemHighlight, itemSelected } from '../model/constants';\nimport { findHightLightItems, removeClassNames, applyOptions, removeShape, removeLegend, removeSelectionWithHighlight, setColor, getLegendIndex, pushCollection } from '../utils/helper';\n/**\n * Performing treemap highlight\n */\nvar TreeMapHighlight = /** @class */ (function () {\n    function TreeMapHighlight(treeMap) {\n        this.target = 'highlight';\n        this.shapeTarget = 'highlight';\n        this.shapeHighlightCollection = [];\n        this.legendHighlightCollection = [];\n        this.currentElement = [];\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    //tslint:disable:max-func-body-length\n    /* tslint:disable:max-line-length */\n    /**\n     * Mouse down event in highlight\n     */\n    TreeMapHighlight.prototype.mouseMove = function (e) {\n        var treemap = this.treemap;\n        var processHighlight;\n        var targetId = e.target.id;\n        var eventArgs;\n        var items = [];\n        var highlight = this.treemap.highlightSettings;\n        var item;\n        var highLightElements = [];\n        var process;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selectionModule = this.treemap.treeMapSelectionModule;\n        if (targetId.indexOf('_Item_Index') > -1 && (selectionModule ? selectionModule.selectionId !== targetId : true)) {\n            if (this.highLightId !== targetId) {\n                treeMapElement = document.getElementById(treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout');\n                var selectionElements = document.getElementsByClassName('treeMapSelection');\n                item = this.treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    var length_1 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    index = getLegendIndex(length_1, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById('container_Legend_Shape_Index_' + index) : document.getElementById('container_Legend_Index_' + index);\n                    if (this.shapeElement !== null && (selectionModule ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true)) {\n                        if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true) {\n                            this.currentElement.push({ currentElement: this.shapeElement });\n                            removeShape(this.shapeHighlightCollection, 'highlight');\n                            this.shapeHighlightCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                                oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                                oldBorderWidth: collection[index]['borderWidth']\n                            });\n                            setColor(this.shapeElement, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            this.target = 'highlight';\n                        }\n                        else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                            removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                            this.highLightId = '';\n                        }\n                    }\n                    else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                        removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                        this.highLightId = '';\n                    }\n                }\n                orders = findHightLightItems(item, [], highlight.mode, treemap);\n                if (this.treemap.legendSettings.visible ? selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true : true) {\n                    if (this.treemap.legendSettings.visible ? selectionModule ? this.shapeElement !== selectionModule.shapeElement : true : true) {\n                        for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                            element = treeMapElement.childNodes[i];\n                            process = true;\n                            item = treemap.layout.renderItems[element.id.split('_')[6]];\n                            for (var j = 0; j < selectionElements.length; j++) {\n                                if (element.id === selectionElements[j].id) {\n                                    process = false;\n                                    break;\n                                }\n                            }\n                            if (orders.indexOf(item['levelOrderName']) > -1 && process) {\n                                highLightElements.push(element);\n                                items.push(item);\n                            }\n                        }\n                        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                        for (var k = 0; k < highLightElements.length; k++) {\n                            element = highLightElements[k];\n                            applyOptions(element.childNodes[0], { border: highlight.border, fill: highlight.fill, opacity: highlight.opacity });\n                            element.classList.add('treeMapHighLight');\n                            this.highLightId = targetId;\n                        }\n                        eventArgs = { cancel: false, name: itemHighlight, treemap: treemap, items: items, elements: highLightElements };\n                        treemap.trigger(itemHighlight, eventArgs);\n                    }\n                    else {\n                        processHighlight = false;\n                    }\n                }\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1) {\n            if (this.treemap.legendSettings.visible && (selectionModule ? selectionModule.legendSelectId !== targetId : true) && (selectionModule ? selectionModule.shapeSelectId !== targetId : true)) {\n                var index = void 0;\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_2;\n                var targetEle = document.getElementById(targetId);\n                if (this.shapeTarget === 'highlight') {\n                    removeLegend(this.legendHighlightCollection, 'highlight');\n                }\n                this.shapeTarget = 'highlight';\n                index = this.treemap.legendSettings.mode === 'Default' ? parseFloat(targetId.split('_')[4]) : parseFloat(targetId.split('_')[3]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                var collection = this.treemap.treeMapLegendModule.legendCollections;\n                var legendIndex = parseInt(targetId[targetId.length - 1], 10);\n                for (var i = 0; i < dataLength; i++) {\n                    for (var j = 0; j < this.treemap.layout.renderItems.length; j++) {\n                        if (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][i]['levelOrderName'] === this.treemap.layout.renderItems[j]['levelOrderName']) {\n                            itemIndex = j;\n                            groupIndex = this.treemap.layout.renderItems[j]['groupIndex'];\n                            var nodeEle = document.getElementById('container_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (i === 0) {\n                                this.legendHighlightCollection = [];\n                                pushCollection(this.legendHighlightCollection, legendIndex, j, targetEle, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_2 = this.legendHighlightCollection.length;\n                                this.legendHighlightCollection[length_2 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            setColor(nodeEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            length_2 = this.legendHighlightCollection.length;\n                            this.legendHighlightCollection[length_2 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && this.treemap.legendSettings.visible) {\n                    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                }\n            }\n            if ((this.shapeTarget === 'highlight' || this.target === 'highlight') && this.treemap.legendSettings.visible) {\n                if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                    if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && selectionModule ? selectionModule.legendSelect : true) {\n                        removeShape(this.shapeHighlightCollection, 'highlight');\n                        this.shapeHighlightCollection = [];\n                    }\n                }\n            }\n            if (this.shapeTarget === 'highlight' && this.treemap.legendSettings.visible) {\n                removeLegend(this.legendHighlightCollection, 'highlight');\n            }\n            this.highLightId = '';\n            processHighlight = false;\n        }\n        return processHighlight;\n    };\n    /**\n     * To bind events for highlight\n     */\n    TreeMapHighlight.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.mouseMove, this);\n    };\n    /**\n     * To unbind events for highlight\n     */\n    TreeMapHighlight.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.mouseMove);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapHighlight.prototype.getModuleName = function () {\n        return 'treeMapHighlight';\n    };\n    /**\n     * To destroy the hightlight.\n     * @return {void}\n     * @private\n     */\n    TreeMapHighlight.prototype.destroy = function (treeMap) {\n        this.removeEventListener();\n    };\n    return TreeMapHighlight;\n}());\nexport { TreeMapHighlight };\n/**\n * Performing treemap selection\n */\nvar TreeMapSelection = /** @class */ (function () {\n    function TreeMapSelection(treeMap) {\n        this.shapeSelectionCollection = [];\n        this.legendSelectionCollection = [];\n        this.shapeSelect = true;\n        this.legendSelect = true;\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    /**\n     * Mouse down event in selection\n     */\n    TreeMapSelection.prototype.mouseDown = function (e) {\n        var targetEle = e.target;\n        var eventArgs;\n        var treemap = this.treemap;\n        var items = [];\n        var targetId = targetEle.id;\n        var item;\n        var selectionElements = [];\n        var opacity;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selection = treemap.selectionSettings;\n        var highlightModule = this.treemap.treeMapHighlightModule;\n        var layoutID = treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout';\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            if (this.selectionId !== targetId && this.legendSelect) {\n                treeMapElement = document.getElementById(layoutID);\n                item = treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    this.shapeSelect = false;\n                    var length_3 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    this.shapeElement = undefined;\n                    removeShape(this.shapeSelectionCollection, 'selection');\n                    if (highlightModule) {\n                        highlightModule.shapeTarget = 'selection';\n                        highlightModule.shapeHighlightCollection = [];\n                    }\n                    index = getLegendIndex(length_3, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById('container_Legend_Shape_Index_' + index) : document.getElementById('container_Legend_Index_' + index);\n                    if (this.shapeElement !== null) {\n                        this.shapeSelectId = this.shapeElement.getAttribute('id');\n                        this.shapeSelectionCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                            oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                            oldBorderWidth: collection[index]['borderWidth']\n                        });\n                        setColor(this.shapeElement, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                    }\n                }\n                orders = findHightLightItems(item, [], selection.mode, treemap);\n                for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                    element = treeMapElement.childNodes[i];\n                    item = treemap.layout.renderItems[element.id.split('_')[6]];\n                    if (orders.indexOf(item['levelOrderName']) > -1) {\n                        selectionElements.push(element);\n                        items.push(item);\n                    }\n                }\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.selectionId = targetId;\n                var highLightElements = document.getElementsByClassName('treeMapHighLight');\n                for (var k = 0; k < selectionElements.length; k++) {\n                    element = selectionElements[k];\n                    if (highLightElements.length > 0) {\n                        for (var j = 0; j < highLightElements.length; j++) {\n                            if (highLightElements[j].id === element.id) {\n                                highLightElements[j].classList.remove('treeMapHighLight');\n                            }\n                            applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                            element.classList.add('treeMapSelection');\n                        }\n                    }\n                    else {\n                        applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                        element.classList.add('treeMapSelection');\n                    }\n                    eventArgs = { cancel: false, name: itemSelected, treemap: treemap, items: items, elements: selectionElements };\n                    treemap.trigger(itemSelected, eventArgs);\n                }\n            }\n            else {\n                removeShape(this.shapeSelectionCollection, 'selection');\n                this.shapeElement = undefined;\n                this.shapeSelect = true;\n                this.shapeSelectId = '';\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.selectionId = '';\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1) {\n            var collection = this.treemap.treeMapLegendModule.legendCollections;\n            if (this.treemap.legendSettings.visible && this.legendSelectId !== targetId && this.shapeSelect) {\n                var index = void 0;\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_4;\n                this.legendSelectId = targetId;\n                this.legendSelect = false;\n                var legendIndex = parseInt(targetId[targetId.length - 1], 10);\n                var targetEle_1 = document.getElementById(targetId);\n                removeLegend(this.legendSelectionCollection, 'selection');\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'selection';\n                }\n                index = this.treemap.legendSettings.mode === 'Default' ? parseFloat(targetId.split('_')[4]) : parseFloat(targetId.split('_')[3]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                for (var k = 0; k < dataLength; k++) {\n                    for (var l = 0; l < this.treemap.layout.renderItems.length; l++) {\n                        if (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][k]['levelOrderName'] === this.treemap.layout.renderItems[l]['levelOrderName']) {\n                            itemIndex = l;\n                            groupIndex = this.treemap.layout.renderItems[l]['groupIndex'];\n                            var nodeEle = document.getElementById('container_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (k === 0) {\n                                pushCollection(this.legendSelectionCollection, legendIndex, l, targetEle_1, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_4 = this.legendSelectionCollection.length;\n                                this.legendSelectionCollection[length_4 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle_1, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            setColor(nodeEle, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            length_4 = this.legendSelectionCollection.length;\n                            this.legendSelectionCollection[length_4 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n            else {\n                removeLegend(this.legendSelectionCollection, 'Selection');\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'highlight';\n                }\n                this.legendSelect = true;\n                this.legendSelectId = '';\n            }\n        }\n    };\n    /**\n     * To bind events for selection\n     */\n    TreeMapSelection.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchStartEvent, this.mouseDown, this);\n    };\n    /**\n     * To unbind events for selection\n     */\n    TreeMapSelection.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchStartEvent, this.mouseDown);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapSelection.prototype.getModuleName = function () {\n        return 'treeMapSelection';\n    };\n    /**\n     * To destroy the selection.\n     * @return {void}\n     * @private\n     */\n    TreeMapSelection.prototype.destroy = function (treeMap) {\n        this.removeEventListener();\n    };\n    return TreeMapSelection;\n}());\nexport { TreeMapSelection };\n","import { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { Browser, createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getMousePosition, textFormatter, formatValue } from '../utils/helper';\nimport { tooltipRendering } from '../model/constants';\n/**\n * Render Tooltip\n */\nvar TreeMapTooltip = /** @class */ (function () {\n    function TreeMapTooltip(treeMap) {\n        this.treemap = treeMap;\n        this.tooltipSettings = this.treemap.tooltipSettings;\n        this.tooltipId = this.treemap.element.id + '_TreeMapTooltip';\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    TreeMapTooltip.prototype.renderTooltip = function (e) {\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var tootipArgs;\n        if (e.type.indexOf('touch') !== -1) {\n            this.isTouch = true;\n            touchArg = e;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n            target = touchArg.target;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch';\n            pageX = e.pageX;\n            pageY = e.pageY;\n            target = e.target;\n        }\n        var value;\n        var targetId = target.id;\n        var item = {};\n        var tooltipEle;\n        var location;\n        var toolTipHeader;\n        var toolTipData = {};\n        var tooltipContent = [];\n        var markerFill;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n            if (!isNullOrUndefined(item)) {\n                toolTipHeader = item['name'];\n                value = item['weight'];\n                toolTipData = item['data'];\n                markerFill = item['options']['fill'];\n                if (this.treemap.enableRtl) {\n                    tooltipContent = [textFormatter(this.tooltipSettings.format, toolTipData, this.treemap) ||\n                            formatValue(value, this.treemap) + ' : ' + this.treemap.weightValuePath.toString()];\n                }\n                else {\n                    tooltipContent = [textFormatter(this.tooltipSettings.format, toolTipData, this.treemap) ||\n                            this.treemap.weightValuePath.toString() + ' : ' + formatValue(value, this.treemap)];\n                }\n                if (document.getElementById(this.tooltipId)) {\n                    tooltipEle = document.getElementById(this.tooltipId);\n                }\n                else {\n                    tooltipEle = createElement('div', {\n                        id: this.treemap.element.id + '_TreeMapTooltip',\n                        className: 'EJ2-TreeMap-Tooltip',\n                        styles: 'position: absolute;pointer-events:none;'\n                    });\n                    document.getElementById(this.treemap.element.id + '_Secondary_Element').appendChild(tooltipEle);\n                }\n                location = getMousePosition(pageX, pageY, this.treemap.svgObject);\n                location.y = (this.tooltipSettings.template) ? location.y + 10 : location.y;\n                this.tooltipSettings.textStyle.fontFamily = this.treemap.theme === 'Bootstrap4' ? 'HelveticaNeue-Medium'\n                    : this.tooltipSettings.textStyle.fontFamily;\n                this.tooltipSettings.textStyle.color = this.treemap.themeStyle.tooltipFontColor\n                    || this.tooltipSettings.textStyle.color;\n                this.tooltipSettings.textStyle.opacity = this.treemap.themeStyle.tooltipTextOpacity\n                    || this.tooltipSettings.textStyle.opacity;\n                tootipArgs = {\n                    cancel: false, name: tooltipRendering, item: item,\n                    options: {\n                        location: location, text: tooltipContent, data: toolTipData,\n                        textStyle: this.tooltipSettings.textStyle, template: this.tooltipSettings.template\n                    },\n                    treemap: this.treemap,\n                    element: target, eventArgs: e\n                };\n                this.treemap.trigger(tooltipRendering, tootipArgs);\n                if (!tootipArgs.cancel) {\n                    this.svgTooltip = new Tooltip({\n                        enable: true,\n                        header: '',\n                        data: tootipArgs.options['data'],\n                        template: tootipArgs.options['template'],\n                        content: tootipArgs.options['text'],\n                        shapes: [],\n                        location: tootipArgs.options['location'],\n                        palette: [markerFill],\n                        areaBounds: this.treemap.areaRect,\n                        textStyle: tootipArgs.options['textStyle']\n                    });\n                    this.svgTooltip.opacity = this.treemap.themeStyle.tooltipFillOpacity || this.svgTooltip.opacity;\n                    this.svgTooltip.appendTo(tooltipEle);\n                }\n                else {\n                    this.removeTooltip();\n                }\n            }\n        }\n        else {\n            this.removeTooltip();\n        }\n    };\n    TreeMapTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    TreeMapTooltip.prototype.removeTooltip = function () {\n        if (document.getElementsByClassName('EJ2-TreeMap-Tooltip').length > 0) {\n            document.getElementsByClassName('EJ2-TreeMap-Tooltip')[0].remove();\n        }\n    };\n    /**\n     * To bind events for tooltip module\n     */\n    TreeMapTooltip.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To unbind events for tooltip module\n     */\n    TreeMapTooltip.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    TreeMapTooltip.prototype.getModuleName = function () {\n        return 'treeMapTooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     * @return {void}\n     * @private\n     */\n    TreeMapTooltip.prototype.destroy = function (treeMap) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    return TreeMapTooltip;\n}());\nexport { TreeMapTooltip };\n"],"names":["stringToNumber","value","containerSize","undefined","indexOf","parseInt","measureText","text","font","measureObject","document","getElementById","createElement","id","body","appendChild","innerHTML","style","position","fontSize","size","fontWeight","fontStyle","fontFamily","visibility","top","left","whiteSpace","lineHeight","Size","clientWidth","clientHeight","textTrim","maxWidth","label","width","i","length","substring","findPosition","location","alignment","textSize","type","x","y","height","Location","createTextStyle","renderer","renderOptions","htmlObject","createText","setAttributeNS","renderTextElement","options","color","parent","isMinus","tspanElement","font-size","font-style","font-family","font-weight","text-anchor","anchor","transform","opacity","dominant-baseline","baseLine","fill","SvgRenderer","isNullOrUndefined","connectorText","search","drillLevelText","split","z","drillText","replace","len","createTSpan","getElement","itemsToOrder","a","b","isContainsData","source","pathName","processData","treemap","path","isExist","name","leaf","leafItemSettings","levels","groupPath","labelPath","weightValuePath","findChildren","data","children","keys","Object","Array","findHightLightItems","items","mode","treeMap","push","j","parentName","currentItem","layout","renderItems","getTemplateFunction","template","templateFn","querySelectorAll","compile","querySelector","trim","e","convertElement","element","labelId","childElement","styles","templateHtml","RegExp","toString","findLabelLocation","rect","labelSize","getBoundingClientRect","areaRect","Math","abs","enableDrillDown","renderDirection","measureElement","parentElement","offsetHeight","offsetWidth","remove","getArea","getShortestEdge","input","container","convertToContainer","min","convertToRect","xOffset","yOffset","getMousePosition","pageX","pageY","elementRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","positionY","colorMap","colorMapping","equalValue","paths","isNaN","isEqualColor","dataValue","from","to","prototype","call","colorCollections","minOpacity","maxOpacity","deSaturationColor","rangeValue","getColorByValue","rgbToHex","r","g","componentToHex","rbg","Number","getGradientColor","previousOffset","nextOffset","percent","full","previousColor","nextColor","charAt","colorNameToHex","length_1","splitColorValueOffset","splitColor","getPercentageColor","previous","next","prevColor","getPercentage","substr","ColorValue","round","wordWrap","maximumWidth","dataLabel","textCollection","labelCollection","concat","textWrap","resultText","currentLength","totalWidth","totalLength","sliceString","slice","hide","maxHeight","orderByArea","removeClassNames","elements","applyOptions","childNodes","classList","setAttribute","textFormatter","format","_i","keys_1","key","join","formatValue","intl","getNumberFormat","useGrouping","useGroupingSeparator","formatFunction","convertToHexCode","hex","convertHexToColor","result","exec","window","getComputedStyle","isRGBValue","drawSymbol","shape","url","svgRenderer","temp","renderLegendShape","htmlElement","functionName","renderOption","renderPath","shapeWidth","shapeHeight","shapeX","shapeY","merge","rx","ry","cx","cy","d","xValue","yValue","cos","PI","sin","href","isParentItem","item","removeShape","collection","setColor","removeLegend","dataCount","k","borderColor","borderWidth","removeSelectionWithHighlight","getElementsByClassName","getLegendIndex","index","dataLength","treeMapLegendModule","legendCollections","pushCollection","number","legendElement","shapeElement","legendCollection","legendEle","oldFill","oldOpacity","oldBorderColor","oldBorderWidth","shapeOldFill","shapeOldOpacity","shapeOldBorderColor","shapeOldBorderWidth","getThemeStyle","theme","backgroundColor","titleFontColor","subTitleFontColor","tooltipFillColor","tooltipFontColor","legendTitleColor","legendTextColor","tooltipFillOpacity","tooltipTextOpacity","legendFontSize","labelFontFamily","beforePrint","itemRendering","drillStart","drillEnd","itemSelected","itemHighlight","tooltipRendering","itemClick","itemMove","doubleClick","rightClick","mouseMove","legendItemRendering","legendRendering","resize","defaultFont","__extends","extendStatics","setPrototypeOf","__proto__","p","hasOwnProperty","__","this","constructor","create","__decorate","decorators","target","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Border","_super","apply","Property","ChildProperty","Margin","Font","CommonTitleSettings","SubTitleSettings","Complex","TitleSettings","ColorMapping","LegendSettings","InitialDrillSettings","LeafItemSettings","Collection","TooltipSettings","SelectionSettings","HighlightSettings","LevelSettings","Rect","RectOption","border","dashArray","stroke","PathOption","TextOption","TreeMapAjax","async","contentType","sendData","dataOptions","LayoutPanel","processLayoutPanel","totalRect","levelsOfData","initialDrillDown","groupIndex","groupName","drilledItems","getDrilldownData","extend","legendSettings","currentLevel","calculateLayoutItems","renderLayoutItems","count","enableBreadcrumb","drillData","newData","child","parentData","layoutType","computeSliceAndDiceDimensional","computeSquarifyDimensional","coords","gap","headerHeight","leafItem","groups","sliceAndDiceProcess","groupGap","showHeader","childValue","parentArea","alottedValue","totalWeight","forEach","isHorizontal","sort","isHierarchicalData","padding","calculateChildrenLayout","groupPadding","computeTotalArea","performRowsLayout","currentRow","stack","newCoordinates","getCoordinates","newStack","nextDatum","restData","aspectRatio","newRow","currentRowLength","valueSum","newContainer","cutArea","findMaxAspectRatio","row","rowLength","minArea","Infinity","maxArea","sumArea","area","max","pow","areaWidth","areaHeight","isParent","parentRect","subXOffset","subYOffset","coordinates","y1","x1","dataLength_1","dataSum_1","i_1","multiplier","datum","onDemandProcess","childItems","parentItem","parentItemGroupname","splice","renderData","txtVisible","getItemColor","eventArgs","pathOptions","templatePosition","renderText","groupId","templateEle","textStyle","elementID","interSectAction","rectPath","secondaryEle","layoutGroup","createGroup","itemGroup","templateGroup","className","isLeafItem","drillDownView","treemapItemRect","labelFormat","headerFormat","levelName","showLabels","breadcrumbConnector","enableRtl","labelStyle","headerStyle","themeStyle","labelPosition","labelTemplate","headerTemplate","cancel","RenderItems","trigger","drawPath","renderItemText","renderTemplate","tabIndex","svgObject","textLocation","customText","textName","tspanText","labelInterSectAction","drillSymbolCount","drillSymbolSize","texts","maxNumber","collectionLength","stringText","getSaturatedColor","itemFill","itemOpacity","defaultLevelData","option","equalColorValuePath","rangeColorValuePath","colorValuePath","palette","saturatedColor","rgbValue","templateElement","labelEle","templateSize","templateLocation","textValue","ExportUtils","control","print","printWindow","open","outerHeight","outerWidth","moveTo","resizeTo","screen","availWidth","availHeight","argsData","htmlContent","getHTMLContent","div","cloneNode","Element","export","fileName","orientation","_this","attrs","availableSize","isDownload","Browser","userAgent","PdfPageOrientation","Landscape","svgData","outerHTML","URL","createObjectURL","Blob","XMLSerializer","serializeToString","triggerDownload","image_1","Image","ctx_1","getContext","onload","drawImage","revokeObjectURL","document_1","PdfDocument","imageString","toDataURL","pageSettings","pages","add","graphics","PdfBitmap","save","destroy","src","download","toLocaleLowerCase","dispatchEvent","MouseEvent","view","bubbles","cancelable","Theme","mapsTitleFont","TreeMap","preRender","initPrivateVariable","unWireEVents","createSvg","wireEVents","setCulture","render","createSecondaryElement","addTabIndex","renderBorder","renderTitle","titleSettings","processDataManager","dataModule","queryModule","ajaxModule","localAjax","dataSource","DataManager","query","Query","executeQuery","then","renderTreeMapElements","Ajax","onSuccess","args","JSON","parse","send","processingData","visible","renderLegend","elementChange","removeChild","firstChild","hasChildNodes","parentNode","containerWidth","containerHeight","childElementCount","secondaryElement","legendGroup","insertBefore","borderElement","background","borderRect","drawRectangle","title","bounds","groupEle","margin","right","trimmedTitle","elementSize","location_1","titleBounds","description","subtitleSettings","bottom","map","checkIsHierarchicalData","data_1","currentData","dataIndex","levelOrderName","weight","hierarchyData","processHierarchicalData","processFlatJsonData","reOrderLevelData","findTotalWeight","childData","levelIndex","childItemLevel","childLevel","mainData_1","l","orderNames","level","childName","name_1","childGroupPath_1","start","currentName","currentPath","prevPath","previousData","groupObj","_loop_1","this_1","parseFloat","EventHandler","clickOnTreeMap","doubleClickOnTreeMap","rightClickOnTreeMap","touchStartEvent","mouseDownOnTreeMap","touchMoveEvent","mouseMoveOnTreeMap","touchEndEvent","mouseEndOnTreeMap","mouseLeaveOnTreeMap","removeEventListener","resizeOnTreeMap","addEventListener","bind","Internationalization","previousSize","currentSize","clearTimeout","contains","setTimeout","refreshing","itemIndex","targetId","clickArgs","mouseEvent","preventDefault","doubleTapTimer1","end","Date","getMilliseconds","doubleClickArgs","rightClickArgs","mouseDown","notify","moveArgs","drillMouseMove","cursor","calculateSelectedTextLevels","labelText","drillLevel","levelText","_a","currentLevelLabel","calculatePreviousLevelChildItems","drillLevelValues","directLevel","levelItems","text1","drillTextLevel","h","compareSelectedLabelWithDrillDownItems","drillLevelChild","newDrillItem","startEvent","endEvent","targetEle","layoutID","templateID","drillLength","which","textContent","widthIncrement","heightIncrement","drilledLegendItems","treeMapTooltipModule","removeTooltip","removeInteractivePointer","treeMapHighlightModule","shapeHighlightCollection","highLightId","requiredModules","modules","tooltipSettings","member","highlightSettings","enable","selectionSettings","onPropertyChanged","newProp","oldProp","getModuleName","getPersistData","Event","NotifyPropertyChanges","Component","TreeMapLegend","page","legendBorderRect","currentPage","textMaxWidth","legendInteractiveGradient","legendItemRect","legendRenderingCollections","legendNames","totalPages","gradientCount","defsElement","createDefs","_changePosition","calculateLegendBounds","drawLegend","legend","findColorMappingLegendItems","findPaletteLegendItems","legendTitle","titleTextStyle","titleStyle","legendMode","textX","textY","shapeLocation","orientation_1","legendWidth","legendHeight","legendTitleSize","startX_1","startY_1","shapePadding","legendItem","Page","legendTextSize","maxSize","prvePositionX","nextPositionY","getPageChanged","prevPositionY","nextPositionX","DisplayText","Shape","Text","Fill","Data","legendObj","legendRect","rectWidth_1","rectHeight_1","itemTextStyle_1","legendLength_1","placement","itemStartX","itemStartY","labelAction","labelDisplayMode","maxTextHeight","maxTextWidth","legendText","itemTextSize","textWidth","textHeight","calculateLegendItems","legendFillColor","legendName","showLegendPath","valuePath","removeDuplicateLegend","removeDuplicates","legendFill","legendData","itemArea","isAddData","gradientElement","x2","y2","actualValue","isDuplicate","isRange","outfill","labelLegend","otherIndex","colorMapProcess","isDesaturation","legendIndex","outOfRangeLegend","colorMapping_1","showLegend","isAddNewLegendData","colors","gradient","q","stop1Color","colorStop","stop2Color","drawGradient","legendGradientColor","legendLinearGradient","newDataProcess","itemValue","process","textFont","renderLegendBorder","renderLegendTitle","drawLegendItem","itemId","textId","rectOptions","shapeBorder","translate","defaultLegendRtlLocation","spacing","legendRtlLocation","shapeSize","isLineShape","strokeColor","strokeWidth","shapeId","imageUrl","renderOptions_1","pagingGroup","pagingText","pagingFont","pagingTextSize","leftPageX","rightPageX","locY","pageTextX","leftPageElement","rightPageElement","rightPath","leftPath","leftPageOptions","leftRectPageOptions","wireEvents","rightPageOptions","rightRectPageOptions","pageTextOptions","legendBorder","pointerEvents","getLegendAlignment","trimTitle","renderInteractivePointer","interactiveId","elementFromPoint","changedTouches","clientX","clientY","targetItem","svgRect","rect_1","getAttribute","drawInteractivePointer","locX","invertedPointer","areaX","areaY","totalHeight","mouseUpHandler","changeNextPage","isDestroyed","on","off","xmlns","defElement","linerGradientEle","createElementNS","offsetColor","stopEle","TreeMapHighlight","shapeTarget","legendHighlightCollection","currentElement","processHighlight","treeMapElement","orders","highlight","highLightElements","selectionModule","treeMapSelectionModule","selectionId","selectionElements","legendSelectId","shapeSelectId","length_2","nodeEle","Elements","legendSelect","TreeMapSelection","shapeSelectionCollection","legendSelectionCollection","shapeSelect","selection","highlightModule","length_3","length_4","targetEle_1","TreeMapTooltip","tooltipId","renderTooltip","touchArg","tootipArgs","isTouch","pointerType","tooltipEle","markerFill","toolTipData","tooltipContent","svgTooltip","Tooltip","header","content","shapes","areaBounds","appendTo"],"mappings":"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"}