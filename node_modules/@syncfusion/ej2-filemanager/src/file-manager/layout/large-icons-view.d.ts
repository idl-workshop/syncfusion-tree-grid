import { ListBaseOptions } from '@syncfusion/ej2-lists';
import { TouchEventArgs, MouseEventArgs, KeyboardEventArgs } from '@syncfusion/ej2-base';
import { IFileManager } from '../base/interface';
/**
 * LargeIcons module
 */
export declare class LargeIconsView {
    private parent;
    element: HTMLElement;
    listObj: ListBaseOptions;
    private listView;
    private keyboardModule;
    private keyboardDownModule;
    private keyConfigs;
    private itemList;
    private items;
    private clickObj;
    private perRow;
    private startItem;
    private multiSelect;
    listElements: HTMLElement;
    pasteOperation: boolean;
    uploadOperation: boolean;
    private count;
    private isRendered;
    private tapCount;
    private tapEvent;
    private isSetModel;
    /**
     * Constructor for the LargeIcons module
     * @hidden
     */
    constructor(parent?: IFileManager);
    private render;
    /**
     * For internal use only - Get the module name.
     * @private
     */
    private getModuleName;
    private adjustHeight;
    private onItemCreated;
    private renderCheckbox;
    private onLayoutChange;
    private checkItem;
    private renderList;
    private onFinalizeEnd;
    private onCreateEnd;
    private onDeleteEnd;
    private onRefreshEnd;
    private onRenameInit;
    private onRenameEnd;
    private onPathChanged;
    private onOpenInit;
    private onHideLayout;
    private onSelectAllInit;
    private onClearAllInit;
    private onBeforeRequest;
    private onAfterRequest;
    private onSearch;
    private removeEventListener;
    private addEventListener;
    private onPropertyChanged;
    /**
     * Destroys the LargeIcons module.
     * @method destroy
     * @return {void}
     */
    destroy(): void;
    private wireEvents;
    private unWireEvents;
    private onMouseOver;
    private wireClickEvent;
    private doTapAction;
    private clickHandler;
    /** @hidden */
    doSelection(target: Element, e: TouchEventArgs | MouseEventArgs | KeyboardEventArgs): void;
    private dblClickHandler;
    private clearSelection;
    private resetMultiSelect;
    private doOpenAction;
    private updateType;
    private keydownActionHandler;
    private keyActionHandler;
    private updateRenameData;
    private getVisitedItem;
    private getFocusedItem;
    private getActiveItem;
    private getFirstItem;
    private getLastItem;
    private navigateItem;
    private navigateDown;
    private navigateRight;
    private getNextItem;
    private setFocus;
    private cut;
    private copy;
    private escapeKey;
    private spaceKey;
    private ctrlAKey;
    private csEndKey;
    private csHomeKey;
    private csDownKey;
    private csLeftKey;
    private csRightKey;
    private csUpKey;
    private addActive;
    private removeActive;
    private addFocus;
    private checkState;
    private clearSelect;
    private resizeHandler;
    private getItemCount;
    private triggerSelect;
    private selectItems;
    private getIndexes;
    private getItemObject;
}
