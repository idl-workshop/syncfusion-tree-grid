import { Toolbar as BaseToolbar } from '@syncfusion/ej2-navigations';
import { IFileManager } from '../base/interface';
/**
 * `Toolbar` module is used to handle Toolbar actions.
 */
export declare class Toolbar {
    private parent;
    private items;
    private buttonObj;
    private layoutBtnObj;
    private default;
    private single;
    private multiple;
    private selection;
    toolbarObj: BaseToolbar;
    /**
     * Constructor for the Toolbar module
     * @hidden
     */
    constructor(parent?: IFileManager);
    private render;
    private getItems;
    private onClicked;
    private toolbarCreateHandler;
    private updateSortByButton;
    private getPupupId;
    private layoutChange;
    private updateLayout;
    private toolbarItemData;
    private getId;
    private addEventListener;
    private reRenderToolbar;
    private onSelectionChanged;
    private hideItems;
    private hideStatus;
    private showPaste;
    private hidePaste;
    private onLayoutChange;
    private removeEventListener;
    /**
     * For internal use only - Get the module name.
     * @private
     */
    private getModuleName;
    private onPropertyChanged;
    /**
     * Destroys the Toolbar module.
     * @method destroy
     * @return {void}
     */
    destroy(): void;
    /**
     * Enables or disables the specified Toolbar items.
     * @param {string[]} items - Specifies an array of items to be enabled or disabled.
     * @param {boolean} isEnable - Determines whether the Toolbar items should to be enabled or disabled.
     */
    enableItems(items: string[], isEnable?: boolean): void;
}
