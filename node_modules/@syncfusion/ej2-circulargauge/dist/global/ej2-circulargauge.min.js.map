{"version":3,"file":"ej2-circulargauge.min.js","sources":["../../src/circular-gauge/utils/helper.js","../../src/circular-gauge/model/theme.js","../../src/circular-gauge/model/base.js","../../src/circular-gauge/axes/axis.js","../../src/circular-gauge/annotations/annotations.js","../../src/circular-gauge/model/constants.js","../../src/circular-gauge/user-interaction/tooltip.js","../../src/circular-gauge/axes/axis-renderer.js","../../src/circular-gauge/axes/pointer-renderer.js","../../src/circular-gauge/axes/axis-panel.js","../../src/circular-gauge/circular-gauge.js","../../src/global.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Specifies Circular-Gauge Helper methods\n */\nimport { compile as templateComplier } from '@syncfusion/ej2-base';\nimport { merge } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { createElement, remove, setStyleAttribute } from '@syncfusion/ej2-base';\n/**\n * Function to measure the height and width of the text.\n * @param  {string} text\n * @param  {FontModel} font\n * @param  {string} id\n * @returns Size\n * @private\n */\nexport function measureText(text, font) {\n    var htmlObject = document.getElementById('gauge-measuretext');\n    if (htmlObject === null) {\n        htmlObject = createElement('text', { id: 'gauge-measuretext' });\n        document.body.appendChild(htmlObject);\n    }\n    var style = 'position: absolute; visibility: hidden;' +\n        ';left: 0; top: -100; white-space: nowrap;' + getFontStyle(font);\n    htmlObject.innerHTML = text;\n    htmlObject.setAttribute('style', style);\n    return new Size(htmlObject.clientWidth, htmlObject.clientHeight);\n}\n/**\n * Function to find number from string\n * * @returns number\n * @private\n */\nexport function toPixel(value, maxDimension) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (maxDimension / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to get the style from FontModel.\n * @returns string\n * @private\n */\nexport function getFontStyle(font) {\n    var style = '';\n    style = 'font-size:' + font.size +\n        '; font-style:' + font.fontStyle + '; font-weight:' + font.fontWeight +\n        '; font-family:' + font.fontFamily + ';opacity:' + font.opacity +\n        '; color:' + font.color + ';';\n    return style;\n}\n/**\n * Function to set style to the element.\n * @private\n */\nexport function setStyles(element, fill, border) {\n    setStyleAttribute(element, {\n        'stroke': border.color, 'stroke-width': border.width,\n        'fill': fill\n    });\n}\n/**\n * Function to measure the element rect.\n * @returns ClientRect\n * @private\n */\nexport function measureElementRect(element) {\n    var bounds;\n    document.body.appendChild(element);\n    bounds = element.getBoundingClientRect();\n    removeElement(element.id);\n    return bounds;\n}\n/**\n * Function to convert the number from string.\n * @returns number\n * @private\n */\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to create the text element.\n * @returns Element\n * @private\n */\nexport function textElement(options, font, color, parent, styles) {\n    var renderOptions = {};\n    var htmlObject;\n    var renderer = new SvgRenderer('');\n    var style = styles + ' font-size:' + font.size + '; font-style:' + font.fontStyle +\n        ' ; font-weight:' + font.fontWeight + '; font-family:' + font.fontFamily + ';';\n    renderOptions = {\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'style': style\n    };\n    htmlObject = renderer.createText(renderOptions, options.text);\n    parent.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to append the path to the element.\n * @returns Element\n * @private\n */\nexport function appendPath(options, element, gauge, functionName) {\n    functionName = functionName ? functionName : 'Path';\n    var htmlObject = gauge.renderer['draw' + functionName](options);\n    htmlObject.setAttribute('transform', options.transform);\n    htmlObject.setAttribute('style', options.style);\n    element.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to calculate the sum of array values.\n * @returns number\n * @private\n */\nexport function calculateSum(from, to, values) {\n    var sum = 0;\n    var length = values.length;\n    for (; from < length; from++) {\n        sum += values[from];\n    }\n    return sum;\n}\n/**\n * Function to calculate the value for linear animation effect\n * @param currentTime\n * @param startValue\n * @param endValue\n * @param duration\n * @private\n */\nexport function linear(currentTime, startValue, endValue, duration) {\n    return -endValue * Math.cos(currentTime / duration * (Math.PI / 2)) + endValue + startValue;\n}\n/**\n * Function to get the angle from value for circular gauge.\n * @returns number\n * @private\n */\nexport function getAngleFromValue(value, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    var angle;\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    startAngle -= 90;\n    endAngle -= 90;\n    if (isClockWise) {\n        angle = ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue))) + startAngle;\n    }\n    else {\n        angle = endAngle - ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue)));\n        angle = angle < 0 ? 360 + angle : angle;\n    }\n    angle = Math.round(angle) >= 360 ? (angle - 360) : Math.round(angle) < 0 ? (360 + angle) : angle;\n    return angle;\n}\n/**\n * Function to get the degree for circular gauge.\n * @returns number\n * @private\n */\nexport function getDegree(startAngle, endAngle) {\n    var degree = endAngle - startAngle;\n    return degree < 0 ? (degree + 360) : degree;\n}\n/**\n * Function to get the value from angle for circular gauge.\n * @returns number\n * @private\n */\nexport function getValueFromAngle(angle, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    angle = angle < startAngle ? (angle + 360) : angle;\n    if (isClockWise) {\n        return (((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue;\n    }\n    else {\n        return maximumValue - ((((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue);\n    }\n}\n/**\n * Function to check whether it's a complete circle for circular gauge.\n * @returns boolean\n * @private\n */\nexport function isCompleteAngle(startAngle, endAngle) {\n    var totalAngle = endAngle - startAngle;\n    totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n    return Math.floor(totalAngle / 360) !== 0;\n}\n/**\n * Function to get angle from location for circular gauge.\n * @returns number\n * @private\n */\nexport function getAngleFromLocation(center, point) {\n    var angle = Math.atan2((point.y - center.y), (point.x - center.x));\n    angle = Math.round((angle < 0 ? (6.283 + angle) : angle) * (180 / Math.PI)) - 270;\n    angle += angle < 0 ? 360 : 0;\n    return angle;\n}\n/**\n * Function to get the location from angle for circular gauge.\n * @returns GaugeLocation\n * @private\n */\nexport function getLocationFromAngle(degree, radius, center) {\n    var radian = (degree * Math.PI) / 180;\n    return new GaugeLocation(Math.cos(radian) * radius + center.x, Math.sin(radian) * radius + center.y);\n}\n/**\n * Function to get the path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getPathArc(center, start, end, radius, startWidth, endWidth) {\n    end -= isCompleteAngle(start, end) ? 0.0001 : 0;\n    var degree = getDegree(start, end);\n    var startRadius = radius - startWidth;\n    var endRadius = radius - endWidth;\n    var arcRadius = radius - ((startWidth + endWidth) / 2);\n    if (startWidth !== undefined && endWidth !== undefined) {\n        return getRangePath(getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), getLocationFromAngle(start, startRadius, center), getLocationFromAngle(end, endRadius, center), radius, arcRadius, arcRadius, (degree < 180) ? 0 : 1);\n    }\n    else {\n        return getCirclePath(getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, (degree < 180) ? 0 : 1);\n    }\n}\n/**\n * Function to get the range path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getRangePath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y +\n        ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y +\n        ' L ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n/**\n * Function to get the rounded path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getRoundedPathArc(center, actualStart, actualEnd, oldStart, oldEnd, radius, startWidth, endWidth) {\n    actualEnd -= isCompleteAngle(actualStart, actualEnd) ? 0.0001 : 0;\n    var degree = getDegree(actualStart, actualEnd);\n    var startRadius = radius - startWidth;\n    var endRadius = radius - endWidth;\n    var arcRadius = radius - ((startWidth + endWidth) / 2);\n    return getRoundedPath(getLocationFromAngle(actualStart, radius, center), getLocationFromAngle(actualEnd, radius, center), getLocationFromAngle(oldEnd, radius, center), getLocationFromAngle(oldEnd, endRadius, center), getLocationFromAngle(oldStart, radius, center), getLocationFromAngle(oldStart, startRadius, center), getLocationFromAngle(actualStart, startRadius, center), getLocationFromAngle(actualEnd, endRadius, center), radius, arcRadius, arcRadius, (degree < 180) ? 0 : 1);\n}\n/**\n * Function to get the rounded range path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getRoundedPath(start, end, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart, innerStart, innerEnd, radius, startRadius, endRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y +\n        ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y +\n        ' C ' + outerOldEnd.x + ' ' + outerOldEnd.y + ' ' + innerOldEnd.x + ' ' +\n        innerOldEnd.y + ' ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y +\n        ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n        outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n}\n/**\n * Function to calculate the complete path arc of the circular gauge.\n * @returns string\n * @private\n */\nexport function getCompleteArc(center, start, end, radius, innerRadius) {\n    end -= isCompleteAngle(start, end) ? 0.0001 : 0;\n    var degree = getDegree(start, end);\n    return getCompletePath(center, getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, getLocationFromAngle(start, innerRadius, center), getLocationFromAngle(end, innerRadius, center), innerRadius, (degree < 180) ? 0 : 1);\n}\n/**\n * Function to get the circular path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getCirclePath(start, end, radius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' +\n        radius + ' 0 ' + clockWise + ' 1 ' + end.x + ' ' + end.y;\n}\n/**\n * Function to get the complete path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getCompletePath(center, start, end, radius, innerStart, innerEnd, innerRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' + clockWise +\n        ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y + ' A ' + innerRadius +\n        ' ' + innerRadius + ' 0 ' + clockWise + ',0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n/**\n * Function to get element from id.\n * @returns Element\n * @private\n */\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/**\n * Function to compile the template function for circular gauge.\n * @returns Function\n * @private\n */\nexport function getTemplateFunction(template) {\n    var templateFn = null;\n    var e;\n    try {\n        if (document.querySelectorAll(template).length) {\n            templateFn = templateComplier(document.querySelector(template).innerHTML.trim());\n        }\n    }\n    catch (e) {\n        templateFn = templateComplier(template);\n    }\n    return templateFn;\n}\n/**\n * Function to remove the element from id.\n * @private\n */\nexport function removeElement(id) {\n    var element = getElement(id);\n    if (element) {\n        remove(element);\n    }\n}\n/**\n * Function to get current point for circular gauge using element id.\n * @returns IVisiblePointer\n * @private\n */\nexport function getPointer(targetId, gauge) {\n    var tempString;\n    tempString = targetId.replace(gauge.element.id, '').split('_Axis_')[1];\n    return {\n        axisIndex: +tempString[0],\n        pointerIndex: +tempString[tempString.length - 1]\n    };\n}\nexport function getElementSize(template, gauge, parent) {\n    var elementSize;\n    var element;\n    var templateFn = getTemplateFunction(template);\n    if (templateFn && templateFn(gauge).length) {\n        element = gauge.createElement('div', { id: gauge.element.id + '_Measure_Element' });\n        gauge.element.appendChild(element);\n        var templateElement = templateFn(gauge);\n        while (templateElement.length > 0) {\n            element.appendChild(templateElement[0]);\n        }\n        parent.appendChild(element);\n        elementSize = new Size(parent.getBoundingClientRect().width, parent.getBoundingClientRect().height);\n        remove(element);\n    }\n    return elementSize;\n}\n/**\n * Function to get the mouse position\n * @param pageX\n * @param pageY\n * @param element\n */\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new GaugeLocation((pageX - positionX), (pageY - positionY));\n}\n/**\n * Function to convert the label using formar for cirular gauge.\n * @returns string\n * @private\n */\nexport function getLabelFormat(format) {\n    var customLabelFormat = format && format.match('{value}') !== null;\n    var skeleton = customLabelFormat ? '' : format;\n    return skeleton;\n}\n/**\n * Function to calculate the marker shape for circular gauge.\n * @returns PathOption\n * @private\n */\nexport function calculateShapes(location, shape, size, url, options) {\n    var path;\n    var width = size.width;\n    var height = size.height;\n    var locX = location.x;\n    var locY = location.y;\n    var x = location.x + (-width / 2);\n    var y = location.y + (-height / 2);\n    switch (shape) {\n        case 'Circle':\n            merge(options, { 'rx': width / 2, 'ry': height / 2, 'cx': locX, 'cy': locY });\n            break;\n        case 'Diamond':\n            path = 'M' + ' ' + x + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + locY + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Rectangle':\n            path = 'M' + ' ' + x + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (-height / 2)) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Triangle':\n            path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                'L' + ' ' + (locX - height) + ' ' + (locY - (width / 2)) +\n                'L' + ' ' + (locX - height) + ' ' + (locY + (width / 2)) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'InvertedTriangle':\n            path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                'L' + ' ' + (locX + height) + ' ' + (locY - (width / 2)) +\n                'L' + ' ' + (locX + height) + ' ' + (locY + (width / 2)) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Image':\n            merge(options, { 'href': url, 'height': height, 'width': width, x: x, y: y });\n            break;\n    }\n    return options;\n}\n/**\n * Function to get range color from value for circular gauge.\n * @returns string\n * @private\n */\nexport function getRangeColor(value, ranges, color) {\n    var min = 0;\n    var max = 0;\n    var currentRange = ranges.filter(function (range) {\n        min = Math.min(range.start, range.end);\n        max = Math.max(range.start, range.end);\n        return (value >= min && max >= value);\n    });\n    return currentRange.length ? currentRange[0].rangeColor : color;\n}\n/** @private */\nvar CustomizeOption = /** @class */ (function () {\n    function CustomizeOption(id) {\n        this.id = id;\n    }\n    return CustomizeOption;\n}());\nexport { CustomizeOption };\n/** @private */\nvar PathOption = /** @class */ (function (_super) {\n    __extends(PathOption, _super);\n    function PathOption(id, fill, width, color, opacity, dashArray, d, transform, style) {\n        if (transform === void 0) { transform = ''; }\n        if (style === void 0) { style = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = color;\n        _this['stroke-width'] = width;\n        _this['stroke-dasharray'] = dashArray;\n        _this.d = d;\n        _this.transform = transform;\n        _this.style = style;\n        return _this;\n    }\n    return PathOption;\n}(CustomizeOption));\nexport { PathOption };\n/** @private */\nvar RectOption = /** @class */ (function (_super) {\n    __extends(RectOption, _super);\n    function RectOption(id, fill, border, opacity, rect) {\n        var _this = _super.call(this, id) || this;\n        _this.y = rect.y;\n        _this.x = rect.x;\n        _this.height = rect.height;\n        _this.width = rect.width;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = border.color;\n        _this['stroke-width'] = border.width;\n        return _this;\n    }\n    return RectOption;\n}(CustomizeOption));\nexport { RectOption };\n/**\n * Internal class size\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\n/** @private */\nvar GaugeLocation = /** @class */ (function () {\n    function GaugeLocation(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return GaugeLocation;\n}());\nexport { GaugeLocation };\n/** @private */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/** @private */\nvar TextOption = /** @class */ (function (_super) {\n    __extends(TextOption, _super);\n    function TextOption(id, x, y, anchor, text, transform, baseLine) {\n        if (transform === void 0) { transform = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.transform = '';\n        _this.baseLine = 'auto';\n        _this.x = x;\n        _this.y = y;\n        _this.anchor = anchor;\n        _this.text = text;\n        _this.transform = transform;\n        _this.baseLine = baseLine;\n        return _this;\n    }\n    return TextOption;\n}(CustomizeOption));\nexport { TextOption };\n/** @private */\nvar VisibleLabels = /** @class */ (function () {\n    function VisibleLabels(text, value, size) {\n        this.text = text;\n        this.value = value;\n        this.size = size;\n    }\n    return VisibleLabels;\n}());\nexport { VisibleLabels };\n","/**\n * Specifies gauge Themes\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.axisLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n})(Theme || (Theme = {}));\n/** @private */\nexport function getRangePalette(theme) {\n    var palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    // switch (theme) {\n    //     case 'Material':\n    //         palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    //         break;\n    //      case 'Fabric':\n    //         palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    //         break;\n    // }\n    return palette;\n}\n/** @private */\nexport function getThemeStyle(theme) {\n    var style;\n    switch (theme) {\n        case 'MaterialDark':\n        case 'FabricDark':\n        case 'BootstrapDark':\n            style = {\n                backgroundColor: '#333232',\n                titleFontColor: '#ffffff',\n                tooltipFillColor: '#FFFFFF',\n                tooltipFontColor: '#000000',\n                labelColor: '#DADADA',\n                lineColor: '#C8C8C8',\n                majorTickColor: '#C8C8C8',\n                minorTickColor: '#9A9A9A',\n                pointerColor: '#9A9A9A',\n                capColor: '#9A9A9A',\n                needleColor: '#9A9A9A',\n                needleTailColor: '#9A9A9A'\n            };\n            break;\n        case 'HighContrast':\n            style = {\n                backgroundColor: '#000000',\n                titleFontColor: '#FFFFFF',\n                tooltipFillColor: '#ffffff',\n                tooltipFontColor: '#000000',\n                labelColor: '#FFFFFF',\n                lineColor: '#FFFFFF',\n                majorTickColor: '#FFFFFF',\n                minorTickColor: '#FFFFFF',\n                pointerColor: '#FFFFFF',\n                capColor: '#FFFFFF',\n                needleColor: '#FFFFFF',\n                needleTailColor: '#FFFFFF'\n            };\n            break;\n        case 'Bootstrap4':\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#212529',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                labelColor: '#212529',\n                lineColor: '#DEE2E6',\n                majorTickColor: '#ADB5BD',\n                minorTickColor: '#CED4DA',\n                pointerColor: '#6C757D',\n                capColor: '#6C757D',\n                needleColor: '#6C757D',\n                needleTailColor: '#6C757D',\n                fontFamily: 'HelveticaNeue-Medium',\n                fontSize: '16px',\n                labelFontFamily: 'HelveticaNeue',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9\n            };\n            break;\n        default:\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#424242',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                labelColor: '#212121',\n                lineColor: '#E0E0E0',\n                majorTickColor: '#9E9E9E',\n                minorTickColor: '#9E9E9E',\n                pointerColor: '#757575',\n                capColor: '#757575',\n                needleColor: '#757575',\n                needleTailColor: '#757575'\n            };\n            break;\n    }\n    return style;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Configures the borders in circular gauge.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Configures the fonts in circular gauge.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('16px')\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property('segoe UI')\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Configures the margin of circular gauge.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Configures the tooltip in circular gauge.\n */\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], TooltipSettings.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"showAtMousePosition\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Font, Border } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Configures the axis line.\n */\nvar Line = /** @class */ (function (_super) {\n    __extends(Line, _super);\n    function Line() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Line.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], Line.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], Line.prototype, \"color\", void 0);\n    return Line;\n}(ChildProperty));\nexport { Line };\n/**\n * Configures the axis label.\n */\nvar Label = /** @class */ (function (_super) {\n    __extends(Label, _super);\n    function Label() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex(Theme.axisLabelFont, Font)\n    ], Label.prototype, \"font\", void 0);\n    __decorate([\n        Property('')\n    ], Label.prototype, \"format\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Label.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], Label.prototype, \"hiddenLabel\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"useRangeColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Label.prototype, \"offset\", void 0);\n    return Label;\n}(ChildProperty));\nexport { Label };\n/**\n * Configures the ranges of an axis.\n */\nvar Range = /** @class */ (function (_super) {\n    __extends(Range, _super);\n    function Range() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"start\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"end\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"radius\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"startWidth\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"endWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(1)\n    ], Range.prototype, \"opacity\", void 0);\n    return Range;\n}(ChildProperty));\nexport { Range };\n/**\n * Configures the major and minor tick lines of an axis.\n */\nvar Tick = /** @class */ (function (_super) {\n    __extends(Tick, _super);\n    function Tick() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Tick.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"interval\", void 0);\n    __decorate([\n        Property(0)\n    ], Tick.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"color\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Tick.prototype, \"position\", void 0);\n    __decorate([\n        Property(false)\n    ], Tick.prototype, \"useRangeColor\", void 0);\n    return Tick;\n}(ChildProperty));\nexport { Tick };\n/**\n * Configures the needle cap in pointer.\n */\nvar Cap = /** @class */ (function (_super) {\n    __extends(Cap, _super);\n    function Cap() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: null, width: 8 }, Border)\n    ], Cap.prototype, \"border\", void 0);\n    __decorate([\n        Property(8)\n    ], Cap.prototype, \"radius\", void 0);\n    return Cap;\n}(ChildProperty));\nexport { Cap };\n/**\n * Configures the back needle in pointers.\n */\nvar NeedleTail = /** @class */ (function (_super) {\n    __extends(NeedleTail, _super);\n    function NeedleTail() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: null, width: 0 }, Border)\n    ], NeedleTail.prototype, \"border\", void 0);\n    __decorate([\n        Property('0%')\n    ], NeedleTail.prototype, \"length\", void 0);\n    return NeedleTail;\n}(ChildProperty));\nexport { NeedleTail };\n/**\n * Configures the animation of pointers.\n */\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], Animation.prototype, \"enable\", void 0);\n    __decorate([\n        Property(1000)\n    ], Animation.prototype, \"duration\", void 0);\n    return Animation;\n}(ChildProperty));\nexport { Animation };\n/**\n * ‘Annotation’ module is used to handle annotation action for an axis.\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(90)\n    ], Annotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property('50%')\n    ], Annotation.prototype, \"radius\", void 0);\n    __decorate([\n        Property('-1')\n    ], Annotation.prototype, \"zIndex\", void 0);\n    __decorate([\n        Property(false)\n    ], Annotation.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Complex({ size: '12px', color: '#686868' }, Font)\n    ], Annotation.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"description\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Configures the pointers of an axis.\n */\nvar Pointer = /** @class */ (function (_super) {\n    __extends(Pointer, _super);\n    function Pointer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"value\", void 0);\n    __decorate([\n        Property('Needle')\n    ], Pointer.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Pointer.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"radius\", void 0);\n    __decorate([\n        Property(20)\n    ], Pointer.prototype, \"pointerWidth\", void 0);\n    __decorate([\n        Complex({}, Cap)\n    ], Pointer.prototype, \"cap\", void 0);\n    __decorate([\n        Complex({}, NeedleTail)\n    ], Pointer.prototype, \"needleTail\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: '#DDDDDD', width: 0 }, Border)\n    ], Pointer.prototype, \"border\", void 0);\n    __decorate([\n        Complex(null, Animation)\n    ], Pointer.prototype, \"animation\", void 0);\n    __decorate([\n        Property('Circle')\n    ], Pointer.prototype, \"markerShape\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerHeight\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"description\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerWidth\", void 0);\n    return Pointer;\n}(ChildProperty));\nexport { Pointer };\n/**\n * Configures an axis in a gauge.\n */\nvar Axis = /** @class */ (function (_super) {\n    __extends(Axis, _super);\n    function Axis() {\n        /**\n         * Specifies the minimum value of an axis.\n         * @aspDefaultValueIgnore\n         * @default null\n         */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.visibleLabels = [];\n        return _this;\n    }\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"showLastLabel\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"roundingPlaces\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"radius\", void 0);\n    __decorate([\n        Complex({}, Line)\n    ], Axis.prototype, \"lineStyle\", void 0);\n    __decorate([\n        Collection([{}], Range)\n    ], Axis.prototype, \"ranges\", void 0);\n    __decorate([\n        Collection([{}], Pointer)\n    ], Axis.prototype, \"pointers\", void 0);\n    __decorate([\n        Collection([{}], Annotation)\n    ], Axis.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 10 }, Tick)\n    ], Axis.prototype, \"majorTicks\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 5 }, Tick)\n    ], Axis.prototype, \"minorTicks\", void 0);\n    __decorate([\n        Property(200)\n    ], Axis.prototype, \"startAngle\", void 0);\n    __decorate([\n        Property(160)\n    ], Axis.prototype, \"endAngle\", void 0);\n    __decorate([\n        Property('ClockWise')\n    ], Axis.prototype, \"direction\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"background\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"rangeGap\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"startAndEndRangeGap\", void 0);\n    __decorate([\n        Complex({}, Label)\n    ], Axis.prototype, \"labelStyle\", void 0);\n    return Axis;\n}(ChildProperty));\nexport { Axis };\n","import { stringToNumber, getLocationFromAngle, getFontStyle } from '../utils/helper';\nimport { getElement, getTemplateFunction, measureElementRect } from '../utils/helper';\nimport { annotationRender } from '../model/constants';\nimport { createElement } from '@syncfusion/ej2-base';\n/**\n * Annotation Module handles the Annotation of the axis.\n */\nvar Annotations = /** @class */ (function () {\n    /**\n     * Constructor for Annotation module.\n     * @private.\n     */\n    function Annotations(gauge) {\n        this.gauge = gauge;\n        this.elementId = gauge.element.id;\n    }\n    /**\n     * Method to render the annotation for circular gauge.\n     */\n    Annotations.prototype.renderAnnotation = function (axis, index) {\n        var _this = this;\n        var width = this.gauge.availableSize.width;\n        var element = createElement('div', {\n            id: this.elementId + '_Annotations_' + index\n        });\n        var parentElement = getElement(this.elementId + '_Secondary_Element');\n        document.getElementById(this.elementId + '_Secondary_Element').style.width = width + 'px';\n        axis.annotations.map(function (annotation, annotationIndex) {\n            if (annotation.content !== null) {\n                _this.createTemplate(element, annotationIndex, index);\n            }\n        });\n        if (parentElement && element.childElementCount) {\n            parentElement.appendChild(element);\n        }\n    };\n    /**\n     * Method to create annotation template for circular gauge.\n     */\n    Annotations.prototype.createTemplate = function (element, annotationIndex, axisIndex) {\n        var axis = this.gauge.axes[axisIndex];\n        var annotation = axis.annotations[annotationIndex];\n        var childElement = createElement('div', {\n            id: this.elementId + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex,\n            styles: 'position: absolute; z-index:' + annotation.zIndex + ';transform:' +\n                (annotation.autoAngle ? 'rotate(' + (annotation.angle - 90) + 'deg)' : 'rotate(0deg)') + ';'\n        });\n        var argsData = {\n            cancel: false, name: annotationRender, content: annotation.content,\n            axis: axis, annotation: annotation, textStyle: annotation.textStyle\n        };\n        this.gauge.trigger(annotationRender, argsData);\n        var templateFn;\n        var templateElement;\n        if (!argsData.cancel) {\n            templateFn = getTemplateFunction(argsData.content);\n            if (templateFn && templateFn(axis).length) {\n                templateElement = Array.prototype.slice.call(templateFn(axis));\n                var length_1 = templateElement.length;\n                for (var i = 0; i < length_1; i++) {\n                    childElement.appendChild(templateElement[i]);\n                }\n            }\n            else {\n                childElement.appendChild(createElement('div', {\n                    innerHTML: argsData.content,\n                    styles: getFontStyle(argsData.textStyle)\n                }));\n            }\n            this.updateLocation(childElement, axis, annotation);\n            element.appendChild(childElement);\n        }\n    };\n    /**\n     * Method to update the annotation location for circular gauge.\n     */\n    Annotations.prototype.updateLocation = function (element, axis, annotation) {\n        var location = getLocationFromAngle(annotation.angle - 90, stringToNumber(annotation.radius, axis.currentRadius), this.gauge.midPoint);\n        var elementRect = measureElementRect(element);\n        element.style.left = (location.x - (elementRect.width / 2)) + 'px';\n        element.style.top = (location.y - (elementRect.height / 2)) + 'px';\n        element.setAttribute('aria-label', annotation.description || 'Annotation');\n    };\n    /**\n     * Get module name.\n     */\n    Annotations.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Annotations';\n    };\n    /**\n     * To destroy the annotation.\n     * @return {void}\n     * @private\n     */\n    Annotations.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    return Annotations;\n}());\nexport { Annotations };\n","/**\n * Specifies the gauge constant value\n */\n/** @private */\nexport var loaded = 'loaded';\n/** @private */\nexport var load = 'load';\n/** @private */\nexport var animationComplete = 'animationComplete';\n/** @private */\nexport var axisLabelRender = 'axisLabelRender';\n/** @private */\nexport var radiusCalculate = 'radiusCalculate';\n/** @private */\nexport var tooltipRender = 'tooltipRender';\n/** @private */\nexport var annotationRender = 'annotationRender';\n/** @private */\nexport var gaugeMouseMove = 'gaugeMouseMove';\n/** @private */\nexport var gaugeMouseLeave = 'gaugeMouseLeave';\n/** @private */\nexport var gaugeMouseDown = 'gaugeMouseDown';\n/** @private */\nexport var gaugeMouseUp = 'gaugeMouseUp';\n/** @private */\nexport var dragStart = 'dragStart';\n/** @private */\nexport var dragMove = 'dragMove';\n/** @private */\nexport var dragEnd = 'dragEnd';\n/** @private */\nexport var resized = 'resized';\n","import { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { getPointer, Rect, getMousePosition, getElementSize } from '../utils/helper';\nimport { getAngleFromValue, getLabelFormat, getLocationFromAngle } from '../utils/helper';\nimport { Browser, createElement, remove } from '@syncfusion/ej2-base';\nimport { tooltipRender } from '../model/constants';\n/**\n * Tooltip Module handles the tooltip of the circular gauge\n */\nvar GaugeTooltip = /** @class */ (function () {\n    /**\n     * Constructor for Tooltip module.\n     * @private.\n     */\n    function GaugeTooltip(gauge) {\n        this.gauge = gauge;\n        this.tooltipId = this.gauge.element.id + '_CircularGauge_Tooltip';\n        this.tooltip = gauge.tooltip;\n        this.textStyle = this.tooltip.textStyle;\n        this.borderStyle = this.tooltip.border;\n        this.addEventListener();\n    }\n    /**\n     * Method to render the tooltip for circular gauge.\n     */\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable:max-func-body-length */\n    GaugeTooltip.prototype.renderTooltip = function (e) {\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var location;\n        var samePointerEle = false;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            target = touchArg.target;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n        }\n        else {\n            target = e.target;\n            pageX = e.pageX;\n            pageY = e.pageY;\n        }\n        if (target.id.indexOf('_Pointer_') >= 0) {\n            if (this.pointerEle !== null) {\n                samePointerEle = (this.pointerEle === target);\n            }\n            var svgRect = this.gauge.svgObject.getBoundingClientRect();\n            var elementRect = this.gauge.element.getBoundingClientRect();\n            var axisRect = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect = new Rect(Math.abs(elementRect.left - svgRect.left), Math.abs(elementRect.top - svgRect.top), svgRect.width, svgRect.height);\n            var currentPointer = getPointer(target.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentPointer.axisIndex];\n            this.currentPointer = (this.currentAxis.pointers)[currentPointer.pointerIndex];\n            var angle = getAngleFromValue(this.currentPointer.currentValue, this.currentAxis.visibleRange.max, this.currentAxis.visibleRange.min, this.currentAxis.startAngle, this.currentAxis.endAngle, this.currentAxis.direction === 'ClockWise') % 360;\n            var tooltipFormat = this.gauge.tooltip.format || this.currentAxis.labelStyle.format;\n            var customLabelFormat = tooltipFormat && tooltipFormat.match('{value}') !== null;\n            var format = this.gauge.intl.getNumberFormat({\n                format: getLabelFormat(tooltipFormat), useGrouping: this.gauge.useGroupingSeparator\n            });\n            if (document.getElementById(this.tooltipId)) {\n                this.tooltipEle = document.getElementById(this.tooltipId);\n            }\n            else {\n                this.tooltipEle = createElement('div', {\n                    id: this.tooltipId,\n                    className: 'EJ2-CircularGauge-Tooltip',\n                    styles: 'position: absolute;pointer-events:none;'\n                });\n                document.getElementById(this.gauge.element.id + '_Secondary_Element').appendChild(this.tooltipEle);\n            }\n            var roundValue = void 0;\n            roundValue = this.currentAxis.roundingPlaces ?\n                parseFloat(this.currentPointer.currentValue.toFixed(this.currentAxis.roundingPlaces)) :\n                this.currentPointer.currentValue;\n            var content = customLabelFormat ?\n                tooltipFormat.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                format(roundValue);\n            location = getLocationFromAngle(angle, this.currentAxis.currentRadius, this.gauge.midPoint);\n            location.x = (this.tooltip.template && ((angle >= 150 && angle <= 250) || (angle >= 330 && angle <= 360) ||\n                (angle >= 0 && angle <= 45))) ? (location.x + 10) : location.x;\n            var tooltipArgs = {\n                name: tooltipRender, cancel: false, content: content, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, pointer: this.currentPointer, event: e, gauge: this.gauge\n            };\n            this.gauge.trigger(tooltipRender, tooltipArgs);\n            var template = tooltipArgs.tooltip.template;\n            if (template !== null && template.length === 1) {\n                template = template[template[0]];\n            }\n            if (!this.tooltip.showAtMousePosition) {\n                if (template) {\n                    var elementSize = getElementSize(template, this.gauge, this.tooltipEle);\n                    this.tooltipRect = Math.abs(axisRect.left - svgRect.left) > elementSize.width ?\n                        this.findPosition(rect, angle, content, tooltipArgs.location) : rect;\n                }\n                else {\n                    this.findPosition(rect, angle, content, tooltipArgs.location);\n                }\n            }\n            else {\n                tooltipArgs.location = getMousePosition(pageX, pageY, this.gauge.svgObject);\n                this.tooltipRect = rect;\n            }\n            if (!tooltipArgs.cancel && !samePointerEle) {\n                tooltipArgs.tooltip.textStyle.color = tooltipArgs.tooltip.textStyle.color || this.gauge.themeStyle.tooltipFontColor;\n                tooltipArgs.tooltip.textStyle.fontFamily = this.gauge.themeStyle.fontFamily || tooltipArgs.tooltip.textStyle.fontFamily;\n                tooltipArgs.tooltip.textStyle.opacity = this.gauge.themeStyle.tooltipTextOpacity || tooltipArgs.tooltip.textStyle.opacity;\n                this.svgTooltip = new Tooltip({\n                    enable: true,\n                    data: { value: tooltipArgs.content },\n                    template: template,\n                    enableAnimation: tooltipArgs.tooltip.enableAnimation,\n                    content: [tooltipArgs.content],\n                    location: tooltipArgs.location,\n                    inverted: this.arrowInverted,\n                    areaBounds: this.tooltipRect,\n                    fill: tooltipArgs.tooltip.fill || this.gauge.themeStyle.tooltipFillColor,\n                    textStyle: tooltipArgs.tooltip.textStyle,\n                    border: tooltipArgs.tooltip.border\n                });\n                this.svgTooltip.opacity = this.gauge.themeStyle.tooltipFillOpacity || this.svgTooltip.opacity;\n                this.svgTooltip.appendTo(this.tooltipEle);\n                if (template && Math.abs(pageY - this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                    this.tooltipEle.style.top = (parseFloat(this.tooltipEle.style.top) + 20) + 'px';\n                }\n            }\n        }\n        else {\n            this.removeTooltip();\n        }\n    };\n    /**\n     * Method to find the position of the tooltip anchor for circular gauge.\n     */\n    GaugeTooltip.prototype.findPosition = function (rect, angle, text, location) {\n        var addLeft;\n        var addTop;\n        var addHeight;\n        var addWidth;\n        switch (true) {\n            case (angle >= 0 && angle < 45):\n                this.arrowInverted = true;\n                addLeft = (angle >= 15 && angle <= 30) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'RightBottom';\n                break;\n            case (angle >= 45 && angle < 90):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomRight';\n                break;\n            case (angle >= 90 && angle < 135):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomLeft';\n                break;\n            case (angle >= 135 && angle < 180):\n                this.arrowInverted = true;\n                addTop = (angle >= 150 && angle <= 160) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x - rect.width, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'LeftBottom';\n                break;\n            case (angle >= 180 && angle < 225):\n                this.arrowInverted = true;\n                addHeight = (angle >= 200 && angle <= 225) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x - rect.width, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'LeftTop';\n                break;\n            case (angle >= 225 && angle < 270):\n                this.arrowInverted = false;\n                addWidth = (angle >= 250 && angle <= 290) ? rect.width : Math.abs(rect.x - location.x);\n                this.tooltipRect = new Rect(rect.x, rect.y, addWidth, rect.height);\n                this.tooltipPosition = 'TopLeft';\n                break;\n            case (angle >= 270 && angle < 315):\n                this.arrowInverted = false;\n                addLeft = (angle >= 270 && angle > 290) ? location.x : 0;\n                this.tooltipRect = new Rect(rect.x + addLeft, rect.y, rect.width, rect.height);\n                this.tooltipPosition = 'TopRight';\n                break;\n            case (angle >= 315 && angle <= 360):\n                this.arrowInverted = true;\n                addHeight = (angle >= 315 && angle <= 340) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'RightTop';\n                break;\n        }\n        return this.tooltipRect;\n    };\n    GaugeTooltip.prototype.removeTooltip = function () {\n        if (document.getElementsByClassName('EJ2-CircularGauge-Tooltip').length > 0) {\n            var tooltip = document.getElementsByClassName('EJ2-CircularGauge-Tooltip')[0];\n            if (tooltip) {\n                remove(tooltip);\n            }\n            this.pointerEle = null;\n        }\n    };\n    GaugeTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    /**\n     * To bind events for tooltip module\n     */\n    GaugeTooltip.prototype.addEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.gauge.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To unbind events for tooltip module\n     */\n    GaugeTooltip.prototype.removeEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.gauge.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    GaugeTooltip.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Tooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     * @return {void}\n     * @private\n     */\n    GaugeTooltip.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n        this.removeEventListener();\n    };\n    return GaugeTooltip;\n}());\nexport { GaugeTooltip };\n","import { getLocationFromAngle, PathOption, stringToNumber, TextOption, textElement, appendPath, toPixel } from '../utils/helper';\nimport { getAngleFromValue, isCompleteAngle, getPathArc, getRoundedPathArc, getRangeColor } from '../utils/helper';\nimport { getRangePalette } from '../model/theme';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar AxisRenderer = /** @class */ (function () {\n    /**\n     * Constructor for axis renderer.\n     * @private.\n     */\n    function AxisRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis element of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisOuterLine = function (axis, index, element, gauge) {\n        var background = axis.background;\n        this.setRangeColor(axis);\n        if (background !== null) {\n            appendPath(new PathOption(gauge.element.id + '_AxisOuterLine_' + index, background, 0, 'transparent', null, '0', getPathArc(gauge.midPoint, 0, 360, (Math.min(axis.rect.width, axis.rect.height) / 2)), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to render the axis line of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLine = function (axis, index, element, gauge) {\n        var startAngle = axis.startAngle;\n        var endAngle = axis.endAngle;\n        var color = axis.lineStyle.color || this.gauge.themeStyle.lineColor;\n        if (axis.lineStyle.width > 0) {\n            startAngle = !isCompleteAngle(startAngle, endAngle) ? startAngle : [0, endAngle = 360][0];\n            appendPath(new PathOption(gauge.element.id + '_AxisLine_' + index, 'transparent', axis.lineStyle.width, color, null, axis.lineStyle.dashArray, getPathArc(gauge.midPoint, startAngle - 90, endAngle - 90, axis.currentRadius), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to render the axis labels of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLabels = function (axis, index, element, gauge) {\n        var labelElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Labels_' + index\n        });\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var labelCollection = axis.visibleLabels;\n        var location;\n        var style = axis.labelStyle;\n        var anchor;\n        var angle;\n        var label;\n        var radius = axis.currentRadius;\n        var labelPadding = 10;\n        var color = style.font.color || this.gauge.themeStyle.labelColor;\n        if (style.position === 'Outside') {\n            radius += (axis.nearSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2)) +\n                (labelPadding / 2);\n        }\n        else {\n            radius -= (axis.farSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2) +\n                (style.autoAngle ? labelPadding : 0));\n        }\n        for (var i = 0, length_1 = labelCollection.length; i < length_1; i++) {\n            if ((i === 0 && style.hiddenLabel === 'First') ||\n                (i === (length_1 - 1) && style.hiddenLabel === 'Last')) {\n                continue;\n            }\n            label = labelCollection[i];\n            angle = Math.round(getAngleFromValue(label.value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n            location = getLocationFromAngle(angle, radius, gauge.midPoint);\n            anchor = this.findAnchor(location, style, angle, label);\n            style.font.fontFamily = this.gauge.themeStyle.labelFontFamily || style.font.fontFamily;\n            textElement(new TextOption(gauge.element.id + '_Axis_' + index + '_Label_' + i, location.x, location.y, anchor, label.text, style.autoAngle ? 'rotate(' + (angle + 90) + ',' + (location.x) + ',' + location.y + ')' : '', 'auto'), style.font, style.useRangeColor ? getRangeColor(label.value, axis.ranges, color) : color, labelElement, 'pointer-events:none;');\n        }\n        element.appendChild(labelElement);\n    };\n    /**\n     * Method to find the anchor of the axis label.\n     * @private\n     */\n    AxisRenderer.prototype.findAnchor = function (location, style, angle, label) {\n        if (style.autoAngle) {\n            return 'middle';\n        }\n        var anchor = style.position === 'Inside' ?\n            ((angle > 120 && angle < 240) ? 'start' : ((300 < angle || angle < 60) ? 'end' : 'middle')) :\n            ((angle > 120 && angle < 240) ? 'end' : ((300 < angle || angle < 60) ? 'start' : 'middle'));\n        location.y += style.position === 'Inside' ?\n            ((angle >= 240 && angle <= 300) ? (label.size.height / 2) :\n                (angle >= 60 && angle <= 120) ? 0 : label.size.height / 4) :\n            ((angle >= 240 && angle <= 300) ? 0 :\n                (angle >= 60 && angle <= 120) ? label.size.height / 2 : label.size.height / 4);\n        return anchor;\n    };\n    /**\n     * Method to render the axis minor tick lines of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMinorTickLines = function (axis, index, element, gauge) {\n        var minorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MinorTickLines_' + index\n        });\n        var minorLineStyle = axis.minorTicks;\n        var minorInterval = minorLineStyle.interval !== null ?\n            minorLineStyle.interval : (axis.visibleRange.interval / 2);\n        var isRangeColor = minorLineStyle.useRangeColor;\n        var color = minorLineStyle.color || this.gauge.themeStyle.minorTickColor;\n        if (minorLineStyle.width && minorLineStyle.height && minorInterval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max; i <= max; i += minorInterval) {\n                if (this.majorValues.indexOf(+i.toFixed(3)) < 0) {\n                    appendPath(new PathOption(gauge.element.id + '_Axis_Minor_TickLine_' + index + '_' + i, 'transparent', minorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, color) : color, null, '0', this.calculateTicks(i, minorLineStyle, axis), '', 'pointer-events:none;'), minorTickElements, gauge);\n                }\n            }\n            element.appendChild(minorTickElements);\n        }\n    };\n    /**\n     * Method to render the axis major tick lines of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMajorTickLines = function (axis, index, element, gauge) {\n        var majorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MajorTickLines_' + index\n        });\n        var majorLineStyle = axis.majorTicks;\n        var isRangeColor = majorLineStyle.useRangeColor;\n        this.majorValues = [];\n        var color = majorLineStyle.color || this.gauge.themeStyle.majorTickColor;\n        if (majorLineStyle.width && majorLineStyle.height && axis.visibleRange.interval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max, interval = axis.visibleRange.interval; i <= max; i += interval) {\n                this.majorValues.push(+i.toFixed(3));\n                appendPath(new PathOption(gauge.element.id + '_Axis_Major_TickLine_' + index + '_' + i, 'transparent', majorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, color) : color, null, '0', this.calculateTicks(i, majorLineStyle, axis), '', 'pointer-events:none;'), majorTickElements, gauge);\n            }\n            element.appendChild(majorTickElements);\n        }\n    };\n    /**\n     * Method to calcualte the tick elements for the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.calculateTicks = function (value, options, axis) {\n        var axisLineWidth = (axis.lineStyle.width / 2) + options.offset;\n        var isOutside = options.position === 'Outside';\n        var angle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var start = getLocationFromAngle(angle, axis.currentRadius +\n            (isOutside ? axisLineWidth : -axisLineWidth), this.gauge.midPoint);\n        var end = getLocationFromAngle(angle, axis.currentRadius +\n            (isOutside ? axisLineWidth : -axisLineWidth) +\n            (isOutside ? options.height : -options.height), this.gauge.midPoint);\n        return 'M ' + start.x + ' ' + start.y + ' L ' + end.x + ' ' + end.y + ' ';\n    };\n    /**\n     * Method to render the axis range of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisRange = function (axis, index, element, gauge) {\n        var _this = this;\n        var rangeElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Ranges_' + index\n        });\n        var location = this.gauge.midPoint;\n        var startAngle;\n        var endAngle;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startValue;\n        var endValue;\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var startWidth;\n        var endWidth;\n        var roundedStartAngle;\n        var roundedEndAngle;\n        var oldStart;\n        var oldEnd;\n        axis.ranges.map(function (range, rangeIndex) {\n            _this.calculateRangeRadius(axis, range);\n            startValue = Math.min(Math.max(range.start, min), range.end);\n            endValue = Math.min(Math.max(range.start, range.end), max);\n            startAngle = getAngleFromValue(startValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n            endAngle = getAngleFromValue(endValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n            var isAngleCross360 = (startAngle > endAngle);\n            if (axis.rangeGap != null && axis.rangeGap > 0) {\n                startAngle = (rangeIndex === 0 && !axis.startAndEndRangeGap) ? startAngle : startAngle + (axis.rangeGap / Math.PI);\n                endAngle = (rangeIndex === axis.ranges.length - 1 && !axis.startAndEndRangeGap) ? endAngle : endAngle -\n                    (axis.rangeGap / Math.PI);\n            }\n            if ((startValue !== endValue) && (isAngleCross360 ? startAngle < (endAngle + 360) : (startAngle < endAngle))) {\n                if (range.startWidth.length > 0) {\n                    startWidth = toPixel(range.startWidth, range.currentRadius);\n                }\n                else {\n                    startWidth = range.startWidth;\n                }\n                if (range.endWidth.length > 0) {\n                    endWidth = toPixel(range.endWidth, range.currentRadius);\n                }\n                else {\n                    endWidth = range.endWidth;\n                }\n                endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n                endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n                var radius = range.roundedCornerRadius;\n                var process = (radius * 0.25);\n                oldStart = ((((range.currentRadius - (startWidth / 2)) * ((startAngle * Math.PI) / 180) -\n                    (radius / process)) / (range.currentRadius - (startWidth / 2))) * 180) / Math.PI;\n                oldEnd = ((((range.currentRadius - (endWidth / 2)) * ((endAngle * Math.PI) / 180) +\n                    (radius / process)) / (range.currentRadius - (endWidth / 2))) * 180) / Math.PI;\n                roundedStartAngle = ((((range.currentRadius) * ((startAngle * Math.PI) / 180) +\n                    radius) / (range.currentRadius)) * 180) / Math.PI;\n                roundedEndAngle = ((((range.currentRadius) * ((endAngle * Math.PI) / 180) -\n                    radius) / (range.currentRadius)) * 180) / Math.PI;\n                if (range.roundedCornerRadius) {\n                    appendPath(new PathOption(gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex, range.rangeColor, 0, range.rangeColor, range.opacity, '0', getRoundedPathArc(location, Math.floor(roundedStartAngle), Math.ceil(roundedEndAngle), oldStart, oldEnd, range.currentRadius, startWidth, endWidth), '', 'pointer-events:none;'), rangeElement, gauge);\n                }\n                else {\n                    appendPath(new PathOption(gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex, range.rangeColor, 0, range.rangeColor, range.opacity, '0', getPathArc(gauge.midPoint, Math.floor(startAngle), Math.ceil(endAngle), range.currentRadius, startWidth, endWidth), '', 'pointer-events:none;'), rangeElement, gauge);\n                }\n            }\n        });\n        element.appendChild(rangeElement);\n    };\n    /**\n     * Method to calculate the radius of the axis range.\n     * @return {void}\n     */\n    AxisRenderer.prototype.calculateRangeRadius = function (axis, range) {\n        var radius = range.radius !== null ? range.radius : '100%';\n        range.currentRadius = stringToNumber(radius, axis.currentRadius);\n    };\n    /**\n     * Method to get the range color of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.setRangeColor = function (axis) {\n        var rangeColors = getRangePalette(this.gauge.theme);\n        axis.ranges.map(function (range, index) {\n            range.rangeColor = range.color ? range.color : rangeColors[index % rangeColors.length];\n        });\n    };\n    return AxisRenderer;\n}());\nexport { AxisRenderer };\n","import { stringToNumber, Size, calculateShapes, appendPath } from '../utils/helper';\nimport { getLocationFromAngle, PathOption } from '../utils/helper';\nimport { linear, getAngleFromValue, getCompleteArc, getRoundedPathArc } from '../utils/helper';\nimport { Animation, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { animationComplete } from '../model/constants';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar PointerRenderer = /** @class */ (function () {\n    /**\n     * Constructor for pointer renderer.\n     * @private.\n     */\n    function PointerRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis pointers of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.drawPointers = function (axis, axisIndex, element, gauge, animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var pointerElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Pointers_' + axisIndex\n        });\n        var childElement;\n        var range;\n        axis.pointers.map(function (pointer, pointerIndex) {\n            range = axis.visibleRange;\n            pointer.pathElement = [];\n            _this.calculatePointerRadius(axis, pointer);\n            childElement = gauge.renderer.createGroup({\n                id: gauge.element.id + '_Axis_' + axisIndex + '_Pointer_' + pointerIndex\n            });\n            _this['draw' + pointer.type + 'Pointer'](axis, axisIndex, pointerIndex, childElement, gauge);\n            _this.setPointerValue(axis, pointer, pointer.currentValue);\n            pointerElement.appendChild(childElement);\n            if (animate) {\n                _this.doPointerAnimation(pointer, axis);\n            }\n        });\n        element.appendChild(pointerElement);\n    };\n    /**\n     * Measure the pointer length of the circular gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.calculatePointerRadius = function (axis, pointer) {\n        var padding = 5;\n        pointer.currentRadius = pointer.radius === null ?\n            (axis.currentRadius - (axis.farSize + padding)) :\n            stringToNumber(pointer.radius, axis.currentRadius);\n    };\n    /**\n     * Method to render the needle pointer of the ciruclar gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.drawNeedlePointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var pointerRadius;\n        var location;\n        var direction;\n        var mid = gauge.midPoint;\n        var width = pointer.pointerWidth / 2;\n        var rectDirection;\n        // To render the needle\n        location = getLocationFromAngle(0, pointer.currentRadius, mid);\n        var color = pointer.color || this.gauge.themeStyle.needleColor;\n        direction = 'M ' + mid.x + ' ' + (mid.y - width) + ' L ' + (location.x) + ' ' + mid.y +\n            ' L ' + (mid.x) + ' ' + (mid.y + width) + ' Z';\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Needle_' + index, color, pointer.border.width, pointer.border.color, null, '0', direction), parentElement, gauge));\n        pointerRadius = stringToNumber(pointer.needleTail.length, pointer.currentRadius);\n        // To render the rect element for touch\n        rectDirection = 'M ' + mid.x + ' ' + (mid.y - width) + ' L ' + (location.x) + ' ' + (mid.y - width) +\n            ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + mid.x + ' ' + (mid.y + width);\n        // To render the needle tail\n        if (pointerRadius) {\n            location = getLocationFromAngle(180, pointerRadius, gauge.midPoint);\n            direction = 'M ' + mid.x + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y + width) +\n                ' L ' + (mid.x) + ' ' + (mid.y + width) + ' Z';\n            pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleTail_' + index, pointer.needleTail.color || this.gauge.themeStyle.needleTailColor, pointer.needleTail.border.width, pointer.needleTail.border.color, null, '0', direction), parentElement, gauge));\n            rectDirection += ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + location.x + ' ' + (mid.y - width);\n        }\n        // To render the cap\n        var capcolor = pointer.cap.color || this.gauge.themeStyle.capColor;\n        if (pointer.cap.radius) {\n            pointer.pathElement.push(appendPath(calculateShapes(mid, 'Circle', new Size(pointer.cap.radius * 2, pointer.cap.radius * 2), '', new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleCap_' + index, capcolor, pointer.cap.border.width, pointer.cap.border.color, null, '0', '', '')), parentElement, gauge, 'Ellipse'));\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleRect_' + index, 'transparent', 0, 'transpanret', null, '0', rectDirection + ' Z'), parentElement, gauge));\n    };\n    /**\n     * Method to set the pointer value of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.setPointerValue = function (axis, pointer, value) {\n        var location = this.gauge.midPoint;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        if (isClockWise) {\n            endAngle = startAngle === endAngle ? endAngle + 1 : endAngle;\n        }\n        else {\n            endAngle = startAngle === endAngle ? [startAngle, startAngle = endAngle - 1][0] : [startAngle, startAngle = endAngle][0];\n        }\n        var roundStartAngle;\n        var roundEndAngle;\n        var oldStartValue;\n        var oldEndValue;\n        var radius = pointer.roundedCornerRadius;\n        var minRadius = (radius * 0.25);\n        if (value <= minRadius) {\n            radius = value === 1 || 2 ? 8 : radius;\n            radius /= 2;\n            minRadius = radius * 0.25;\n        }\n        oldStartValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((startAngle * Math.PI) / 180) -\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        oldEndValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((endAngle * Math.PI) / 180) +\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        roundStartAngle = ((((pointer.currentRadius) * ((startAngle * Math.PI) / 180) +\n            radius) / (pointer.currentRadius)) * 180) / Math.PI;\n        roundEndAngle = ((((pointer.currentRadius) * ((endAngle * Math.PI) / 180) -\n            radius) / (pointer.currentRadius)) * 180) / Math.PI;\n        if (isNullOrUndefined(pointer.currentRadius)) {\n            this.calculatePointerRadius(axis, pointer);\n        }\n        pointer.pathElement.map(function (element) {\n            if (pointer.type === 'RangeBar') {\n                if (pointer.roundedCornerRadius && value) {\n                    element.setAttribute('d', getRoundedPathArc(location, Math.floor(roundStartAngle), Math.ceil(roundEndAngle), oldStartValue, oldEndValue, pointer.currentRadius, pointer.pointerWidth, pointer.pointerWidth));\n                    radius = 0;\n                }\n                else {\n                    element.setAttribute('d', getCompleteArc(location, startAngle, endAngle, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth)));\n                }\n            }\n            else {\n                element.setAttribute('transform', 'rotate(' + getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise) + ',' + location.x + ',' + location.y + ')');\n            }\n            element.setAttribute('aria-label', pointer.description || 'Pointer:' + value.toString());\n        });\n    };\n    /**\n     * Method to render the marker pointer of the ciruclar gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.drawMarkerPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var location = getLocationFromAngle(0, pointer.currentRadius, gauge.midPoint);\n        pointer.pathElement.push(appendPath(calculateShapes(location, pointer.markerShape, new Size(pointer.markerWidth, pointer.markerHeight), pointer.imageUrl, new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Marker_' + index, pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, null, '0', '', '')), parentElement, gauge, pointer.markerShape === 'Circle' ? 'Ellipse' : (pointer.markerShape === 'Image' ? 'Image' : 'Path')));\n    };\n    /**\n     * Method to render the range bar pointer of the ciruclar gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.drawRangeBarPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_RangeBar_' + index, pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, 1, '0', ''), parentElement, gauge));\n    };\n    /**\n     * Method to perform the animation of the pointer in circular gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.doPointerAnimation = function (pointer, axis) {\n        var _this = this;\n        var startValue = axis.visibleRange.min;\n        var endValue = pointer.currentValue;\n        if (pointer.animation.enable && startValue !== endValue && this.gauge.animatePointer) {\n            pointer.pathElement.map(function (element) {\n                if (pointer.type === 'RangeBar') {\n                    _this.performRangeBarAnimation(element, startValue, endValue, axis, pointer, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.performNeedleAnimation(element, startValue, endValue, axis, pointer, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth));\n                }\n            });\n        }\n    };\n    /**\n     * Perform the needle and marker pointer animation for circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.performNeedleAnimation = function (element, start, end, axis, pointer, radius, innerRadius) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        var sweepAngle;\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (args) {\n                sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                    isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                    isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                element.style.animation = 'None';\n                element.setAttribute('transform', 'rotate(' + linear(args.timeStamp, startAngle, sweepAngle, args.duration) + ',' +\n                    _this.gauge.midPoint.x.toString() + ',' + _this.gauge.midPoint.y.toString() + ')');\n            },\n            end: function (model) {\n                _this.setPointerValue(axis, pointer, end);\n                if (pointer.type === 'Marker' || (element.id.indexOf('_Pointer_NeedleCap') >= 0)) {\n                    _this.gauge.trigger(animationComplete, { axis: axis, pointer: pointer });\n                }\n            }\n        });\n    };\n    /**\n     * Perform the range bar pointer animation for circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.performRangeBarAnimation = function (element, start, end, axis, pointer, radius, innerRadius) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var minAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var roundRadius = pointer.roundedCornerRadius;\n        var sweepAngle;\n        var endAngle;\n        var oldStart;\n        var minRadius = (radius * 0.25);\n        if (end <= minRadius) {\n            radius = end === 1 || 2 ? 8 : radius;\n            radius /= 2;\n            minRadius = radius * 0.25;\n        }\n        if (roundRadius) {\n            minAngle = ((((pointer.currentRadius) * ((minAngle * Math.PI) / 180) +\n                roundRadius) / (pointer.currentRadius)) * 180) / Math.PI;\n            pointAngle = ((((pointer.currentRadius) * ((pointAngle * Math.PI) / 180) -\n                roundRadius) / (pointer.currentRadius)) * 180) / Math.PI;\n            oldStart = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((startAngle * Math.PI) / 180) -\n                (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        }\n        endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (arg) {\n                element.style.animation = 'None';\n                sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                    isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                    isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                if (isClockWise) {\n                    if (!roundRadius) {\n                        element.setAttribute('d', getCompleteArc(_this.gauge.midPoint, minAngle, linear(arg.timeStamp, startAngle, sweepAngle, arg.duration) + 0.0001, radius, innerRadius));\n                    }\n                    else {\n                        element.setAttribute('d', getRoundedPathArc(_this.gauge.midPoint, Math.floor(minAngle), linear(arg.timeStamp, Math.floor(minAngle), sweepAngle, arg.duration) + 0.0001, oldStart, linear(arg.timeStamp, Math.floor(minAngle + (roundRadius / 2)), sweepAngle, arg.duration) + 0.0001, radius, pointer.pointerWidth, pointer.pointerWidth));\n                    }\n                }\n                else {\n                    if (!roundRadius) {\n                        element.setAttribute('d', getCompleteArc(_this.gauge.midPoint, linear(arg.timeStamp, startAngle, sweepAngle, arg.duration), minAngle + 0.0001, radius, innerRadius));\n                    }\n                    else {\n                        sweepAngle += roundRadius;\n                        element.setAttribute('d', getRoundedPathArc(_this.gauge.midPoint, linear(arg.timeStamp, Math.floor(oldStart), sweepAngle, arg.duration), Math.floor(oldStart) + 0.0001, linear(arg.timeStamp, Math.floor(minAngle - roundRadius - (roundRadius / 2)), sweepAngle, arg.duration), Math.floor(oldStart + (roundRadius / 2)) + 0.0001, radius, pointer.pointerWidth, pointer.pointerWidth));\n                    }\n                }\n            },\n            end: function (model) {\n                _this.setPointerValue(axis, pointer, end);\n                _this.gauge.trigger(animationComplete, { axis: axis, pointer: pointer });\n            }\n        });\n    };\n    return PointerRenderer;\n}());\nexport { PointerRenderer };\n","import { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { calculateSum, VisibleLabels, measureText, isCompleteAngle, getLocationFromAngle } from '../utils/helper';\nimport { Size, Rect, stringToNumber, getLabelFormat } from '../utils/helper';\nimport { axisLabelRender, radiusCalculate } from '../model/constants';\nimport { AxisRenderer } from './axis-renderer';\nimport { PointerRenderer } from './pointer-renderer';\n/**\n * Specifies the CircularGauge Axis Layout\n */\nvar labelPadding = 10;\nvar AxisLayoutPanel = /** @class */ (function () {\n    function AxisLayoutPanel(gauge) {\n        this.gauge = gauge;\n        this.axisRenderer = new AxisRenderer(gauge);\n        this.pointerRenderer = new PointerRenderer(gauge);\n    }\n    /**\n     * Measure the calculate the axis size and radius.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxis = function (rect) {\n        this.measureAxisSize(this.gauge, rect);\n        this.calculateAxesRadius();\n    };\n    /**\n     * Measure to calculate the axis radius of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxesRadius = function () {\n        var totalRadius;\n        var currentRadius;\n        var rangeMaximumRadius = 0;\n        var xMarginDiff = this.gauge.margin.left + this.gauge.margin.right;\n        var yMarginDiff = this.gauge.margin.top + this.gauge.margin.bottom;\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            totalRadius = (Math.min(axis.rect.width, axis.rect.height) / 2);\n            currentRadius = axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius;\n            rangeMaximumRadius = Math.max.apply(Math, axis.ranges.map(function (value) {\n                return value.radius ?\n                    (value.radius.indexOf('%') < 0 ? 100 : parseInt(value.radius, 10)) : 0;\n            }));\n            currentRadius = (rangeMaximumRadius > 100 && axis.radius == null) ?\n                (currentRadius * 100) / rangeMaximumRadius : currentRadius;\n            axis.currentRadius = currentRadius - axis.nearSize;\n            if (this.gauge.moveToCenter && this.gauge.axes.length === 1 &&\n                isNullOrUndefined(this.gauge.centerX) && isNullOrUndefined(this.gauge.centerY)) {\n                var startAngle = void 0;\n                var endAngle = void 0;\n                startAngle = axis.startAngle;\n                startAngle = !isCompleteAngle(startAngle, axis.endAngle) ? startAngle : [0, endAngle = 360][0];\n                var startPoint = getLocationFromAngle(startAngle - 90, currentRadius, this.gauge.midPoint);\n                endAngle = axis.endAngle;\n                endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n                var endPoint = getLocationFromAngle(endAngle - 90, currentRadius, this.gauge.midPoint);\n                var xDiff = void 0;\n                var yDiff = void 0;\n                var startXDiff = void 0;\n                var endXDiff = void 0;\n                var startYDiff = void 0;\n                var endYDiff = void 0;\n                var newPoint = void 0;\n                if (startAngle > endAngle ? Math.abs(startAngle - endAngle) > 90 ? true : false : true) {\n                    if ((startAngle >= 270 && startAngle <= 360) && ((endAngle > 270 && endAngle <= 360) ||\n                        (endAngle >= 0 && endAngle <= 180))) {\n                        startXDiff = Math.abs(this.gauge.gaugeRect.x - Math.abs(startPoint.x - this.gauge.gaugeRect.x));\n                        newPoint = (endAngle <= 360 && endAngle >= 270) ? this.gauge.midPoint : (endAngle <= 90) ? endPoint :\n                            getLocationFromAngle(90 - 90, currentRadius, this.gauge.midPoint);\n                        endXDiff = Math.abs(newPoint.x - this.gauge.gaugeRect.width);\n                        startPoint = (endAngle <= 360 && endAngle >= 270) ? endPoint :\n                            getLocationFromAngle(360 - 90, currentRadius, this.gauge.midPoint);\n                        startYDiff = Math.abs(startPoint.y - this.gauge.gaugeRect.y);\n                        endPoint = (endAngle <= 360 && endAngle >= 270 || (endAngle >= 0 && endAngle < 90)) ?\n                            this.gauge.midPoint : (endAngle >= 90 && endAngle <= 180) ? endPoint :\n                            getLocationFromAngle(180 - 90, currentRadius, this.gauge.midPoint);\n                        endYDiff = Math.abs(endPoint.y - (this.gauge.gaugeRect.y + this.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 0 && startAngle < 90) && (endAngle >= 0 && endAngle <= 270)) {\n                        startYDiff = Math.abs(startPoint.y - this.gauge.gaugeRect.y);\n                        newPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this.gauge.midPoint) :\n                            endPoint;\n                        endYDiff = Math.abs(newPoint.y - (this.gauge.gaugeRect.y + this.gauge.gaugeRect.height));\n                        startPoint = (endAngle >= 180) ? endPoint : this.gauge.midPoint;\n                        startXDiff = Math.abs(this.gauge.gaugeRect.x - Math.abs(startPoint.x - this.gauge.gaugeRect.x));\n                        endPoint = (endAngle >= 90) ? getLocationFromAngle(90 - 90, currentRadius, this.gauge.midPoint) : endPoint;\n                        endXDiff = Math.abs(endPoint.x - this.gauge.gaugeRect.width);\n                    }\n                    else if ((startAngle >= 90 && startAngle < 180) && (endAngle > 90 && endAngle <= 360)) {\n                        newPoint = (endAngle <= 180) ? this.gauge.midPoint : (endAngle >= 270) ?\n                            getLocationFromAngle(270 - 90, currentRadius, this.gauge.midPoint) : endPoint;\n                        startXDiff = Math.abs(newPoint.x - this.gauge.gaugeRect.x);\n                        endXDiff = Math.abs(startPoint.x - this.gauge.gaugeRect.width);\n                        startPoint = (endAngle > 270) ? getLocationFromAngle(endAngle - 90, currentRadius, this.gauge.midPoint) :\n                            this.gauge.midPoint;\n                        startYDiff = Math.abs(this.gauge.gaugeRect.y - startPoint.y);\n                        endPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this.gauge.midPoint) : endPoint;\n                        endYDiff = Math.abs(endPoint.y - (this.gauge.gaugeRect.y + this.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 180 && startAngle <= 270) && ((endAngle <= 360 && endAngle >= 270) ||\n                        (endAngle <= 180 && endAngle >= 0))) {\n                        newPoint = (endAngle > 180 && endAngle < 270) ? endPoint :\n                            getLocationFromAngle(270 - 90, currentRadius, this.gauge.midPoint);\n                        startXDiff = Math.abs(this.gauge.gaugeRect.x - Math.abs(newPoint.x - this.gauge.gaugeRect.x));\n                        newPoint = (endAngle >= 180 && endAngle <= 360) ? this.gauge.midPoint : endPoint;\n                        endXDiff = Math.abs(newPoint.x - this.gauge.gaugeRect.width);\n                        newPoint = (endAngle > 180 && endAngle < 270) ? this.gauge.midPoint : (endAngle >= 270 && endAngle <= 360) ?\n                            endPoint : getLocationFromAngle(360 - 90, currentRadius, this.gauge.midPoint);\n                        startYDiff = Math.abs(newPoint.y - this.gauge.gaugeRect.y);\n                        endYDiff = Math.abs(startPoint.y - (this.gauge.gaugeRect.y + this.gauge.gaugeRect.height));\n                    }\n                    if ((!isNullOrUndefined(startXDiff) && !isNullOrUndefined(endXDiff) && !isNullOrUndefined(startYDiff) &&\n                        !isNullOrUndefined(endYDiff)) && ((startXDiff > 0 || endXDiff > 0) && (startYDiff > 0 || endYDiff > 0))) {\n                        xDiff = Math.abs((startXDiff + endXDiff) - xMarginDiff);\n                        yDiff = Math.abs((startYDiff + endYDiff) - yMarginDiff);\n                        this.gauge.midPoint.x = this.gauge.midPoint.x - (startXDiff / 2) + (endXDiff / 2);\n                        this.gauge.midPoint.y = this.gauge.midPoint.y - (startYDiff / 2) + (endYDiff / 2);\n                        totalRadius = (Math.min(this.gauge.gaugeRect.width, this.gauge.gaugeRect.height) / 2) +\n                            (Math.min(xDiff, yDiff) / 2);\n                        axis.currentRadius = (axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius) - axis.nearSize;\n                    }\n                }\n            }\n            axis.visibleRange.interval = this.calculateNumericInterval(axis, axis.rect);\n            var args = void 0;\n            args = {\n                cancel: false, name: radiusCalculate, currentRadius: axis.currentRadius, gauge: this.gauge,\n                midPoint: this.gauge.midPoint, axis: axis\n            };\n            this.gauge.trigger(radiusCalculate, args);\n            axis.currentRadius = args.currentRadius;\n            this.gauge.midPoint = args.midPoint;\n            this.calculateVisibleLabels(axis);\n        }\n    };\n    /**\n     * Measure to calculate the axis size.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxisSize = function (gauge, rect) {\n        var _this = this;\n        var sum;\n        this.computeSize(gauge.axes, rect);\n        gauge.axes.map(function (axis, index) {\n            sum = calculateSum(index, _this.farSizes.length - 1, _this.farSizes);\n            axis.rect = new Rect(rect.x + sum, rect.y + sum, rect.width - (sum * 2), rect.height - (sum * 2));\n        });\n    };\n    /**\n     * Calculate the axis values of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxisValues = function (rect) {\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            this.calculateVisibleRange(axis, rect);\n            this.calculateVisibleLabels(axis);\n        }\n    };\n    /**\n     * Calculate the visible range of an axis.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleRange = function (axis, rect) {\n        var interval = axis.majorTicks.interval;\n        var minimumValue = Math.min(axis.minimum === null ? 0 : axis.minimum, axis.maximum);\n        var maximumValue = Math.max(axis.minimum, axis.maximum === null ? 100 : axis.maximum);\n        axis.pointers.map(function (pointer) {\n            pointer.currentValue = pointer.value !== null ?\n                pointer.value < minimumValue ? minimumValue : pointer.value > maximumValue ? maximumValue : pointer.value\n                : minimumValue;\n            minimumValue = axis.minimum === null ? Math.min(pointer.currentValue, minimumValue) : minimumValue;\n            maximumValue = axis.maximum === null ? Math.max(pointer.currentValue, maximumValue) : maximumValue;\n        });\n        minimumValue = (minimumValue === maximumValue) ?\n            (interval !== null ? minimumValue - interval : minimumValue - 1) : minimumValue;\n        axis.visibleRange = { min: minimumValue, max: maximumValue, interval: interval };\n        axis.visibleRange.interval = this.calculateNumericInterval(axis, rect);\n    };\n    /**\n     * Calculate the numeric intervals of an axis range.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNumericInterval = function (axis, rect) {\n        if (axis.majorTicks.interval !== null) {\n            return axis.majorTicks.interval;\n        }\n        var totalAngle = axis.endAngle - axis.startAngle;\n        totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n        return this.calculateNiceInterval(axis.visibleRange.max, axis.visibleRange.min, axis.currentRadius ? axis.currentRadius : (rect.width / 2), totalAngle);\n    };\n    /**\n     * Calculate the nice interval of an axis range.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNiceInterval = function (maxValue, minValue, radius, degree) {\n        var delta = maxValue - minValue;\n        var circumference = 2 * Math.PI * radius * (degree / 360);\n        var desiredIntervalsCount = Math.max((circumference * ((0.533 * 3) / 100)), 1);\n        var niceInterval = delta / desiredIntervalsCount;\n        var minInterval = Math.pow(10, Math.floor(Math.log(niceInterval) / Math.log(10)));\n        for (var _i = 0, _a = [10, 5, 2, 1]; _i < _a.length; _i++) {\n            var interval = _a[_i];\n            var currentInterval = minInterval * interval;\n            if (desiredIntervalsCount < (delta / currentInterval)) {\n                break;\n            }\n            niceInterval = currentInterval;\n        }\n        return niceInterval;\n    };\n    /**\n     * Calculate the visible labels of an axis.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleLabels = function (axis) {\n        var style = axis.labelStyle;\n        var customLabelFormat = style.format && style.format.match('{value}') !== null;\n        var format = this.gauge.intl.getNumberFormat({\n            format: getLabelFormat(style.format), useGrouping: this.gauge.useGroupingSeparator\n        });\n        var argsData;\n        axis.visibleLabels = [];\n        var roundValue;\n        for (var i = axis.visibleRange.min, interval = axis.visibleRange.interval, max = axis.visibleRange.max; (i <= max && interval); i += interval) {\n            roundValue = axis.roundingPlaces ? parseFloat(i.toFixed(axis.roundingPlaces)) : i;\n            argsData = {\n                cancel: false, name: axisLabelRender, axis: axis,\n                text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                    format(roundValue),\n                value: roundValue\n            };\n            this.gauge.trigger(axisLabelRender, argsData);\n            if (!argsData.cancel) {\n                axis.visibleLabels.push(new VisibleLabels(argsData.text, i));\n            }\n        }\n        var lastLabel = axis.visibleLabels.length ? axis.visibleLabels[axis.visibleLabels.length - 1].value : null;\n        var maxVal = axis.visibleRange.max;\n        if (lastLabel !== maxVal && axis.showLastLabel === true) {\n            argsData = {\n                cancel: false, name: axisLabelRender, axis: axis,\n                text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(maxVal)) :\n                    format(maxVal),\n                value: maxVal\n            };\n            this.gauge.trigger(axisLabelRender, argsData);\n            if (!argsData.cancel) {\n                axis.visibleLabels.push(new VisibleLabels(argsData.text, maxVal));\n            }\n        }\n        this.getMaxLabelWidth(this.gauge, axis);\n    };\n    /**\n     * Measure the axes available size.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.computeSize = function (axes, rect) {\n        var lineSize;\n        var outerHeight;\n        var innerHeight;\n        var isMajorTickOutside;\n        var isMinorTickOutside;\n        var isLabelOutside;\n        var axisPadding = 5;\n        var majorTickOffset = 0;\n        var minorTickOffset = 0;\n        var labelOffset = 0;\n        this.farSizes = [];\n        this.calculateAxisValues(rect);\n        for (var _i = 0, axes_1 = axes; _i < axes_1.length; _i++) {\n            var axis = axes_1[_i];\n            lineSize = (axis.lineStyle.width / 2);\n            outerHeight = 0;\n            innerHeight = 0;\n            isMajorTickOutside = axis.majorTicks.position === 'Outside';\n            majorTickOffset = axis.majorTicks.offset;\n            isMinorTickOutside = axis.minorTicks.position === 'Outside';\n            minorTickOffset = axis.minorTicks.offset;\n            isLabelOutside = axis.labelStyle.position === 'Outside';\n            labelOffset = axis.labelStyle.offset;\n            // Calculating the outer space of the axis\n            outerHeight += !(isMajorTickOutside && isMinorTickOutside && isLabelOutside) ? axisPadding : 0;\n            outerHeight += (isMajorTickOutside ? (axis.majorTicks.height + lineSize) : 0) +\n                (isLabelOutside ? (axis.maxLabelSize.height + labelPadding + labelOffset) : 0) +\n                ((isMinorTickOutside && !isMajorTickOutside) ? (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            outerHeight += (isMajorTickOutside && isMinorTickOutside) ? Math.max(majorTickOffset, minorTickOffset) :\n                (isMajorTickOutside ? majorTickOffset : isMinorTickOutside ? minorTickOffset : 0);\n            // Calculating the inner space of the axis\n            innerHeight += (!isMajorTickOutside ? (axis.majorTicks.height + lineSize) : 0) +\n                (!isLabelOutside ? (axis.maxLabelSize.height + labelPadding + labelOffset) : 0) +\n                ((!isMinorTickOutside && isMajorTickOutside) ? (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            innerHeight += (!isMajorTickOutside && !isMinorTickOutside) ? Math.max(majorTickOffset, minorTickOffset) :\n                (!isMajorTickOutside ? majorTickOffset : !isMinorTickOutside ? minorTickOffset : 0);\n            if (this.farSizes[this.farSizes.length - 1]) {\n                this.farSizes[this.farSizes.length - 1] += (innerHeight + outerHeight);\n            }\n            axis.nearSize = outerHeight - axisPadding;\n            axis.farSize = innerHeight;\n            outerHeight = (this.gauge.axes.length === (this.farSizes.length + 1)) ? 0 : outerHeight;\n            this.farSizes.push(outerHeight);\n        }\n    };\n    /**\n     * To render the Axis element of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.renderAxes = function (animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var gauge = this.gauge;\n        var renderer = this.axisRenderer;\n        var element;\n        var axesElements = gauge.renderer.createGroup({\n            'id': gauge.element.id + '_AxesCollection',\n            'clip-path': 'url(#' + gauge.element.id + '_GaugeAreaClipRect_' + ')'\n        });\n        // To append the secondary element for annotation and tooltip\n        gauge.element.appendChild(createElement('div', {\n            id: gauge.element.id + '_Secondary_Element',\n            styles: 'position: relative'\n        }));\n        gauge.axes.map(function (axis, index) {\n            element = gauge.renderer.createGroup({\n                id: gauge.element.id + '_Axis_Group_' + index\n            });\n            renderer.drawAxisOuterLine(axis, index, element, gauge);\n            renderer.drawAxisRange(axis, index, element, gauge);\n            renderer.drawAxisLine(axis, index, element, gauge);\n            renderer.drawMajorTickLines(axis, index, element, gauge);\n            renderer.drawMinorTickLines(axis, index, element, gauge);\n            renderer.drawAxisLabels(axis, index, element, gauge);\n            _this.pointerRenderer.drawPointers(axis, index, element, gauge, animate);\n            if (gauge.annotationsModule) {\n                gauge.annotationsModule.renderAnnotation(axis, index);\n            }\n            axesElements.appendChild(element);\n        });\n        // For append clip rect for axes\n        gauge.svgObject.appendChild(gauge.renderer.drawClipPath({\n            'id': gauge.element.id + '_GaugeAreaClipRect_',\n            'x': 0, 'y': 0,\n            'width': gauge.availableSize.width,\n            'height': gauge.availableSize.height,\n            'fill': 'transparent', 'stroke': 'transparent'\n        }));\n        gauge.svgObject.appendChild(axesElements);\n    };\n    /**\n     * Calculate maximum label width for the axis.\n     * @return {void}\n     */\n    AxisLayoutPanel.prototype.getMaxLabelWidth = function (gauge, axis) {\n        axis.maxLabelSize = new Size(0, 0);\n        for (var _i = 0, _a = axis.visibleLabels; _i < _a.length; _i++) {\n            var label = _a[_i];\n            label.size = measureText(label.text, axis.labelStyle.font);\n            axis.maxLabelSize.width = label.size.width > axis.maxLabelSize.width ?\n                label.size.width : axis.maxLabelSize.width;\n            axis.maxLabelSize.height = label.size.height > axis.maxLabelSize.height ?\n                label.size.height : axis.maxLabelSize.height;\n        }\n    };\n    return AxisLayoutPanel;\n}());\nexport { AxisLayoutPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Circular Gauge\n */\nimport { Property, NotifyPropertyChanges, Component } from '@syncfusion/ej2-base';\nimport { Complex, Browser, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, Collection, Internationalization } from '@syncfusion/ej2-base';\nimport { remove, createElement } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { TextOption, textElement, RectOption, getAngleFromLocation, getValueFromAngle, removeElement } from './utils/helper';\nimport { Size, stringToNumber, measureText, Rect, GaugeLocation, getElement, getPointer, setStyles, toPixel } from './utils/helper';\nimport { getAngleFromValue, getPathArc } from './utils/helper';\nimport { Border, Margin, Font, TooltipSettings } from './model/base';\nimport { Axis } from './axes/axis';\nimport { Annotations } from './annotations/annotations';\nimport { GaugeTooltip } from './user-interaction/tooltip';\nimport { load, loaded, gaugeMouseMove, gaugeMouseLeave, gaugeMouseDown } from './model/constants';\nimport { gaugeMouseUp, dragEnd, dragMove, dragStart, resized } from './model/constants';\nimport { AxisLayoutPanel } from './axes/axis-panel';\nimport { getThemeStyle } from './model/theme';\n/**\n * Represents the Circular gauge control.\n * ```html\n * <div id=\"gauge\"/>\n * <script>\n *   var gaugeObj = new CircularGauge();\n *   gaugeObj.appendTo(\"#gauge\");\n * </script>\n * ```\n */\nvar CircularGauge = /** @class */ (function (_super) {\n    __extends(CircularGauge, _super);\n    /**\n     * Constructor for creating the widget\n     * @hidden\n     */\n    function CircularGauge(options, element) {\n        return _super.call(this, options, element) || this;\n    }\n    /**\n     *  To create svg object, renderer and binding events for the container.\n     */\n    CircularGauge.prototype.preRender = function () {\n        this.unWireEvents();\n        this.trigger(load, { gauge: this });\n        this.initPrivateVariable();\n        this.setCulture();\n        this.createSvg();\n        this.wireEvents();\n    };\n    /**\n     * To render the circular gauge elements\n     */\n    CircularGauge.prototype.render = function () {\n        this.setTheme();\n        this.calculateBounds();\n        this.renderElements();\n    };\n    CircularGauge.prototype.setTheme = function () {\n        this.themeStyle = getThemeStyle(this.theme);\n    };\n    /**\n     * Method to unbind events for circular gauge\n     */\n    CircularGauge.prototype.unWireEvents = function () {\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMove);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEnd);\n        EventHandler.remove(this.element, 'contextmenu', this.gaugeRightClick);\n        EventHandler.remove(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave);\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.gaugeResize);\n    };\n    /**\n     * Method to bind events for circular gauge\n     */\n    CircularGauge.prototype.wireEvents = function () {\n        /*! Bind the Event handler */\n        EventHandler.add(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEnd, this);\n        EventHandler.add(this.element, 'contextmenu', this.gaugeRightClick, this);\n        EventHandler.add(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave, this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.gaugeResize.bind(this));\n        /*! Apply the style for circular gauge */\n        this.setGaugeStyle(this.element);\n    };\n    /**\n     * Handles the mouse move.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.mouseMove = function (e) {\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseMove);\n        this.trigger(gaugeMouseMove, args);\n        var dragArgs;\n        var tooltip = this.tooltipModule;\n        if (!args.cancel) {\n            if (this.enablePointerDrag && this.activePointer) {\n                dragArgs = {\n                    axis: this.activeAxis,\n                    pointer: this.activePointer,\n                    previousValue: this.activePointer.currentValue,\n                    name: dragMove,\n                    currentValue: null\n                };\n                this.pointerDrag(new GaugeLocation(args.x, args.y));\n                dragArgs.currentValue = this.activePointer.currentValue;\n                this.trigger(dragMove, dragArgs);\n            }\n        }\n        this.notify(Browser.touchMoveEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse leave.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.mouseLeave = function (e) {\n        this.activeAxis = null;\n        this.activePointer = null;\n        this.svgObject.setAttribute('cursor', 'auto');\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseLeave);\n        this.trigger(gaugeMouseLeave, args);\n        return false;\n    };\n    /**\n     * Handles the mouse right click.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.gaugeRightClick = function (event) {\n        if (event.buttons === 2 || event.pointerType === 'touch') {\n            event.preventDefault();\n            event.stopPropagation();\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Handles the pointer draf while mouse move on gauge.\n     * @private\n     */\n    CircularGauge.prototype.pointerDrag = function (location) {\n        var axis = this.activeAxis;\n        var range = axis.visibleRange;\n        var value = getValueFromAngle(getAngleFromLocation(this.midPoint, location), range.max, range.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        if (value >= range.min && value <= range.max) {\n            this.activePointer.currentValue = value;\n            this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, this.activePointer, value);\n        }\n    };\n    /**\n     * Handles the mouse down on gauge.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.gaugeOnMouseDown = function (e) {\n        var currentPointer;\n        var args = this.getMouseArgs(e, 'touchstart', gaugeMouseDown);\n        this.trigger(gaugeMouseDown, args);\n        if (!args.cancel && args.target.id.indexOf('_Pointer_') >= 0 &&\n            args.target.id.indexOf(this.element.id + '_Axis_') >= 0) {\n            currentPointer = getPointer(args.target.id, this);\n            this.activeAxis = this.axes[currentPointer.axisIndex];\n            this.activePointer = this.activeAxis.pointers[currentPointer.pointerIndex];\n            if (isNullOrUndefined(this.activePointer.pathElement)) {\n                this.activePointer.pathElement = [e.target];\n            }\n            this.trigger(dragStart, {\n                axis: this.activeAxis,\n                name: dragStart,\n                pointer: this.activePointer,\n                currentValue: this.activePointer.currentValue\n            });\n            this.svgObject.setAttribute('cursor', 'pointer');\n        }\n        return false;\n    };\n    /**\n     * Handles the mouse end.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.mouseEnd = function (e) {\n        var args = this.getMouseArgs(e, 'touchend', gaugeMouseUp);\n        var isTouch = e.pointerType === 'touch' || e.pointerType === '2' || e.type === 'touchend';\n        var tooltipInterval;\n        var tooltip = this.tooltipModule;\n        this.trigger(gaugeMouseUp, args);\n        if (this.activeAxis && this.activePointer) {\n            this.trigger(dragEnd, {\n                name: dragEnd,\n                axis: this.activeAxis,\n                pointer: this.activePointer,\n                currentValue: this.activePointer.currentValue\n            });\n            this.activeAxis = null;\n            this.activePointer = null;\n        }\n        this.svgObject.setAttribute('cursor', 'auto');\n        this.notify(Browser.touchEndEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse event arguments.\n     * @return {IMouseEventArgs}\n     * @private\n     */\n    CircularGauge.prototype.getMouseArgs = function (e, type, name) {\n        var rect = this.element.getBoundingClientRect();\n        var location = new GaugeLocation(-rect.left, -rect.top);\n        var isTouch = (e.type === type);\n        location.x += isTouch ? e.changedTouches[0].clientX : e.clientX;\n        location.y += isTouch ? e.changedTouches[0].clientY : e.clientY;\n        return {\n            cancel: false, name: name,\n            x: location.x, y: location.y,\n            target: isTouch ? e.target : e.target\n        };\n    };\n    /**\n     * Handles the gauge resize.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.gaugeResize = function (e) {\n        var _this = this;\n        var args = {\n            gauge: this,\n            previousSize: new Size(this.availableSize.width, this.availableSize.height),\n            name: resized,\n            currentSize: new Size(0, 0)\n        };\n        this.animatePointer = false;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        if (this.element.classList.contains('e-circulargauge')) {\n            this.resizeTo = window.setTimeout(function () {\n                _this.createSvg();\n                _this.calculateBounds();\n                _this.renderElements();\n                args.currentSize = _this.availableSize;\n                _this.trigger(resized, args);\n            }, 500);\n        }\n        return false;\n    };\n    /**\n     * Applying styles for circular gauge elements\n     */\n    CircularGauge.prototype.setGaugeStyle = function (element) {\n        element.style.touchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msTouchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msContentZooming = 'none';\n        element.style.msUserSelect = 'none';\n        element.style.webkitUserSelect = 'none';\n        element.style.position = 'relative';\n    };\n    /**\n     * Method to set culture for gauge\n     */\n    CircularGauge.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * Methods to create svg element for circular gauge.\n     */\n    CircularGauge.prototype.createSvg = function () {\n        this.removeSvg();\n        this.calculateSvgSize();\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To Remove the SVG from circular gauge.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.removeSvg = function () {\n        removeElement(this.element.id + '_Secondary_Element');\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n    };\n    /**\n     * To initialize the circular gauge private variable.\n     * @private\n     */\n    CircularGauge.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-circulargauge').length;\n            this.element.id = 'circulargauge_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.gaugeAxisLayoutPanel = new AxisLayoutPanel(this);\n        this.animatePointer = true;\n    };\n    /**\n     * To calculate the size of the circular gauge element.\n     */\n    CircularGauge.prototype.calculateSvgSize = function () {\n        var containerWidth = this.element.offsetWidth;\n        var containerHeight = this.element.offsetHeight;\n        var borderWidth = parseInt(this.element.style.borderWidth.split('px').join(''), 10) * 2;\n        var width = stringToNumber(this.width, containerWidth) || containerWidth || 600;\n        var height = stringToNumber(this.height, containerHeight) || containerHeight || 450;\n        width = !isNaN(borderWidth) ? (width - borderWidth) : width;\n        height = !isNaN(borderWidth) ? (height - borderWidth) : height;\n        this.availableSize = new Size(width, height);\n    };\n    /**\n     * Method to calculate the availble size for circular gauge.\n     */\n    CircularGauge.prototype.calculateBounds = function () {\n        var padding = 5;\n        var rect;\n        var margin = this.margin;\n        var titleHeight = 0;\n        if (this.title) {\n            titleHeight = measureText(this.title, this.titleStyle).height + padding;\n        }\n        var top = margin.top + titleHeight + this.border.width;\n        var left = margin.left + this.border.width;\n        var width = this.availableSize.width - left - margin.right - this.border.width;\n        var height = this.availableSize.height - top - this.border.width - margin.bottom;\n        var radius = Math.min(width, height) / 2;\n        if (this.moveToCenter && this.axes.length === 1 &&\n            isNullOrUndefined(this.centerX) && isNullOrUndefined(this.centerY)) {\n            rect = new Rect(left, top, width, height);\n        }\n        else {\n            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n        }\n        this.gaugeRect = rect;\n        var centerX = this.centerX !== null ?\n            stringToNumber(this.centerX, this.availableSize.width) : rect.x + (rect.width / 2);\n        var centerY = this.centerY !== null ?\n            stringToNumber(this.centerY, this.availableSize.height) : rect.y + (rect.height / 2);\n        this.midPoint = new GaugeLocation(centerX, centerY);\n        this.gaugeAxisLayoutPanel.measureAxis(rect);\n    };\n    /**\n     * To render elements for circular gauge\n     */\n    CircularGauge.prototype.renderElements = function (animate) {\n        if (animate === void 0) { animate = true; }\n        this.renderBorder();\n        this.renderTitle();\n        this.gaugeAxisLayoutPanel.renderAxes(animate);\n        this.element.appendChild(this.svgObject);\n        this.trigger(loaded, { gauge: this });\n    };\n    /**\n     * Method to render the title for circular gauge.\n     */\n    CircularGauge.prototype.renderTitle = function () {\n        if (this.title) {\n            this.titleStyle.fontFamily = this.themeStyle.fontFamily || this.titleStyle.fontFamily;\n            this.titleStyle.size = this.themeStyle.fontSize || this.titleStyle.size;\n            var size = measureText(this.title, this.titleStyle);\n            var options = new TextOption(this.element.id + '_CircularGaugeTitle', this.availableSize.width / 2, this.margin.top + 3 * (size.height / 4), 'middle', this.title);\n            var element = textElement(options, this.titleStyle, this.titleStyle.color || this.themeStyle.titleFontColor, this.svgObject, '');\n            element.setAttribute('aria-label', this.description || this.title);\n            element.setAttribute('tabindex', this.tabIndex.toString());\n        }\n    };\n    /**\n     * Method to render the border for circular gauge.\n     */\n    CircularGauge.prototype.renderBorder = function () {\n        var borderWidth = this.border.width;\n        if (borderWidth > 0 || (this.background || this.themeStyle.backgroundColor)) {\n            this.svgObject.appendChild(this.renderer.drawRectangle(new RectOption(this.element.id + '_CircularGaugeBorder', this.background || this.themeStyle.backgroundColor, this.border, null, new Rect(borderWidth / 2, borderWidth / 2, this.availableSize.width - borderWidth, this.availableSize.height - borderWidth))));\n        }\n    };\n    /**\n     * Method to set the pointer value dynamically for circular gauge.\n     */\n    CircularGauge.prototype.setPointerValue = function (axisIndex, pointerIndex, value) {\n        var _this = this;\n        var axis = this.axes[axisIndex];\n        var pointer = axis.pointers[pointerIndex];\n        var pointerRadius = pointer.currentRadius;\n        var enableAnimation = pointer.animation.enable;\n        value = value < axis.visibleRange.min ? axis.visibleRange.min : value;\n        value = value > axis.visibleRange.max ? axis.visibleRange.max : value;\n        pointer.pathElement.map(function (element) {\n            if (pointer.type === 'RangeBar') {\n                setStyles(element, pointer.color, pointer.border);\n                if (enableAnimation) {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.performRangeBarAnimation(element, pointer.currentValue, value, axis, pointer, pointerRadius, (pointerRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                }\n            }\n            else {\n                if (element.id.indexOf('_Pointer_NeedleCap_') >= 0) {\n                    setStyles(element, pointer.cap.color, pointer.cap.border);\n                }\n                else if (element.id.indexOf('_Pointer_NeedleTail_') >= 0) {\n                    setStyles(element, pointer.needleTail.color, pointer.needleTail.border);\n                }\n                else if (element.id.indexOf('_Pointer_NeedleRect_') >= 0) {\n                    setStyles(element, 'transparent', { color: 'transparent', width: 0 });\n                }\n                else {\n                    setStyles(element, pointer.color, pointer.border);\n                }\n                if (enableAnimation) {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.performNeedleAnimation(element, pointer.currentValue, value, axis, pointer, pointerRadius, (pointerRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                }\n            }\n        });\n        this.isProtectedOnChange = true;\n        pointer.currentValue = value;\n        pointer.value = value;\n        this.isProtectedOnChange = false;\n    };\n    /**\n     * Method to set the annotation content dynamically for circular gauge.\n     */\n    CircularGauge.prototype.setAnnotationValue = function (axisIndex, annotationIndex, content) {\n        var isElementExist = getElement(this.element.id + '_Annotations_' + axisIndex) !== null;\n        var element = getElement(this.element.id + '_Annotations_' + axisIndex) ||\n            createElement('div', {\n                id: this.element.id + '_Annotations_' + axisIndex\n            });\n        var annotation = this.axes[axisIndex].annotations[annotationIndex];\n        if (content !== null) {\n            removeElement(this.element.id + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex);\n            annotation.content = content;\n            this.annotationsModule.createTemplate(element, annotationIndex, axisIndex);\n            if (!isElementExist) {\n                getElement(this.element.id + '_Secondary_Element').appendChild(element);\n            }\n        }\n    };\n    /**\n     * Method to set the range values dynamically for circular gauge.\n     */\n    CircularGauge.prototype.setRangeValue = function (axisIndex, rangeIndex, start, end) {\n        var element = getElement(this.element.id + '_Axis_' + axisIndex + '_Range_' + rangeIndex);\n        var axis = this.axes[axisIndex];\n        var range = axis.ranges[rangeIndex];\n        var axisRange = axis.visibleRange;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startValue = Math.min(Math.max(start, axisRange.min), end);\n        var endValue = Math.min(Math.max(start, end), axisRange.max);\n        var startAngle = getAngleFromValue(startValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(endValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var startWidth;\n        if (range.startWidth.length > 0) {\n            startWidth = toPixel(range.startWidth, range.currentRadius);\n        }\n        else {\n            startWidth = range.startWidth;\n        }\n        var endWidth;\n        if (range.endWidth.length > 0) {\n            endWidth = toPixel(range.endWidth, range.currentRadius);\n        }\n        else {\n            endWidth = range.endWidth;\n        }\n        endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n        endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n        element.setAttribute('d', getPathArc(this.midPoint, Math.round(startAngle), Math.round(endAngle), range.currentRadius, startWidth, endWidth));\n        setStyles(element, (range.color ? range.color : range.rangeColor), {\n            color: (range.color ? range.color : range.rangeColor),\n            width: 0\n        });\n    };\n    /**\n     * To destroy the widget\n     * @method destroy\n     * @return {void}\n     * @member of Circular-Gauge\n     */\n    CircularGauge.prototype.destroy = function () {\n        this.unWireEvents();\n        this.removeSvg();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    CircularGauge.prototype.requiredModules = function () {\n        var modules = [];\n        var annotationEnable = false;\n        var axes = this.axes;\n        axes.map(function (axis) {\n            axis.annotations.map(function (annotation) {\n                annotationEnable = annotationEnable || annotation.content !== null;\n            });\n        });\n        if (annotationEnable) {\n            modules.push({\n                member: 'Annotations',\n                args: [this, Annotations]\n            });\n        }\n        if (this.tooltip.enable) {\n            modules.push({\n                member: 'Tooltip',\n                args: [this, GaugeTooltip]\n            });\n        }\n        return modules;\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @private\n     */\n    CircularGauge.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @private\n     */\n    CircularGauge.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // property method calculated\n        var renderer = false;\n        var refreshBounds = false;\n        var refreshWithoutAnimation = false;\n        var isPointerValueSame = (Object.keys(newProp).length === 1 && newProp instanceof Object &&\n            !isNullOrUndefined(this.activePointer));\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                case 'width':\n                case 'centerX':\n                case 'centerY':\n                case 'margin':\n                    this.createSvg();\n                    refreshBounds = true;\n                    break;\n                case 'title':\n                    refreshBounds = (newProp.title === '' || oldProp.title === '');\n                    renderer = !(newProp.title === '' || oldProp.title === '');\n                    break;\n                case 'titleStyle':\n                    if (newProp.titleStyle && newProp.titleStyle.size) {\n                        refreshBounds = true;\n                    }\n                    else {\n                        renderer = true;\n                    }\n                    break;\n                case 'border':\n                    renderer = true;\n                    break;\n                case 'background':\n                    renderer = true;\n                    break;\n                case 'axes':\n                    refreshWithoutAnimation = true;\n                    break;\n            }\n        }\n        if (!isPointerValueSame) {\n            if (!refreshBounds && renderer) {\n                this.removeSvg();\n                this.renderElements();\n            }\n            if (refreshBounds) {\n                this.removeSvg();\n                this.calculateBounds();\n                this.renderElements();\n            }\n            if (refreshWithoutAnimation && !renderer && !refreshBounds) {\n                this.removeSvg();\n                this.calculateBounds();\n                this.renderElements(false);\n            }\n        }\n    };\n    /**\n     * Get component name for circular gauge\n     * @private\n     */\n    CircularGauge.prototype.getModuleName = function () {\n        return 'circulargauge';\n    };\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], CircularGauge.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"background\", void 0);\n    __decorate([\n        Property('')\n    ], CircularGauge.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: '15px', color: null }, Font)\n    ], CircularGauge.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], CircularGauge.prototype, \"margin\", void 0);\n    __decorate([\n        Collection([{}], Axis)\n    ], CircularGauge.prototype, \"axes\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], CircularGauge.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"enablePointerDrag\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerX\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerY\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"moveToCenter\", void 0);\n    __decorate([\n        Property('Material')\n    ], CircularGauge.prototype, \"theme\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], CircularGauge.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"axisLabelRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"radiusCalculate\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"annotationRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragEnd\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"resized\", void 0);\n    CircularGauge = __decorate([\n        NotifyPropertyChanges\n    ], CircularGauge);\n    return CircularGauge;\n}(Component));\nexport { CircularGauge };\n","import * as index from './index';\nindex.CircularGauge.Inject(index.GaugeTooltip, index.Annotations);\nexport * from './index';\n"],"names":["measureText","text","font","htmlObject","document","getElementById","createElement","id","body","appendChild","style","getFontStyle","innerHTML","setAttribute","Size","clientWidth","clientHeight","toPixel","value","maxDimension","undefined","indexOf","parseInt","size","fontStyle","fontWeight","fontFamily","opacity","color","setStyles","element","fill","border","setStyleAttribute","stroke","stroke-width","width","measureElementRect","bounds","getBoundingClientRect","removeElement","stringToNumber","containerSize","textElement","options","parent","styles","renderOptions","renderer","SvgRenderer","x","y","text-anchor","anchor","transform","dominant-baseline","baseLine","createText","appendPath","gauge","functionName","calculateSum","from","to","values","sum","length","linear","currentTime","startValue","endValue","duration","Math","cos","PI","getAngleFromValue","maximumValue","minimumValue","startAngle","endAngle","isClockWise","angle","isCompleteAngle","getDegree","round","degree","getValueFromAngle","totalAngle","floor","getAngleFromLocation","center","point","atan2","getLocationFromAngle","radius","radian","GaugeLocation","sin","getPathArc","start","end","startWidth","endWidth","startRadius","endRadius","arcRadius","getRangePath","getCirclePath","innerStart","innerEnd","clockWise","getRoundedPathArc","actualStart","actualEnd","oldStart","oldEnd","getRoundedPath","outerOldEnd","innerOldEnd","outerOldStart","innerOldStart","getCompleteArc","innerRadius","getCompletePath","getElement","getTemplateFunction","template","templateFn","querySelectorAll","templateComplier","querySelector","trim","e","remove","getPointer","targetId","tempString","replace","split","axisIndex","pointerIndex","getElementSize","elementSize","templateElement","height","getMousePosition","pageX","pageY","elementRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","left","positionY","top","getLabelFormat","format","match","calculateShapes","location","shape","url","path","locX","locY","merge","rx","ry","cx","cy","d","href","getRangeColor","ranges","min","max","currentRange","filter","range","rangeColor","getThemeStyle","theme","backgroundColor","titleFontColor","tooltipFillColor","tooltipFontColor","labelColor","lineColor","majorTickColor","minorTickColor","pointerColor","capColor","needleColor","needleTailColor","fontSize","labelFontFamily","tooltipFillOpacity","tooltipTextOpacity","Theme","__extends","extendStatics","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","CustomizeOption","PathOption","_super","dashArray","_this","call","RectOption","rect","Rect","TextOption","VisibleLabels","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Border","apply","Property","ChildProperty","Font","Margin","TooltipSettings","Complex","axisLabelFont","Line","Label","Range","Tick","Cap","NeedleTail","Animation","Annotation","Pointer","Axis","visibleLabels","Collection","Annotations","elementId","renderAnnotation","axis","index","availableSize","parentElement","annotations","map","annotation","annotationIndex","content","createTemplate","childElementCount","axes","childElement","zIndex","autoAngle","argsData","cancel","name","textStyle","trigger","length_1","slice","updateLocation","currentRadius","midPoint","description","getModuleName","destroy","GaugeTooltip","tooltipId","tooltip","borderStyle","addEventListener","renderTooltip","touchArg","samePointerEle","type","changedTouches","pointerEle","svgRect","svgObject","axisRect","abs","currentPointer","currentAxis","currentValue","visibleRange","direction","tooltipFormat","labelStyle","customLabelFormat","intl","getNumberFormat","useGrouping","useGroupingSeparator","tooltipEle","className","roundValue","roundingPlaces","parseFloat","toFixed","RegExp","tooltipArgs","pointer","event","showAtMousePosition","tooltipRect","findPosition","themeStyle","svgTooltip","Tooltip","enable","data","enableAnimation","inverted","arrowInverted","areaBounds","appendTo","removeTooltip","addLeft","addTop","addHeight","addWidth","tooltipPosition","getElementsByClassName","mouseUpHandler","clearTimeout","setTimeout","bind","isDestroyed","on","Browser","touchMoveEvent","touchEndEvent","removeEventListener","off","AxisRenderer","drawAxisOuterLine","background","setRangeColor","drawAxisLine","lineStyle","drawAxisLabels","label","labelElement","createGroup","labelCollection","position","nearSize","maxLabelSize","farSize","hiddenLabel","findAnchor","useRangeColor","drawMinorTickLines","minorTickElements","minorLineStyle","minorTicks","minorInterval","interval","isRangeColor","majorValues","calculateTicks","drawMajorTickLines","majorTickElements","majorLineStyle","majorTicks","push","axisLineWidth","offset","isOutside","drawAxisRange","roundedStartAngle","roundedEndAngle","rangeElement","rangeIndex","calculateRangeRadius","isAngleCross360","rangeGap","startAndEndRangeGap","roundedCornerRadius","process","ceil","rangeColors","PointerRenderer","drawPointers","animate","pointerElement","pointers","pathElement","calculatePointerRadius","setPointerValue","doPointerAnimation","drawNeedlePointer","pointerRadius","rectDirection","mid","pointerWidth","needleTail","capcolor","cap","roundStartAngle","roundEndAngle","oldStartValue","oldEndValue","minRadius","isNullOrUndefined","toString","drawMarkerPointer","markerShape","markerWidth","markerHeight","imageUrl","drawRangeBarPointer","animation","animatePointer","performRangeBarAnimation","performNeedleAnimation","sweepAngle","pointAngle","progress","args","timeStamp","model","minAngle","roundRadius","arg","AxisLayoutPanel","axisRenderer","pointerRenderer","measureAxis","measureAxisSize","calculateAxesRadius","totalRadius","rangeMaximumRadius","xMarginDiff","margin","right","yMarginDiff","bottom","_i","_a","moveToCenter","centerX","centerY","startPoint","endPoint","xDiff","yDiff","startXDiff","endXDiff","startYDiff","endYDiff","newPoint","gaugeRect","calculateNumericInterval","calculateVisibleLabels","computeSize","farSizes","calculateAxisValues","calculateVisibleRange","minimum","maximum","calculateNiceInterval","maxValue","minValue","delta","circumference","desiredIntervalsCount","niceInterval","minInterval","pow","log","currentInterval","lastLabel","maxVal","showLastLabel","getMaxLabelWidth","lineSize","outerHeight","innerHeight","isMajorTickOutside","isMinorTickOutside","isLabelOutside","majorTickOffset","minorTickOffset","labelOffset","axes_1","renderAxes","axesElements","clip-path","annotationsModule","drawClipPath","CircularGauge","preRender","unWireEvents","initPrivateVariable","setCulture","createSvg","wireEvents","render","setTheme","calculateBounds","renderElements","EventHandler","touchStartEvent","gaugeOnMouseDown","mouseMove","mouseEnd","gaugeRightClick","isPointer","mouseLeave","window","isTouch","gaugeResize","add","setGaugeStyle","getMouseArgs","dragArgs","tooltipModule","enablePointerDrag","activePointer","activeAxis","previousValue","pointerDrag","notify","buttons","pointerType","preventDefault","stopPropagation","gaugeAxisLayoutPanel","clientX","clientY","previousSize","currentSize","resizeTo","classList","contains","touchAction","msTouchAction","msContentZooming","msUserSelect","webkitUserSelect","Internationalization","removeSvg","calculateSvgSize","childNodes","removeChild","firstChild","hasChildNodes","parentNode","collection","containerWidth","offsetWidth","containerHeight","offsetHeight","borderWidth","join","isNaN","titleHeight","title","titleStyle","renderBorder","renderTitle","tabIndex","drawRectangle","isProtectedOnChange","setAnnotationValue","isElementExist","setRangeValue","axisRange","requiredModules","modules","annotationEnable","member","getPersistData","addOnPersist","onPropertyChanged","newProp","oldProp","refreshBounds","refreshWithoutAnimation","isPointerValueSame","keys","Event","NotifyPropertyChanges","Component","index.CircularGauge","Inject","index.GaugeTooltip","index.Annotations"],"mappings":"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"}