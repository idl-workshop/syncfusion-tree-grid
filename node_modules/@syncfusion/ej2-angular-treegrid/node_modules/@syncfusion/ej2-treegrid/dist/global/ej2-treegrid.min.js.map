{"version":3,"file":"ej2-treegrid.min.js","sources":["../../src/treegrid/utils.js","../../src/treegrid/actions/crud-actions.js","../../src/treegrid/models/column.js","../../src/treegrid/models/filter-settings.js","../../src/treegrid/actions/selection.js","../../src/treegrid/base/constant.js","../../src/treegrid/actions/column-menu.js","../../src/treegrid/actions/print.js","../../src/treegrid/models/search-settings.js","../../src/treegrid/models/selection-settings.js","../../src/treegrid/renderer/render.js","../../src/treegrid/actions/sort.js","../../src/treegrid/base/data.js","../../src/treegrid/enum.js","../../src/treegrid/models/page-settings.js","../../src/treegrid/models/summary.js","../../src/treegrid/models/edit-settings.js","../../src/treegrid/models/sort-settings.js","../../src/treegrid/base/treegrid.js","../../src/treegrid/actions/reorder.js","../../src/treegrid/actions/resize.js","../../src/treegrid/renderer/virtual-row-model-generator.js","../../src/treegrid/actions/filter.js","../../src/treegrid/actions/excel-export.js","../../src/treegrid/actions/pdf-export.js","../../src/treegrid/actions/page.js","../../src/treegrid/actions/toolbar.js","../../src/treegrid/actions/summary.js","../../src/treegrid/actions/context-menu.js","../../src/treegrid/actions/edit.js","../../src/treegrid/actions/command-column.js","../../src/treegrid/actions/detail-row.js","../../src/treegrid/renderer/virtual-tree-content-render.js","../../src/treegrid/actions/virtual-scroll.js","../../src/global.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || !records.hasChildRecords) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    return value;\n}\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\n","import { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData } from '../utils';\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var i;\n    var j;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    if (action === 'add') {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            var keys = Object.keys(modifiedData[k]);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (treeData[i].hasOwnProperty(keys[j]) && (control.editSettings.mode !== 'Cell'\n                                    || keys[j] === columnName)) {\n                                    treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                }\n                            }\n                        }\n                        else if (action === 'add') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData);\n                                }\n                                else {\n                                    if (!treeData[i].hasOwnProperty(control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData);\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData);\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = addRowRecord;\n            }\n            else {\n                value = currentViewRecords[addRowIndex + 1];\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = addRowRecord;\n            }\n            else {\n                value = currentViewRecords[addRowIndex];\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                for (var i = 0; i < keys.length; i++) {\n                    if (childRecords[j].hasOwnProperty(keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        childRecords[j][keys[i]] = modifiedData[keys[i]];\n                    }\n                }\n                break;\n            }\n            else if (action === 'add') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference);\n                    }\n                    else {\n                        if (!childRecords[j].hasOwnProperty(control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData);\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData);\n                }\n            }\n            else {\n                var parentItem = childRecords[j].parentItem;\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    var currentRecords = control.grid.getCurrentViewRecords();\n    var index;\n    currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n        index = i;\n        return;\n    } });\n    record = currentRecords[index];\n    record.hasChildRecords = false;\n    if (action === 'add') {\n        record.expanded = true;\n        record.hasChildRecords = true;\n        if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n            child = currentRecords.filter(function (e) {\n                if (e.parentUniqueID === record.uniqueID) {\n                    return e;\n                }\n                else {\n                    return null;\n                }\n            });\n        }\n        var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index + 1];\n        if (!record.hasOwnProperty('childRecords')) {\n            record.childRecords = [];\n        }\n        if (record.childRecords.indexOf(childRecords) === -1) {\n            record.childRecords.unshift(childRecords);\n        }\n        if (isSelfReference) {\n            if (!record.hasOwnProperty(control.childMapping)) {\n                record[control.childMapping] = [];\n            }\n            if (record[control.childMapping].indexOf(childRecords) === -1) {\n                record[control.childMapping].unshift(childRecords);\n            }\n        }\n    }\n    var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n    var data = control.grid.dataSource instanceof DataManager ?\n        control.grid.dataSource.dataSource.json : control.grid.dataSource;\n    for (var i = 0; i < data.length; i++) {\n        if (data[i][primaryKeys] === record[primaryKeys]) {\n            data[i] = record;\n            break;\n        }\n    }\n    control.grid.setRowData(key, record);\n    var row = control.getRowByIndex(index);\n    control.renderModule.cellRender({\n        data: record, cell: row.cells[control.treeColumnIndex],\n        column: control.grid.getColumns()[control.treeColumnIndex]\n    });\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Predicate } from '@syncfusion/ej2-grids';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","import { isNullOrUndefined, removeClass } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Selection module\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var _this = this;\n        var rowIndex;\n        rowIndex = [];\n        rowIndex.push(rowElement.rowIndex);\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, cancel: false, rowElement: rowElement,\n            rowData: data };\n        this.parent.trigger(events.checkboxChange, args, function (checkBoxArgs) {\n            if (!checkBoxArgs.cancel) {\n                _this.selectCheckboxes(rowIndex);\n            }\n        });\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderTable().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderTable().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderTable().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderTable().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var checkWrap = void 0;\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            this.headerSelection();\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var checkWrap;\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        checkWrap.querySelector('.e-frame').style.width = '18px';\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n        }\n        else {\n            var spanEle = checkWrap.querySelector('.e-label');\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            container.cell.appendChild(checkWrap);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            var data = getParentData(this.parent, record.uniqueID);\n            for (var j = 0; j < keys.length; j++) {\n                if (data.hasOwnProperty(keys[j])) {\n                    data[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (childRecords[count].hasChildRecords) {\n                    this.traverSelection(childRecords[count], checkboxState, true);\n                }\n                else {\n                    this.updateSelectedItems(childRecords[count], checkboxState);\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            for (var i = 0; i < childRecords.length; i++) {\n                if (childRecords[i].checkboxState === 'indeterminate') {\n                    indeter++;\n                }\n                else if (childRecords[i].checkboxState === 'check') {\n                    checkChildRecords++;\n                }\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderTable().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState, filter) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            checkbox = tr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        currentRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(currentRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(currentRecord);\n            }\n            if (this.selectedItems.indexOf(currentRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(currentRecord);\n            }\n            if (this.selectedItems.indexOf(currentRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(currentRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(currentRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (this.parent.autoCheckHierarchy) {\n            if ((requestType === 'sorting' || requestType === 'paging')) {\n                childData = this.parent.getCurrentViewRecords();\n                childLength = childData.length;\n                this.selectedIndexes = [];\n                for (var i = 0; i < childLength; i++) {\n                    this.updateSelectedItems(childData[i], childData[i].checkboxState, true);\n                }\n            }\n            else if (requestType === 'delete' || args.action === 'add') {\n                var updatedData = [];\n                if (requestType === 'delete') {\n                    updatedData = args.data;\n                }\n                else {\n                    updatedData.push(args.data);\n                }\n                for (var i = 0; i < updatedData.length; i++) {\n                    if (requestType === 'delete') {\n                        var index = this.parent.flatData.indexOf(updatedData[i]);\n                        var checkedIndex = this.selectedIndexes.indexOf(index);\n                        this.selectedIndexes.splice(checkedIndex, 1);\n                        this.updateSelectedItems(updatedData[i], 'uncheck');\n                    }\n                    if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                        this.updateParentSelection(updatedData[i].parentItem);\n                    }\n                }\n            }\n            else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                args.data.checkboxState = 'uncheck';\n            }\n            else if (requestType === 'filtering' || requestType === 'searching') {\n                this.selectedItems = [];\n                this.selectedIndexes = [];\n                childData = (this.parent.filterModule.filteredResult.length > 0) ? this.parent.getCurrentViewRecords() :\n                    this.parent.flatData;\n                childData.forEach(function (record) {\n                    if (record.hasChildRecords) {\n                        _this.updateParentSelection(record);\n                    }\n                    else {\n                        _this.updateSelectedItems(record, record.checkboxState);\n                    }\n                });\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentItem) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        addClass([args.row], 'e-gridrowindex' + index + 'level' + args.data.level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByField(args.column.field);\n        var summaryRow = data.isSummaryRow;\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var container = createElement('div', {\n                className: 'e-treecolumn-container'\n            });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', {\n                    className: 'e-icons'\n                });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                var collapsed = true;\n                if (!isNullOrUndefined(data.parentItem) && (!isNullOrUndefined(data[this.parent.expandStateMapping])\n                    && data[this.parent.expandStateMapping])\n                    && !(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root'))) {\n                    collapsed = !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n                }\n                addClass([expandIcon], (expand && collapsed) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', {\n                className: 'e-treecell'\n            });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            var textContent = args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n            cellElement.innerHTML = textContent;\n            if (typeof (args.column.template) === 'object' && this.templateResult) {\n                cellElement.innerHTML = '';\n                appendChildren(cellElement, this.templateResult);\n                this.templateResult = null;\n            }\n            container.appendChild(cellElement);\n            args.cell.innerHTML = '';\n            args.cell.appendChild(container);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n    };\n    return Render;\n}());\nexport { Render };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { extend, isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport * as events from './constant';\nimport { Sort } from '../actions/sort';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 ? this.parent.dataSource : []);\n        this.parent.parentData = [];\n        var adaptorName = 'adaptorName';\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    if (this.parent.initialRender) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                if (!this.parent.hasChildMapping && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor')) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.hierarchyData = [];\n            this.taskIds = [];\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n            if (this.isSelfReference) {\n                var selfData = [];\n                var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                    .group(this.parent.parentIdMapping));\n                for (var i = 0; i < mappingData.length; i++) {\n                    var groupData = mappingData[i];\n                    var index = this.taskIds.indexOf(groupData.key);\n                    if (!isNullOrUndefined(groupData.key)) {\n                        if (index > -1) {\n                            var childData = (groupData.items);\n                            this.hierarchyData[index][this.parent.childMapping] = childData;\n                            continue;\n                        }\n                    }\n                    selfData.push.apply(selfData, groupData.items);\n                }\n                this.hierarchyData = this.selfReferenceUpdate(selfData);\n            }\n            if (!Object.keys(this.hierarchyData).length) {\n                this.parent.flatData = (this.parent.dataSource);\n            }\n            else {\n                this.createRecords(this.hierarchyData);\n            }\n            this.storedIndex = -1;\n        }\n        // else if (data instanceof DataManager && this.parent.isLocalData) {\n        //   this.convertToFlatData(data.dataSource.json);\n        // }\n        //this.crudActions();\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        var adaptorName = 'adaptorName';\n        if (!this.parent.hasChildMapping && !this.parentItems.length && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor')) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor')) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)\n                        && (isNullOrUndefined(records[rec].index))) {\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        records[rec].hasChildRecords = true;\n                    }\n                }\n            }\n            else {\n                this.convertToFlatData(records);\n            }\n        }\n        args.result = this.parent.dataSource[adaptorName] === 'BlazorAdaptor' ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        if (rowDetails.rows.length > 0) {\n            rowDetails.record.expanded = true;\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                rowDetails.rows[i].style.display = 'table-row';\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n            this.parent.trigger(events.expanded, args);\n        }\n        else {\n            var dm = this.parent.dataSource;\n            var qry = this.parent.grid.getDataModule().generateQuery();\n            var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n            qry.queries = clonequries;\n            qry.isCountRequired = true;\n            qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n            showSpinner(this.parent.element);\n            dm.executeQuery(qry).then(function (e) {\n                var datas = _this.parent.grid.currentViewData;\n                var inx = datas.indexOf(rowDetails.record);\n                var haveChild = getObject('actual.nextLevel', e);\n                var result = e.result;\n                rowDetails.record.childRecords = result;\n                for (var r = 0; r < result.length; r++) {\n                    result[r].level = rowDetails.record.level + 1;\n                    result[r].index = Math.ceil(Math.random() * 1000);\n                    result[r].parentItem = rowDetails.record;\n                    delete result[r].parentItem.childRecords;\n                    if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                        && !(haveChild && !haveChild[r])) {\n                        result[r].hasChildRecords = true;\n                        result[r].expanded = false;\n                        result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                    }\n                    datas.splice(inx + r + 1, 0, result[r]);\n                }\n                setValue('result', datas, e);\n                setValue('action', 'beforecontentrender', e);\n                _this.parent.trigger(events.actionComplete, e);\n                hideSpinner(_this.parent.element);\n                e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e);\n                _this.parent.trigger(events.expanded, args);\n            });\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            currentData.index = this.storedIndex;\n            if (!isNullOrUndefined(currentData[this.parent.childMapping])) {\n                currentData.childRecords = currentData[this.parent.childMapping];\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            currentData.level = level;\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                this.createRecords(currentData[this.parent.childMapping], currentData);\n            }\n        }\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType.toString();\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (action === 'add') {\n                this.parent.grid.currentViewData = args.result;\n            }\n            if (this.parent.isLocalData) {\n                if ((requestType === 'delete' || requestType === 'save')) {\n                    this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n                }\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = results.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            //this.parent.filterModule.updatedFilteredRecord(filteredData);\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action_1 = 'action';\n            var collpasedIndexes = [];\n            parentData = this.parent.parentData;\n            var sortedData = void 0;\n            var query = getObject('query', args);\n            this.parent.sortModule = new Sort(this.parent);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && !this.isRemote() ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            sortedData = modifiedData;\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = results.length;\n        var temp = this.paging(results, count, isExport, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        else if (this.parent.enableVirtualization && (!isExport || exportType === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: getValue('actionArgs', args) });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, resetBlazorTemplate, isBlazor } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { FilterSettings } from '../models/filter-settings';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { ColumnMenu } from '../actions/column-menu';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { TextWrapSettings } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray } from '../utils';\nimport { Grid } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        TreeGrid_1.Inject(TreeGridSelection);\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n        };\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./api-searchSettings.html).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./api-treegrid.html#printmode-string).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    var collapsecolumn = collapsetarget.closest('.e-rowcell');\n                    var collapserow = collapsecolumn.closest('tr');\n                    this.expandCollapseRequest(collapserow.querySelector('.e-treegridexpand'));\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    var expandcolumn = expandtarget.closest('.e-rowcell');\n                    var expandrow = expandcolumn.closest('tr');\n                    this.expandCollapseRequest(expandrow.querySelector('.e-treegridcollapse'));\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter',\n            args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize',\n            args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport',\n                args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow',\n                args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        EventHandler.remove(this.element, 'click', this.mouseClickHandler);\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        createSpinner({ target: this.element }, this.createElement);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        this.columnMenuModule = new ColumnMenu(this);\n        /**\n         * @hidden\n         */\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        this.convertTreeData(this.dataSource);\n        this.loadGrid();\n        this.addListener();\n        var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n        addClass([this.element], 'e-treegrid');\n        if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n            this.element.style.height = this.height;\n        }\n        if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n            this.element.style.width = this.width;\n        }\n        this.element.appendChild(gridContainer);\n        this.grid.appendTo(gridContainer);\n        this.wireEvents();\n    };\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            this.dataModule.convertToFlatData(data);\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.enablePersistence = this.enablePersistence;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = this.triggerEvents.bind(this);\n        this.grid.rowSelected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.toolbarClick = function (args) {\n            _this.trigger(events.toolbarClick, args);\n            if (args.cancel) {\n                return;\n            }\n            _this.notify(events.toolbarClick, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.dataStateChange = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellSelecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.beginEdit = this.triggerEvents.bind(this);\n        this.grid.cellEdit = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate(args);\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            _this.trigger(events.dataBound, args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid)) {\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                treeGrid.trigger(events.beforeDataBound, args);\n            }\n        };\n        this.extendedGridEvents();\n        this.extendedGridEditEvents();\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        this.grid.cellSave = function (args) {\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = void 0;\n                contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            _this.trigger(events.cellSave, args);\n            if (!args.cancel) {\n                _this.notify(events.cellSave, args);\n            }\n        };\n        // this.grid.cellSaved = (args: CellSaveArgs): void => {\n        //   this.trigger(events.cellSaved, args);\n        //   this.notify(events.cellSaved, args);\n        // };\n        this.grid.cellEdit = function (args) {\n            _this.notify(events.cellEdit, args);\n        };\n        // this.grid.batchAdd = (args: BatchAddArgs): void => {\n        //   this.trigger(events.batchAdd, args);\n        //   this.notify(events.batchAdd, args);\n        // }\n        // this.grid.beforeBatchSave = (args: BeforeBatchSaveArgs): void => {\n        //   this.trigger(events.beforeBatchSave, args);\n        //   this.notify(events.beforeBatchSave, args);\n        // }\n        // this.grid.beforeBatchAdd = (args: BeforeBatchAddArgs): void => {\n        //   this.trigger(events.beforeBatchAdd, args);\n        //   this.notify(events.beforeBatchAdd, args);\n        // }\n        // this.grid.batchDelete = (args: BatchDeleteArgs): void => {\n        //   this.trigger(events.batchDelete, args);\n        //   this.notify(events.batchDelete, args);\n        // }\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function (args) {\n        var _this = this;\n        if (isBlazor()) {\n            setTimeout(function () {\n                _this.treeColumnRowTemplate(args);\n            }, 1000);\n        }\n        else {\n            this.treeColumnRowTemplate(args);\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n            this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            var dm_1 = this.grid.dataSource;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    dm_1[dataSource].offline = true;\n                    dm_1[isDataAvailable] = true;\n                    dm_1[dataSource].json = e.result;\n                    dm_1[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.actionBegin = function (args) {\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            _this.trigger(events.actionBegin, args);\n            _this.notify(events.beginEdit, args);\n        };\n        this.grid.actionComplete = function (args) {\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            _this.trigger(events.actionComplete, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit[guid] = this.editSettings[guid];\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: 'AddRow', target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: 'Above', id: 'Above' }, { text: 'Below', id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function (columns) {\n        var column = columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            gridColumn = {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                }\n            }\n            if (column[i].columns) {\n                this.getGridColumns(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns(this.columns);\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        this.grid.dataSource = this.flatData;\n                    }\n                    else {\n                        this.bindedDataSource();\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        this.grid.destroy();\n        this.dataModule.destroy();\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        this.grid.dataBind();\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var _this = this;\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        keyEntity.forEach(function (value) {\n            var currentObject = _this[value];\n            for (var _i = 0, _a = ignoreOnPersist[value]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        });\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        var _this = this;\n        columns.forEach(function (column) {\n            if (column.columns) {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n                _this.ignoreInArrays(ignoreOnColumn, column.columns);\n            }\n            else {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n            }\n        });\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        ignoreOnColumn.forEach(function (val) {\n            delete column[val];\n            column.filter = {};\n        });\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if (target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) {\n            this.expandCollapseRequest(target);\n        }\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        this.editModule.addRecord(data, index, position);\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        this.grid.editModule.closeEdit();\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        this.grid.editModule.deleteRecord(fieldName, data);\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function () {\n        this.grid.editModule.startEdit();\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        this.editModule.editCell(rowIndex, field);\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        this.grid.editModule.endEdit();\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        this.grid.editModule.deleteRow(tr);\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        this.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.columnModel, function (item, index) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        return iterateArrayOrObject(this.columnModel, function (item, index) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        return this.grid.showColumns(keys, showBy);\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        return this.grid.hideColumns(keys, hideBy);\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        this.updateColumnModel(this.grid.getColumns(isRefresh));\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        var gridColumn;\n        this.columnModel = [];\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                gridColumn[prop] = gridColumns[i][prop];\n            }\n            this.columnModel.push(new Column(gridColumn));\n        }\n        var merge = 'deepMerge';\n        this[merge] = ['columns']; // Workaround for blazor updateModel \n        this.setProperties({ columns: this.columnModel }, true);\n        this[merge] = undefined; // Workaround for blazor updateModel\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @hidden\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     * @return {Object[]}\n     * @hidden\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the indexes of checked rows.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function () {\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.refreshColumns();\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.resetTemplates();\n                _this.expandCollapse('expand', row, record);\n                if (!(isRemoteData(_this) && !isOffline(_this))) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.resetTemplates();\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                _this.trigger(events.collapsed, collapseArgs);\n            }\n        });\n    };\n    TreeGrid.prototype.resetTemplates = function () {\n        for (var i = 0; i < this.columns.length; i++) {\n            if (this.columns[i].template) {\n                resetBlazorTemplate(this.grid.element.id + this.columns[i].uid, 'Template');\n            }\n            if (this.columns[i].headerTemplate) {\n                resetBlazorTemplate(this.grid.element.id + this.columns[i].uid + 'headerTemplate', 'HeaderTemplate');\n            }\n        }\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if ((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if ((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        if ((this.allowPaging && this.pageSettings.pageSizeMode === 'All')\n            || this.enableVirtualization) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridexpand');\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild) {\n                    record.expanded = false;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridcollapse');\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var args = { data: record, row: row };\n            if (isRemoteData(this) && !isOffline(this)) {\n                var rows = gridRows.filter(function (r) {\n                    return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                var detailrows = gridRows.filter(function (r) {\n                    return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                if (action === 'expand') {\n                    this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n                }\n                else {\n                    this.collapseRemoteChild(rows);\n                    this.trigger(events.collapsed, args);\n                }\n            }\n            else {\n                var childRecords = this.getCurrentViewRecords().filter(function (e) {\n                    return e.parentUniqueID === record.uniqueID;\n                });\n                var index = childRecords[0].parentItem.index;\n                var rows = gridRows.filter(function (r) {\n                    return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                var detailrows = gridRows.filter(function (detailRowes) {\n                    return detailRowes.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n                });\n                for (var i = 0; i < rows.length; i++) {\n                    rows[i].style.display = displayAction;\n                    this.notify('childRowExpand', { row: rows[i] });\n                    if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                        isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                        this.expandCollapse(action, rows[i], childRecords[i], true);\n                    }\n                }\n                this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction });\n            }\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function (args) {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rows) {\n        var rData;\n        for (var i = 0; i < rows.length; i++) {\n            if (this.rowTemplate) {\n                rData = this.grid.getCurrentViewRecords()[rows[i].rowIndex];\n            }\n            else {\n                rData = this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            }\n            rData.expanded = false;\n            rows[i].style.display = 'none';\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                removeClass([expandElement], 'e-treegridexpand');\n                addClass([expandElement], 'e-treegridcollapse');\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].classList.contains('e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                this.collapseRemoteChild(cRow);\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var treeColumn = this.parent.columns[this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\n/**\n * RowModelGenerator is used to generate grid data rows.\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n        for (var r = 0; r < rows.length; r++) {\n            rows[r].index = (this.visualData).indexOf(rows[r].data);\n        }\n        return rows;\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'virtualscroll', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if (clear) {\n            this.cache = {};\n            this.data = {};\n            this.groups = {};\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            if (this.parent.filterSettings.hierarchyMode === 'Child' ||\n                this.parent.filterSettings.hierarchyMode === 'None' || this.parent.searchSettings.hierarchyMode === 'Child' ||\n                this.parent.searchSettings.hierarchyMode === 'None') {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        if (this.parent.filterSettings.hierarchyMode === 'None' || this.parent.searchSettings.hierarchyMode === 'None') {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                if (this.parent.filterSettings.hierarchyMode === 'Child'\n                    || this.parent.searchSettings.hierarchyMode === 'Child') {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            if ((this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'Both') ||\n                (this.parent.searchSettings.hierarchyMode === 'Child' || this.parent.searchSettings.hierarchyMode === 'Both')) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!uniqueIDValue.hasOwnProperty(childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if (this.parent.filterSettings.hierarchyMode === 'None' || this.parent.searchSettings.hierarchyMode === 'None') {\n                if (this.flatFilteredData.indexOf(childRec[count] !== -1)) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() ? new DataManager(dataSource) : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob);\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal() || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query  \n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getExpandStatus } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = parents_1.filter(function (e) {\n                return getExpandStatus(_this.parent, e, parents_1);\n            });\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            parentRecord = parentRecords[i];\n            childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n            var _loop_1 = function (summaryRowIndex, len_1) {\n                var item = void 0;\n                item = {};\n                for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                    var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                        this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                    item[field] = null;\n                }\n                if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                    item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                    var idx_1;\n                    flatRecords.map(function (e, i) { if (e.uniqueID === parentRecord.uniqueID) {\n                        idx_1 = i;\n                        return;\n                    } });\n                    var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                    var summaryParent = extend({}, parentRecord);\n                    delete summaryParent.childRecords;\n                    delete summaryParent[this_1.parent.childMapping];\n                    setValue('parentItem', summaryParent, item);\n                    var level = getObject('level', summaryParent);\n                    setValue('level', level + 1, item);\n                    var index = getObject('index', summaryParent);\n                    setValue('isSummaryRow', true, item);\n                    setValue('parentUniqueID', summaryParent.uniqueID, item);\n                    if (isSort) {\n                        var childRecords = getObject('childRecords', parentRecord);\n                        childRecords.push(item);\n                    }\n                    flatRecords.splice(currentIndex, 0, item);\n                }\n                else {\n                    return \"continue\";\n                }\n            };\n            var this_1 = this;\n            for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                _loop_1(summaryRowIndex, len_1);\n            }\n            this.flatChildRecords = [];\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var _this = this;\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        types.forEach(function (type) {\n            summaryKey = type;\n            var key = summaryColumn.field + ' - ' + type.toLowerCase();\n            var val = type !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(type, sumData, summaryColumn, _this.parent);\n            var disp = summaryColumn.columnName;\n            var value = type !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value;\n            single[disp][type] = !isNullOrUndefined(val) ? formatFn(value) : ' ';\n        });\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow');\n        var editRecord = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit');\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if (this.parent.editSettings.mode === 'Cell' && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { Grid, Edit as GridEdit, getUid, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        // this.batchDeleted = {};\n        // this.batchRecords = [];\n        // this.isAdd = false;\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        // this.parent.on(events.cellSaved, this.cellSaved, this);\n        // this.parent.on(events.batchDelete, this.batchDelete, this);\n        // this.parent.on(events.batchAdd, this.batchAdd, this);\n        // this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        // this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        // this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        //this.parent.grid.on(events.batchEditFormRendered, this.batchEditFormRendered, this);\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        this.parent.trigger(events.actionComplete, args);\n    };\n    /*private batchEditFormRendered(args: Object):void {\n      this.parent.trigger(events.actionComplete, args);\n    }*/\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.cellSave, this.cellSave);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        //this.parent.grid.off(events.batchEditFormRendered, this.batchEditFormRendered);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        this.doubleClickTarget = target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse'))) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args);\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n            if (!args.cancel) {\n                this.enableToolbarItems('edit');\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var selectRowIndex = cellDetails.rowIndex;\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: this.parent.getRows()[selectRowIndex].cells[this.parent.treeColumnIndex],\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        // this.batchRecords = [];\n        // let keys: string[] = Object.keys(this.batchDeleted);\n        // let primaryLey: string = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        // let currentViewRecords: ITreeData[] = this.parent.grid.getCurrentViewRecords();\n        // for (let i: number = 0; i < keys.length; i++) {\n        //   let index: number;\n        //   currentViewRecords.map((e: ITreeData, j: number) => {\n        //     if (this.batchDeleted.hasOwnProperty(keys[i]) && e[primaryLey] === this.batchDeleted[keys[i]][primaryLey]) {\n        //       index = j; return;\n        //     }\n        //   });\n        //   this.parent.renderModule.cellRender({\n        //     data: currentViewRecords[index],\n        //     cell: (<HTMLTableRowElement>this.parent.getRowByIndex(index)).cells[this.parent.treeColumnIndex],\n        //     column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n        //   });\n        // }\n    };\n    Edit.prototype.cellSave = function (args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            setValue('isEdit', false, this.parent.grid);\n            args.rowData[args.columnName] = args.value;\n            var row = args.cell.parentNode;\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = this.parent.getDataRows().indexOf(row);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row = this.parent.grid.getRows()[row.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                this.updateCell(args, rowIndex_1);\n                if (this.parent.grid.aggregateModule) {\n                    this.parent.grid.aggregateModule.refresh(args.rowData);\n                }\n                this.parent.grid.editModule.formObj.destroy();\n                if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                    this.updateGridEditMode('Normal');\n                    this.isOnBatch = false;\n                }\n                this.enableToolbarItems('save');\n                removeClass([row], ['e-editedrow', 'e-batchrow']);\n                removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n                editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n                var saveArgs = {\n                    type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n                    previousData: args.previousValue, row: row, target: args.cell\n                };\n                this.parent.trigger(events.actionComplete, saveArgs);\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].parentItem = this.internalProperties.parentItem;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            for (var l = 0; l < row.classList.length; l++) {\n                var value = row.classList[l];\n                var remove = /e-gridrowindex/i;\n                var removed = /e-griddetailrowindex/i;\n                var result = value.match(remove);\n                var results = value.match(removed);\n                if (result != null) {\n                    removeClass([row], value);\n                }\n                if (results != null) {\n                    removeClass([row], value);\n                }\n            }\n            if (!rows[k].classList.contains('e-detailrow')) {\n                addClass([row], 'e-gridrowindex' + index + 'level' + level);\n            }\n            else {\n                addClass([row], 'e-griddetailrowindex' + index + 'level' + level);\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        var rows = this.parent.grid.getDataRows();\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Child' && !(records[index].expanded) &&\n                records[index][this.parent.childMapping] && records[index][this.parent.childMapping].length) {\n                this.parent.expandRow(rows[index + 1], records[index]);\n            }\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && this.selectedIndex > -1) {\n                position = 'after';\n                // let records: Object[] = this.batchRecords.length ? this.batchRecords : this.parent.grid.getCurrentViewRecords();\n                index += findChildrenRecords(records[index]).length;\n            }\n            if (this.selectedIndex > -1 && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function (args) {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = void 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            if (currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if (this.selectedIndex > -1) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    value.level = level + 1;\n                    if (this.isSelfReference) {\n                        value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if (this.selectedIndex > -1 && level) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && this.selectedIndex > -1) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem };\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     * @return {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        if (data) {\n            if (index > -1) {\n                this.selectedIndex = index;\n                this.addRowIndex = index;\n            }\n            else {\n                this.selectedIndex = this.parent.selectedRowIndex;\n                this.addRowIndex = this.parent.selectedRowIndex;\n            }\n            if (position) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n        else {\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save')) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     * @return {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = true;\n            this.updateGridEditMode('Batch');\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus } from '../utils';\n/**\n * TreeGrid Detail Row module\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        var data = args.data;\n        var gridClas = [].slice.call(args.detailElement.parentElement.previousSibling.classList).filter(function (gridclass) { return (gridclass !== 'e-row' && gridclass !== 'e-altrow'); });\n        var newNo = gridClas[0].length;\n        var slicedclas = gridClas.toString().slice(6, newNo);\n        var detailClass = 'e-griddetail' + slicedclas;\n        addClass([args.detailElement.parentElement], detailClass);\n    };\n    ;\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     * @method destroy\n     * @return {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue } from '@syncfusion/ej2-base';\n/**\n * Content renderer for TreeGrid\n */\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 0) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        this.parent[action]('data-ready', this.onDataReady, this);\n        //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n        var fn = function () {\n            _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n            _this.parent.off('content-ready', fn);\n        };\n        this.parent.on('content-ready', fn, this);\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!isNullOrUndefined(e.count)) {\n            this.totalRecords = e.count;\n            getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n            var outBuffer = 4; // this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        getValue('observer', this).options.debounceEvent = false;\n        this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n        this.contents = this.getPanel().firstChild;\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = (scrollArgs.offset.top - this.translateY) > scrollHeight;\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.getRows().length;\n            index = (index > 0) ? index : 0;\n            this.startIndex = index;\n            this.endIndex = index + this.parent.getRows().length;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = this.startIndex - remains;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var lastIndex = nextSetResIndex + this.parent.getRows().length;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = lastIndex - this.parent.getRows().length;\n            this.endIndex = lastIndex;\n            this.translateY = scrollArgs.offset.top;\n        }\n        if (((downScroll && (scrollArgs.offset.top +\n            (outBuffer * this.parent.getRowHeight())) < (this.parent.getRowHeight() * this.totalRecords))\n            || (upScroll))) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' && getValue('currentInfo', this).page &&\n            getValue('currentInfo', this).page !== e.virtualInfo.page ? getValue('currentInfo', this) : e.virtualInfo;\n        var cBlock = (info.columnIndexes[0]) - 1;\n        var cOffset = this.getColumnOffset(cBlock);\n        //this.virtualEle.setWrapperWidth(width, ( Browser.isIE || Browser.info.name === 'edge') as boolean);\n        target = this.parent.createElement('tbody');\n        target.appendChild(newChild);\n        var replace = 'replaceWith';\n        this.getTable().querySelector('tbody')[replace](target);\n        if (!this.isExpandCollapse) {\n            getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n        }\n        else {\n            this.isExpandCollapse = false;\n        }\n        setValue('prevInfo', info, this);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        setValue('containerRect', getValue('options', this).container.getBoundingClientRect(), this);\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll \n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n                return;\n            }*/\n            /*if(delta > 45 || delta < -45){\n              this.isWheeling = true;\n            }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: 'refresh' });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1 };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering') {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) && \n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     * @return {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        parentGrid.setProperties({ pageSettings: { pageSize: blockSize + 10 } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import * as index from './index';\nindex.TreeGrid.Inject(index.Filter, index.Page, index.Sort, index.Reorder, index.Toolbar, index.Aggregate, index.Resize, index.ColumnMenu, index.ExcelExport, index.PdfExport, index.CommandColumn, index.ContextMenu, index.Edit, index.Selection, index.VirtualScroll, index.DetailRow);\nexport * from './index';\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","findParentRecords","records","datas","i","len","Object","keys","length","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","isNullOrUndefined","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","requireFilter","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","action","key","grid","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","getCurrentViewRecords","addAct","addAction","Array","extend","editSettings","newRowPosition","k","hasOwnProperty","mode","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","currentViewRecords","unshift","isChildAll","child","currentRecords","map","sortSettings","columns","parentUniqueID","indexOf","primaryKeys","data","setRowData","row","getRowByIndex","renderModule","cellRender","cell","cells","treeColumnIndex","column","getColumns","Column","options","this","allowEditing","edit","allowReordering","showColumnMenu","allowFiltering","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","prototype","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","FilterSettings","_super","apply","Collection","Predicate","Property","ChildProperty","Selection","selectedItems","selectedIndexes","addEventListener","getModuleName","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","destroy","args","checkBox","checkWrap","parentsUntil","querySelectorAll","querySelector","triggerChkChangeEvent","nextElementSibling","classList","contains","closest","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","rowIndex","_this","checked","cancel","rowData","trigger","checkBoxArgs","selectCheckboxes","getCheckboxcolumnIndex","mappingUid","columnIndex","col","showCheckbox","uid","headerCelllength","getHeaderTable","getAttribute","headerElement","rowChkBox","createElement","className","attrs","type","createCheckBox","label","add","style","width","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","removeClass","container","containerELe","spanEle","innerHTML","appendChild","rowIndexes","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","indeter","checkChildRecords","checkAll","currentRecord","recordIndex","getRows","isSummaryRow","checkedIndex","checkBoxclass","childData","childLength","requestType","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","ColumnMenu","Grid","Inject","GridColumnMenu","getColumnMenu","columnMenuModule","Print","GridPrint","printTreeGrid","printGrid","gridElement","queryCellInfo","rowDataBound","beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","display","proxy_1","parentrec","rec","getValue","cellElement","pad","filterLevel","totalIconsWidth","getColumnByField","field","summaryRow","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","collapsed","allowTextWrap","textContent","appendChildren","notify","checkboxElement","parseInt","summaryData","rowTemplate","template","Sort","GridSort","taskIds","flatSortedData","storedIndex","updateModel","createdSortedRecords","sortParams","srtQry","iterateSort","filterSettings","searchSettings","childSort","executeLocal","sortColumn","direction","isMultiSort","removeSortColumn","setProperties","getActualProperties","clearSorting","DataManipulation","parentItems","hierarchyData","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","where","addParams","hasChildMapping","qry","clone","queries","select","isCountRequired","executeQuery","then","DataUtil","distinct","result","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","tempData","selfData","mappingData","group","groupData","items","selfReferenceUpdate","createRecords","shift","Math","ceil","random","rowDetails","parentRow","rows","expandingTd","detailRowModule","getDataModule","generateQuery","clonequries","fn","showSpinner","element","currentViewData","inx","haveChild","getUid","id","totalRecordsCount","parentRecords","currentData","dataObj","isExport","expresults","exportType","actionArgs","actionData","toString","isLocalData","results","gridQuery","filterQuery","searchQuery","fltrQuery","q","srchQuery","filteredData","aggregates","aggregateQuery","summaryQuery","summaryModule","calculateSummaryValue","sortModule","srt","compFun","sortComparer","bind","sortBy","sortArgs","temp","paging","enableVirtualization","dataResult","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","call","uniqueIDCollection","uniqueIDFilterCollection","TreeGrid_1","TreeGridSelection","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","sortByColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","locale","L10n","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","expandAll","collapseAll","collapserow","expandCollapseRequest","expandrow","parentElement","summaryElement","findnextRowElement","selectRow","cellIndex","children","clearSelection","targetRow","summaryRowElement","findPreviousRowElement","rIndex","cIndex","nextSibling","previousSibling","columnModel","isExpandAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","addListener","gridContainer","height","appendTo","bindGridProperties","bindedDataSource","enableRtl","enablePersistence","getGridColumns","columnQueryMode","pagerTemplate","enableAltRow","enableHover","rowHeight","gridLines","getGridToolbar","toolbarTemplate","selectionSettings","textWrapSettings","printMode","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","triggerEvents","bindGridEvents","treeGrid","rowSelecting","rowSelected","rowDeselected","toolbarClick","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","dataStateChange","recordDoubleClick","rowDeselecting","cellDeselected","cellSelecting","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","printComplete","beginEdit","cellEdit","actionFailure","dataBound","updateRowTemplate","updateAltRow","req","isPrinting","extendedGridEvents","extendedGridEditEvents","cellSave","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","getElementsByClassName","batchCancel","isBlazor","setTimeout","treeColumnRowTemplate","defaultQuery","dm_1","JsonAdaptor","detailDataBound","actionBegin","actionComplete","updateTreeGridModel","contextMenuClick","contextMenuOpen","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","text","l10n","Search","tooltipText","getConstant","prefixIcon","tooltip","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","refresh","isEdit","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","ignoreOnColumn","currentObject","ignoreInArrays","addOnPersist","ignoreInColumn","val","touches","getPager","addRecord","position","editModule","deleteRecord","fieldName","startEdit","editCell","endEdit","deleteRow","tr","setCellValue","goToPage","pageNo","pagerModule","updateExternalMessage","message","getCellFromIndex","iterateArrayOrObject","item","getColumnByUid","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","gridColumns","getContent","getContentTable","getDataRows","dRows","getHeaderContent","getRowInfo","getUidByColumnField","getVisibleColumns","cols","visible","getCheckedRecords","selectionModule","indexes","refreshHeader","rowInfo","collapseRow","expandRow","getCollapseExpandRecords","expandingArgs","resetTemplates","expandCollapse","collapseArgs","collapsingArgs","resetBlazorTemplate","headerTemplate","expandAtLevel","getRecordDetails","collapseAtLevel","expandCollapseAll","isChild","gridRows","slice","displayAction","targetEle","detailrows","collapseRemoteChild","detailRowes","visibleRowCount","gridRow","rcell","arg","getRowsObject","rData","getRowObjectFromUID","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getSelectedRowIndexes","getSelectedRowCellIndexes","getSelectedRecords","baseModule","treeModule","Complex","TextWrapSettings","Event","NotifyPropertyChanges","Component","Reorder","treeColumn","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","TreeVirtualRowModelGenerator","getDatas","visualData","generateRows","notifyArgs","checkAndResetCache","clear","cache","groups","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","hierarchyMode","ischild","checkChildExsist","parent_1","parRecord","updateFilterLevel","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","isCsv","Promise","resolve","reject","isLocal","manipulateExportProperties","dtSrc","queryResult","indent","PdfExport","GridPdf","updatePdfResultModel","manipulatePdfProperties","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","ret","pageRoot","pagedResults","newResults","this_1","t","res","pageingDetails","propname","skip","size","pageSize","current","currentPage","take","or","parents_1","floor","Toolbar","tool","toolbarClickHandler","saveCell","getToolbar","toolbarModule","enableItems","isEnable","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","childRecordsLength","columnLength","summaryLength","getChildRecordsLength","summaryRowIndex","len_1","len_2","showChildSummary","createSummaryItem","idx_1","currentIndex","summaryParent","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","a","tempObj","requiresCount","summaryKey","sumData","toLowerCase","calculateAggregate","disp","summaryformat","ContextMenu","cmenu","addRow","editRecord","Edit","GridEdit","previousNewRowPosition","internalProperties","crudAction","beginAdd","keyPressed","contentready","savePreviousRowPosition","beforeStartEdit","beforeBatchCancel","applyFormValidation","doubleClickTarget","getColumnByIndex","isOnBatch","isPrimaryKey","updateGridEditMode","keyPress","deleteUniqueID","enableToolbarItems","request","toolbarID","cellDetails","selectRowIndex","rowIndex_1","parentNode","primaryKeys_1","updateCell","aggregateModule","formObj","saveArgs","previousData","previousValue","updateRow","updateIndex","data1","parentIndex","data2","l","match","focussedElement","document","activeElement","errors","focus","childs","beginAddEdit","childRecordCount","currentDataIndex","childRecordCount1","currentDataIndex1","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","gridClas","detailElement","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","contentModule","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","startIndex","endIndex","getModelGenerator","virtualOtherAction","indexModifier","setTop","eventListener","onDataReady","observers","observes","scrollArgs","scrollListeners","totalRecords","setVirtualHeight","getRowHeight","renderTable","debounceEvent","TreeInterSectionObserver","contents","getPanel","info","sentinel","content","scrollHeight","upScroll","offset","top","downScroll","vHeight","getBoundingClientRect","scrollTop","lastInx","remains","rowPt","firsttdinx","nextSetResIndex","lastIndex","viewInfo","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","page","cBlock","columnIndexes","cOffset","getColumnOffset","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","scrollLeft","delta","clearTimeout","preventDefault","returnValue","isWheel","left","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","log","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","blockSize","GridVirtualScroll","index.TreeGrid","index.Filter","index.Page","index.Sort","index.Reorder","index.Toolbar","index.Aggregate","index.Resize","index.ColumnMenu","index.ExcelExport","index.PdfExport","index.CommandColumn","index.ContextMenu","index.Edit","index.Selection","index.VirtualScroll","index.DetailRow"],"mappings":"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rCE,GACIipB,aAAYpV,IACbG,EAASlU,UAAW,mBAAgB,IACvCE,GACIgB,YAAS,IACVgT,EAASlU,UAAW,qBAAkB,IACzCE,GACIgB,cACDgT,EAASlU,UAAW,qBAAkB,IACzCE,GACIipB,aAAYtoB,IACbqT,EAASlU,UAAW,qBAAkB,IACzCE,GACIipB,aAAY/gB,IACb8L,EAASlU,UAAW,qBAAkB,IACzCE,GACIgB,cACDgT,EAASlU,UAAW,cAAW,IAClCE,GACIgB,cACDgT,EAASlU,UAAW,sBAAmB,IAC1CE,GACIgB,WAAS,YACVgT,EAASlU,UAAW,gBAAa,IACpCE,GACIgB,cACDgT,EAASlU,UAAW,uBAAoB,IAC3CE,GACIgB,cACDgT,EAASlU,UAAW,sBAAmB,IAC1CE,GACIgB,cACDgT,EAASlU,UAAW,kBAAe,IACtCE,GACIgB,WAAS,OACVgT,EAASlU,UAAW,gBAAa,IACpCE,GACIgB,YAAS,IACVgT,EAASlU,UAAW,mBAAgB,IACvCE,GACIgB,YAAS,IACVgT,EAASlU,UAAW,oBAAiB,IACxCE,GACIgB,YAAS,IACVgT,EAASlU,UAAW,kBAAe,IACtCE,GACIgB,WAAS,SACVgT,EAASlU,UAAW,aAAU,IACjCE,GACIgB,WAAS,SACVgT,EAASlU,UAAW,YAAS,IAChCE,GACIgB,YAAS,IACVgT,EAASlU,UAAW,2BAAwB,IAC/CE,GACIgB,WAAS,QACVgT,EAASlU,UAAW,sBAAmB,IAC1CE,GACImpB,WACDnV,EAASlU,UAAW,cAAW,IAClCE,GACImpB,WACDnV,EAASlU,UAAW,WAAQ,IAC/BE,GACImpB,WACDnV,EAASlU,UAAW,gBAAa,IACpCE,GACImpB,WACDnV,EAASlU,UAAW,eAAY,IACnCE,GACImpB,WACDnV,EAASlU,UAAW,iBAAc,IACrCE,GACImpB,WACDnV,EAASlU,UAAW,gBAAa,IACpCE,GACImpB,WACDnV,EAASlU,UAAW,eAAY,IACnCE,GACImpB,WACDnV,EAASlU,UAAW,kBAAe,IACtCE,GACImpB,WACDnV,EAASlU,UAAW,qBAAkB,IACzCE,GACImpB,WACDnV,EAASlU,UAAW,gBAAa,IACpCE,GACImpB,WACDnV,EAASlU,UAAW,eAAY,IACnCE,GACImpB,WACDnV,EAASlU,UAAW,oBAAiB,IACxCE,GACImpB,WACDnV,EAASlU,UAAW,gBAAa,IACpCE,GACImpB,WACDnV,EAASlU,UAAW,wBAAqB,IAC5CE,GACImpB,WACDnV,EAASlU,UAAW,sBAAmB,IAC1CE,GACImpB,WACDnV,EAASlU,UAAW,wBAAqB,IAC5CE,GACImpB,WACDnV,EAASlU,UAAW,mBAAgB,IACvCE,GACImpB,WACDnV,EAASlU,UAAW,sBAAmB,IAC1CE,GACImpB,WACDnV,EAASlU,UAAW,oBAAiB,IACxCE,GACIgB,YAAS,IACVgT,EAASlU,UAAW,qBAAkB,IACzCE,GACImpB,WACDnV,EAASlU,UAAW,mBAAgB,IACvCE,GACImpB,WACDnV,EAASlU,UAAW,kBAAe,IACtCE,GACImpB,WACDnV,EAASlU,UAAW,qBAAkB,IACzCE,GACImpB,WACDnV,EAASlU,UAAW,oBAAiB,IACxCE,GACImpB,WACDnV,EAASlU,UAAW,qBAAkB,IACzCE,GACImpB,WACDnV,EAASlU,UAAW,oBAAiB,IACxCE,GACImpB,WACDnV,EAASlU,UAAW,qBAAkB,IACzCE,GACImpB,WACDnV,EAASlU,UAAW,sBAAmB,IAC1CE,GACImpB,WACDnV,EAASlU,UAAW,mBAAgB,IACvCE,GACImpB,WACDnV,EAASlU,UAAW,sBAAmB,IAC1CE,GACImpB,WACDnV,EAASlU,UAAW,qBAAkB,IACzCE,GACImpB,WACDnV,EAASlU,UAAW,kBAAe,IACtCE,GACImpB,WACDnV,EAASlU,UAAW,eAAY,IACnCE,GACImpB,WACDnV,EAASlU,UAAW,iBAAc,IACrCE,GACImpB,WACDnV,EAASlU,UAAW,sBAAmB,IAC1CE,GACImpB,WACDnV,EAASlU,UAAW,iBAAc,IACrCE,GACImpB,WACDnV,EAASlU,UAAW,iBAAc,IACrCE,GACImpB,WACDnV,EAASlU,UAAW,qBAAkB,IACzCE,GACImpB,WACDnV,EAASlU,UAAW,oBAAi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"}