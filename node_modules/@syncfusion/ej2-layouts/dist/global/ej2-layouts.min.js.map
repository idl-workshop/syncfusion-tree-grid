{"version":3,"file":"ej2-layouts.min.js","sources":["../../src/splitter/splitter.js","../../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed() : this.collapsedOnchange(index);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.allPanes[index].style.flexBasis = newValSize;\n                                            this.allPanes[index].classList.add(STATIC_PANE);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        this.setRTL(this.enableRtl);\n        this.isCollapsed();\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (className) {\n        if (className) {\n            addClass([this.element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        if (!isNullOrUndefined(index)) {\n            this.updateIsCollapsed(index, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n        }\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && !this.paneSettings[index].collapsed) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var seaprator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + seaprator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            this.allBars[index].removeAttribute('aria-orientation');\n            this.allBars[index].setAttribute('aria-orientation', orientation.toLowerCase());\n            this.allBars[index].classList.remove(isVertical ? SPLIT_H_BAR : SPLIT_V_BAR);\n            this.allBars[index].classList.add(isVertical ? SPLIT_V_BAR : SPLIT_H_BAR);\n        }\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        var elementIndex = (order - 1) / (2);\n        return currentBar.parentElement.children[elementIndex];\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        var elementIndex = ((order - 1) / 2) + 1;\n        return currentBar.parentElement.children[elementIndex];\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        var size;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                this.wireClickEvents();\n                if (this.isResizable()) {\n                    EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                    var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                    EventHandler.add(separator, eventName, this.onMouseDown, this);\n                    separator.classList.add(RESIZABLE_BAR);\n                    this.updateResizablePanes(i);\n                }\n                else {\n                    addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                }\n            }\n            else {\n                this.updateResizablePanes(i);\n                addClass([separator], LAST_BAR);\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        // tslint:disable-next-line\n        var sTout;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n        });\n        separator.addEventListener('mouseout', function () {\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return ((target.classList.contains(RESIZE_BAR) || target.classList.contains(SPLIT_BAR)) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeExpand', eventArgs);\n        if (eventArgs.cancel) {\n            return;\n        }\n        this.previousPane.style.flexGrow = '1';\n        this.nextPane.style.flexGrow = '0';\n        if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.nextPane], EXPAND_PANE);\n            removeClass([this.previousPane], collapseClass);\n            addClass([this.previousPane], EXPAND_PANE);\n            addClass([this.nextPane], collapseClass);\n        }\n        else {\n            (this.currentBarIndex !== 0) ?\n                this.previousPane.previousElementSibling.style.flexGrow = '' : this.nextPane.style.flexGrow = '';\n            removeClass([this.previousPane], collapseClass);\n            removeClass([this.nextPane], EXPAND_PANE);\n        }\n        this.updateIconsOnExpand(e);\n        this.previousPane.setAttribute('aria-expanded', 'true');\n        this.nextPane.setAttribute('aria-expanded', 'false');\n        var expandEventArgs = this.afterAction(e);\n        this.trigger('expanded', expandEventArgs);\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.splitInstance.prevPaneCollapsed && this.splitInstance.nextPaneExpanded) {\n            addClass([e.target], HIDE_ICON);\n            this.showCurrentBarIcon();\n            this.resizableModel(this.currentBarIndex, false);\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n                // first pane collapsible false\n                this.showTargetBarIcon(this.prevBar, this.leftArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            this.resizableModel(this.currentBarIndex, true);\n            if (!this.splitInstance.nextPaneNextEle.classList.contains('e-collapsed')) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            this.showCurrentBarIcon();\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                if (!this.paneSettings[this.currentBarIndex].collapsible && this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        this.previousPane.style.flexGrow = '0';\n        this.nextPane.style.flexGrow = '1';\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeCollapse', eventArgs);\n        if (eventArgs.cancel) {\n            return;\n        }\n        if (this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n        }\n        else {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            addClass([this.nextPane], EXPAND_PANE);\n            addClass([this.previousPane], collapseClass);\n        }\n        this.updateIconsOnCollapse(e);\n        this.previousPane.setAttribute('aria-expanded', 'false');\n        this.nextPane.setAttribute('aria-expanded', 'true');\n        var collapseEventArgs = this.afterAction(e);\n        this.trigger('collapsed', collapseEventArgs);\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            this.showCurrentBarIcon();\n            removeClass([e.target], HIDE_ICON);\n            this.resizableModel(this.currentBarIndex, true);\n            if (!isNullOrUndefined(this.prevBar) && !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                this.resizableModel(this.currentBarIndex - 1, true);\n                this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.paneSettings[this.currentBarIndex].collapsible && !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                else {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            this.showCurrentBarIcon();\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n                // only when middle pane collapsible to true\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        this.trigger('resizeStart', eventArgs);\n        if (eventArgs.cancel) {\n            return;\n        }\n        this.wireResizeEvents();\n        if (this.previousPane.style.flexBasis.indexOf('%') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0) {\n            var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n            var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n            this.totalPercent = previousFlexBasis + nextFlexBasis;\n            this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n        }\n        else {\n            this.totalWidth = (this.orientation === 'Horizontal') ? this.previousPane.offsetWidth + this.nextPane.offsetWidth :\n                this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n        }\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth + this.currentSeparator.offsetWidth) :\n                    (pane.offsetHeight + this.currentSeparator.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        this.previousPane = this.getPrevPane(this.currentSeparator, this.order);\n        this.nextPane = this.getNextPane(this.currentSeparator, this.order);\n        this.prevPaneIndex = this.getPreviousPaneIndex();\n        this.nextPaneIndex = this.getNextPaneIndex();\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        this.templateCompile(toElement, template);\n    };\n    // tslint:disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        if (typeof (val) === 'string') {\n            val = (val).trim();\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            templateFUN = templateFn({}, this, prop);\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 1) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i])) {\n                        this.paneCollapsible(child[i], i);\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            _super.prototype.destroy.call(this);\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            detach(this.element);\n            this.element = this.wrapper;\n            this.wrapperParent.appendChild(this.wrapper);\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar resize = 'e-resize';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass) {\n            addClass([ele], [cssClass]);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                var panel_1 = this.renderPanels(panelElement, this.panels[i]);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        this.setEnableRtl();\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                Math.floor((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function () {\n        var maxRow = 1;\n        if (this.rows > 1) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass) {\n            addClass([element], [cssClass]);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                return compile(template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        for (var _i = 0, _a = templateFn({}); _i < _a.length; _i++) {\n            var item = _a[_i];\n            templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel) {\n        addClass([cellElement], [panel, panelTransition]);\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(panelModel.cssClass, cellElement.id + '_content', panelContainer);\n        cellElement.appendChild(this.panelContent);\n        if (!panelModel.enabled) {\n            this.disablePanel(cellElement);\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement('', cellElement.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            if (!cellElement.querySelector('.e-panel-header')) {\n                this.renderTemplate(panelModel.header, headerTemplateElement);\n                this.panelContent.appendChild(headerTemplateElement);\n            }\n        }\n        if (panelModel.content) {\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(panelModel.cssClass, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content')) {\n                this.renderTemplate(panelModel.content, this.panelBody);\n                this.panelContent.appendChild(this.panelBody);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            for (var i = 0; i < document.querySelectorAll('.e-resize').length; i++) {\n                EventHandler.add(document.querySelectorAll('.e-resize')[i], 'mousedown', this.downResizeHandler, this);\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.refresh.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.resizeCalled = false;\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        this.elementX = parseInt(el.style.left, 10);\n        this.elementY = parseInt(el.style.top, 10);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        EventHandler.add(document, 'mousemove', this.moveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'mouseup', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    ;\n    DashboardLayout.prototype.getCellSize = function () {\n        return [parseInt((this.cellSize[0]), 10), parseInt(this.cellSize[1], 10)];\n    };\n    /* istanbul ignore next */\n    // tslint:disable-next-line:max-func-body-length\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resize', args);\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        var oldProp = [this.elementWidth, this.elementHeight];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        var dY = diffY;\n        var dX = diffX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                diffY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - diffY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                diffY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - diffY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                diffY = this.minTop - this.elementY;\n                this.mOffY = dY - diffY;\n            }\n            this.elementY += diffY;\n            this.elementHeight -= diffY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                diffY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - diffY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                diffY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - diffY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                diffY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - diffY;\n            }\n            this.elementHeight += diffY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                diffX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - diffX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                diffX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - diffX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                diffX = this.minLeft - this.elementX;\n                this.mOffX = dX - diffX;\n            }\n            this.elementX += diffX;\n            this.elementWidth -= diffX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                diffX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - diffX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                diffX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - diffX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                diffX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - diffX;\n            }\n            this.elementWidth += diffX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStop', args);\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            EventHandler.remove(document, 'mousemove', this.moveResizeHandler);\n            EventHandler.remove(document, 'mouseup', this.upResizeHandler);\n            this.isMouseUpBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (col + 1) * this.cellSpacing[0], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            sizeY = this.pixelsToRows(this.elementHeight - (row + 1) * this.cellSpacing[0], true);\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.ceil(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.floor(pixels / this.cellSize[1]);\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    /**\n     * Refresh the panels of DashboardLayout component.\n     */\n    DashboardLayout.prototype.refresh = function () {\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel = this.sortPanels();\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + (this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) + 'px';\n                this.cellSize[1] = this.element.parentElement\n                    && (this.element.parentElement.offsetWidth / this.cellAspectRatio);\n                this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel) {\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        var cellElement = this.createPanelElement(panel.cssClass, panel.id);\n        cellElement.style.zIndex = '' + panel.zIndex;\n        this.element.appendChild(cellElement);\n        var dashBoardCell = this.renderPanels(cellElement, panel);\n        this.panelCollection.push(dashBoardCell);\n        this.setXYAttributes(cellElement, panel);\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                this.setMinMaxValues(cells[j]);\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j]);\n                if (this.enableRtl) {\n                    addClass([cell], 'e-rtl');\n                }\n                this.element.appendChild(cell);\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (sizeY > 1 ? rowValue === endRow - sizeY - 1 : rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0) {\n                            collisionItems.splice(collisionItems.indexOf(item), 1);\n                        }\n                    });\n                }\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + 1 });\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.updatePanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.updatePanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.updatePanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [draggable]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: !isNullOrUndefined(panelModel.sizeX) ? panelModel.sizeX.toString() : undefined,\n                sizeY: !isNullOrUndefined(panelModel.sizeY) ? panelModel.sizeY.toString() : undefined,\n                minSizeX: !isNullOrUndefined(panelModel.minSizeX) ? panelModel.minSizeX.toString() : 1,\n                minSizeY: !isNullOrUndefined(panelModel.minSizeY) ? panelModel.minSizeY.toString() : 1,\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: !isNullOrUndefined(panelModel.row) ? panelModel.row.toString() : undefined,\n                col: !isNullOrUndefined(panelModel.col) ? panelModel.col.toString() : undefined,\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseInt(args.element.style.top, 10);\n        var elementLeft = parseInt(args.element.style.left, 10);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    clone: false,\n                    dragArea: this.element,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: '.e-resize',\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        var changedPanels = [];\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateCloneArrayObject();\n                        for (var i_3 = 0; i_3 < _this.panels.length; i_3++) {\n                            if (_this.panels[i_3].row !== _this.panelsInitialModel[i_3].row ||\n                                _this.panels[i_3].col !== _this.panelsInitialModel[i_3].col) {\n                                changedPanels.push(_this.panels[i_3]);\n                            }\n                        }\n                        if (changedPanels.length > 0) {\n                            var changedArgs = { changedPanels: changedPanels };\n                            _this.trigger('change', changedArgs);\n                        }\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        this.dragStartArgs = { event: args.event, element: args.element, cancel: false };\n        this.trigger('dragStart', this.dragStartArgs);\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        if (eleRowValue + eleSizeY === this.rows) {\n            this.rows = this.rows + eleSizeY;\n            this.setHeightWidth();\n            // tslint:disable-next-line\n            this.dragobj.setDragArea();\n        }\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel);\n        this.panels.push(panelProp);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        var container = cell.querySelector('.e-panel-container');\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.addPanelCalled = true;\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            this.updatePanelLayout(cell, panelProp);\n            this.addPanelCalled = false;\n        }\n        if (this.allowResizing &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.setResizingClass(cell, container);\n        }\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'mousedown', this.downResizeHandler, this);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n        }\n        this.element.innerHTML = '';\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        this.panels = [];\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                this.panels.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        var panelInstance = this.getCellInstance(id);\n        if (col < 1) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - 1;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.movePanelCalled = false;\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n    };\n    /**\n     * Destroys the DashboardLayout component\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.element.innerHTML = '';\n        _super.prototype.destroy.call(this);\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    DashboardLayout.prototype.getDragInstance = function (id) {\n        var draggableInstance;\n        var ele = document.getElementById(id);\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            draggableInstance = this.dragCollection[i].element === ele ? this.dragCollection[i] : null;\n            if (draggableInstance) {\n                return draggableInstance;\n            }\n        }\n        return draggableInstance;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.checkDragging(this.dragCollection);\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        for (var i = 0; i < document.querySelectorAll('.e-resize').length; i++) {\n                            var element = document.querySelectorAll('.e-resize')[i];\n                            EventHandler.remove(element, 'mousedown', this.downResizeHandler);\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                        var ele = this.element.querySelectorAll('.e-panel')[i];\n                        var draggableInstance = this.getDragInstance(ele.id);\n                        draggableInstance.handle = this.draggableHandle;\n                    }\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    this.isRenderComplete = false;\n                    this.removeAll();\n                    this.setProperties({ panels: newProp.panels }, true);\n                    this.setOldRowCol();\n                    this.initialize();\n                    if (this.showGridLines) {\n                        this.initGridLines();\n                    }\n                    this.isRenderComplete = true;\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_H_BAR","SPLIT_V_BAR","STATIC_PANE","RESIZE_BAR","ARROW_LEFT","ARROW_UP","HIDE_ICON","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","style","flexBasis","add","preRender","wrapper","cloneNode","wrapperParent","parentElement","removeClass","addClass","Browser","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","e","currentSeparator","remove","api","value","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","size","min","max","content","resizable","collapsible","paneAPI","slice","forEach","el","detach","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","indexOf","hideResizer","select","showResizer","previousPane","nextPane","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","splitterProperty","sizeValue","seaprator","splitBar","resizeBar","isVertical","removeAttribute","setAttribute","toLowerCase","getPrevPane","currentBar","order","elementIndex","getNextPane","addResizeHandler","resizeHanlder","createElement","appendChild","createSeparator","separator","leftArrow","rightArrow","addMouseActions","getPaneDetails","clonedEle","parentNode","wireClickEvents","eventName","info","name","getPreviousPaneIndex","getNextPaneIndex","sTout","addEventListener","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","type","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","wireResizeEvents","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","clickHandler","icon","collapseAction","expandAction","splitterDetails","collapseClass","eventArgs","beforeAction","trigger","cancel","flexGrow","currentBarIndex","previousElementSibling","updateIconsOnExpand","expandEventArgs","afterAction","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","splitInstance","prevPaneCollapsed","nextPaneExpanded","showCurrentBarIcon","prevBar","nextPaneNextEle","nextBar","nextPaneIndex","collapseEventArgs","event","pane","prevPaneIndex","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","nextElementSibling","prevPanePreEle","currentIndex","getSeparatorIndex","getPrevBar","getNextBar","updateBars","preventDefault","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","offsetWidth","offsetHeight","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","selection","defaultVal","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","prePaneDimenson","nextPaneDimension","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","paneSize","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","addStaticPaneClass","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","ele","cnt","tempEle","compileElement","childNodes","childEle","val","prop","trim","templateFn","outerHTML","compile","templateFUN","childElement","nodeName","expand","collapse","destroy","isDestroyed","addPaneClass","removePaneOrders","paneClass","panes","querySelectorAll","removeProperty","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","panels","id","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","window","matchMedia","matches","mainElement","updatePanelLayout","setClasses","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","floor","cellAspectRatio","cellSpacing","updateOldRowColumn","getElementById","createSubElement","templateParser","error","renderTemplate","appendElement","templateElements","item","append","cellElement","panelModel","panelContent","disablePanel","header","headerTemplateElement","panelBody","contentHeightValue","getComputedStyle","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","refresh","bind","closest","args","downTarget","currentTarget","shadowEle","lastMouseX","lastMouseY","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","moveResizeHandler","isMouseUpBound","upResizeHandler","getCellSize","moveTarget","maxLeft","oldSizeX","oldSizeY","handleArray","handleClass","diffX","diffY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","attributes","upTarget","undefined","allowFloating","moveItemsUpwards","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","this_1","filter","panel","updatedPanel","updatedRows","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","xValue","checkMinMaxValues","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","sort","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","this_2","updatedModels","adjust","resetLayout","addPanelCalled","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","updatePanel","clone","proxy_2","overlapElementRow1","this_3","rowVal","colValue_1","collisionModels1","proxy","resizerElements","i_2","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","collections","dragobj","Draggable","dragArea","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","changedPanels","panelInstance","i_3","panelsInitialModel","changedArgs","dragStopEventArgs","drag","draggedEventArgs","onDragStart","dragStartArgs","cloneModels","JSON","parse","stringify","eleRowValue","startCol","setDragArea","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","serialize","cloneModel","customObject","removeAll","removePanel","movePanel","resizePanel","getDragInstance","draggableInstance","updateCellSizeAndSpacing","keyEntity"],"mappings":"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"}