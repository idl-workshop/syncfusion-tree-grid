{"version":3,"file":"ej2-layouts.umd.min.js","sources":["../src/splitter/splitter.js","../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed() : this.collapsedOnchange(index);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.allPanes[index].style.flexBasis = newValSize;\n                                            this.allPanes[index].classList.add(STATIC_PANE);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        this.setRTL(this.enableRtl);\n        this.isCollapsed();\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (className) {\n        if (className) {\n            addClass([this.element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        if (!isNullOrUndefined(index)) {\n            this.updateIsCollapsed(index, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n        }\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && !this.paneSettings[index].collapsed) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var seaprator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + seaprator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            this.allBars[index].removeAttribute('aria-orientation');\n            this.allBars[index].setAttribute('aria-orientation', orientation.toLowerCase());\n            this.allBars[index].classList.remove(isVertical ? SPLIT_H_BAR : SPLIT_V_BAR);\n            this.allBars[index].classList.add(isVertical ? SPLIT_V_BAR : SPLIT_H_BAR);\n        }\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        var elementIndex = (order - 1) / (2);\n        return currentBar.parentElement.children[elementIndex];\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        var elementIndex = ((order - 1) / 2) + 1;\n        return currentBar.parentElement.children[elementIndex];\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        var size;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                this.wireClickEvents();\n                if (this.isResizable()) {\n                    EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                    var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                    EventHandler.add(separator, eventName, this.onMouseDown, this);\n                    separator.classList.add(RESIZABLE_BAR);\n                    this.updateResizablePanes(i);\n                }\n                else {\n                    addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                }\n            }\n            else {\n                this.updateResizablePanes(i);\n                addClass([separator], LAST_BAR);\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        // tslint:disable-next-line\n        var sTout;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n        });\n        separator.addEventListener('mouseout', function () {\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return ((target.classList.contains(RESIZE_BAR) || target.classList.contains(SPLIT_BAR)) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeExpand', eventArgs);\n        if (eventArgs.cancel) {\n            return;\n        }\n        this.previousPane.style.flexGrow = '1';\n        this.nextPane.style.flexGrow = '0';\n        if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.nextPane], EXPAND_PANE);\n            removeClass([this.previousPane], collapseClass);\n            addClass([this.previousPane], EXPAND_PANE);\n            addClass([this.nextPane], collapseClass);\n        }\n        else {\n            (this.currentBarIndex !== 0) ?\n                this.previousPane.previousElementSibling.style.flexGrow = '' : this.nextPane.style.flexGrow = '';\n            removeClass([this.previousPane], collapseClass);\n            removeClass([this.nextPane], EXPAND_PANE);\n        }\n        this.updateIconsOnExpand(e);\n        this.previousPane.setAttribute('aria-expanded', 'true');\n        this.nextPane.setAttribute('aria-expanded', 'false');\n        var expandEventArgs = this.afterAction(e);\n        this.trigger('expanded', expandEventArgs);\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.splitInstance.prevPaneCollapsed && this.splitInstance.nextPaneExpanded) {\n            addClass([e.target], HIDE_ICON);\n            this.showCurrentBarIcon();\n            this.resizableModel(this.currentBarIndex, false);\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n                // first pane collapsible false\n                this.showTargetBarIcon(this.prevBar, this.leftArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            this.resizableModel(this.currentBarIndex, true);\n            if (!this.splitInstance.nextPaneNextEle.classList.contains('e-collapsed')) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            this.showCurrentBarIcon();\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                if (!this.paneSettings[this.currentBarIndex].collapsible && this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        this.previousPane.style.flexGrow = '0';\n        this.nextPane.style.flexGrow = '1';\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeCollapse', eventArgs);\n        if (eventArgs.cancel) {\n            return;\n        }\n        if (this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n        }\n        else {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            addClass([this.nextPane], EXPAND_PANE);\n            addClass([this.previousPane], collapseClass);\n        }\n        this.updateIconsOnCollapse(e);\n        this.previousPane.setAttribute('aria-expanded', 'false');\n        this.nextPane.setAttribute('aria-expanded', 'true');\n        var collapseEventArgs = this.afterAction(e);\n        this.trigger('collapsed', collapseEventArgs);\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            this.showCurrentBarIcon();\n            removeClass([e.target], HIDE_ICON);\n            this.resizableModel(this.currentBarIndex, true);\n            if (!isNullOrUndefined(this.prevBar) && !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                this.resizableModel(this.currentBarIndex - 1, true);\n                this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.paneSettings[this.currentBarIndex].collapsible && !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                else {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            this.showCurrentBarIcon();\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n                // only when middle pane collapsible to true\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        this.trigger('resizeStart', eventArgs);\n        if (eventArgs.cancel) {\n            return;\n        }\n        this.wireResizeEvents();\n        if (this.previousPane.style.flexBasis.indexOf('%') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0) {\n            var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n            var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n            this.totalPercent = previousFlexBasis + nextFlexBasis;\n            this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n        }\n        else {\n            this.totalWidth = (this.orientation === 'Horizontal') ? this.previousPane.offsetWidth + this.nextPane.offsetWidth :\n                this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n        }\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth + this.currentSeparator.offsetWidth) :\n                    (pane.offsetHeight + this.currentSeparator.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        this.previousPane = this.getPrevPane(this.currentSeparator, this.order);\n        this.nextPane = this.getNextPane(this.currentSeparator, this.order);\n        this.prevPaneIndex = this.getPreviousPaneIndex();\n        this.nextPaneIndex = this.getNextPaneIndex();\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        this.templateCompile(toElement, template);\n    };\n    // tslint:disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        if (typeof (val) === 'string') {\n            val = (val).trim();\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            templateFUN = templateFn({}, this, prop);\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 1) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i])) {\n                        this.paneCollapsible(child[i], i);\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            _super.prototype.destroy.call(this);\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            detach(this.element);\n            this.element = this.wrapper;\n            this.wrapperParent.appendChild(this.wrapper);\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar resize = 'e-resize';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass) {\n            addClass([ele], [cssClass]);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                var panel_1 = this.renderPanels(panelElement, this.panels[i]);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        this.setEnableRtl();\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                Math.floor((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function () {\n        var maxRow = 1;\n        if (this.rows > 1) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass) {\n            addClass([element], [cssClass]);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                return compile(template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        for (var _i = 0, _a = templateFn({}); _i < _a.length; _i++) {\n            var item = _a[_i];\n            templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel) {\n        addClass([cellElement], [panel, panelTransition]);\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(panelModel.cssClass, cellElement.id + '_content', panelContainer);\n        cellElement.appendChild(this.panelContent);\n        if (!panelModel.enabled) {\n            this.disablePanel(cellElement);\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement('', cellElement.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            if (!cellElement.querySelector('.e-panel-header')) {\n                this.renderTemplate(panelModel.header, headerTemplateElement);\n                this.panelContent.appendChild(headerTemplateElement);\n            }\n        }\n        if (panelModel.content) {\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(panelModel.cssClass, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content')) {\n                this.renderTemplate(panelModel.content, this.panelBody);\n                this.panelContent.appendChild(this.panelBody);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            for (var i = 0; i < document.querySelectorAll('.e-resize').length; i++) {\n                EventHandler.add(document.querySelectorAll('.e-resize')[i], 'mousedown', this.downResizeHandler, this);\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.refresh.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.resizeCalled = false;\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        this.elementX = parseInt(el.style.left, 10);\n        this.elementY = parseInt(el.style.top, 10);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        EventHandler.add(document, 'mousemove', this.moveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'mouseup', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    ;\n    DashboardLayout.prototype.getCellSize = function () {\n        return [parseInt((this.cellSize[0]), 10), parseInt(this.cellSize[1], 10)];\n    };\n    /* istanbul ignore next */\n    // tslint:disable-next-line:max-func-body-length\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resize', args);\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        var oldProp = [this.elementWidth, this.elementHeight];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        var dY = diffY;\n        var dX = diffX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                diffY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - diffY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                diffY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - diffY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                diffY = this.minTop - this.elementY;\n                this.mOffY = dY - diffY;\n            }\n            this.elementY += diffY;\n            this.elementHeight -= diffY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                diffY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - diffY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                diffY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - diffY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                diffY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - diffY;\n            }\n            this.elementHeight += diffY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                diffX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - diffX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                diffX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - diffX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                diffX = this.minLeft - this.elementX;\n                this.mOffX = dX - diffX;\n            }\n            this.elementX += diffX;\n            this.elementWidth -= diffX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                diffX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - diffX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                diffX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - diffX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                diffX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - diffX;\n            }\n            this.elementWidth += diffX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStop', args);\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            EventHandler.remove(document, 'mousemove', this.moveResizeHandler);\n            EventHandler.remove(document, 'mouseup', this.upResizeHandler);\n            this.isMouseUpBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (col + 1) * this.cellSpacing[0], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            sizeY = this.pixelsToRows(this.elementHeight - (row + 1) * this.cellSpacing[0], true);\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.ceil(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.floor(pixels / this.cellSize[1]);\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    /**\n     * Refresh the panels of DashboardLayout component.\n     */\n    DashboardLayout.prototype.refresh = function () {\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel = this.sortPanels();\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + (this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) + 'px';\n                this.cellSize[1] = this.element.parentElement\n                    && (this.element.parentElement.offsetWidth / this.cellAspectRatio);\n                this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel) {\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        var cellElement = this.createPanelElement(panel.cssClass, panel.id);\n        cellElement.style.zIndex = '' + panel.zIndex;\n        this.element.appendChild(cellElement);\n        var dashBoardCell = this.renderPanels(cellElement, panel);\n        this.panelCollection.push(dashBoardCell);\n        this.setXYAttributes(cellElement, panel);\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                this.setMinMaxValues(cells[j]);\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j]);\n                if (this.enableRtl) {\n                    addClass([cell], 'e-rtl');\n                }\n                this.element.appendChild(cell);\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (sizeY > 1 ? rowValue === endRow - sizeY - 1 : rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0) {\n                            collisionItems.splice(collisionItems.indexOf(item), 1);\n                        }\n                    });\n                }\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + 1 });\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.updatePanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.updatePanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.updatePanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [draggable]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: !isNullOrUndefined(panelModel.sizeX) ? panelModel.sizeX.toString() : undefined,\n                sizeY: !isNullOrUndefined(panelModel.sizeY) ? panelModel.sizeY.toString() : undefined,\n                minSizeX: !isNullOrUndefined(panelModel.minSizeX) ? panelModel.minSizeX.toString() : 1,\n                minSizeY: !isNullOrUndefined(panelModel.minSizeY) ? panelModel.minSizeY.toString() : 1,\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: !isNullOrUndefined(panelModel.row) ? panelModel.row.toString() : undefined,\n                col: !isNullOrUndefined(panelModel.col) ? panelModel.col.toString() : undefined,\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseInt(args.element.style.top, 10);\n        var elementLeft = parseInt(args.element.style.left, 10);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    clone: false,\n                    dragArea: this.element,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: '.e-resize',\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        var changedPanels = [];\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateCloneArrayObject();\n                        for (var i_3 = 0; i_3 < _this.panels.length; i_3++) {\n                            if (_this.panels[i_3].row !== _this.panelsInitialModel[i_3].row ||\n                                _this.panels[i_3].col !== _this.panelsInitialModel[i_3].col) {\n                                changedPanels.push(_this.panels[i_3]);\n                            }\n                        }\n                        if (changedPanels.length > 0) {\n                            var changedArgs = { changedPanels: changedPanels };\n                            _this.trigger('change', changedArgs);\n                        }\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        this.dragStartArgs = { event: args.event, element: args.element, cancel: false };\n        this.trigger('dragStart', this.dragStartArgs);\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        if (eleRowValue + eleSizeY === this.rows) {\n            this.rows = this.rows + eleSizeY;\n            this.setHeightWidth();\n            // tslint:disable-next-line\n            this.dragobj.setDragArea();\n        }\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel);\n        this.panels.push(panelProp);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        var container = cell.querySelector('.e-panel-container');\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.addPanelCalled = true;\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            this.updatePanelLayout(cell, panelProp);\n            this.addPanelCalled = false;\n        }\n        if (this.allowResizing &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.setResizingClass(cell, container);\n        }\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'mousedown', this.downResizeHandler, this);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n        }\n        this.element.innerHTML = '';\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        this.panels = [];\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                this.panels.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        var panelInstance = this.getCellInstance(id);\n        if (col < 1) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - 1;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.movePanelCalled = false;\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n    };\n    /**\n     * Destroys the DashboardLayout component\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.element.innerHTML = '';\n        _super.prototype.destroy.call(this);\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    DashboardLayout.prototype.getDragInstance = function (id) {\n        var draggableInstance;\n        var ele = document.getElementById(id);\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            draggableInstance = this.dragCollection[i].element === ele ? this.dragCollection[i] : null;\n            if (draggableInstance) {\n                return draggableInstance;\n            }\n        }\n        return draggableInstance;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.checkDragging(this.dragCollection);\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        for (var i = 0; i < document.querySelectorAll('.e-resize').length; i++) {\n                            var element = document.querySelectorAll('.e-resize')[i];\n                            EventHandler.remove(element, 'mousedown', this.downResizeHandler);\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                        var ele = this.element.querySelectorAll('.e-panel')[i];\n                        var draggableInstance = this.getDragInstance(ele.id);\n                        draggableInstance.handle = this.draggableHandle;\n                    }\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    this.isRenderComplete = false;\n                    this.removeAll();\n                    this.setProperties({ panels: newProp.panels }, true);\n                    this.setOldRowCol();\n                    this.initialize();\n                    if (this.showGridLines) {\n                        this.initGridLines();\n                    }\n                    this.isRenderComplete = true;\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","HORIZONTAL_PANE","VERTICAL_PANE","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_BAR","SPLIT_H_BAR","SPLIT_V_BAR","STATIC_PANE","SCROLL_PANE","RESIZE_BAR","RESIZABLE_BAR","SPLIT_BAR_HOVER","SPLIT_BAR_ACTIVE","HIDE_HANDLER","DISABLED","COLLAPSIBLE","NAVIGATE_ARROW","ARROW_RIGHT","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","EXPAND_PANE","COLLAPSE_PANE","PANE_HIDDEN","RESIZABLE_PANE","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","style","flexBasis","add","preRender","wrapper","cloneNode","wrapperParent","parentElement","removeClass","addClass","Browser","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","e","currentSeparator","remove","api","value","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","size","min","max","content","resizable","collapsible","paneAPI","slice","forEach","el","detach","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","indexOf","hideResizer","select","showResizer","previousPane","nextPane","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","splitterProperty","sizeValue","seaprator","splitBar","resizeBar","isVertical","removeAttribute","setAttribute","toLowerCase","getPrevPane","currentBar","order","elementIndex","getNextPane","addResizeHandler","resizeHanlder","createElement","appendChild","createSeparator","separator","leftArrow","rightArrow","addMouseActions","getPaneDetails","clonedEle","parentNode","wireClickEvents","eventName","info","name","getPreviousPaneIndex","getNextPaneIndex","sTout","addEventListener","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","type","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","wireResizeEvents","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","clickHandler","icon","collapseAction","expandAction","splitterDetails","collapseClass","eventArgs","beforeAction","trigger","cancel","flexGrow","currentBarIndex","previousElementSibling","updateIconsOnExpand","expandEventArgs","afterAction","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","splitInstance","prevPaneCollapsed","nextPaneExpanded","showCurrentBarIcon","prevBar","nextPaneNextEle","nextBar","nextPaneIndex","collapseEventArgs","event","pane","prevPaneIndex","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","nextElementSibling","prevPanePreEle","currentIndex","getSeparatorIndex","getPrevBar","getNextBar","updateBars","preventDefault","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","offsetWidth","offsetHeight","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","selection","defaultVal","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","prePaneDimenson","nextPaneDimension","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","paneSize","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","addStaticPaneClass","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","ele","cnt","tempEle","compileElement","childNodes","childEle","val","prop","trim","templateFn","outerHTML","compile","templateFUN","childElement","nodeName","expand","collapse","destroy","isDestroyed","addPaneClass","removePaneOrders","paneClass","panes","querySelectorAll","removeProperty","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","preventSelect","dragging","responsive","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","panels","id","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","window","matchMedia","matches","mainElement","updatePanelLayout","setClasses","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","floor","cellAspectRatio","cellSpacing","updateOldRowColumn","getElementById","createSubElement","templateParser","error","renderTemplate","appendElement","templateElements","item","append","cellElement","panelModel","panelContent","disablePanel","header","headerTemplateElement","panelBody","contentHeightValue","getComputedStyle","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","refresh","bind","closest","args","downTarget","currentTarget","shadowEle","lastMouseX","lastMouseY","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","moveResizeHandler","isMouseUpBound","upResizeHandler","getCellSize","moveTarget","maxLeft","oldSizeX","oldSizeY","handleArray","handleClass","diffX","diffY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","attributes","upTarget","undefined","allowFloating","moveItemsUpwards","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","_loop_1","_loop_2","this_1","filter","panel","updatedPanel","updatedRows","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","xValue","checkMinMaxValues","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","sort","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","_loop_3","_loop_4","this_2","updatedModels","adjust","resetLayout","addPanelCalled","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","updatePanel","clone","proxy_2","overlapElementRow1","_loop_5","rowVal","this_3","colValue_1","collisionModels1","proxy","resizerElements","i_2","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","collections","dragobj","Draggable","dragArea","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","changedPanels","panelInstance","i_3","panelsInitialModel","changedArgs","dragStopEventArgs","drag","draggedEventArgs","onDragStart","dragStartArgs","cloneModels","JSON","parse","stringify","eleRowValue","startCol","setDragArea","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","serialize","cloneModel","customObject","removeAll","removePanel","movePanel","resizePanel","getDragInstance","draggableInstance","updateCellSizeAndSpacing"],"mappings":"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"}